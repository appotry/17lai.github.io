{
    "version": "https://jsonfeed.org/version/1",
    "title": "夜法之书 • All posts by \"nas\" category",
    "description": "~软件驱动世界~",
    "home_page_url": "https://blog.17lai.site",
    "items": [
        {
            "id": "https://blog.17lai.site/posts/db7bf49b/",
            "url": "https://blog.17lai.site/posts/db7bf49b/",
            "title": "视频图书和音乐完全自动化管理框架图解",
            "date_published": "2022-05-09T03:37:48.000Z",
            "content_html": "<blockquote>\n<p>音视频，音乐和图书管理全过程自动化解决方案框架图解！结构化你的音视频、音乐和图书资源。所有过程一张图搞定！</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"框架自动化构架图解-2\">框架自动化构架图解</h2>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/09/20220509113832.webp\" alt=\"自动化框架构架\"></p>\n<h2 id=\"相关文章\">相关文章</h2>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/2b9325d0/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/music.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/2b9325d0/\">私人在线音乐服务器搭建与使用介绍</a>\n        <hr>\n        <div class=\"desc\">私人在线音乐服务器搭建与使用介绍！Mstream Docker 部署， rclone 挂载 webdav 网盘。 cloudflare parterner加速。</div>\n    </div>\n</div>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/9912bd5d/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/emby.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a>\n        <hr>\n        <div class=\"desc\">jackett 作为种子源，sonarr剧集管理，bt下载，qbittorrent主力下载，使用iyuu转移辅种，emby，jellyfin做海报墙，sunfinder自动下载字幕。基本算是完美打通全流程自动追剧。bt种子文件命名规则SxxExx的自动识别下载，国内的资源手动查找下载，自动推送到emby刮削好。结合本地DNS管理，DNS去广告，Nginx 反向代理去端口访问，形成一个完整解决方案。</div>\n    </div>\n</div>\n<h2 id=\"图书、音乐、视频三剑客！-3\">图书、音乐、视频三剑客！</h2>\n<blockquote>\n<p>结构化自己的图书，音乐，和视频！</p>\n</blockquote>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/dc1c8194/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/book.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/dc1c8194/\">如何建立自己的私人图书馆</a>\n        <hr>\n        <div class=\"desc\">图书管理员似乎是个非常有前途的职业，远的有孔子，游学之前当图书管理员，近的有本朝开国毛教员，也当了很长时间图书管理员。我们也可以自己做个私人电子图书馆，单个管理员，说不定很有前途？</div>\n    </div>\n</div>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/3847ad58/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/music.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/3847ad58/\">如何使用media Go,MusicBrainz,Mp3tag工具刮削音乐 整理音乐资料库</a>\n        <hr>\n        <div class=\"desc\">音乐文件则是将歌名、歌手、专辑、发行时间、歌词、封面图等信息写入文件标签，称为ID3 Tag 。它能够在MP3中附加曲子的演出者、作者以及其它类别资讯，方便众多乐曲的管理。</div>\n    </div>\n</div>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/e6d40157/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/emby.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/e6d40157/\">如何使用tinyMediaManager刮削电影和电视剧，动画，并自动下载字幕</a>\n        <hr>\n        <div class=\"desc\">tinyMediaManager是最好用的视频刮削工具，可以刮削电影，动画，电视剧。使用TinyMediaManager生成nfo元数据文件，多媒体软件解析生成海报墙展示丰富的影片信息，配合Emby，Plex使用体验绝佳</div>\n    </div>\n</div>\n<h2 id=\"相关资源\">相关资源</h2>\n<blockquote>\n<p>更多相关资源可以到下面网址查看</p>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/repositories\">DockerHub</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry\">Github</a></li>\n</ul>\n</blockquote>\n<h3 id=\"nas-tools\">nas-tools</h3>\n<blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/jxxghp/nas-tools\">nas-tools Github</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/repository/docker/jxxghp/nas-tools\">nas-tools DockerHub</a></li>\n</ul>\n</blockquote>\n<p>推荐一下这个，作者相当勤奋，更新速度非常快！最重要的是它是国人开发，对中文支持很好！有问题提Issue，作者回复也很快！</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/09/20220509115933.webp\" alt=\"nas-tools\"></p>\n<h4 id=\"功能：\">功能：</h4>\n<h5 id=\"1、资源检索\">1、资源检索</h5>\n<ul>\n<li>PT站聚合<code>RSS</code>订阅，实现资源自动追新。</li>\n<li>通过微信、Telegram或者WEB界面聚合检索资源并择优，最新热门一键搜索或者订阅。</li>\n<li>在豆瓣中标记，后台自动检索，未出全的自动加入<code>RSS</code>追更。</li>\n</ul>\n<h5 id=\"2、媒体识别和重命名\">2、媒体识别和重命名</h5>\n<ul>\n<li>监控下载软件，下载完成后自动识别真实名称，硬链接到媒体库并重命名。</li>\n<li>对目录进行监控，文件变化时自动识别媒体信息硬链接到媒体库并重命名。</li>\n<li>支持国产剧集，支持动漫，改名后<code>Emby/Jellyfin/Plex</code> 100%搜刮。</li>\n</ul>\n<h5 id=\"3、消息服务\">3、消息服务</h5>\n<ul>\n<li>支持<code>ServerChan</code>、微信、<code>Telegram</code>、<code>Bark</code>等图文消息通知，直接在手机上控制。</li>\n</ul>\n<h5 id=\"4、其它\">4、其它</h5>\n<ul>\n<li>自动签到、<code>Emby/Jellyfin/Plex</code>播放状态通知等等。</li>\n</ul>\n<h4 id=\"安装\">安装</h4>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.4\"</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nastools</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> jxxghp/nas<span class=\"token punctuation\">-</span>tools<span class=\"token punctuation\">:</span>latest\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> nastools\n    <span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> nastools\n    <span class=\"token comment\"># ports:</span>\n      <span class=\"token comment\"># - 3000:3000        # 默认的webui控制端口</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/nastools/config<span class=\"token punctuation\">:</span>/config   <span class=\"token comment\"># 冒号左边请修改为你想保存配置的路径</span>\n      <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span>/Download<span class=\"token punctuation\">:</span>/share/Download\n      <span class=\"token comment\">#- /你的媒体目录:/你想设置的容器内能见到的目录   # 媒体目录，多个目录需要分别映射进来</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> PUID=$<span class=\"token punctuation\">{</span>PUID<span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">-</span> PGID=$<span class=\"token punctuation\">{</span>PGID<span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">-</span> TZ=$<span class=\"token punctuation\">{</span>TZ<span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">-</span> UMASK=022 <span class=\"token comment\"># 掩码权限，默认000，可以考虑设置为022</span>\n     <span class=\"token comment\">#- REPO_URL=https://ghproxy.com/https://github.com/jxxghp/nas-tools.git  </span>\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"参数配置\">参数配置</h4>\n<p>新版参数基本都可以在web界面配置。</p>\n<p>也可以直接修改配置文件，配置文件中有非常详细的注释！请认真查看配置文件中的文本注释！</p>\n<p>配置文件位置，基于docker路径<code>/config/config.yaml</code></p>\n<p>配置文件模板，可以仓库下面链接文件</p>\n<p><code>https://github.com/jxxghp/nas-tools/blob/master/config/config.yaml</code></p>\n<h3 id=\"硬链接工具-2\">硬链接工具</h3>\n<blockquote>\n<ul>\n<li><strong><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry/PTtool\">Github appotry/PTtool</a></strong></li>\n</ul>\n</blockquote>\n<h3 id=\"nginx-docker\">nginx docker</h3>\n<blockquote>\n<ul>\n<li><strong><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry\">Github appotry</a>/<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry/nginx-purge-docker\">nginx-purge-docker</a></strong></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/repository/docker/bloodstar/nginx-purge\">nginx DockerHub</a></li>\n</ul>\n</blockquote>\n<h3 id=\"prowlarr\">prowlarr</h3>\n<blockquote>\n<p>最早是玩<code>sonarr</code>、<code>radarr</code>，然后找到i相关的全家桶，见下图</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/09/20220509122743.webp\" alt=\"prowlarr\"></p>\n<blockquote>\n<p>发现各种资源，结构化，<code>Github</code>上面都有很完善的解决方案，但大都对中文支持不好。而且各种上下游资源也是越来越丰富，看看<code>prowlarr</code>支持的<code>app</code>，基本覆盖你的所有所需！<code>Whisparr</code>项目的介绍惊呆了我😄</p>\n<p>国人也有一些好项目，<code> IYUU</code>，<code>nas-tools</code>等。</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/09/20220509122740.webp\" alt=\"prowlarr\"></p>\n<h3 id=\"FlareSolverr\"><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/FlareSolverr/FlareSolverr\">FlareSolverr</a></h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run -d <span class=\"token punctuation\">\\</span>\n  --name<span class=\"token operator\">=</span>flaresolverr <span class=\"token punctuation\">\\</span>\n  -p <span class=\"token number\">8191</span>:8191 <span class=\"token punctuation\">\\</span>\n  -e <span class=\"token assign-left variable\">LOG_LEVEL</span><span class=\"token operator\">=</span>info <span class=\"token punctuation\">\\</span>\n  --restart unless-stopped <span class=\"token punctuation\">\\</span>\n  ghcr.io/flaresolverr/flaresolverr:latest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>如果成功启动，访问<code>ip:8191</code>将看到如下信息</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n<span class=\"token property\">\"msg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"FlareSolverr is ready!\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"v2.2.4\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"userAgent\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mozilla/5.0 (X11; Linux x86_64; rv:94.0) Gecko/20100101 Firefox/94.0\"</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "pt",
                "nas",
                "docker",
                "emby"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/ba4ef326/",
            "url": "https://blog.17lai.site/posts/ba4ef326/",
            "title": "QNAP添加man pages",
            "date_published": "2022-04-21T11:04:33.000Z",
            "content_html": "<blockquote>\n<p>默认<code>QNAP</code>是不带<code>man</code>命令的，但是，作为一个<code>Linux</code>重度用户怎么能忍？得想办法安装man啊！经过一番努力，最终成功安装man pages!</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/2120220421192048.svg\" alt=\"\"></p>\n<h2 id=\"需求\">需求</h2>\n<p>默认<code>QNAP</code>是不带<code>man</code>命令的，但是，作为一个<code>Linux</code>重度用户怎么能忍？</p>\n<blockquote>\n<p>得想办法安装man啊！</p>\n</blockquote>\n<h2 id=\"验证\">验证</h2>\n<p>先试一下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># man</span>\n-sh: man: <span class=\"token builtin class-name\">command</span> not found<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>基本可以死心了。</p>\n<p>看看busybox版本</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># /bin/busybox </span>\nBusyBox v1.24.1 <span class=\"token punctuation\">(</span><span class=\"token number\">2022</span>-03-24 03:13:07 CST<span class=\"token punctuation\">)</span> multi-call binary.\nBusyBox is copyrighted by many authors between <span class=\"token number\">1998</span>-2015.\nLicensed under GPLv2. See <span class=\"token builtin class-name\">source</span> distribution <span class=\"token keyword\">for</span> detailed\ncopyright notices.\n\nUsage: busybox <span class=\"token punctuation\">[</span>function <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\n   or: busybox --list\n   or: <span class=\"token keyword\">function</span> <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>.\n\n        BusyBox is a multi-call binary that combines many common Unix\n        utilities into a single executable.  Most people will create a\n        <span class=\"token function\">link</span> to busybox <span class=\"token keyword\">for</span> each <span class=\"token keyword\">function</span> they wish to use and BusyBox\n        will act like whatever it was invoked as.\n\nCurrently defined functions:\n        <span class=\"token punctuation\">[</span>, <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>, addgroup, adduser, arping, ash, awk, base64, basename, bunzip2, bzcat, bzip2, cat, chattr, chgrp, chmod, chown,\n        chroot, chvt, cksum, clear, cmp, cp, cpio, crond, crontab, cut, date, dc, dd, deallocvt, delgroup, deluser, depmod, df,\n        diff, dirname, dmesg, dnsdomainname, dos2unix, du, echo, egrep, env, expr, false, fdisk, fgrep, find, free, fsync, getty,\n        grep, groups, gunzip, gzip, halt, hd, head, hexdump, hostname, hwclock, id, ifconfig, init, insmod, install, ip, ipaddr,\n        iplink, iproute, iprule, iptunnel, kill, killall, killall5, klogd, less, linuxrc, ln, logger, login, logread, ls, lsattr,\n        lsmod, lspci, md5sum, mkdir, mknod, mktemp, modprobe, more, mount, mv, nameif, netstat, nslookup, openvt, passwd, pidof,\n        ping, ping6, pivot_root, poweroff, printf, ps, pwd, rdate, readlink, realpath, reboot, renice, reset, resize, rm, rmdir,\n        rmmod, route, sed, seq, sh, sha1sum, sleep, sort, split, start-stop-daemon, stat, strings, swapoff, swapon, switch_root,\n        sync, sysctl, syslogd, tail, tar, taskset, tee, telnet, test, tftp, time, top, touch, tr, traceroute, traceroute6, true,\n        tty, umount, uname, uniq, unix2dos, unzip, uptime, usleep, vi, watch, wc, wget, which, whoami, xargs, yes, zcat<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以看到内置<code>busybox</code>不支持<code>man</code>的。</p>\n<h2 id=\"寻找解决方案\">寻找解决方案</h2>\n<p>去看看官方<code>Busybox</code>是否支持</p>\n<blockquote>\n<p><strong>Busybox</strong> : https://busybox.net/downloads/BusyBox.html</p>\n</blockquote>\n<p>发现是支持<code>man</code>的，只是<code>QNAP</code>没有编译进去。</p>\n<h2 id=\"解决思路\">解决思路</h2>\n<ul>\n<li>给<code>QNAP</code>提需求单？ 是一个选择，但是太慢了，想官方内置，不知道等到猴年马月了。</li>\n<li><code>QNAP</code>似乎开发了底层SDK，记得有下载过，还没有仔细研究怎么使用。不过记得有附带编译工具链，自己动手编译一个<code>busybox</code>版本替代系统内置的，应该也是可行的。</li>\n</ul>\n<h2 id=\"去看看别人有啥解决方案？\">去看看别人有啥解决方案？</h2>\n<blockquote>\n<p>Optware has man but only for the optware installed packages (if supplied) and or manually added files in the man folder.</p>\n<p>https://forum.qnap.com/viewtopic.php?t=49961</p>\n</blockquote>\n<p>柳暗花明又一村， <code>entware</code> 支持<code>man pages</code>，可以直接安装了。</p>\n<blockquote>\n<p>插入<code>entware</code>安装方法：</p>\n<p>打开<code>App Center</code>，源选择刚添加的<code>Qnapclub</code>，点击搜索框输入<code>entware</code>，选<code>Entware-std 1.03</code></p>\n</blockquote>\n<p>一条命令解决：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">opkg <span class=\"token function\">install</span> man-db man-pages<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>安装完之后验证：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># man fopen</span>\nFOPEN<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>                                            Linux Programmer's Manual                                            FOPEN<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\nNAME\n       fopen, fdopen, freopen - stream <span class=\"token function\">open</span> functions\n\nSYNOPSIS\n       <span class=\"token comment\">#include &lt;stdio.h&gt;</span>\n\n       FILE *fopen<span class=\"token punctuation\">(</span>const char *restrict pathname, const char *restrict mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       FILE *fdopen<span class=\"token punctuation\">(</span>int fd, const char *mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       FILE *freopen<span class=\"token punctuation\">(</span>const char *restrict pathname, const char *restrict mode,\n                     FILE *restrict stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   Feature Test Macro Requirements <span class=\"token keyword\">for</span> glibc <span class=\"token punctuation\">(</span>see feature_test_macros<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">))</span>:\n\n       fdopen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>:\n           _POSIX_C_SOURCE\n\nDESCRIPTION\n       The fopen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">function</span> opens the <span class=\"token function\">file</span> whose name is the string pointed to by pathname and associates a stream with it.\n\n       The  argument mode points to a string beginning with one of the following sequences <span class=\"token punctuation\">(</span>possibly followed by additional char‐\n       acters, as described below<span class=\"token punctuation\">)</span>:\n\n       r      Open text <span class=\"token function\">file</span> <span class=\"token keyword\">for</span> reading.  The stream is positioned at the beginning of the file.\n\n       r+     Open <span class=\"token keyword\">for</span> reading and writing.  The stream is positioned at the beginning of the file.\n\n       w      Truncate <span class=\"token function\">file</span> to zero length or create text <span class=\"token function\">file</span> <span class=\"token keyword\">for</span> writing.  The stream is positioned at  the  beginning  of  the\n              file.\n\n       w+     Open  <span class=\"token keyword\">for</span> reading and writing.  The <span class=\"token function\">file</span> is created <span class=\"token keyword\">if</span> it does not exist, otherwise it is truncated.  The stream is\n              positioned at the beginning of the file.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>问题就这么解决了。</p>\n<blockquote>\n<p>一个问题，我有很多其它手册，想要安装，怎么办？</p>\n</blockquote>\n<h2 id=\"安装其它man手册\">安装其它<code>man</code>手册</h2>\n<p>已经有了<code>man</code>命令，只要把手册安装到<code>entware man</code>命令目录中就行了。</p>\n<p>找到<code>enteware man</code>手册目录。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /share/CACHEDEV3_DATA/.qpkg/Entware\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -name <span class=\"token string\">\"*man*\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<blockquote>\n<p>TIPS：<code>CACHEDEV3_DATA/.qpkg</code>这个是安装qpkg软件的磁盘。<code>CACHEDEV3</code>似乎是表示第三块插入机器的磁盘。</p>\n</blockquote>\n<p>结果输出：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./bin/catman\n./bin/go/misc/chrome/gophertool/manifest.json\n./bin/go/pkg/linux_amd64/cmd/vendor/github.com/ianlancetaylor/demangle.a\n./bin/go/src/cmd/compile/internal/types2/testdata/manual.go2\n./bin/go/src/cmd/go/internal/modconv/testdata/dockerman.glide\n./bin/go/src/cmd/go/internal/modconv/testdata/dockerman.out\n./bin/go/src/cmd/go/internal/modconv/testdata/govmomi.vmanifest\n./bin/go/src/cmd/go/internal/modconv/vmanifest.go\n./bin/go/src/cmd/go/testdata/script/mod_convert_vendor_manifest.txt\n./bin/go/src/cmd/go/testdata/script/mod_list_command_line_arguments.txt\n./bin/go/src/cmd/go/testdata/script/mod_download_too_many_redirects.txt\n./bin/go/src/cmd/go/testdata/script/gccgo_mangle.txt\n./bin/go/src/cmd/vendor/github.com/google/pprof/internal/driver/commands.go\n./bin/go/src/cmd/vendor/github.com/ianlancetaylor/demangle\n./bin/go/src/cmd/vendor/github.com/ianlancetaylor/demangle/demangle.go\n./bin/go/src/compress/bzip2/huffman.go\n./bin/go/src/compress/flate/huffman_bit_writer.go\n./bin/go/src/compress/flate/huffman_bit_writer_test.go\n./bin/go/src/compress/flate/huffman_code.go\n./bin/go/src/compress/flate/testdata/huffman-null-max.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-null-max.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-null-max.golden\n./bin/go/src/compress/flate/testdata/huffman-null-max.in\n./bin/go/src/compress/flate/testdata/huffman-null-max.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-null-max.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-pi.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-pi.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-pi.golden\n./bin/go/src/compress/flate/testdata/huffman-pi.in\n./bin/go/src/compress/flate/testdata/huffman-pi.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-pi.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.golden\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.in\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.golden\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.in\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-rand-max.golden\n./bin/go/src/compress/flate/testdata/huffman-rand-max.in\n./bin/go/src/compress/flate/testdata/huffman-shifts.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-shifts.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-shifts.golden\n./bin/go/src/compress/flate/testdata/huffman-shifts.in\n./bin/go/src/compress/flate/testdata/huffman-shifts.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-shifts.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-text-shift.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-text-shift.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-text-shift.golden\n./bin/go/src/compress/flate/testdata/huffman-text-shift.in\n./bin/go/src/compress/flate/testdata/huffman-text-shift.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-text-shift.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-text.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-text.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-text.golden\n./bin/go/src/compress/flate/testdata/huffman-text.in\n./bin/go/src/compress/flate/testdata/huffman-text.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-text.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-zero.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-zero.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-zero.golden\n./bin/go/src/compress/flate/testdata/huffman-zero.in\n./bin/go/src/compress/flate/testdata/huffman-zero.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-zero.wb.expect-noinput\n./bin/go/src/go/parser/performance_test.go\n./bin/go/src/go/printer/performance_test.go\n./bin/go/src/go/types/testdata/manual.go2\n./bin/go/src/image/jpeg/huffman.go\n./bin/go/src/vendor/golang.org/x/net/http2/hpack/huffman.go\n./bin/go/test/bench/go1/mandel_test.go\n./bin/go/test/abi/many_int_input.go\n./bin/go/test/abi/many_int_input.out\n./bin/go/test/abi/many_intstar_input.go\n./bin/go/test/abi/many_intstar_input.out\n./bin/man\n./bin/mandb\n./bin/manpath\n./etc/man_db.conf\n./lib/opkg/info/man-db.conffiles\n./lib/opkg/info/man-db.control\n./lib/opkg/info/man-pages.list\n./lib/opkg/info/man-db.list\n./lib/opkg/info/man-pages.control\n./lib/opkg/info/man-pages.postinst\n./lib/python3.10/encodings/__pycache__/hp_roman8.cpython-310.opt-1.pyc\n./lib/python3.10/encodings/__pycache__/hp_roman8.cpython-310.opt-2.pyc\n./lib/python3.10/encodings/__pycache__/mac_roman.cpython-310.opt-2.pyc\n./lib/python3.10/encodings/__pycache__/mac_roman.cpython-310.pyc\n./lib/python3.10/encodings/__pycache__/hp_roman8.cpython-310.pyc\n./lib/python3.10/encodings/__pycache__/mac_romanian.cpython-310.pyc\n./lib/python3.10/encodings/__pycache__/mac_roman.cpython-310.opt-1.pyc\n./lib/python3.10/encodings/__pycache__/mac_romanian.cpython-310.opt-1.pyc\n./lib/python3.10/encodings/__pycache__/mac_romanian.cpython-310.opt-2.pyc\n./lib/python3.10/encodings/hp_roman8.pyc\n./lib/python3.10/encodings/mac_roman.pyc\n./lib/python3.10/encodings/mac_romanian.pyc\n./lib/tcl8.5/encoding/macRoman.enc\n./lib/tcl8.5/encoding/macRomania.enc\n./lib/groff/groffer/man.pl\n./lib/man-db\n./lib/man-db/libman-2.10.2.so\n./lib/man-db/libman.so\n./lib/man-db/libmandb-2.10.2.so\n./lib/man-db/libmandb.so\n./lib/man-db/manconv\n./share/zoneinfo/Asia/Amman\n./share/zoneinfo/Asia/Kathmandu\n./share/zoneinfo/Asia/Katmandu\n./share/doc/man-db\n./share/doc/man-db/man-db-manual.ps\n./share/doc/man-db/man-db-manual.txt\n./share/groff/1.22.4/tmac/man.tmac\n./share/groff/1.22.4/tmac/mandoc.tmac\n./share/groff/site-tmac/man.local\n./share/man\n./share/man/man1\n./share/man/man1/man-recode.1\n./share/man/man1/man.1\n./share/man/man1/manconv.1\n./share/man/man1/manpath.1\n./share/man/man5\n./share/man/man5/manpath.5\n./share/man/man8\n./share/man/man8/catman.8\n./share/man/man8/mandb.8\n./share/man/man2\n./share/man/man3\n./share/man/man4\n./share/man/man6\n./share/man/man7\n./share/man/man7/man-pages.7\n./share/man/man7/man.7\n./var/cache/man<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>很显然，路径就在<code>/share/CACHEDEV3_DATA/.qpkg/Entware/share//man/</code>中了。</p>\n<p>那么，安装完<code>entware</code>之后，其它的man 手册放到 <code>/share/CACHEDEV3_DATA/.qpkg/Entware/share/man</code>这个目录中就行了。</p>\n<p>把<code>gh git</code>等手册放进去。再次验证</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">man</span> gh\nGH<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>                                                   GitHub CLI manual                                                   GH<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\nNAME\n       gh - GitHub CLI\n\nSYNOPSIS\n       gh <span class=\"token operator\">&lt;</span>command<span class=\"token operator\">&gt;</span> <span class=\"token operator\">&lt;</span>subcommand<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span>flags<span class=\"token punctuation\">]</span>\n\nDESCRIPTION\n       Work seamlessly with GitHub from the <span class=\"token builtin class-name\">command</span> line.\n\nCORE COMMANDS\n       gh-auth<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Authenticate gh and <span class=\"token function\">git</span> with GitHub\n\n       gh-browse<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Open the repository <span class=\"token keyword\">in</span> the browser\n\n       gh-codespace<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Connect to and manage your codespaces\n\n       gh-gist<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Manage gists\n\n       gh-issue<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Manage issues\n\n       gh-pr<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Manage pull requests\n\n       gh-release<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Manage releases\n\n       gh-repo<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Manage repositories\n\nACTIONS COMMANDS<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>完美收工！</p>\n<p>可能需要注意的地方，注意<code>man</code>手册的权限<code>644</code>，如果手册copy进去了，发现使用不了。运行下面命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> <span class=\"token number\">644</span> -R /share/CACHEDEV3_DATA/.qpkg/Entware/share/man<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"安装更多的man-pages\">安装更多的<code>man pages</code></h2>\n<blockquote>\n<ul>\n<li><code>Git</code>手册下载地址： https://mirrors.edge.kernel.org/pub/software/scm/git/</li>\n<li>中文<code>man</code>手册： https://github.com/man-pages-zh/manpages-zh</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>PS: 中文<code>man</code>手册有不少依赖需要解决，在<code>Docker</code>中已经可以查询中文<code>man</code>了，<code>qnap</code>中试了下，解决依赖搞得头大，暂时就<code>docker</code>中用中文<code>man</code>好了</p>\n</blockquote>\n<p>真正收工了！</p>\n<h2 id=\"附录\">附录</h2>\n<h3 id=\"man介绍\">man介绍</h3>\n<p>man命令并非仅仅能查看命令或者函数的介绍，在linux中，有丰富的帮助手册信息，并且每一个手册都有一个编号。编号和对应内容如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">编号</th>\n<th style=\"text-align:left\">代表内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">可执行程序或shell命令，如ls</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">系统调用，如chdir</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">库函数，如printf</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">设备或特殊文件，如tty</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\">配置文件格式或约定</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">6</td>\n<td style=\"text-align:left\">游戏</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">7</td>\n<td style=\"text-align:left\">杂项</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">8</td>\n<td style=\"text-align:left\">管理命令，通常只有root用户可以使用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">9</td>\n<td style=\"text-align:left\">内核例程</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">n</td>\n<td style=\"text-align:left\">内置命令，如cd</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"常用快捷键\">常用快捷键</h3>\n<blockquote>\n<p><strong>手册内容</strong></p>\n<p>多数手册包含以下几部分内容：</p>\n<ul>\n<li>NAME 功能的简单描述</li>\n<li>SYNOPSIS 语法格式</li>\n<li>DESCRIPTION 描述</li>\n<li>OPTIONS 选项</li>\n<li>ERRORS 描述出错场景，<strong>这在排查错误时很有帮助</strong></li>\n<li>NOTES 注意事项</li>\n<li>FILES 相关文件，例如对于man命令的FILES部分内容显示了它的配置文件位置等信息</li>\n<li>EXAMPLES 使用示例，会提供一些简单的示例</li>\n<li>BUGS 存在的bug，<strong>当遇到奇怪的问题时，不妨看看当前命令是否有已知的bug</strong></li>\n</ul>\n<p><strong>基本查看</strong></p>\n<p>手册的查看和less查看文本类似，可以参考《文本查看篇》或查看less命令的使用，这里介绍基本操作：</p>\n<ul>\n<li>空格 向下翻页</li>\n<li>Home 回到第一页</li>\n<li>End 跳到最后一页</li>\n<li>/string 向前搜索string字符串</li>\n<li>?string 向后搜索string字符串</li>\n<li>n 下一个匹配字符</li>\n<li>N 上一个匹配字符</li>\n<li>q 退出</li>\n</ul>\n</blockquote>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "qnap",
                "nas",
                "embeded",
                "man"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/e6d40157/",
            "url": "https://blog.17lai.site/posts/e6d40157/",
            "title": "如何使用tinyMediaManager刮削电影和电视剧，动画，并自动下载字幕",
            "date_published": "2021-10-11T11:25:00.000Z",
            "content_html": "<blockquote>\n<p>注意使用V3版本，V4版本收费！</p>\n<p>所以升级V3版本即可，不要升级到V4版本！不要升级到V4版本！不要升级到V4版本！</p>\n</blockquote>\n<ul>\n<li><strong>Plex</strong>是一款很好用的个人媒体中心软件，但是因为国内网络的原因，使用默认的TMDB刮削器挂出来的效果并不好，要么就是影片信息不正确，要么就是海报不正常显示，实在让人头疼。</li>\n<li><strong>tinyMediaManager</strong>是一款电影信息刮削和整理的软件，正好可以和plex配合，完美的解决这一问题。tinyMediaManager在刮削影片的过程中会把影片的海报、演员表、背景图片等等都保存到影片所在文件夹，自动生成电影的nfo信息文件，并对文件和文件夹进行重新命名的操作。在plex设置刮削代理的时候，需要用一款插件可以直接读取nfo的信息，完成刮削，下面把使用方法分享给大家，</li>\n</ul>\n<h2 id=\"下载和安装tinyMediaManager\"><strong>下载和安装tinyMediaManager</strong></h2>\n<p><strong>官网下载地址：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.tinymediamanager.org/download/\">https://www.tinymediamanager.org/download/</a></strong></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181048.jpeg\" alt=\"\"></p>\n<h3 id=\"tmm下载\">tmm下载</h3>\n<p><strong>下载后直接解压文件夹</strong></p>\n<p>客户端需要java支持，先在电脑安装java</p>\n<p>客户端下载后是一个压缩包，解压之后就可以用</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181054.jpeg\" alt=\"\"></p>\n<p><strong>解压之后打开tinyMediaManager.exe</strong></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181101.png\" alt=\"tmm目录\"></p>\n<h2 id=\"TMM设置\">TMM设置</h2>\n<h3 id=\"TMM代理设置\">TMM代理设置</h3>\n<blockquote>\n<p>重要：很多源都需要代理才能访问。这里正确的配置才能正确的刮削！</p>\n<p>可以调整这里使用的内存，大内存可以极大加速刮削速度。</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011211402.png\" alt=\"\"></p>\n<h2 id=\"电影刮削设置\">电影刮削设置</h2>\n<p><strong>进行相关设置。Tmm可以对电影和电视剧的刮削进行分别设置，打开设置后选择电影选项，可以选择分级标准、自动重命名等选项。</strong></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181337.png\" alt=\"\"></p>\n<p>电影信息选项</p>\n<p><strong>点击侧边栏媒体库目录，添加电影目录</strong></p>\n<p><strong>刮削器设置</strong></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181107.jpeg\" alt=\"\"></p>\n<p>选择电影刮削器</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181107.png\" alt=\"\"></p>\n<p>刮削器选项</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181114.png\" alt=\"\"></p>\n<p>nfo选项，建议选择生成两种命名放视的nfo</p>\n<p><strong>图片刮削器选择全选，图片文件名建议两边都选上，会分别生成两组命名格式不同的图片，为了保证plex能读取</strong></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181331.png\" alt=\"\"></p>\n<p>图片命名选项</p>\n<p>Tmm还可以自动下载预告片，字幕。字幕下载时可以输入opensubtitles账户</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181115.png\" alt=\"\"></p>\n<p>字幕下载选项</p>\n<p><strong>重命名规则</strong></p>\n<p>这里重点讲一下重命名规则，刮削完后可以选择对电影文件和文件夹进行重命名，可能对于pt用户重命名可能会影响资源上传，可以不进行重命名操作。</p>\n<p>一般情况下电影刮削出来的信息，title是电影的中文标题名称，originaltitle是电影的原标题名称，一般是英文名称。软件默认的设置是文件和文件夹都命名成title，也就是中文标题，但是我发现这样在后期使用的时候有弊端。英文电影在检索字幕时会用文件名来检索，而用中文名称很多情况下检索不出来，所以这里把文件的命名规则改一下，改成originaltitle，并去掉年份信息的括号，中间连接符改成点，文件名设置成<img src=\"https://math.now.sh?inline=%7Boriginaltitle%7D\" style=\"filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;\">{- ,edition,}.<img src=\"https://math.now.sh?inline=%7Byear%7D.\" style=\"filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;\">{videoFormat}.${audioCodec}的格式。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181121.png\" alt=\"\"></p>\n<p>电影文件重命名选项</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181127.png\" alt=\"\"></p>\n<p>刮削完的文件夹内文件信息</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181323.png\" alt=\"\"></p>\n<p>刮削完的电影文件夹目录</p>\n<p><strong>电视节目刮削设置类似，如果挂不出来可以用the tvdb来刮削。</strong></p>\n<p><strong>tmm有时候会出现网络不稳定，刮不到的情况，可以修改host解决</strong></p>\n<p>改host 在host文件最后加一行13.224.161.90 <a href=\"https://link.zhihu.com/?target=http%3A//api.themoviedb.org\">http://api.themoviedb.org</a></p>\n<p><strong>退出设置，开始刮削</strong></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181317.png\" alt=\"\"></p>\n<p>更新电影源</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181128.jpeg\" alt=\"\"></p>\n<p>选中要刮削的电影自动匹配</p>\n<h3 id=\"电影手动刮削\">电影手动刮削</h3>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011183942.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011184131.png\" alt=\"\"></p>\n<h2 id=\"电视剧-动画手动刮削\">电视剧&amp;动画手动刮削</h2>\n<h3 id=\"电视剧元数据刮削\">电视剧元数据刮削</h3>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011184909.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011185747.png\" alt=\"\"></p>\n<h3 id=\"季和集元数据刮削前整理\">季和集元数据刮削前整理</h3>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011185049.png\" alt=\"\"></p>\n<h3 id=\"刮削季元素\">刮削季元素</h3>\n<p>整理好正确的季和集之后，才能正确的刮削季元素</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011185146.png\" alt=\"\"></p>\n<h3 id=\"TMM整理完效果\">TMM整理完效果</h3>\n<blockquote>\n<p>这里用海贼王做展示，一个季和集都特别多的剧。</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011185448.png\" alt=\"\"></p>\n<h2 id=\"TMM目录重命名整理\">TMM目录重命名整理</h2>\n<blockquote>\n<p>刮削完后，可以重命名视频文件，并进行目录整理。</p>\n</blockquote>\n<p>方法1</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181133.jpeg\" alt=\"\"></p>\n<p>方法2</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011184315.png\" alt=\"\"></p>\n<p>等所有电影的信息刮削完后，选择重命名和清理，这样就完成了刮削的操作。以后下载了新电影，直接打开tmm,更新源之后直接选择搜索未刮削过的电影完成刮削。刮削出来的信息kodi，emby等软件也都能用。</p>\n<h2 id=\"Plex设置\">Plex设置</h2>\n<h3 id=\"plex插件的安装和设置\"><strong>plex插件的安装和设置</strong></h3>\n<p><strong>下载plex的插件</strong></p>\n<p>插件XBMCnfoMoviesImporter和XBMCnfoTVImporter分别是刮削电影和电视剧的插件</p>\n<p>下载地址：<a href=\"https%3A//github.com/gboudreau/XBMCnfoMoviesImporter.bundle\">https://github.com/gboudreau/XBMCnfoMoviesImporter.bundle</a></p>\n<p>如果不能下载的话可以联系我获取，还有几个很好用的plex插件</p>\n<p>下载完插件后就需要把插件解压到plex的插件目录：C:\\Users\\用户名\\AppData\\Local\\Plex Media Server\\Plug-ins</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181134.png\" alt=\"\"></p>\n<p>plex插件目录</p>\n<p>注意解压后要把文件夹名后边的master去掉。</p>\n<p><strong>plex代理设置</strong></p>\n<p>Plex的代理设置就是选择刮削电影所用的刮削器及优先级。</p>\n<p>装好插件后重启plex，进行plex的设置。在代理设置中选择XBMCnfoMoviesImporter，把它的优先级调到最高，第二个可以设置成字幕插件。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181140.jpeg\" alt=\"\"></p>\n<p><strong>设置电影资料库的刮削器代理</strong></p>\n<p>点击设置界面下方管理里边的资料库，选择电影资料夹的高级设置，设置如下</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181140.png\" alt=\"\"><br>\n<img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181146.png\" alt=\"\"></p>\n<p>plex代理设置</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181152.png\" alt=\"\"></p>\n<p><strong>刷新电影源数据资料</strong></p>\n<p>设置完成后就可以在plex主页对电影文件夹刷新元数据了。等待刷新完后就可以载入所有的电影信息了。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181152.jpeg\" alt=\"\"></p>\n<p>管理资料库-刷新电影元数据</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181153.jpeg\" alt=\"\"></p>\n<p>更新后的电影信息</p>\n<p>采用类似的设置，电视剧信息也能刮削。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181159.jpeg\" alt=\"\"></p>\n<p>电视剧更新后的信息</p>\n<h2 id=\"Emby设置\">Emby设置</h2>\n<blockquote>\n<p>Emby内置刮削工具，但是速度较慢。下面设置基于外部刮削工具TMM，所以没有勾选Emby刮削源！</p>\n</blockquote>\n<p>最终效果演示</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011190035.png\" alt=\"最终效果\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011190347.png\" alt=\"\"></p>\n<h3 id=\"开始设置\">开始设置</h3>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011181946.png\" alt=\"\"></p>\n<h3 id=\"新增媒体库\">新增媒体库</h3>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011182142.png\" alt=\"\"></p>\n<h3 id=\"已有媒体库属性设置\">已有媒体库属性设置</h3>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011182244.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011182350.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011183115.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011183157.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011183336.png\" alt=\"\"></p>\n<h3 id=\"Emby字幕设置\">Emby字幕设置</h3>\n<p>字幕下载设置，字幕下载工具见后面的[字幕下载]章节</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011182554.png\" alt=\"\"></p>\n<h2 id=\"字幕下载-2\"><strong>字幕下载</strong></h2>\n<p>想要较好的自动下载字幕，最好用前面介绍的tmm刮削改名之后再使用下面工具。</p>\n<h3 id=\"subfinder-自动下载字幕-2\">subfinder 自动下载字幕</h3>\n<ul>\n<li>Docker： <a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/superng6/subfinder\">superng6/subfinder</a></li>\n</ul>\n<p>下载完成，刮削后的目录，挂载到subfinder的media目录，就会自动下载字幕。</p>\n<p>字幕下载对电影，英文剧集支持较好。对于一些tv，动画手动下载字幕会更好一些。</p>\n<p>注意：官方的配置文件有问题，时效问题。修改URL到最新即可。</p>\n<h3 id=\"chinesesubfinder-2\">chinesesubfinder</h3>\n<ul>\n<li>Docker： <a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/allanpk716/chinesesubfinder\">allanpk716/chinesesubfinder</a></li>\n<li>新开发的中文字幕查找工具，上面那个很久没更新了，这个刚出来。使用nfo里面刮削出来的文件名来匹配字幕。所以就原理来说，这个字幕匹配更准确。</li>\n</ul>\n<h3 id=\"bazarr-2\">bazarr</h3>\n<ul>\n<li>Docker：<a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/linuxserver/bazarr\">linuxserver/bazarr</a></li>\n<li>字幕下载管理，配合sonarr, radarr 使用效果更好。对于英文剧集命名规范的支持较好，比如<code>[name]S01E01</code></li>\n</ul>\n<h2 id=\"参考-3\">参考</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://zhuanlan.zhihu.com/p/112167546?from_voters_page=true\">利用tinyMediaManager刮削影片，解决家用nas软件plex电影墙的问题</a></li>\n</ul>\n<h2 id=\"图书、音乐、视频三剑客！-4\">图书、音乐、视频三剑客！</h2>\n<blockquote>\n<p>结构化自己的图书，音乐，和视频！</p>\n</blockquote>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/dc1c8194/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/book.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/dc1c8194/\">如何建立自己的私人图书馆</a>\n        <hr>\n        <div class=\"desc\">图书管理员似乎是个非常有前途的职业，远的有孔子，游学之前当图书管理员，近的有本朝开国毛教员，也当了很长时间图书管理员。我们也可以自己做个私人电子图书馆，单个管理员，说不定很有前途？</div>\n    </div>\n</div>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/3847ad58/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/music.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/3847ad58/\">如何使用media Go,MusicBrainz,Mp3tag工具刮削音乐 整理音乐资料库</a>\n        <hr>\n        <div class=\"desc\">音乐文件则是将歌名、歌手、专辑、发行时间、歌词、封面图等信息写入文件标签，称为ID3 Tag 。它能够在MP3中附加曲子的演出者、作者以及其它类别资讯，方便众多乐曲的管理。</div>\n    </div>\n</div>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/e6d40157/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/emby.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/e6d40157/\">如何使用tinyMediaManager刮削电影和电视剧，动画，并自动下载字幕</a>\n        <hr>\n        <div class=\"desc\">tinyMediaManager是最好用的视频刮削工具，可以刮削电影，动画，电视剧。使用TinyMediaManager生成nfo元数据文件，多媒体软件解析生成海报墙展示丰富的影片信息，配合Emby，Plex使用体验绝佳</div>\n    </div>\n</div>\n<h2 id=\"系列教程-24\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Nas系列</strong> <a href=\"https://blog.17lai.site/categories/nas/atom.xml\"><strong>Nas 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/db7bf49b/\">音视频图书和音乐自动化管理框架图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/e6d40157/\">如何使用tinyMediaManager刮削电影和电视剧，动画，并自动下载字幕</a></li>\n<li><a href=\"https://blog.17lai.site/posts/8f76d9dd/\">Transmission 使用及其配置</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f6b32521/\">Qbittorrent 参数详细设置教程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/bb600b4b/\">PT 工具集，Linux硬链接助手</a></li>\n<li><a href=\"https://blog.17lai.site/posts/10fee780/\">QNAP 修改应用启动顺序</a></li>\n<li><a href=\"https://blog.17lai.site/posts/10fee780/\">qnap硬盘移动位置</a></li>\n<li><a href=\"https://blog.17lai.site/posts/5b1993ac/\">qnap IO 错误消除</a></li>\n</ul>\n<p><strong>Docker系列</strong> <a href=\"https://blog.17lai.site/categories/docker/atom.xml\"><strong>Docker 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/42b6a86d/\">Docker使用简明教程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/1802a8a7/\">为知笔记私有化Docker部署</a></li>\n<li><a href=\"https://blog.17lai.site/posts/593cc323/\">Earthly 一个更加强大的镜像构建工具</a></li>\n<li><a href=\"https://blog.17lai.site/posts/90e60aac/\">使用 Shell 脚本实现一个简单 Docker</a></li>\n<li><a href=\"https://blog.17lai.site/posts/465d2738/\">如何使用Traefik V2 在Ubuntu20.04 上面来做 Dockers</a></li>\n<li><a href=\"https://blog.17lai.site/posts/462f1e5c/\">通过IPV6访问Qnap NAS中Docker的服务</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "emby",
                "刮削",
                "tmm",
                "字幕",
                "plex"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/9912bd5d/",
            "url": "https://blog.17lai.site/posts/9912bd5d/",
            "title": "使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程",
            "date_published": "2021-09-01T10:25:00.000Z",
            "content_html": "<blockquote>\n<p>使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程，打造一个完整的HTPC。</p>\n<p><strong>持续滚动更新</strong>，欢迎收藏关注。也可以<a href=\"https://blog.17lai.site/atom.xml\">RSS订阅</a>本博客！</p>\n<p>jackett 作为种子源，sonarr剧集管理，bt下载，qbittorrent主力下载，使用iyuu转移辅种，emby，jellyfin做海报墙，sunfinder自动下载字幕。基本算是完美打通全流程自动追剧。bt种子文件命名规则SxxExx的自动识别下载，国内的资源手动查找下载，自动推送到emby刮削好。</p>\n<p>结合本地DNS管理，DNS去广告，Nginx 反向代理去端口访问，形成一个完整解决方案。</p>\n<p>硬链接工具导入到新目录，使用TMM刮削。</p>\n<p>Tips：博主只是把个人使用经验的一部分<em><strong>无偿</strong></em>写下来，写完后发现整理流程很复杂，要求很高，博主整体软硬件成本上2W以上了。各位读者赶着看得懂的做，如果看不懂，请略过，或者Google之。</p>\n</blockquote>\n<h2 id=\"indexer-种子索引源\"><strong>indexer 种子索引源</strong></h2>\n<p>种子索引来源。</p>\n<h3 id=\"jackett\"><strong>jackett</strong></h3>\n<ul>\n<li>docker: <a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/linuxserver/jackett\">linuxserver/jackett:latest</a></li>\n<li>老牌选手，种子源非常丰富。</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819002543.png\" alt=\"jackett 界面\"></p>\n<h3 id=\"prowlarr-2\"><strong>prowlarr</strong></h3>\n<ul>\n<li>indexer manager/proxy</li>\n<li>Docker:  <a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/linuxserver/prowlarr\">linuxserver/prowlarr:develop</a></li>\n<li>新开发的，和sonarr, lidarr等结合比jackett 配置更简单。</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819002628.png\" alt=\"prowlarr\"></p>\n<h2 id=\"sonarr动画剧集管理\"><strong>sonarr动画剧集管理</strong></h2>\n<p>管理剧集名，查找剧集种子推送到下载工具</p>\n<p>剧集管理示例图片</p>\n<p>管理剧集目录，剧集日历，提醒你那一天哪些节目播放</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819001244.png\" alt=\"sonarr\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819211051.png\" alt=\"sonarr 日历提醒\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819001328.png\" alt=\"sonarr\"></p>\n<p>自动识别下载对英文剧集支持较好，对于中文资源，结合手动识别下载更佳。</p>\n<h3 id=\"手动识别下载\"><strong>手动识别下载</strong></h3>\n<p>示例图片</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819001055.png\" alt=\"sonarr\"></p>\n<p>电影使用radarr, 音乐使用lidarr，同样可以自动化过程</p>\n<h2 id=\"多媒体中心\">多媒体中心</h2>\n<blockquote>\n<p>Emby，Jellyfin, Plex都是优秀的多媒体中心。Jellyfin是开源的，基于Emby早期版本。</p>\n</blockquote>\n<h3 id=\"emby海报墙，流媒体中心\"><strong>emby海报墙，流媒体中心</strong></h3>\n<p>emby作为海报墙，元数据查看器，结合tampermonkey js脚本调用外部potplayer播放减少nas服务器压力，并且得到更好解码性能。手机端也有emby客户端。jellyfin，plex也可以</p>\n<p>js脚本: <a target=\"_blank\" rel=\"noopener\" href=\"https://greasyfork.org/scripts/406811-embylaunchpotplayer/code/embyLaunchPotplayer.user.js\">embyLaunchPotplayer</a></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819001419.png\" alt=\"emby\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819000847.png\" alt=\"emby\"></p>\n<h3 id=\"jellyfin-开源版本的emby\"><strong>jellyfin 开源版本的emby</strong></h3>\n<ul>\n<li>jellyfin硬件解码</li>\n<li>jellyfin中文字体显示方块问题</li>\n</ul>\n<p>上面两个问题见下面compose 配置解决方法</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3'</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">jellyfin</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> jellyfin/jellyfin\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> jellyfin\n    <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span>PUID<span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>PGID<span class=\"token punctuation\">}</span>\n    <span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> jellyfin\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">devices</span><span class=\"token punctuation\">:</span>\n     <span class=\"token punctuation\">-</span> /dev/dri<span class=\"token punctuation\">:</span>/dev/dri     <span class=\"token comment\">#使jellfin支持硬件解码</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> PUID=$<span class=\"token punctuation\">{</span>PUID<span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">-</span> PGID=$<span class=\"token punctuation\">{</span>PGID<span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">-</span> TZ=$<span class=\"token punctuation\">{</span>TZ<span class=\"token punctuation\">}</span>\n      <span class=\"token comment\"># 给一些插件做代理</span>\n      <span class=\"token punctuation\">-</span> http_proxy=http<span class=\"token punctuation\">:</span>//xxx.17lai.site<span class=\"token punctuation\">:</span>1089/\n      <span class=\"token punctuation\">-</span> https_proxy=http<span class=\"token punctuation\">:</span>//xxx.17lai.site<span class=\"token punctuation\">:</span>1089/\n    <span class=\"token comment\"># ports:    # 使用nginx 反向代理，所以这里就不用开端口了</span>\n      <span class=\"token comment\"># - 8098:8096</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/jellyfin/config<span class=\"token punctuation\">:</span>/config\n      <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/jellyfin/cache<span class=\"token punctuation\">:</span>/cache\n      <span class=\"token comment\"># 把windowsfonts目录下面的字体都复制到`jellyfin/fonts`目录中</span>\n      <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/jellyfin/fonts<span class=\"token punctuation\">:</span>/usr/share/fonts    <span class=\"token comment\"># 给jellyfin装载更多字体，使中文显示正确，不再是方块</span>\n      <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/nginx/resolv.conf<span class=\"token punctuation\">:</span>/etc/resolv.conf    <span class=\"token comment\"># 定制dns</span>\n <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>赋予emby，jellyfin访问硬件加速驱动权限</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> <span class=\"token number\">755</span> /dev/dri\n<span class=\"token function\">chmod</span> <span class=\"token number\">666</span> /dev/dri/renderD128<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"TMM刮削，改名，目录整理\"><strong>TMM刮削，改名，目录整理</strong></h2>\n<blockquote>\n<p>电影，电视剧，动画等视频为了更好的体验效果，需要刮削元数据。</p>\n</blockquote>\n<p>一些命名不规范，不能被emby识别的剧集使用tmm刮削改名，配合硬链接工具，可以不影响做种的前提下改名，该目录。大文件硬链接，小文件直接复制方便刮削，推荐一个自己写的硬链接bash shell脚本，PTtool在nas，linux环境使用更方便。</p>\n<p>电影，电视剧，动画完整刮削教程，见<a href=\"https://blog.17lai.site/posts/e6d40157/\">如何使用tinyMediaManager刮削电影和电视剧，动画，并自动下载字幕</a>。</p>\n<blockquote>\n<ul>\n<li>\n<p>Github: <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry/PTtool\">appotry/PTtool</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/e6d40157/\">如何使用tinyMediaManager刮削电影和电视剧，动画，并自动下载字幕</a></p>\n</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819001155.png\" alt=\"tmm\"></p>\n<p>注意：使用v3版本，不要升级到v4，v4版本收费。</p>\n<h2 id=\"硬链接工具-3\"><strong>硬链接工具</strong></h2>\n<blockquote>\n<ul>\n<li>\n<p>博主编写的脚本，自推一下，在Nas，linux环境使用的Shell 脚本。</p>\n</li>\n<li>\n<p>PT hard link tools。方便PT用户硬链接文件，在最大可能情况下节约空间，并保持做种。 小于1M的文件直接复制，方便emby，tmm等工具刮削修改nfo等小文件。 大于1M的文件硬链接到目的目录，可以随意修改文件名，但是不能修改文件内容！</p>\n</li>\n<li>\n<p>从此，做种，刮削改名两不误！</p>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li><strong>Github</strong>: <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry/PTtool\"><strong>PTools</strong></a></li>\n<li><strong>使用教程</strong>： <a href=\"https://blog.17lai.site/posts/bb600b4b/\"><strong>Linux PT硬链接助手使用教程</strong></a></li>\n</ul>\n</blockquote>\n<h2 id=\"BT下载工具\"><strong>BT下载工具</strong></h2>\n<blockquote>\n<p>qBittorrent下载，种子分类整理较好，但占用资源，内存较多。Transmissoin种子整理分类远不如qBittorrent，但资源占用低，是PT做种混魔力的首选！建议qBittorrent和Transmissoin搭配使用，使用Iyuu自动在两者之间转移种子。</p>\n</blockquote>\n<h3 id=\"Transmissoin\"><strong>Transmissoin</strong></h3>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/8f76d9dd/\"><strong>transmission 使用及其配置</strong></a></li>\n</ul>\n<h3 id=\"qBittorrent\">qBittorrent</h3>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/f6b32521/\"><strong>qBittorrent 参数详细设置教程</strong></a></li>\n</ul>\n<p>都分别有docker版本和套件版本。</p>\n<p>虽然下载工具很多，但IYUU只支持这两个辅种工具，开发者的话是这两个工具的RPC调用接口稳定。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819005826.png\" alt=\"Transmissoin\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819005858.png\" alt=\"qBittorrent\"></p>\n<h2 id=\"辅种工具IYUU\"><strong>辅种工具IYUU</strong></h2>\n<p><strong>Doker版本</strong></p>\n<ul>\n<li>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/iyuucn/iyuuautoreseed\">iyuucn/iyuuautoreseed</a></p>\n<blockquote>\n<p>命令行版本</p>\n</blockquote>\n</li>\n<li>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/iyuucn/iyuuplus\">iyuucn/iyuuplus</a></p>\n<blockquote>\n<p>图形界面版本，更轻松上手。</p>\n</blockquote>\n</li>\n</ul>\n<p>自动辅种，解放双手，更多魔力，更容易养多站。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819010407.png\" alt=\"iyuuplus\"></p>\n<h2 id=\"字幕下载\"><strong>字幕下载</strong></h2>\n<p>想要较好的自动下载字幕，最好用前面介绍的tmm刮削改名之后再使用下面工具。</p>\n<h3 id=\"subfinder-自动下载字幕\">subfinder 自动下载字幕</h3>\n<ul>\n<li>Docker： <a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/superng6/subfinder\">superng6/subfinder</a></li>\n</ul>\n<p>下载完成，刮削后的目录，挂载到subfinder的media目录，就会自动下载字幕。</p>\n<p>字幕下载对电影，英文剧集支持较好。对于一些tv，动画手动下载字幕会更好一些。</p>\n<p>注意：官方的配置文件有问题，时效问题。修改URL到最新即可。</p>\n<h3 id=\"chinesesubfinder\">chinesesubfinder</h3>\n<ul>\n<li>\n<h3 id=\"Docker：-allanpk716-chinesesubfinder\">Docker： <a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/allanpk716/chinesesubfinder\">allanpk716/chinesesubfinder</a></h3>\n</li>\n<li>\n<p>新开发的中文字幕查找工具，上面那个很久没更新了，这个刚出来。使用nfo里面刮削出来的文件名来匹配字幕。所以就原理来说，这个字幕匹配更准确。</p>\n</li>\n</ul>\n<h3 id=\"bazarr\">bazarr</h3>\n<ul>\n<li>Docker：<a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/linuxserver/bazarr\">linuxserver/bazarr</a></li>\n<li>字幕下载管理，配合sonarr, radarr 使用效果更好。对于英文剧集命名规范的支持较好，比如<code>[name]S01E01</code></li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819002816.png\" alt=\"bazarr\"></p>\n<hr>\n<h2 id=\"电影管理\">电影管理</h2>\n<blockquote>\n<p>电影，电视剧，动画等视频都是类似。</p>\n</blockquote>\n<h3 id=\"使用radarr管理电影\"><strong>使用radarr管理电影</strong></h3>\n<p>radarr示例图片<img src=\"https://cimg1.17lai.site/data/2021/08/1920210819001114.png\" alt=\"radarr\"></p>\n<h3 id=\"使用Emby观看电影\">使用Emby观看电影</h3>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819000847.png\" alt=\"emby\"></p>\n<h4 id=\"Emby-win-desktop-客户端\">Emby win desktop 客户端</h4>\n<p>从 <a target=\"_blank\" rel=\"noopener\" href=\"https://embydata.com/downloads/theater/release15/setup.exe\">Emby 官网</a> 下载并安装 Emby <a target=\"_blank\" rel=\"noopener\" href=\"https://emby.tv/emby-theater.html\">官方客户端</a>。</p>\n<p>在<code>Emby Theater</code>桌面快捷方式上右键, 然后单击属性, 在弹出的页面上选择<code>打开文件所在位置</code>。</p>\n<p>删除目录下的<code>data</code>文件夹(如果没有则忽略)</p>\n<p>右上角搜索框输入<code>main.js</code>并执行搜索，点击<code>编辑</code> -&gt; <code>替换</code>, 然后在弹出的窗口中输入<code>替换内容</code>为<code>https://tv.emby.media</code>, <code>替换为</code>为<code>http://embycrack.tk.</code> 最后点击<code>全部替换</code>按钮。</p>\n<h2 id=\"音乐管理\">音乐管理</h2>\n<h3 id=\"使用lidarr管理音乐\"><strong>使用lidarr管理音乐</strong></h3>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819001200.png\" alt=\"lidarr示例图片\"></p>\n<h3 id=\"音乐刮削\">音乐刮削</h3>\n<blockquote>\n<p>使用Mp3tag, MediaGo, MusicBrainZ等工具刮削</p>\n<p>音乐刮削教程： <a href=\"https://blog.17lai.site/posts/3847ad58/\">如何使用media Go,MusicBrainz,Mp3tag工具刮削音乐 整理音乐资料库</a></p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/1120211011175602.png\" alt=\"\"></p>\n<h3 id=\"使用Mstream听音乐\">使用Mstream听音乐</h3>\n<blockquote>\n<p>教程： <a href=\"https://blog.17lai.site/posts/2b9325d0/\">私人在线音乐服务器搭建与使用介绍</a></p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2021/10/0620211006015739.png\" alt=\"私人音乐服务\"></p>\n<h2 id=\"Docker管理\">Docker管理</h2>\n<h3 id=\"使用docker-compose-管理docker配置文件，一键安装，升级\">使用docker compose 管理docker配置文件，一键安装，升级</h3>\n<h3 id=\"使用portainer管理docker\"><strong>使用portainer管理docker</strong></h3>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819001116.png\" alt=\"portainer\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">version: <span class=\"token string\">'3'</span>\nservices:\n  portainer-ce:\n    container_name:  portainer-ce\n    image: portainer/portainer-ce\n    command: -H unix:///var/run/docker.sock\n    restart: always\n    ports:\n      - <span class=\"token number\">9300</span>:9000\n      - <span class=\"token number\">9301</span>:8000\n    environment:\n      - <span class=\"token assign-left variable\">TZ</span><span class=\"token operator\">=</span>Asia/Shanghai\n      - <span class=\"token assign-left variable\"><span class=\"token environment constant\">LANG</span></span><span class=\"token operator\">=</span>en_US.UTF-8\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - /share/Container/portainer_data:/data<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"使用watchtower自动升级docker\"><strong>使用watchtower自动升级docker</strong></h3>\n<p>使所有软件保持最新最佳状态</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819001124.png\" alt=\"watchtower\"></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3'</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">watchtower</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> watchtower\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> containrrr/watchtower<span class=\"token punctuation\">:</span>latest\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> /var/run/docker.sock<span class=\"token punctuation\">:</span>/var/run/docker.sock\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> TZ=Asia/Shanghai\n      <span class=\"token punctuation\">-</span> WATCHTOWER_CLEANUP=true\n      <span class=\"token punctuation\">-</span> WATCHTOWER_SCHEDULE=0 0 1 * * *\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> nginx redis<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上述配置文件中<code>volumes</code>使用了绝对路径,使这个容器能访问系统<code>docker.sock</code>目录,用于方便监控容器镜像的版本以便更新.其他的一些环境变量,例如时区,清理旧镜像,定时任务都转换为<code>environment</code>,而特殊的<code>command</code>命令则定义了指定监控<code>nginx</code>和<code>redis</code>两个容器。没有command这一行，默认监控升级所有运行中的docker</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 运行一次，更新所有的容器，并清除旧的容器 </span>\n<span class=\"token function\">docker</span> run -d --name watchtower -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --cleanup --run-once<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#只更新nginx和redis</span>\n<span class=\"token function\">docker</span> run -d --name watchtower -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --cleanup --run-once nginx redis<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"使用muximux来管理多个docker入口\"><strong>使用muximux来管理多个docker入口</strong></h3>\n<p>主页面</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819001210.png\" alt=\"muximux\"></p>\n<p>配置页面</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819001131.png\" alt=\"muximux\"></p>\n<h2 id=\"更进阶定制本地域名访问\"><strong>更进阶定制本地域名访问</strong></h2>\n<h3 id=\"nginx-管理域名访问\"><strong>nginx 管理域名访问</strong></h3>\n<ul>\n<li>Docker: <a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/bloodstar/nginx-purge\">bloodstar/nginx-purge</a></li>\n<li>Github： <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry/nginx-purge-docker\">nginx</a></li>\n<li>去掉烦人的端口后缀，实现80,443 端口复用。这个docker 是博主定制功能版。</li>\n<li>配置SSL证书访问，密码等敏感数据从此加密传输。并可以使用http2高级特性。</li>\n<li><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819010407.png\" alt=\"nginx\"></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">version: <span class=\"token string\">'3'</span>\nservices:\n  nginxweb:\n    image: bloodstar/nginx-purge\n    container_name: <span class=\"token string\">\"nginxweb\"</span>\n    hostname: nginxweb\n    ports:\n      - <span class=\"token string\">\"80:80\"</span>\n      - <span class=\"token string\">\"443:443\"</span>\n    restart: always\n    volumes:\n      <span class=\"token comment\"># 映射主机目录</span>\n      - <span class=\"token variable\">${USERDIR}</span>/nginx/conf.d:/etc/nginx/conf.d:ro\n      - <span class=\"token variable\">${USERDIR}</span>/nginxproxy/certs:/etc/nginx/certs:ro\n      - <span class=\"token variable\">${USERDIR}</span>/nginx/nginx.conf:/etc/nginx/nginx.conf:ro<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里推荐博主制作的nginx docker镜像： <a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/bloodstar/nginx-purge\">bloodstar/nginx-purge</a></p>\n<blockquote>\n<p>支持ARM64, ARMV7, AMD64 ，增加 CA 证书，防火墙，brotli, Proxy-cache-purge, htpasswd 支持</p>\n</blockquote>\n<h3 id=\"DNS-域名管理\"><strong>DNS 域名管理</strong></h3>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819003924.png\" alt=\"DNS\"></p>\n<ul>\n<li>\n<p>和nginx 配合使用。 简单的可以直接修改<code>/etc/hosts</code>。</p>\n</li>\n<li>\n<p>DNSCrypt Proxy： 作为DNS前端访问DOH的DNS</p>\n</li>\n<li>\n<p>DNSMasq： 作为DNS后端，连接到DNSCrypt Proxy，并配置本地域名。还可以添加DNS去广告功能，浏览器插件去广告非常消耗CPU和内存，但是在DNS前端去广告，资源消耗低，并一次性解决所有的访问终端（pc，手机，平板）广告问题。</p>\n<blockquote>\n<p>配置一个去广告，本地域名管理工具。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"Xteve-看IPTV\"><strong>Xteve 看IPTV</strong></h2>\n<p>Docker: <a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/dnsforge/xteve\">dnsforge/xteve</a></p>\n<p>结合Emby， jellyfin直接看iptv。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1920210819010804.png\" alt=\"Xteve\"></p>\n<h2 id=\"解码\">解码</h2>\n<p>由于H.265（HEVC，high efficiency Video Coding）专利费用过高，谷歌公司转而支持开源免费的AV1编码格式，因此Chrome浏览器和使用Chromium内核的Edge浏览器不支持H.265（HEVC）硬解码。从caniuse网站（https://caniuse.com/?search=hevc）可知，截至2021年9月16日，仅有macOS和iOS的Safari浏览器支持HEVC硬解码，Windows下所有还在持续升级的浏览器均不支持HEVC硬解码。</p>\n<h3 id=\"Hevc-插件安装\">Hevc 插件安装</h3>\n<p>https://www.free-codecs.com/hevc_video_extension_download.htm</p>\n<p>可以这里下载安装插件</p>\n<p>Chrome 插件 <a target=\"_blank\" rel=\"noopener\" href=\"https://chrome.google.com/webstore/detail/h265-hevc-player/dambgipgbnhmnkdolkljibpcbocimnpd\">H.265 / HEVC player</a></p>\n<p>You can download sample H.265 / HEVC streams (creative commons license) from<br>\nhttp://www.libde265.org/downloads-videos/</p>\n<blockquote>\n<p>视频抖动问题 edge://flags/ 进入，搜索 Media Foundation playback for Windows 10，右边切换成 Enabled，重启浏览器。</p>\n</blockquote>\n<h3 id=\"Win-10-Hevc-解码\">Win 10 Hevc 解码</h3>\n<p>许多 OEM 商已经为你支付过 HEVC 的授权了，你可以下载 “来自设备制造商的 HEVC 视频扩展” 到支持的设备上。点击下面链接安装！</p>\n<p><a href=\"ms-windows-store://pdp/?ProductId=9N4WGH0Z6VHQ\">ms-windows-store://pdp/?ProductId=9N4WGH0Z6VHQ</a></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/0820220408144407.png\" alt=\"来自设备制造商的 HEVC 解码器扩展\"></p>\n<h3 id=\"Safari-安装\">Safari 安装</h3>\n<ol>\n<li>Click <a target=\"_blank\" rel=\"noopener\" href=\"http://appldnld.apple.com/Safari5/041-5487.20120509.INU8B/SafariSetup.exe\">here</a> to download Safari 5.1.7 setup file from Apple. The setup supports both 32-bit and 64-bit Windows 11/10/8/7 systems.</li>\n<li>Run the installer and then follow the on-screen directions to get it installed.</li>\n</ol>\n<p>最新版Safari 没法在Win 10/11上面安装，Apple 停止了开发Windows版本的Safari！</p>\n<blockquote>\n<p>兼容性不好，不建议使用！</p>\n</blockquote>\n<h2 id=\"注意事项\">注意事项</h2>\n<ul>\n<li>\n<p>tmm，jackett，sonarr最好配置代理。否则，刮削，图片墙可能工作不正常。</p>\n</li>\n<li>\n<p>docker最好配置镜像加速，提高安装docker速度</p>\n</li>\n<li>\n<p>一些docker初始化安装，运行、更新时需要访问github，最好配置代理。推荐博主定制Docker <a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/bloodstar/v2fly-privoxy\">bloodstar/v2fly-privoxy</a></p>\n</li>\n</ul>\n<h2 id=\"系列教程-23\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Nas系列</strong> <a href=\"https://blog.17lai.site/categories/nas/atom.xml\"><strong>Nas 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/db7bf49b/\">音视频图书和音乐自动化管理框架图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/e6d40157/\">如何使用tinyMediaManager刮削电影和电视剧，动画，并自动下载字幕</a></li>\n<li><a href=\"https://blog.17lai.site/posts/8f76d9dd/\">Transmission 使用及其配置</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f6b32521/\">Qbittorrent 参数详细设置教程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/bb600b4b/\">PT 工具集，Linux硬链接助手</a></li>\n<li><a href=\"https://blog.17lai.site/posts/10fee780/\">QNAP 修改应用启动顺序</a></li>\n<li><a href=\"https://blog.17lai.site/posts/10fee780/\">qnap硬盘移动位置</a></li>\n<li><a href=\"https://blog.17lai.site/posts/5b1993ac/\">qnap IO 错误消除</a></li>\n</ul>\n<p><strong>Docker系列</strong> <a href=\"https://blog.17lai.site/categories/docker/atom.xml\"><strong>Docker 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/42b6a86d/\">Docker使用简明教程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/1802a8a7/\">为知笔记私有化Docker部署</a></li>\n<li><a href=\"https://blog.17lai.site/posts/593cc323/\">Earthly 一个更加强大的镜像构建工具</a></li>\n<li><a href=\"https://blog.17lai.site/posts/90e60aac/\">使用 Shell 脚本实现一个简单 Docker</a></li>\n<li><a href=\"https://blog.17lai.site/posts/465d2738/\">如何使用Traefik V2 在Ubuntu20.04 上面来做 Dockers</a></li>\n<li><a href=\"https://blog.17lai.site/posts/462f1e5c/\">通过IPV6访问Qnap NAS中Docker的服务</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "emby",
                "sonarr",
                "jeckett",
                "portainer"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/77da2f80/",
            "url": "https://blog.17lai.site/posts/77da2f80/",
            "title": "QNAP 修改应用启动顺序",
            "date_published": "2021-08-31T18:25:00.000Z",
            "content_html": "<ul>\n<li>关于本blog，<strong>图床</strong>一般使用<strong>github</strong>，已经配置了CDN，如果图片还是未显示请自行代理解决</li>\n</ul>\n<p>有时候，你想修改一下安装的应用启动顺序。该怎么做了？</p>\n<p>在无意中，博主发现了这个技巧。配置方法如下：</p>\n<h2 id=\"配置文件路径\">配置文件路径</h2>\n<p><img src=\"https://cimg1.17lai.site/data/2021/09/0120210901233948.png\" alt=\"\"></p>\n<h2 id=\"配置文件内容\">配置文件内容</h2>\n<p><img src=\"https://cimg1.17lai.site/data/2021/09/0120210901234357.png\" alt=\"\"></p>\n<p>RC_Number是qnap配置应用启动顺序，数字越小优先级越高。看着100差不多就是用户程序高优先级上限了。如此，你可以把一些应用调整高优先级启动，例如代理配置v2ray, dns配置DNSCrypt Proxy和DNSMasq，以实现其它应用采用这些服务。把一些应用调整低优先级，如qbittorrent等。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> /etc/config -alh\nlrwxrwxrwx <span class=\"token number\">1</span> admin administrators <span class=\"token number\">21</span> <span class=\"token number\">2021</span>-08-31 <span class=\"token number\">17</span>:20 /etc/config -<span class=\"token operator\">&gt;</span> /mnt/HDA_ROOT/.config/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"qnap使用init-v系统。\">qnap使用init v系统。</h2>\n<p>如果改为systemd 系统启动，可以加快启动速度。一些应用延迟加载技术看起来也没做好。用户这里修改RC_Number 可以手动实现一些延迟加载功能。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">/etc/init.d/QTransmission3.sh start         <span class=\"token comment\">#启动</span>\n/etc/init.d/QTransmission3.sh stop            <span class=\"token comment\">#停止</span>\n/etc/init.d/QTransmission3.sh restart        <span class=\"token comment\">#重启</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"原创首发\">原创首发</h2>\n<p>可以转载，但必须完整转载，并且带上原始地址链接。</p>\n<h2 id=\"系列教程-22\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Nas系列</strong> <a href=\"https://blog.17lai.site/categories/nas/atom.xml\"><strong>Nas 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/db7bf49b/\">音视频图书和音乐自动化管理框架图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/e6d40157/\">如何使用tinyMediaManager刮削电影和电视剧，动画，并自动下载字幕</a></li>\n<li><a href=\"https://blog.17lai.site/posts/8f76d9dd/\">Transmission 使用及其配置</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f6b32521/\">Qbittorrent 参数详细设置教程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/bb600b4b/\">PT 工具集，Linux硬链接助手</a></li>\n<li><a href=\"https://blog.17lai.site/posts/10fee780/\">QNAP 修改应用启动顺序</a></li>\n<li><a href=\"https://blog.17lai.site/posts/10fee780/\">qnap硬盘移动位置</a></li>\n<li><a href=\"https://blog.17lai.site/posts/5b1993ac/\">qnap IO 错误消除</a></li>\n</ul>\n<p><strong>Docker系列</strong> <a href=\"https://blog.17lai.site/categories/docker/atom.xml\"><strong>Docker 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/42b6a86d/\">Docker使用简明教程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/1802a8a7/\">为知笔记私有化Docker部署</a></li>\n<li><a href=\"https://blog.17lai.site/posts/593cc323/\">Earthly 一个更加强大的镜像构建工具</a></li>\n<li><a href=\"https://blog.17lai.site/posts/90e60aac/\">使用 Shell 脚本实现一个简单 Docker</a></li>\n<li><a href=\"https://blog.17lai.site/posts/465d2738/\">如何使用Traefik V2 在Ubuntu20.04 上面来做 Dockers</a></li>\n<li><a href=\"https://blog.17lai.site/posts/462f1e5c/\">通过IPV6访问Qnap NAS中Docker的服务</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "qnap",
                "nas",
                "启动"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/f6b32521/",
            "url": "https://blog.17lai.site/posts/f6b32521/",
            "title": "qBittorrent 参数详细设置教程",
            "date_published": "2021-08-18T10:25:00.000Z",
            "content_html": "<p>全文将以目前的最新版v4.2.1为例，进行参数设置，老版本某些功能不太一致，请知悉。特别鸣谢 原创者：Evine！</p>\n<h2 id=\"行为参数\">行为参数</h2>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1820210818154449.jpeg\" alt=\"qBittorrent参数详细设置教程\"></p>\n<h2 id=\"下载参数\">下载参数</h2>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1820210818154453.jpeg\" alt=\"qBittorrent参数详细设置教程\"></p>\n<h2 id=\"连接参数\">连接参数</h2>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1820210818154528.jpeg\" alt=\"qBittorrent参数详细设置教程\"></p>\n<h2 id=\"速度参数\">速度参数</h2>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1820210818154500.jpeg\" alt=\"qBittorrent参数详细设置教程\"></p>\n<h2 id=\"BT参数\">BT参数</h2>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1820210818154539.jpeg\" alt=\"qBittorrent参数详细设置教程\"></p>\n<h2 id=\"RSS设置\">RSS设置</h2>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1820210818154502.png\" alt=\"qBittorrent参数详细设置教程\"></p>\n<h2 id=\"web参数\">web参数</h2>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1820210818154508.jpeg\" alt=\"qBittorrent参数详细设置教程\"></p>\n<h2 id=\"高级参数\">高级参数</h2>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1820210818154558.jpeg\" alt=\"qBittorrent参数详细设置教程\"></p>\n<h3 id=\"关于磁盘缓存的补充说明：\"><strong>关于磁盘缓存的补充说明：</strong></h3>\n<p>经常有人吐槽qB特别吃内存，个人猜测应该是磁盘缓存设置不正确导致的。磁盘缓存设置过小，磁盘缓存到期间隔过长，先下载的文件块来不及写入硬盘，新的文件块又到了，可能就会导致内存爆掉甚至磁盘I/O错误。个人建议：在进行高速下载时，适当将磁盘缓存调高，磁盘缓存到期间隔调低（下载时间隔越低写入越频繁，自己根据电脑的资源占用情况调整最适合自己的值）。实在不知道怎么调的，就干脆把磁盘缓存设置为-1（自动）好了，还不行，就把磁盘缓存到期间隔再调低一些。举一个例子，比如设置2048MiB磁盘缓存、300s磁盘缓存到期间隔时，当下载速度为50MiB/s的时候，300s的时间总共可以下载15000MiB，早就远远超过2048MiB了，不爆内存、不I/O错误才怪。所以当达到这个下载速度的时候，在磁盘缓存不变的情况下，根据简单的除法（磁盘缓存除以下载速度）可知，磁盘缓存到期间隔就应该设置到40s以下了。</p>\n<p>qB在正常运行后，其占用的内存会比你所设置的磁盘缓存多几百M。所有的参数没有标准答案，一切都得根据你机子的本身属性以及实际的使用场景（比如CPU性能、内存大小、硬盘写入速度、下载速度等）来设置，建议大家多试验。</p>\n<h3 id=\"关于TCP、UTP的补充说明：\"><strong>关于TCP、UTP的补充说明：</strong></h3>\n<p>TCP是Internet上最常用的协议，是一种面向连接的、可靠的、基于字节流的传输层通信协议。TCP的优势在于双向互动机制兼顾数据传输的完整性、可控制性和可靠性，但复杂的校验与控制机制也使其没有UDP传输效率高。</p>\n<p>UDP协议与TCP协议一样用于处理数据包，是一种无连接的协议。UDP的缺点是不提供数据包分组、组装和不能对数据包进行排序的缺点，也就是说，当报文发送之后，是无法得知其是否安全完整到达的。UDP优势在于带宽占用小、传输效率和连接成功率高，有益于内网用户（如通过UDP内网穿透UDP Hole Punching连接），但UDP与TCP协议相比也存在无反向确认机制、无流量和序列控制等弊端。</p>\n<p>uTP(Micro Transport Protocol)是一种正在标准化的开放式BT协议，主要功能是提高宽带使用效率、减少网络问题。在减缓网络延迟和拥堵的同时最大化网络吞吐量、克服多数防火墙和NAT的阻碍，增强网络穿透和传输效率，同时增益流量控制，这对BT用户和ISP都是互利的。uTP虽基于UDP协议但有所不同，uTP通过拥堵控制算法（Ledbat）可限制延时，当延时不严重时可最大限度利用带宽，并能通过uTP提供的信息用于选择TCP连接的传输率，即使在不作限速设置的情况下，也能减少网络拥堵产生，当用户端之间都启用uTP时，可见明显的传输速率提升。内网无法实现端口映射的用户启用uTP，可以改善与网外用户的连接。</p>\n<p>使用uTP进行连接的用户，其标志将包含“P”。</p>\n<h2 id=\"系列教程-21\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Nas系列</strong> <a href=\"https://blog.17lai.site/categories/nas/atom.xml\"><strong>Nas 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/db7bf49b/\">音视频图书和音乐自动化管理框架图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/e6d40157/\">如何使用tinyMediaManager刮削电影和电视剧，动画，并自动下载字幕</a></li>\n<li><a href=\"https://blog.17lai.site/posts/8f76d9dd/\">Transmission 使用及其配置</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f6b32521/\">Qbittorrent 参数详细设置教程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/bb600b4b/\">PT 工具集，Linux硬链接助手</a></li>\n<li><a href=\"https://blog.17lai.site/posts/10fee780/\">QNAP 修改应用启动顺序</a></li>\n<li><a href=\"https://blog.17lai.site/posts/10fee780/\">qnap硬盘移动位置</a></li>\n<li><a href=\"https://blog.17lai.site/posts/5b1993ac/\">qnap IO 错误消除</a></li>\n</ul>\n<p><strong>Docker系列</strong> <a href=\"https://blog.17lai.site/categories/docker/atom.xml\"><strong>Docker 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/42b6a86d/\">Docker使用简明教程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/1802a8a7/\">为知笔记私有化Docker部署</a></li>\n<li><a href=\"https://blog.17lai.site/posts/593cc323/\">Earthly 一个更加强大的镜像构建工具</a></li>\n<li><a href=\"https://blog.17lai.site/posts/90e60aac/\">使用 Shell 脚本实现一个简单 Docker</a></li>\n<li><a href=\"https://blog.17lai.site/posts/465d2738/\">如何使用Traefik V2 在Ubuntu20.04 上面来做 Dockers</a></li>\n<li><a href=\"https://blog.17lai.site/posts/462f1e5c/\">通过IPV6访问Qnap NAS中Docker的服务</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "bt",
                "pt",
                "qnap",
                "nas",
                "qbittorrent"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/5b1993ac/",
            "url": "https://blog.17lai.site/posts/5b1993ac/",
            "title": "qnap IO 错误消除",
            "date_published": "2021-08-18T09:25:00.000Z",
            "content_html": "<h2 id=\"处理步骤\">处理步骤</h2>\n<h2 id=\"备份-2\">备份</h2>\n<p>先备份数据，rsync比HBS3好用多了。</p>\n<h2 id=\"如果没有坏块\">如果没有坏块</h2>\n<p>如果没有坏块，就在下图位置扫描坏块，扫描完，自动清除异常标志</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1820210818152952.png\" alt=\"\"></p>\n<h2 id=\"如果有坏块\">如果有坏块</h2>\n<h3 id=\"坏块修复\">坏块修复</h3>\n<p>如果有坏块，可以使用 “DiskGenius”扫描修复</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1820210818162038.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1820210818162057.png\" alt=\"\"></p>\n<h2 id=\"强制消除异常标志\">强制消除异常标志</h2>\n<blockquote>\n<ol>\n<li>開啟SSH</li>\n<li>登入 console</li>\n<li><code># sed -i '/pd_err_wwn_/d' /mnt/HDA_ROOT/.conf</code></li>\n<li>重啟 NAS.</li>\n</ol>\n</blockquote>\n<h2 id=\"总结：-2\">总结：</h2>\n<p>为了安全和稳定性，有坏块后，备份数据，使用DiskGenius修复坏块，（只能修复逻辑坏块，不能修复物理坏块），然后最好全盘格式化再使用。</p>\n<p>SDD可以使用低级格式化，但会全盘减少一次写寿命。尽量少用。</p>\n<h2 id=\"系列教程-19\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Nas系列</strong> <a href=\"https://blog.17lai.site/categories/nas/atom.xml\"><strong>Nas 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/db7bf49b/\">音视频图书和音乐自动化管理框架图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/e6d40157/\">如何使用tinyMediaManager刮削电影和电视剧，动画，并自动下载字幕</a></li>\n<li><a href=\"https://blog.17lai.site/posts/8f76d9dd/\">Transmission 使用及其配置</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f6b32521/\">Qbittorrent 参数详细设置教程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/bb600b4b/\">PT 工具集，Linux硬链接助手</a></li>\n<li><a href=\"https://blog.17lai.site/posts/10fee780/\">QNAP 修改应用启动顺序</a></li>\n<li><a href=\"https://blog.17lai.site/posts/10fee780/\">qnap硬盘移动位置</a></li>\n<li><a href=\"https://blog.17lai.site/posts/5b1993ac/\">qnap IO 错误消除</a></li>\n</ul>\n<p><strong>Docker系列</strong> <a href=\"https://blog.17lai.site/categories/docker/atom.xml\"><strong>Docker 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/42b6a86d/\">Docker使用简明教程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/1802a8a7/\">为知笔记私有化Docker部署</a></li>\n<li><a href=\"https://blog.17lai.site/posts/593cc323/\">Earthly 一个更加强大的镜像构建工具</a></li>\n<li><a href=\"https://blog.17lai.site/posts/90e60aac/\">使用 Shell 脚本实现一个简单 Docker</a></li>\n<li><a href=\"https://blog.17lai.site/posts/465d2738/\">如何使用Traefik V2 在Ubuntu20.04 上面来做 Dockers</a></li>\n<li><a href=\"https://blog.17lai.site/posts/462f1e5c/\">通过IPV6访问Qnap NAS中Docker的服务</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "qnap",
                "nas",
                "ssd",
                "hdd"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/8f76d9dd/",
            "url": "https://blog.17lai.site/posts/8f76d9dd/",
            "title": "transmission 使用及其配置",
            "date_published": "2021-08-17T17:25:00.000Z",
            "content_html": "<h2 id=\"安装-3\">安装</h2>\n<h3 id=\"qnapclub\"><strong>qnapclub</strong></h3>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1820210818163248.png\" alt=\"\"></p>\n<h3 id=\"docker\"><strong>docker</strong></h3>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/linuxserver/transmission\">docker hub</a></p>\n<blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2.1\"</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">transmission</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> ghcr.io/linuxserver/transmission\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> transmission\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> PUID=1000\n      <span class=\"token punctuation\">-</span> PGID=1000\n      <span class=\"token punctuation\">-</span> TZ=Europe/London\n      <span class=\"token punctuation\">-</span> TRANSMISSION_WEB_HOME=/combustion<span class=\"token punctuation\">-</span>release/ <span class=\"token comment\">#optional</span>\n      <span class=\"token punctuation\">-</span> USER=username <span class=\"token comment\">#optional</span>\n      <span class=\"token punctuation\">-</span> PASS=password <span class=\"token comment\">#optional</span>\n      <span class=\"token punctuation\">-</span> WHITELIST=iplist <span class=\"token comment\">#optional</span>\n      <span class=\"token punctuation\">-</span> HOST_WHITELIST=dnsnane list <span class=\"token comment\">#optional</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> &lt;path to data<span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">:</span>/config\n      <span class=\"token punctuation\">-</span> &lt;path to downloads<span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">:</span>/downloads\n      <span class=\"token punctuation\">-</span> &lt;path to watch folder<span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">:</span>/watch\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 9091<span class=\"token punctuation\">:</span><span class=\"token number\">9091</span>\n      <span class=\"token punctuation\">-</span> 51413<span class=\"token punctuation\">:</span><span class=\"token number\">51413</span>\n      <span class=\"token punctuation\">-</span> 51413<span class=\"token punctuation\">:</span>51413/udp\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> unless<span class=\"token punctuation\">-</span>stopped<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</blockquote>\n<h2 id=\"控制脚本\">控制脚本</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">/etc/init.d/QTransmission.sh start\n/etc/init.d/QTransmission.sh stop<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"Transmission-配置详解\">Transmission 配置详解</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> /share/CACHEDEV1_DATA/.qpkg/QTransmission/etc/settings.json<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token property\">\"alt-speed-up\"</span><span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> # 限速时段上传限速值\n<span class=\"token property\">\"alt-speed-down\"</span><span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> # 限速时段下载限速值\n<span class=\"token property\">\"alt-speed-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"alt-speed-time-begin\"</span><span class=\"token operator\">:</span> <span class=\"token number\">540</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"alt-speed-time-day\"</span><span class=\"token operator\">:</span> <span class=\"token number\">127</span><span class=\"token punctuation\">,</span> # 时段限速日期（星期几），<span class=\"token number\">127</span> 表示每天，更复杂配置参考官网。用 <span class=\"token number\">7</span> 位二进制数表示，然后转换成十进制数，<span class=\"token number\">0000001</span> 表示周日，<span class=\"token number\">1000000</span> 表示周六，<span class=\"token number\">0000010</span> 表示周一，<span class=\"token number\">0000100</span> 表示周二。如果你只要在周末限速，该数应该 <span class=\"token number\">1000001</span>，转换为十进制就是 <span class=\"token number\">65</span>\n<span class=\"token property\">\"alt-speed-time-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> # 启用限速，为 <span class=\"token boolean\">false</span> 时，以上计划配置则不生效，生效时会自动禁用 alt-speed-enabled 配置，二者只能选一个\n<span class=\"token property\">\"alt-speed-time-end\"</span><span class=\"token operator\">:</span> <span class=\"token number\">420</span><span class=\"token punctuation\">,</span> # 限速时段结束时间，这个配置表示的是凌晨零点到开始时间的分钟数，比如 <span class=\"token number\">7</span><span class=\"token operator\">:</span><span class=\"token number\">00</span> 就是 <span class=\"token number\">7</span>*<span class=\"token number\">60</span>=<span class=\"token number\">420</span>。需要注意的是，该时间是用的 GMT 时间，即北京时间 <span class=\"token number\">-8</span> 小时。比如你计划北京时间 <span class=\"token number\">7</span> 点 <span class=\"token number\">30</span> 分开始，这个数字应该是（<span class=\"token number\">7</span><span class=\"token number\">-8</span>+<span class=\"token number\">24</span>）*<span class=\"token number\">60</span>+<span class=\"token number\">30</span>=<span class=\"token number\">1410</span>\n<span class=\"token property\">\"bind-address-ipv4\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.0.0\"</span><span class=\"token punctuation\">,</span> # IPv4 地址绑定，一般不要改动\n<span class=\"token property\">\"bind-address-ipv6\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"::\"</span><span class=\"token punctuation\">,</span> #IPv6 地址绑定，一般不要改动\n<span class=\"token property\">\"blocklist-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> # 启动白名单，默认不启动，需要启动改为 <span class=\"token boolean\">true</span>\n<span class=\"token property\">\"blocklist-updates-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"blocklist-url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://www.example.com/blocklist\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"cache-size-mb\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> #缓存大小，以 MB 为单位，建议设大一些，避免频繁读写硬盘而伤硬盘，建议设为内存大小的 <span class=\"token number\">1</span>/<span class=\"token number\">6</span>～<span class=\"token number\">1</span>/<span class=\"token number\">4</span>\n<span class=\"token property\">\"compact-view\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"dht-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> #关闭 DHT（不通过 tracker 寻找节点）功能，不少 PT 站的要求，但 BT 下载设置为 <span class=\"token boolean\">true</span> 会使得下载更好\n<span class=\"token property\">\"download-dir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/share/Downloads\"</span><span class=\"token punctuation\">,</span> #下载的内容存放的目录\n<span class=\"token property\">\"download-queue-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>  # 下载队列开关\n<span class=\"token property\">\"download-queue-size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> # 下载队列数量\n<span class=\"token property\">\"encryption\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> # 加密。指定节点的加密模式，默认 <span class=\"token number\">1</span>。<span class=\"token number\">0</span> 表示关闭 <span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>= 不加密，<span class=\"token number\">1</span>= 优先加密，<span class=\"token number\">2</span>= 必须加密\n<span class=\"token property\">\"lazy-bitfield-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> # 默认为 <span class=\"token boolean\">true</span>，设置为 <span class=\"token boolean\">true</span> 时可以避免某些 ISP 通过查询完整位段来屏蔽 BT，从而破解部分 ISP 对 BT 的封杀，当然不一定完全有效\n<span class=\"token property\">\"idle-seeding-limit\"</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"idle-seeding-limit-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"incomplete-dir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/share/Downloads\"</span><span class=\"token punctuation\">,</span>  # 临时文件路径\n<span class=\"token property\">\"incomplete-dir-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"inhibit-desktop-hibernation\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"lpd-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> #禁用 LDP（本地节点发现，用于在本地网络寻找节点）<span class=\"token punctuation\">,</span> 不少 PT 站的要求\n<span class=\"token property\">\"main-window-height\"</span><span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"main-window-is-maximized\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"main-window-width\"</span><span class=\"token operator\">:</span> <span class=\"token number\">615</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"main-window-x\"</span><span class=\"token operator\">:</span> <span class=\"token number\">337</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"main-window-y\"</span><span class=\"token operator\">:</span> <span class=\"token number\">211</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"message-level\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"open-dialog-dir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/share/Download\"</span><span class=\"token punctuation\">,</span>  # 网页对话框打开的根目录\n<span class=\"token property\">\"peer-congestion-algorithm\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"peer-limit-global\"</span><span class=\"token operator\">:</span> <span class=\"token number\">240</span><span class=\"token punctuation\">,</span> # 全局连接数\n<span class=\"token property\">\"peer-limit-per-torrent\"</span><span class=\"token operator\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> # 每个种子最多的连接数\n<span class=\"token property\">\"peer-port\"</span><span class=\"token operator\">:</span> <span class=\"token number\">51413</span><span class=\"token punctuation\">,</span> # 传入端口，预设的 port 口\n<span class=\"token property\">\"peer-port-random-high\"</span><span class=\"token operator\">:</span> <span class=\"token number\">65535</span><span class=\"token punctuation\">,</span> # 传入端口随机值范围上限\n<span class=\"token property\">\"peer-port-random-low\"</span><span class=\"token operator\">:</span> <span class=\"token number\">49152</span><span class=\"token punctuation\">,</span> # 传入端口随机值范围下限\n<span class=\"token property\">\"peer-port-random-on-start\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> # 启用随机端口，默认关闭，不建议改为 <span class=\"token boolean\">true</span>\n<span class=\"token property\">\"peer-socket-tos\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"pex-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> # 是否启用用户交换，默认为 <span class=\"token boolean\">true</span>，关于 PEX，有兴趣的朋友可参考 http<span class=\"token operator\">:</span><span class=\"token comment\">//en.wikipedia.org/wiki/Peer_exchange，对于只用 PT 的朋友，可以设为 false, 禁用 PEX（节点交换，用于同已与您相连接的节点交换节点名单）, 不少 PT 站的要求</span>\n<span class=\"token property\">\"port-forwarding-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> # 启用端口转发（uPnP），如果路由支持并且也开启了 uPnP，则路由会自动做端口映射，但是需要注意的是如果内网有几台机器同时使用 transmission，就必须更改 peer-port 值为不一样\n<span class=\"token property\">\"preallocation\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> # 预分配文件磁盘空间，<span class=\"token number\">0</span>= 关闭，<span class=\"token number\">1</span>= 快速，<span class=\"token number\">2</span>= 完全。建议取 <span class=\"token number\">1</span> 开启该功能，防止下载大半了才发现磁盘不够。取 <span class=\"token number\">2</span> 时，可以减少磁盘碎片，但速度较慢。\n<span class=\"token property\">\"prefetch-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"queue-stalled-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"queue-stalled-minutes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"ratio-limit\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> # 分享率限制\n<span class=\"token property\">\"ratio-limit-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> # 启用分享率限制，默认不启用\n<span class=\"token property\">\"rename-partial-files\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> #在未完成的文件名后添加后缀.part<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span>= 禁用\n<span class=\"token property\">\"rpc-authentication-required\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> # 远程控制需要验证，默认为需要\n<span class=\"token property\">\"rpc-bind-address\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.0.0\"</span><span class=\"token punctuation\">,</span> # 远程控制地址绑定，允许 IP 通过 RPC 访问，默认值表示任何地址都可以访问\n<span class=\"token property\">\"rpc-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> # 启用远程控制，默认启用\n<span class=\"token property\">\"rpc-host-whitelist-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> # 是否开启主机白名单\n<span class=\"token property\">\"rpc-host-whitelist\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> # 白名单，如果需要远程访问，最好配置\n<span class=\"token property\">\"rpc-password\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"{cxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaE\"</span><span class=\"token punctuation\">,</span> #web-ui 的密码，可直接修改，重新运行或者 reload 服务的时候密码会自动 HASH 增加安全性\n<span class=\"token property\">\"rpc-port\"</span><span class=\"token operator\">:</span> <span class=\"token number\">9091</span><span class=\"token punctuation\">,</span> # 默认 web-ui 的 port 口，也是远程控制端口，可自行更改\n<span class=\"token property\">\"rpc-url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/transmission/\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"rpc-username\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"transmission\"</span><span class=\"token punctuation\">,</span> #默认登入名称，也是远程控制用户名\n<span class=\"token property\">\"rpc-whitelist\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span> # 远程控制白名单，默认值为所有地址，支持通配符*，如 <span class=\"token number\">192.168</span>.<span class=\"token number\">2</span>.*\n<span class=\"token property\">\"rpc-whitelist-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> # 启用远程控制白名单，如果启用，则仅仅上面列出的地址可以远程连接\n<span class=\"token property\">\"scrape-paused-torrents-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"script-torrent-done-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"script-torrent-done-filename\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/home/\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"seed-queue-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"seed-queue-size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"show-backup-trackers\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"show-extra-peer-details\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"show-filterbar\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"show-notification-area-icon\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"show-options-window\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"show-statusbar\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"show-toolbar\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"show-tracker-scrapes\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"sort-mode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sort-by-age\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"sort-reversed\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"speed-limit-down\"</span><span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> #平时的下载限速\n<span class=\"token property\">\"speed-limit-down-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> #启用平时下载限速\n<span class=\"token property\">\"speed-limit-up\"</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> #平时上传限速\n<span class=\"token property\">\"speed-limit-up-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> #启用平时上传限速\n<span class=\"token property\">\"start-added-torrents\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"statusbar-stats\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"total-ratio\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"torrent-added-notification-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"torrent-complete-notification-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"torrent-complete-sound-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"trash-can-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"trash-original-torrent-files\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"umask\"</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"upload-slots-per-torrent\"</span><span class=\"token operator\">:</span> <span class=\"token number\">14</span>\n<span class=\"token property\">\"utp-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> #启用μTP 协议\n<span class=\"token property\">\"watch-dir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/share/bt\"</span><span class=\"token punctuation\">,</span>  # 监听文件夹目录\n<span class=\"token property\">\"watch-dir-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> # 是否监听文件夹<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"Q：TR提示FILE-NAME-TOO-LONG\">Q：TR提示FILE NAME TOO LONG</h3>\n<p>A：TR最大文件名MAX_PATH ,260个字符<br>\n方法1：改路径和保存路径的文件夹名字，越短越好，在web control种子上面右键，修改种子文件或目录名称。次选方法，不勾选下载文件名过长的文件</p>\n<p>方法2：遇到个名字特长的，一直下载失败，使用软连接进一步缩短路径名长度</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#cd /</span>\n<span class=\"token comment\">#ln -s  /share/CACHEDEV1_DATA/Download/ DL</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>方法3：<br>\n上面两种还是不行，换QBittorrent吧</p>\n<p>不过，最近有好消息，这个bug我去看了下源代码，找到原来有人试图修复过它，但是并没有合并到最新版本。发个post提醒bug没有修复，居然有回复了。这个bug将在3.0版本修复，见<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/transmission/transmission/issues/122\"><strong>下图</strong></a>。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/1820210818164746.png\" alt=\"\"></p>\n<h3 id=\"Q-transmission-如何修改登陆密码\">Q: transmission 如何修改登陆密码</h3>\n<p>A: 第一种方式<br>\nqnap 中，transmission3.0的配置文件路径如下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">/share/CACHEDEV1_DATA/.qpkg/QTransmission3/etc/settings.json\n \n<span class=\"token builtin class-name\">cd</span> /share/CACHEDEV1_DATA/.qpkg/QTransmission3/etc/settings.json\n<span class=\"token function\">vim</span> settings.json<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>找到”rpc-password”:</p>\n<p>后面引号内就是经过加密的密码，不要管他怎么加密的，直接把引号内的内容修改为你的新密码就可以了，比如”rpc-password”:”xxorg.com”</p>\n<p>然后按“ESC”键，输入:wq 保存退出，然后重启tr即可</p>\n<p>第二种方式：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 1、控制台输入，-u后边是用户名，-v后边跟着的是登陆密码</span>\ntransmission-daemon --paused -t -u admin -v <span class=\"token number\">123456</span>\n<span class=\"token comment\"># 将会把生成的密码保存到：~/.config/transmission-daemon/settings.json</span>\n<span class=\"token comment\"># 其实是生成配置文件并保存到当前登陆用户的家目录下</span>\n<span class=\"token comment\"># 2、打开~/.config/transmission-daemon/settings.json并复制加密的密码</span>\n<span class=\"token comment\"># 3、将加密的密码粘贴到/media/AiCard_01/transmission/config/settings.json</span>\n<span class=\"token comment\"># 替换掉内容为：rpc-password 后面的密码</span>\n<span class=\"token comment\"># 4、重启Transmission</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>ps:通过ps定位transmission位置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ps</span> aux <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> trans\n<span class=\"token comment\"># cd /share/CACHEDEV1_DATA/.qpkg/QTransmission3/bin</span>\n<span class=\"token comment\"># ./transmission-daemon --paused -t -u [name] -v [password]</span>\n<span class=\"token comment\"># cd ~/.config/transmission-daemon</span>\n<span class=\"token punctuation\">[</span>~/.config/transmission-daemon<span class=\"token punctuation\">]</span> <span class=\"token comment\"># vi settings.json</span>\n复制生成的密码到前面的配置文件里面。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"Q-为Transmission增加种子目录监控，实现自动下载\">Q: 为Transmission增加种子目录监控，实现自动下载</h3>\n<p>/share/CACHEDEV3_DATA/.qpkg/QTransmission3/etc</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">改/var/packages/transmission/target/var/settings.json 在最后面增加<span class=\"token number\">2</span>行。\n<span class=\"token property\">\"upload-slots-per-torrent\"</span><span class=\"token operator\">:</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span>（原文件最后一行，注意添加个逗号，不添加transmission好像不能启动） \n<span class=\"token property\">\"watch-dir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/XXXXX/XXXXX\"</span><span class=\"token punctuation\">,</span> （修改成自己nas上的同步目录） \n<span class=\"token property\">\"watch-dir-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>（无逗号）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>保存，退出。</p>\n<p>启动Transmission  等待1-2分钟，就好了。</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">    <span class=\"token property\">\"speed-limit-up-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"start-added-torrents\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"trash-original-torrent-files\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"umask\"</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"upload-slots-per-torrent\"</span><span class=\"token operator\">:</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"utp-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch-dir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/share/Download/Seed/complete\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch-dir-enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"Q-Nas-上面-Transmission-如何做种？\">Q: Nas 上面 Transmission 如何做种？</h3>\n<p><strong>A:</strong></p>\n<p>注意，此方法仅适用于开启了ssh的机器<br>\n可以看到可执行文件目录下有这么几个文件，每个人的安装目录都不一样，自行查找，或用<br>\n我的文件位置是在/volume1/@appstore/transmission/bin，用到的命令是 transmission-create</p>\n<p>方法也很简单，写一个范例</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./transmission-create -p -o /volume1/data/Wi\nkiLeaks-Year-Zero-2017-v1.torrent -t https://announce.XXXXXXXXXX.cc/announce.php -s <span class=\"token number\">2048</span> /volume1/da\nta/WikiLeaks-Year-Zero-2017-v1.7z <span class=\"token operator\">&amp;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>参数<br>\n-p 表示这是私用的种子，这个必须要加上<br>\n-o 生成的种子输出位置，不要忘记把名字打上<br>\n-t tracker的地址，我用的家园的做范本，大家自行修改<br>\n-s 每个文件块的大小，单位是KB，我设置的是2M，也就是2048KB<br>\n最后空一格写源文件的位置，也就是文件的存放位置，可以是一个文件或者一整个目录<br>\n最后可以空一行加一个&amp;，这样即使关掉窗口也可以在后台运行<br>\n填完，回车，种子就在制作了</p>\n<p>种子已经躺在这了</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>/opt/QTransmission3/bin<span class=\"token punctuation\">]</span> <span class=\"token comment\"># ./transmission-create -p -o /share/CACHEDEV1_DATA/Download/Seed/海贼王\\ \\(1999\\).torrent -t https://announce.XXXXXXXX.video/announce.php -s 2048 /share/CACHEDEV1_DATA/Download/海贼王\\ \\(1999\\)/ &amp;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"系列教程-20\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Nas系列</strong> <a href=\"https://blog.17lai.site/categories/nas/atom.xml\"><strong>Nas 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/db7bf49b/\">音视频图书和音乐自动化管理框架图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/e6d40157/\">如何使用tinyMediaManager刮削电影和电视剧，动画，并自动下载字幕</a></li>\n<li><a href=\"https://blog.17lai.site/posts/8f76d9dd/\">Transmission 使用及其配置</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f6b32521/\">Qbittorrent 参数详细设置教程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/bb600b4b/\">PT 工具集，Linux硬链接助手</a></li>\n<li><a href=\"https://blog.17lai.site/posts/10fee780/\">QNAP 修改应用启动顺序</a></li>\n<li><a href=\"https://blog.17lai.site/posts/10fee780/\">qnap硬盘移动位置</a></li>\n<li><a href=\"https://blog.17lai.site/posts/5b1993ac/\">qnap IO 错误消除</a></li>\n</ul>\n<p><strong>Docker系列</strong> <a href=\"https://blog.17lai.site/categories/docker/atom.xml\"><strong>Docker 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/42b6a86d/\">Docker使用简明教程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/1802a8a7/\">为知笔记私有化Docker部署</a></li>\n<li><a href=\"https://blog.17lai.site/posts/593cc323/\">Earthly 一个更加强大的镜像构建工具</a></li>\n<li><a href=\"https://blog.17lai.site/posts/90e60aac/\">使用 Shell 脚本实现一个简单 Docker</a></li>\n<li><a href=\"https://blog.17lai.site/posts/465d2738/\">如何使用Traefik V2 在Ubuntu20.04 上面来做 Dockers</a></li>\n<li><a href=\"https://blog.17lai.site/posts/462f1e5c/\">通过IPV6访问Qnap NAS中Docker的服务</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "bt",
                "pt",
                "qnap",
                "nas",
                "transmission"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/10fee780/",
            "url": "https://blog.17lai.site/posts/10fee780/",
            "title": "qnap硬盘移动位置",
            "date_published": "2021-07-25T09:25:00.000Z",
            "content_html": "<p>qnap硬盘移动位置，改变硬盘位</p>\n<h2 id=\"需求：硬盘位4的硬盘移动到硬盘位3\">需求：硬盘位4的硬盘移动到硬盘位3</h2>\n<h2 id=\"步骤1\">步骤1</h2>\n<p>造作步骤： 存储和快照总管app-&gt;存储/快照-&gt;管理-&gt;操作-&gt;安全卸载磁盘区</p>\n<p>如此，硬盘4卸载下来了，如下图</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/07/2520210725213003.png\" alt=\"\"></p>\n<h2 id=\"步骤2\">步骤2</h2>\n<p>再把硬盘4拔下来，插入硬盘位3。等待硬盘被识别到，一般1分钟之内。</p>\n<h2 id=\"步骤3\">步骤3</h2>\n<p>造作步骤： 存储和快照总管app-&gt;磁盘/VJBOD-&gt;点击磁盘3-&gt;还原-&gt;链接并回复存储池</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/07/2520210725213820.png\" alt=\"\"></p>\n<h2 id=\"系列教程-18\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Nas系列</strong> <a href=\"https://blog.17lai.site/categories/nas/atom.xml\"><strong>Nas 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/db7bf49b/\">音视频图书和音乐自动化管理框架图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/e6d40157/\">如何使用tinyMediaManager刮削电影和电视剧，动画，并自动下载字幕</a></li>\n<li><a href=\"https://blog.17lai.site/posts/8f76d9dd/\">Transmission 使用及其配置</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f6b32521/\">Qbittorrent 参数详细设置教程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/bb600b4b/\">PT 工具集，Linux硬链接助手</a></li>\n<li><a href=\"https://blog.17lai.site/posts/10fee780/\">QNAP 修改应用启动顺序</a></li>\n<li><a href=\"https://blog.17lai.site/posts/10fee780/\">qnap硬盘移动位置</a></li>\n<li><a href=\"https://blog.17lai.site/posts/5b1993ac/\">qnap IO 错误消除</a></li>\n</ul>\n<p><strong>Docker系列</strong> <a href=\"https://blog.17lai.site/categories/docker/atom.xml\"><strong>Docker 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/42b6a86d/\">Docker使用简明教程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a></li>\n<li><a href=\"https://blog.17lai.site/posts/1802a8a7/\">为知笔记私有化Docker部署</a></li>\n<li><a href=\"https://blog.17lai.site/posts/593cc323/\">Earthly 一个更加强大的镜像构建工具</a></li>\n<li><a href=\"https://blog.17lai.site/posts/90e60aac/\">使用 Shell 脚本实现一个简单 Docker</a></li>\n<li><a href=\"https://blog.17lai.site/posts/465d2738/\">如何使用Traefik V2 在Ubuntu20.04 上面来做 Dockers</a></li>\n<li><a href=\"https://blog.17lai.site/posts/462f1e5c/\">通过IPV6访问Qnap NAS中Docker的服务</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "qnap",
                "硬盘",
                "nas"
            ]
        }
    ]
}