{
    "version": "https://jsonfeed.org/version/1",
    "title": "夜法之书",
    "description": "~软件驱动世界~",
    "home_page_url": "https://blog.17lai.site",
    "items": [
        {
            "id": "https://blog.17lai.site/posts/ed364362/",
            "url": "https://blog.17lai.site/posts/ed364362/",
            "title": "如何编写Linux驱动？",
            "date_published": "2022-07-28T09:32:45.000Z",
            "content_html": "<blockquote>\n<p>本文介绍了编写驱动必备基础知识，编写驱动的难点之处。并从按键驱动到Sensor驱动简单介绍示范了驱动编写过程。并给出了驱动学习方法！</p>\n</blockquote>\n<span id=\"more\"></span>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/27/20220727180235.webp\" alt=\"\"></p>\n<h2 id=\"驱动学习\">驱动学习</h2>\n<p>•整个内核70%以上是各种驱动代码</p>\n<p>•每一个你日常使用的小功能背后都有复杂的实现！</p>\n<blockquote>\n<p>•Linux 驱动程序设计模式（40%） <strong>char</strong>，block，net，input，pci，usb，<strong>Platform</strong>（bus，device，driver），kset，kobject，proc，sysfs，<strong>ioctl</strong>，mmap，miscdevice, softirq，tasklet，workqueue， console，</p>\n<p>•内核相关知识（30%）：内核目录结构，内存访问，ipc，锁，内核数据结构，不通内核版本api，热拔插netlink，内核线程,中断处理（注册，共享），设备树，</p>\n<p>•硬件相关知识（30%）： 总线，协议（I2C，I2S，SPI，USB，PCI，sensor，bt1120，bt656，LCD），各种CPU、传感器（ADC，sensor，temperature etc）工作原理</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/27/20220727180227.webp\" alt=\"Linux kernel map\"></p>\n<h2 id=\"前置基础知识\">前置基础知识</h2>\n<ul>\n<li>\n<p>模拟电路，数字电路</p>\n</li>\n<li>\n<p>硬件总线协议，各种RFC文档；</p>\n</li>\n<li>\n<p>了解硬件电路设计，能看懂电路图。示波器等工具的使用</p>\n</li>\n<li>\n<p>对C语言了如指掌，各种特殊宏的用法，对内核基本数据结构了解。</p>\n</li>\n<li>\n<p>熟悉C系统编程，应用层编程</p>\n</li>\n<li>\n<p>内核软件子系统，各种软件框架</p>\n</li>\n</ul>\n<blockquote>\n<p>上述知识你都有了一定了解之后，你才能开始尝试去开发驱动了！</p>\n<p>学习曲线非常陡峭，必须一次性踏上台阶，否则后续又得重新攀爬。</p>\n</blockquote>\n<h2 id=\"编写驱动困难之处\">编写驱动困难之处</h2>\n<blockquote>\n<ul>\n<li>\n<p>打怪升级困难。要有硬件项目才能给你升级涨经验！一个公司硬件项目周期极长，可能几年都做不了几个新硬件项目</p>\n</li>\n<li>\n<p>新手与熟手完成同样任务时间差异极大！强者越强，你有经验，有难度的活都给你，你没经验，练手的机会都不会给你</p>\n</li>\n<li>\n<p>一切都是以懵懂中开始的。内核代码量太大，你不可能都熟悉之后再开始动手修改。内核版本之间接口一直变动，没有稳定的软件方法。接口总线RFC文档太长，一般至少几千页的英文文档，你不可能都看完才开始动手。硬件设计可能有漏洞，不是官方设计出错，而是现实情况是当初设计RFC标准的人就没有考虑到这种异常情况</p>\n</li>\n<li>\n<p>不同总线接口调试方法和工具差异极大，和医院不同科室使用不同工具差不多，你会不会某种工具，可能使你的效率差异几十倍</p>\n</li>\n<li>\n<p>软件开发，你有一台电脑就足够了。硬件驱动开发，必须有对应的硬件开发板，调试工具Jtag，PC端调试工具一整套才能开始工作</p>\n</li>\n</ul>\n</blockquote>\n<p>写驱动好比挖隧道</p>\n<ul>\n<li>不知道隧道下面什么地质情况，什么岩层结构，是否好施工</li>\n<li>是否有地下水，多大的地下水没法确定</li>\n<li>是否能完工没法确定</li>\n<li>完工时间多久没法确定</li>\n<li>在你完工之前，你不知道还需要多长时间才能完工，是否能完工都不清楚</li>\n<li>等等</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/29/20220729003709.webp\" alt=\"\"></p>\n<p>写驱动，就是给你一个垃圾场，要你组装出来一个能走动的钟表！</p>\n<ul>\n<li>不知道是否缺少零件，你要对整个软硬件构架了如指掌，比硬件更熟悉硬件</li>\n<li>零件是否损坏，有可能多个零件，这个损坏，哪个没有损坏，你换一个同样的零件，说不定可行，也可能不可行</li>\n<li>零件是否符合设计规范性能，有可能这个设计错误，根本就是不可能成功的</li>\n<li>这个零件的说明书和零件是否匹配，给错了没有？外行连给到手的资料判断是否正确资料的能力都没有</li>\n<li>零件是否完好，是否工作正常</li>\n<li>在你组装好，能走动之前，你不知道能否组装好手表</li>\n<li>组成的钟表走时快慢是否正常，能够走动起来，说明零件大抵不差了，是驱动飙血决定性进展</li>\n<li>钟表能走动了，后续就是走时准确的调整。性能优化，续航优化，软件框架优化，内存优化，稳定性优化，电磁兼容等等</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/29/20220729003709-1.webp\" alt=\"\"></p>\n<p>从一堆垃圾零件，组装出来一个能走的钟表！从上图到下图的过程！</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/29/20220729003709-2.webp\" alt=\"\"></p>\n<h3 id=\"实现出来\">实现出来</h3>\n<p>组装好，把驱动跑起来是第一步</p>\n<h3 id=\"性能优化\">性能优化</h3>\n<p>对于访问外设emmc，不同时序参数访问性能差距很大。对跑分影响很大！</p>\n<h3 id=\"续航优化\">续航优化</h3>\n<p>不用外设时，可以关闭对应外设电源，或者根据负载动态调节</p>\n<h3 id=\"内存优化\">内存优化</h3>\n<p>内存占用，Zero Copy，指针传递</p>\n<h3 id=\"稳定性优化\">稳定性优化</h3>\n<p>稳定性，眼图，高速性能</p>\n<h3 id=\"电磁兼容\">电磁兼容</h3>\n<p>电磁兼容测试，各种标准</p>\n<blockquote>\n<p>驱动开发深入下去，是一座又一座高山需要攀爬，但基本的驱动开发还是不难的。</p>\n</blockquote>\n<h2 id=\"驱动案例\">驱动案例</h2>\n<blockquote>\n<p>每一个外设都有复杂的物理，材料，结构，光学，工艺，版本等等各种复杂因素需要研究，考虑。当然不是每个外设都这么复杂，复杂的摄像头子系统涉及的知识技术几年就研究不完！</p>\n<p>每一款芯片构架差异都很大，会有不同的内核软件构架，德州仪器TI一份完整的芯片手册就有3000多页，至少看完前四章（几百页英文文档）才能说对芯片有基本了解。</p>\n</blockquote>\n<h3 id=\"简单的按键\">简单的按键</h3>\n<blockquote>\n<p>按键硬件设计方法常用的就有3、4种。每种硬件设计，内核就要好几种软件框架可以实现它。</p>\n<p>学习驱动可以从它开始。万里长征第一步，后面慢慢学习I2C，SPI, NAND等外设驱动。</p>\n</blockquote>\n<h3 id=\"摄像头驱动介绍\">摄像头驱动介绍</h3>\n<blockquote>\n<p>可以说是整个手机最复杂的外设驱动！研究两年只能说刚入门。</p>\n<p>3A算法是核心： AWB 启动白平衡，AE自动曝光，AF自动对焦</p>\n<p>理论上就没有完善的解决方案，只有近似解决方案。技术理论发展很快，经常有新技术和方法出来。</p>\n<p>感觉这个很复杂？很正常，整套软件系统自己搞定就需要几十人的团队，一般也就是需要修改整套系统种的某一部分。Sensor驱动，ISP tunning等。</p>\n</blockquote>\n<p>下面简单图解ISP驱动相关知识</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/29/20220729003709-3.webp\" alt=\"图像采集系统\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/29/20220729003709-4.webp\" alt=\"定焦镜头结构\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/29/20220729003709-5.webp\" alt=\"人眼三色光响应\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/29/20220729003709-6.webp\" alt=\"Sensor RGB分量敏感曲线\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/29/20220729003709-7.webp\" alt=\"某芯片ISP构架\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/29/20220729003709-8.webp\" alt=\"ISP构架流程\"></p>\n<h3 id=\"涉及到Sensor专有知识点有\">涉及到Sensor专有知识点有</h3>\n<ul>\n<li>黑电平与线性化</li>\n<li>Green Imbalance</li>\n<li>坏点消除</li>\n<li>Vignetting 与 Color shading</li>\n<li>SNR 与 Raw Denoise</li>\n<li>Dynamic Range 与 Tone Mapping</li>\n<li>MTF 与 Demosaic</li>\n<li>色彩空间与色彩重建</li>\n<li>Color Correction Matrix 与 3D LUT</li>\n<li>Gamma与对比度增强</li>\n<li>Sharpening</li>\n<li>Color Space Conversion</li>\n<li>空域降噪</li>\n<li>时域降噪</li>\n<li>Color Aberrance Corrention and Depurple</li>\n<li>闪光灯</li>\n<li>HDR</li>\n<li>Exif 与 DNG</li>\n<li>图像防抖</li>\n<li>编解码知识 H264 H265等</li>\n</ul>\n<blockquote>\n<p>Sensor子系统涉及到的知识大概有如上，个人做过的最复杂的子系统就这个了。</p>\n<p>会写简单驱动，到会写sensor驱动，到会写ISP系统，中间都隔了几年时间差距。</p>\n</blockquote>\n<h2 id=\"驱动的技术级别\">驱动的技术级别</h2>\n<p>要做好驱动，要熟悉硬件，总线协议，要会怀疑每一处地方，其它每个人给的信息都可能是错误的，如何定位这个错误就是驱动的工作。成功的路径只有一个，而失败的路径千千万万,驱动的的工作就是找到这条成功的路。</p>\n<h3 id=\"必备：入门水平\">必备：入门水平</h3>\n<p>必备：入门水平，能在别人指导下完成一些简单驱动开发。在一些深入，系统学习后进入下一阶段。</p>\n<ul>\n<li>\n<p>基本的数电模电基础。</p>\n</li>\n<li>\n<p>熟悉一些常用开发工具。</p>\n</li>\n<li>\n<p>熟悉linux 内核基本驱动框架。懂得基本内核原理。</p>\n</li>\n<li>\n<p>独立实现过char字符设备。</p>\n</li>\n<li>\n<p>调试过一些常见总线接口设备。比如常见的I2C，SPI设备。</p>\n</li>\n</ul>\n<h3 id=\"中等水平\">中等水平</h3>\n<p>中等水平：能够按照指示完成任务，需要大量的时间和大量产品开发慢慢积累经验，完成本阶段进阶。</p>\n<p>熟练使用各种开发工具。</p>\n<p>对linux驱动绝大部分常用框架都有研究。</p>\n<p>能够进行ip core外围器件级别的移植。</p>\n<p>熟悉内核锁的使用，了解中断上下文。</p>\n<p>能够分析定位解决时序问题。</p>\n<p>用gpio模拟实现过I2C，SPI等总线驱动。</p>\n<p>对oops定位分析，驱动调试熟悉。</p>\n<p>对proc，sys，debugfs熟悉或者做过。</p>\n<p>能够在现有驱动基础上修改，阅读datasheet对接新硬件。</p>\n<p>在一些行业应用领域能够在fae帮助下完成外围设备驱动。</p>\n<p>了解arm硬件构架，懂得基本arm汇编指令。基本c程序优化。</p>\n<p>懂得基本pcb升级，打板贴片流程。</p>\n<p>能够解决大部分硬件异常问题。</p>\n<h3 id=\"高手进阶\">高手进阶</h3>\n<p>高手进阶：能够独当一面，带领团队。</p>\n<p>工具什么的无所谓，有自己一套最高效的配置工具。</p>\n<p>能够进行ip core级别的移植。</p>\n<p>熟悉并懂得使用各种内核锁，能用内核线程实现一些复杂需求，中断上下文实现都有做过。</p>\n<p>对应用层构架各种技术方法也都非常熟悉。</p>\n<p>知道单核、多核同构、异构构架的内核、驱动、应用层设计差异及处理方法，优化方法。</p>\n<p>熟悉arm构架，arm指令集。懂得怎么根据硬件构架，芯片指令集优化程序。</p>\n<p>知道怎么使用汇编，cache优化。知道cache一致性原理及其实现。</p>\n<p>深入研究过linux内核实现机制。</p>\n<p>熟悉编译，汇编，链接原理。能够定位一些复杂问题，知道怎么通过编译器，链接器实现一些非标准的功能。</p>\n<p>独立实现过绝大部分外围驱动。</p>\n<p>能够独立从头开始实现一些复杂框架驱动。例如网络设备，视频设备等。</p>\n<p>在一些具体应用业务上研究的非常深入，达到行业一流水平。</p>\n<p>深入研究过绝大部分总线接口。比如音视频接口，编解码，usb，网络等业务。</p>\n<p>画过pcb，或者至少了解pcb设计，绘制，打板过程中的各种问题。</p>\n<p>能够熟练协助硬件定位解决各种问题。</p>\n<h3 id=\"超一流高手进阶\">超一流高手进阶</h3>\n<p>超一流高手进阶：技术方面基本没有什么可以难倒你的了。</p>\n<p>自己去实现基本的uboot，内核。</p>\n<p>能够自己设计实现全新的内核框架。</p>\n<p>开始一些具体应用的结构，物理，数学，光学等方面深入研究。</p>\n<p>一些问题能否解决，怎么解决，更多的从数学角度分析。</p>\n<p>参与主线linux kernel开发。</p>\n<p>对hdl，Verilog深入了解，自己设计芯片ip core。</p>\n<blockquote>\n<p>以上都是个人见解，仅供参考！</p>\n</blockquote>\n<h2 id=\"参考-4\">参考</h2>\n<h3 id=\"相关书籍-2\">相关书籍</h3>\n<h4 id=\"Linux内核完全注释-2\">Linux内核完全注释</h4>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/1231236\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s8955528.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s8955528.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>Linux内核完全注释</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>赵炯</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2005-8</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>8.5</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h4 id=\"Linux设备驱动程序\">Linux设备驱动程序</h4>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/1723151\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s27318527.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s27318527.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">\n        我读过这本书\n      </div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>Linux设备驱动程序</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>科波特</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2006-1-1</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>8.7</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h4 id=\"Linux设备驱动开发详解\">Linux设备驱动开发详解</h4>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/2984156\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s2961178.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s2961178.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>Linux设备驱动开发详解</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>宋宝华</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2008-2</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>8.2</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<blockquote>\n<p>上面两本是介绍Linux kernel软件驱动框架的</p>\n</blockquote>\n<h4 id=\"Link-and-loader\">Link and loader</h4>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/1436811\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s29890612.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s29890612.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>LinkersandLoaders</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>JohnR.Levine</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>October1999</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>8.9</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h4 id=\"Linux内核源代码情景分析（上册）\">Linux内核源代码情景分析（上册）</h4>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/1231584\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s5917265.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s5917265.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>Linux内核源代码情景分析（上册）</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>毛德操</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2001-9</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>8.6</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "linux",
                "driver",
                "驱动",
                "sensor"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/ffcce55d/",
            "url": "https://blog.17lai.site/posts/ffcce55d/",
            "title": "如何实现自己的操作系统",
            "date_published": "2022-07-27T06:30:31.000Z",
            "content_html": "<blockquote>\n<p>作为一个程序员，你肯定设想过创造属于自己的操作系统，这其中涉及非常多的知识。本文大概介绍了涉及的知识点，并给出了相关书籍和参考源代码仓库！</p>\n</blockquote>\n<span id=\"more\"></span>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/27/20220727155258.webp\" alt=\"\"></p>\n<h2 id=\"OS的层级模型\">OS的层级模型</h2>\n<table>\n<thead>\n<tr>\n<th>层级</th>\n<th>涉及知识</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>材料，工艺</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>电路设计</td>\n<td>EDA, VHDL, Verilog</td>\n<td></td>\n</tr>\n<tr>\n<td>硬件</td>\n<td>CPU,内存，硬盘，显示器等</td>\n<td>串口，网口，bt1120等协议，电磁兼容。总线协议</td>\n</tr>\n<tr>\n<td>CPU</td>\n<td>X86, ARM, RISC, DSP,</td>\n<td>指令集，体系结构。专用加速核心 H264等</td>\n</tr>\n<tr>\n<td>汇编</td>\n<td>intel, AT&amp;T</td>\n<td>不同的体系结构和语法</td>\n</tr>\n<tr>\n<td>链接器</td>\n<td>ld</td>\n<td>uboot,kernel链接过程</td>\n</tr>\n<tr>\n<td>编译器</td>\n<td>gcc, golang</td>\n<td>ld,编译器，makefile, gdb</td>\n</tr>\n<tr>\n<td>OS</td>\n<td>进程，内存，文件，IO等</td>\n<td></td>\n</tr>\n<tr>\n<td>标准库</td>\n<td>open,close,read,fork等</td>\n<td>posix接口，glibc, QT，MFC，TF, Caffe等</td>\n</tr>\n<tr>\n<td>实用程序</td>\n<td>shell,编辑器，浏览器</td>\n<td>软件协议，OSI网络模型</td>\n</tr>\n<tr>\n<td>用户</td>\n<td>交互设计</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/27/20220727160841.webp\" alt=\"computer architecture\"></p>\n<h2 id=\"相关书籍\">相关书籍</h2>\n<h3 id=\"30天自制操作系统\">30天自制操作系统</h3>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/11530329\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s11138117.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s11138117.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">\n        我最近在读这本书\n      </div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>30天自制操作系统</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>[日]川合秀实</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2012-8</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>8.3</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h3 id=\"自制编译器\">自制编译器</h3>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/26806041\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s28768045.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s28768045.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>自制编译器</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>[日]青木峰郎</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2016-6</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>7.9</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h3 id=\"自制搜索引擎\">自制搜索引擎</h3>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/26681675\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s28357851.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s28357851.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>自制搜索引擎</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>[日]山田浩之</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2016-1</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>7.8</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h3 id=\"自己动手实现Lua\">自己动手实现Lua</h3>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/30348061\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s29891318.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s29891318.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>自己动手实现Lua</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>张秀宏</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2018-1-1</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>9.1</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h3 id=\"两周自制脚本语言\">两周自制脚本语言</h3>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/25908672\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s27306068.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s27306068.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>两周自制脚本语言</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>[日]千叶滋</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2014-6</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>8.5</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h3 id=\"自制编程语言\">自制编程语言</h3>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/25735333\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img3.doubanio.com/view/subject/s/public/s27065250.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img3.doubanio.com/view/subject/s/public/s27065250.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>自制编程语言</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>［日］前桥和弥</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2013-11</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>8.1</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h3 id=\"CPU自制入门\">CPU自制入门</h3>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/25780703\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s27160217.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s27160217.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>CPU自制入门</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>[日]水头一寿</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2014-1</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>7.8</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h3 id=\"link-and-loader\">link and loader</h3>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/1436811\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s29890612.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s29890612.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>LinkersandLoaders</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>JohnR.Levine</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>October1999</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>8.9</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h3 id=\"Orange-S-一个操作系统的实现\">Orange'S:一个操作系统的实现</h3>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/3735649\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s3788445.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s3788445.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">\n        我最近在读这本书\n      </div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>Orange'S:一个操作系统的实现</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>于渊</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2009-6</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>8.8</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h3 id=\"Linux内核完全注释\">Linux内核完全注释</h3>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/1231236\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s8955528.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s8955528.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>Linux内核完全注释</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>赵炯</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2005-8</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>8.5</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<blockquote>\n<p>没看过这本书，可以说内核没入门。</p>\n<p>作为一个合格的计算机专业学生，半年搞懂OS并实现一个，就是个大作业水平！</p>\n</blockquote>\n<h2 id=\"相关仓库\">相关仓库</h2>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"appotry\" data-repo=\"write-a-C-interpreter\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"appotry\" data-repo=\"flash-linux0.11-talk\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"appotry\" data-repo=\"linux-0.11-lab\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"appotry\" data-repo=\"linux-lab\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"17lai\" data-repo=\"linux_kernel_wiki\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<blockquote>\n<ul>\n<li>相关书籍和源代码仓库收集中！</li>\n<li>有什么好的仓库可以留言建议！</li>\n</ul>\n</blockquote>\n<h2 id=\"参考-3\">参考</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.cnblogs.com/cxuanBlog/p/13789900.html\">全方位剖析 Linux 操作系统</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.cnblogs.com/cxuanBlog/p/12607608.html\">程序员必知的 89 个操作系统核心概念</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F\">Wiki 操作系统</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.cctalk.com/m/group/88948325\">Linux Lab 公开课</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://kernel.org/\">Linux kernel</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "os",
                "自制"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/32570315/",
            "url": "https://blog.17lai.site/posts/32570315/",
            "title": "手把手教你构建 C 语言编译器",
            "date_published": "2022-07-27T03:34:11.000Z",
            "content_html": "<blockquote>\n<p>“手把手教你构建 C 语言编译器” 这一系列教程将带你从头编写一个 C 语言的编译器。希望通过这个系列，我们能对编译器的构建有一定的了解，同时，我们也将构建出一个能用的 C 语言编译器，尽管有许多语法并不支持。</p>\n<p>手把手教你构建 C 语言编译器系列共有10个部分：</p>\n</blockquote>\n<span id=\"more\"></span>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/27/20220727122146.webp\" alt=\"\"></p>\n<h2 id=\"前言-3\">前言</h2>\n<blockquote>\n<p>在开始进入正题之前，本篇是一些闲聊，谈谈这个系列的初衷。如果你急切地想进入正篇，请跳过本章。</p>\n</blockquote>\n<h3 id=\"为什么要学编译原理\">为什么要学编译原理</h3>\n<p>如果要我说计算机专业最重要的三门课，我会说是《数据结构》、《算法》和《编译原理》。在我看来，能不能理解“递归”像是程序员的第一道门槛，而会不会写编译器则是第二道。</p>\n<p>（当然，并不是说是没写过编译器就不是好程序员，只能说它是一个相当大的挑战吧）</p>\n<p>以前人们会说，学习了编译原理，你就能写出更加高效的代码，但随着计算机性能的提升，代码是否高效显得就不那么重要了。那么为什么要学习编译原理呢？</p>\n<p>原因只有一个：装B。</p>\n<p>好吧，也许现在还想学习编译原理的人只可能是因为兴趣了。一方面想了解它的工作原理；另一方面希望挑战一下自己，看看自己能走多远。</p>\n<h3 id=\"理论很复杂，实现也很复杂？\">理论很复杂，实现也很复杂？</h3>\n<p>我对编译器一直心存敬佩。所以当学校开《编译原理》的课程后，我是抱着满腔热情去上课的，但是两节课后我就放弃了。原因是太复杂了，听不懂。</p>\n<p>一般编译原理的课程会说一些：</p>\n<ol>\n<li>如何表示语法（BNF什么的）</li>\n<li>词法分析，用什么有穷自动机和无穷自动机</li>\n<li>语法分析，递归下降法，什么 <code>LL(k)</code>，LALR 分析。</li>\n<li>中间代码的表示</li>\n<li>代码的生成</li>\n<li>代码优化</li>\n</ol>\n<p>我相信绝大多数（98％）的学生顶多学到语法分析就结束了。并且最重要的是，学了这么多也没用！依旧帮助不了我们学习编译器！这其中最主要的原因是《编译原理》试图教会我们的是如何构造“编译器生成器”，即构造一个工具，根据文法来生成编译器（如 lex/yacc）等等。</p>\n<p>这些理论试图教会我们如何用通用的方法来自动解决问题，它们有很强的实际意义，只是对于一般的学生或程序员来说，它们过于强大，内容过于复杂。如果你尝试阅读 lex/yacc （或 flex/bison）的代码，就会发现太可怕了。</p>\n<p>然而如果你能跟我一样，真正来实现一个简单的编译器，那么你会发现，比起可怕的《编译原理》，这点复杂度还是不算什么的（因为好多理论根本用不上）。</p>\n<h3 id=\"项目的初衷\">项目的初衷</h3>\n<p>有一次在 Github 上看到了一个项目（当时很火的），名叫 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/rswier/c4\">c4</a>，号称用 4 个函数来实现了一个小的 C 语言编译器。它最让我震惊的是能够自举，即能自己编译自己。并且它用很少的代码就完成了一个功能相当完善的 C 语言编译器。</p>\n<p>一般的编译器相关的教程要么就十分简单（如实现四则运算），要么就是借助了自动生成的工具（如 flex/bison）。而 c4 的代码完全是手工实现的，不用外部工具。可惜的是它的代码初衷是代码最小化，所以写得很乱，很难懂。所以本项目的主要目的：</p>\n<ol>\n<li>实现一个功能完善的 C 语言编译器</li>\n<li>通过教程来说明这个过程。</li>\n</ol>\n<p>c4 大致500+行。重写的代码历时一周，总共代码加注释1400行。项目地址: <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/lotabout/write-a-C-interpreter\">Write a C Interpreter</a>。</p>\n<p>声明：本项目中的代码逻辑绝大多数取自 c4 ，但确为自己重写。</p>\n<h3 id=\"做好心理准备\">做好心理准备</h3>\n<p>在写编译器的时候会遇到两个主要问题：</p>\n<ol>\n<li>繁琐，会有许多相似的代码，写起来很无聊。</li>\n<li>难以调试，一方面没有很好的测试用例，另一方面需要对照生成的代码来调试（遇到的时候就知道了）。</li>\n</ol>\n<p>所以我希望你有足够的耐心和时间来学习，相信当你真正完成的时候会像我一样，十分有成就感。</p>\n<p>PS. 第一篇完全没有正题相关的内容也是希望你能有所心理准备再开始学习。</p>\n<h3 id=\"参考资料-2\">参考资料</h3>\n<p>最后想介绍几个资料：</p>\n<ol>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"http://compilers.iecc.com/crenshaw/\">Let’s Build a Compiler</a> 很好的初学者教程，英文的。</li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"http://www.hwaci.com/sw/lemon/\">Lemon Parser Generator</a>，一个语法分析器生成器，对照《编译原理》观看效果更佳。</li>\n</ol>\n<h2 id=\"设计\">设计</h2>\n<blockquote>\n<p>从整体上讲解如何设计我们的 C 语言编译器。</p>\n</blockquote>\n<p>首先要说明的是，虽然标题是编译器，但实际上我们构建的是 C 语言的解释器，这意味着我们可以像运行脚本一样去运行 C 语言的源代码文件。这么做的理由有两点：</p>\n<ol>\n<li>解释器与编译器仅在代码生成阶段有区别，而其它方面如词法分析、语法分析是一样的。</li>\n<li>解释器需要我们实现自己的虚拟机与指令集，而这部分能帮助我们了解计算机的工作原理。</li>\n</ol>\n<h3 id=\"编译器的构建流程\">编译器的构建流程</h3>\n<p>一般而言，编译器的编写分为 3 个步骤：</p>\n<ol>\n<li>词法分析器，用于将字符串转化成内部的表示结构。</li>\n<li>语法分析器，将词法分析得到的标记流（token）生成一棵语法树。</li>\n<li>目标代码的生成，将语法树转化成目标代码。</li>\n</ol>\n<p>已经有许多工具能帮助我们处理阶段1和2，如 flex 用于词法分析，bison 用于语法分析。只是它们的功能都过于强大，屏蔽了许多实现上的细节，对于学习构建编译器帮助不大。所以我们要完全手写这些功能。</p>\n<p>所以我们会依照以下步骤来构建我们的编译器：</p>\n<ol>\n<li>构建我们自己的虚拟机以及指令集。这后生成的目标代码便是我们的指令集。</li>\n<li>构建我们的词法分析器</li>\n<li>构建语法分析器</li>\n</ol>\n<h3 id=\"编译器框架\">编译器框架</h3>\n<p>我们的编译器主要包括 4 个函数：</p>\n<ol>\n<li><code>next()</code> 用于词法分析，获取下一个标记，它将自动忽略空白字符。</li>\n<li><code>program()</code> 语法分析的入口，分析整个 C 语言程序。</li>\n<li><code>expression(level)</code> 用于解析一个表达式。</li>\n<li><code>eval()</code> 虚拟机的入口，用于解释目标代码。</li>\n</ol>\n<p>这里有一个单独用于解析“表达式”的函数 <code>expression</code> 是因为表达式在语法分析中相对独立并且比较复杂，所以我们将它单独作为一个模块（函数）。下面是相应的源代码：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;memory.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h&gt;</span></span>\n\n<span class=\"token keyword\">int</span> token<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// current token</span>\n<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>src<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>old_src<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// pointer to source code string;</span>\n<span class=\"token keyword\">int</span> poolsize<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// default size of text/data/stack</span>\n<span class=\"token keyword\">int</span> line<span class=\"token punctuation\">;</span>             <span class=\"token comment\">// line number</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    token <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>src<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> level<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// do nothing</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">program</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// get next token</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token is: %c\\n\"</span><span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// do nothing yet</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> fd<span class=\"token punctuation\">;</span>\n\n    argc<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n    argv<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n    poolsize <span class=\"token operator\">=</span> <span class=\"token number\">256</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// arbitrary size</span>\n    line <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fd <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"could not open(%s)\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>src <span class=\"token operator\">=</span> old_src <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>poolsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"could not malloc(%d) for source area\\n\"</span><span class=\"token punctuation\">,</span> poolsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// read the source file</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">,</span> poolsize<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"read() returned %d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    src<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// add EOF character</span>\n    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">program</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上面的代码看上去挺复杂，但其实内容不多。它的流程为：读取一个文件（内容为 C 语言代码），逐个读取文件中的字符，并输出。这里需要的是注意每个函数的作用，后面的文章中，我们将逐个填充每个函数的功能，最终构建起我们的编译器。</p>\n<p>本节的代码可以在 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/lotabout/write-a-C-interpreter/tree/step-0\">Github</a> 上下载，也可以直接 clone</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone -b step-0 https://github.com/lotabout/write-a-C-interpreter<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这样我们就有了一个最简单的编译器：什么都不干的编译器，下一章中，我们将实现其中的<code>eval</code>函数，即我们自己的虚拟机。</p>\n<h2 id=\"虚拟机\">虚拟机</h2>\n<blockquote>\n<p>本章我们要构建一台虚拟的电脑，设计我们自己的指令集，运行我们的指令集，说得通俗一点就是自己实现一套汇编语言。它们将作为我们的编译器最终输出的目标代码。</p>\n</blockquote>\n<h3 id=\"计算机的内部工作原理\">计算机的内部工作原理</h3>\n<p>计算机中有三个基本部件需要我们关注：CPU、寄存器及内存。代码（汇编指令）以二进制的形式保存在内存中；CPU 从中一条条地加载指令执行；程序运行的状态保存在寄存器中。</p>\n<h4 id=\"内存\">内存</h4>\n<p>内存用于存储数据，这里的数据可以是代码，也可以是其它的数据。现代操作系统在操作内存时，并不是直接处理”物理内存“，而是操作”虚拟内存“。虚拟内存可以理解为一种映射，它的作用是屏蔽了物理的细节。例如 32 位的机器中，我们可以使用的内存地址为 <code>2^32 = 4G</code>，而电脑上的实际内存可能只有 <code>256 M</code>。操作系统将我们使用的虚拟地址映射到了到实际的内存上。</p>\n<p>当然，我们这里并不需要了解太多，但需要了解的是：进程的内存会被分成几个段：</p>\n<ol>\n<li>代码段（text）用于存放代码（指令）。</li>\n<li>数据段（data）用于存放初始化了的数据，如<code>int i = 10;</code>，就需要存放到数据段中。</li>\n<li>未初始化数据段（bss）用于存放未初始化的数据，如 <code>int i[1000];</code>，因为不关心其中的真正数值，所以单独存放可以节省空间，减少程序的体积。</li>\n<li>栈（stack）用于处理函数调用相关的数据，如调用帧（calling frame）或是函数的局部变量等。</li>\n<li>堆（heap）用于为程序动态分配内存。</li>\n</ol>\n<p>它们在内存中的位置类似于下图：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">+------------------+\n<span class=\"token operator\">|</span>    stack   <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>      high address\n<span class=\"token operator\">|</span>    <span class=\"token punctuation\">..</span>.     <span class=\"token function\">v</span>     <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>                  <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>                  <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>                  <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>                  <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>    <span class=\"token punctuation\">..</span>.     ^     <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>    heap    <span class=\"token operator\">|</span>     <span class=\"token operator\">|</span>\n+------------------+\n<span class=\"token operator\">|</span> bss  segment     <span class=\"token operator\">|</span>\n+------------------+\n<span class=\"token operator\">|</span> data segment     <span class=\"token operator\">|</span>\n+------------------+\n<span class=\"token operator\">|</span> text segment     <span class=\"token operator\">|</span>      low address\n+------------------+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我们的虚拟机并不打算模拟完整的计算机，因此简单起见，我们只关心三个内容：代码段、数据段以及栈。其中的数据段我们只用来存放字符串，因为我们的编译器并不支持初始化变量，因此我们也不需要未初始化数据段。</p>\n<p>当用户的程序需要分配内存时，理论上我们的虚拟机需要维护一个堆用于内存分配，但实际实现上较为复杂且与编译无关，故我们引入一个指令<code>MSET</code>，使我们能直接使用编译器（解释器）中的内存。</p>\n<p>综上，我们需要首先在全局添加如下代码：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>text<span class=\"token punctuation\">,</span>            <span class=\"token comment\">// text segment</span>\n    <span class=\"token operator\">*</span>old_text<span class=\"token punctuation\">,</span>        <span class=\"token comment\">// for dump text segment</span>\n    <span class=\"token operator\">*</span>stack<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// stack</span>\n<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>data<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// data segment</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>注意这里的类型，虽然是<code>int</code>型，但理解起来应该作为无符号的整型，因为我们会在代码段（text）中存放如指针/内存地址的数据，它们就是无符号的。其中数据段（data）由于只存放字符串，所以是 <code>char *</code> 型的。</p>\n<p>接着，在<code>main</code>函数中加入初始化代码，真正为其分配内存：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token comment\">// allocate memory for virtual machine</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">=</span> old_text <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>poolsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"could not malloc(%d) for text area\\n\"</span><span class=\"token punctuation\">,</span> poolsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>data <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>poolsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"could not malloc(%d) for data area\\n\"</span><span class=\"token punctuation\">,</span> poolsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>stack <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>poolsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"could not malloc(%d) for stack area\\n\"</span><span class=\"token punctuation\">,</span> poolsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> poolsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> poolsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> poolsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token function\">program</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"寄存器\">寄存器</h4>\n<p>计算机中的寄存器用于存放计算机的运行状态，真正的计算机中有许多不同种类的寄存器，但我们的虚拟机中只使用 4 个寄存器，分别如下：</p>\n<ol>\n<li><code>PC</code> 程序计数器，它存放的是一个内存地址，该地址中存放着 <strong>下一条</strong> 要执行的计算机指令。</li>\n<li><code>SP</code> 指针寄存器，永远指向当前的栈顶。注意的是由于栈是位于高地址并向低地址增长的，所以入栈时 <code>SP</code> 的值减小。</li>\n<li><code>BP</code> 基址指针。也是用于指向栈的某些位置，在调用函数时会使用到它。</li>\n<li><code>AX</code> 通用寄存器，我们的虚拟机中，它用于存放一条指令执行后的结果。</li>\n</ol>\n<p>要理解这些寄存器的作用，需要去理解程序运行中会有哪些状态。而这些寄存器只是用于保存这些状态的。</p>\n<p>在全局中加入如下定义：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>pc<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>bp<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>sp<span class=\"token punctuation\">,</span> ax<span class=\"token punctuation\">,</span> cycle<span class=\"token punctuation\">;</span> <span class=\"token comment\">// virtual machine registers</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在 <code>main</code> 函数中加入初始化代码，注意的是<code>PC</code>在初始应指向目标代码中的<code>main</code>函数，但我们还没有写任何编译相关的代码，因此先不处理。代码如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> poolsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\nbp <span class=\"token operator\">=</span> sp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>stack <span class=\"token operator\">+</span> poolsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nax <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token function\">program</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>与 CPU 相关的是指令集，我们将专门作为一个小节。</p>\n<h3 id=\"指令集\">指令集</h3>\n<p>指令集是 CPU 能识别的命令的集合，也可以说是 CPU 能理解的语言。这里我们要为我们的虚拟机构建自己的指令集。它们基于 x86 的指令集，但更为简单。</p>\n<p>首先在全局变量中加入一个枚举类型，这是我们要支持的全部指令：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">// instructions</span>\n<span class=\"token keyword\">enum</span> <span class=\"token punctuation\">{</span> LEA <span class=\"token punctuation\">,</span>IMM <span class=\"token punctuation\">,</span>JMP <span class=\"token punctuation\">,</span>CALL<span class=\"token punctuation\">,</span>JZ  <span class=\"token punctuation\">,</span>JNZ <span class=\"token punctuation\">,</span>ENT <span class=\"token punctuation\">,</span>ADJ <span class=\"token punctuation\">,</span>LEV <span class=\"token punctuation\">,</span>LI  <span class=\"token punctuation\">,</span>LC  <span class=\"token punctuation\">,</span>SI  <span class=\"token punctuation\">,</span>SC  <span class=\"token punctuation\">,</span>PUSH<span class=\"token punctuation\">,</span>\n       OR  <span class=\"token punctuation\">,</span>XOR <span class=\"token punctuation\">,</span>AND <span class=\"token punctuation\">,</span>EQ  <span class=\"token punctuation\">,</span>NE  <span class=\"token punctuation\">,</span>LT  <span class=\"token punctuation\">,</span>GT  <span class=\"token punctuation\">,</span>LE  <span class=\"token punctuation\">,</span>GE  <span class=\"token punctuation\">,</span>SHL <span class=\"token punctuation\">,</span>SHR <span class=\"token punctuation\">,</span>ADD <span class=\"token punctuation\">,</span>SUB <span class=\"token punctuation\">,</span>MUL <span class=\"token punctuation\">,</span>DIV <span class=\"token punctuation\">,</span>MOD <span class=\"token punctuation\">,</span>\n       OPEN<span class=\"token punctuation\">,</span>READ<span class=\"token punctuation\">,</span>CLOS<span class=\"token punctuation\">,</span>PRTF<span class=\"token punctuation\">,</span>MALC<span class=\"token punctuation\">,</span>MSET<span class=\"token punctuation\">,</span>MCMP<span class=\"token punctuation\">,</span>EXIT <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这些指令的顺序安排是有意的，稍后你会看到，带有参数的指令在前，没有参数的指令在后。这种顺序的唯一作用就是在打印调试信息时更加方便。但我们讲解的顺序并不依据它。</p>\n<h4 id=\"MOV\">MOV</h4>\n<p><code>MOV</code> 是所有指令中最基础的一个，它用于将数据放进寄存器或内存地址，有点类似于 C 语言中的赋值语句。x86 的 <code>MOV</code> 指令有两个参数，分别是源地址和目标地址：<code>MOV dest, source</code> （Intel 风格），表示将 <code>source</code> 的内容放在 <code>dest</code> 中，它们可以是一个数、寄存器或是一个内存地址。</p>\n<p>一方面，我们的虚拟机只有一个寄存器，另一方面，识别这些参数的类型（是数据还是地址）是比较困难的，因此我们将 <code>MOV</code> 指令拆分成 5 个指令，这些指令只接受一个参数，如下：</p>\n<ol>\n<li><code>IMM &lt;num&gt;</code> 将 <code>&lt;num&gt;</code> 放入寄存器 <code>ax</code> 中。</li>\n<li><code>LC</code> 将对应地址中的字符载入 <code>ax</code> 中，要求 <code>ax</code> 中存放地址。</li>\n<li><code>LI</code> 将对应地址中的整数载入 <code>ax</code> 中，要求 <code>ax</code> 中存放地址。</li>\n<li><code>SC</code> 将 <code>ax</code> 中的数据作为字符存放入地址中，要求栈顶存放地址。</li>\n<li><code>SI</code> 将 <code>ax</code> 中的数据作为整数存放入地址中，要求栈顶存放地址。</li>\n</ol>\n<p>你可能会觉得将一个指令变成了许多指令，整个系统就变得复杂了，但实际情况并非如此。首先是 x86 的 <code>MOV</code> 指令其实有许多变种，根据类型的不同有 <code>MOVB</code>, <code>MOVW</code> 等指令，我们这里的 <code>LC/SC</code> 和 <code>LI/SI</code> 就是对应字符型和整型的存取操作。</p>\n<p>但最为重要的是，通过将 <code>MOV</code> 指令拆分成这些指令，只有 <code>IMM</code> 需要有参数，且不需要判断类型，所以大大简化了实现的难度。</p>\n<p>在 <code>eval()</code> 函数中加入下列代码：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> op<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>tmp<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> IMM<span class=\"token punctuation\">)</span>       <span class=\"token punctuation\">{</span>ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>pc<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>                                     <span class=\"token comment\">// load immediate value to ax</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> LC<span class=\"token punctuation\">)</span>   <span class=\"token punctuation\">{</span>ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>ax<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>                               <span class=\"token comment\">// load character to ax, address in ax</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> LI<span class=\"token punctuation\">)</span>   <span class=\"token punctuation\">{</span>ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>ax<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>                                <span class=\"token comment\">// load integer to ax, address in ax</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> SC<span class=\"token punctuation\">)</span>   <span class=\"token punctuation\">{</span>ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> ax<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>                       <span class=\"token comment\">// save character to address, value in ax, address on stack</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> SI<span class=\"token punctuation\">)</span>   <span class=\"token punctuation\">{</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> ax<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>                             <span class=\"token comment\">// save integer to address, value in ax, address on stack</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中的 <code>*sp++</code> 的作用是退栈，相当于 <code>POP</code> 操作。</p>\n<p>这里要解释的一点是，为什么 <code>SI/SC</code> 指令中，地址存放在栈中，而 <code>LI/LC</code> 中，地址存放在 <code>ax</code> 中？原因是默认计算的结果是存放在 <code>ax</code> 中的，而地址通常是需要通过计算获得，所以执行 <code>LI/LC</code> 时直接从 <code>ax</code> 取值会更高效。另一点是我们的 <code>PUSH</code> 指令只能将 <code>ax</code> 的值放到栈上，而不能以值作为参数，详细见下文。</p>\n<h4 id=\"PUSH\">PUSH</h4>\n<p>在 x86 中，<code>PUSH</code> 的作用是将值或寄存器，而在我们的虚拟机中，它的作用是将 <code>ax</code> 的值放入栈中。这样做的主要原因是为了简化虚拟机的实现，并且我们也只有一个寄存器 <code>ax</code> 。代码如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> PUSH<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">*</span><span class=\"token operator\">--</span>sp <span class=\"token operator\">=</span> ax<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>                                     <span class=\"token comment\">// push the value of ax onto the stack</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"JMP\">JMP</h4>\n<p><code>JMP &lt;addr&gt;</code> 是跳转指令，无条件地将当前的 <code>PC</code> 寄存器设置为指定的 <code>&lt;addr&gt;</code>，实现如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> JMP<span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">{</span>pc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>pc<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>                                <span class=\"token comment\">// jump to the address</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>需要注意的是，<code>pc</code> 寄存器指向的是 <strong>下一条</strong> 指令。所以此时它存放的是 <code>JMP</code> 指令的参数，即 <code>&lt;addr&gt;</code> 的值。</p>\n<h4 id=\"JZ-JNZ\">JZ/JNZ</h4>\n<p>为了实现 <code>if</code> 语句，我们需要条件判断相关的指令。这里我们只实现两个最简单的条件判断，即结果（<code>ax</code>）为零或不为零情况下的跳转。</p>\n<p>实现如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> JZ<span class=\"token punctuation\">)</span>   <span class=\"token punctuation\">{</span>pc <span class=\"token operator\">=</span> ax <span class=\"token operator\">?</span> pc <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>pc<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>                   <span class=\"token comment\">// jump if ax is zero</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> JNZ<span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">{</span>pc <span class=\"token operator\">=</span> ax <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>pc <span class=\"token operator\">:</span> pc <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>                   <span class=\"token comment\">// jump if ax is not zero</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h4 id=\"子函数调用\">子函数调用</h4>\n<p>这是汇编中最难理解的部分，所以合在一起说，要引入的命令有 <code>CALL</code>, <code>ENT</code>, <code>ADJ</code> 及 <code>LEV</code>。</p>\n<p>首先我们介绍 <code>CALL &lt;addr&gt;</code> 与 <code>RET</code> 指令，<code>CALL</code> 的作用是跳转到地址为 <code>&lt;addr&gt;</code> 的子函数，<code>RET</code> 则用于从子函数中返回。</p>\n<p>为什么不能直接使用 <code>JMP</code> 指令呢？原因是当我们从子函数中返回时，程序需要回到跳转之前的地方继续运行，这就需要事先将这个位置信息存储起来。反过来，子函数要返回时，就需要获取并恢复这个信息。因此实际中我们将 <code>PC</code> 保存在栈中。如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> CALL<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">*</span><span class=\"token operator\">--</span>sp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pc<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> pc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>pc<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>           <span class=\"token comment\">// call subroutine</span>\n<span class=\"token comment\">//else if (op == RET)  {pc = (int *)*sp++;}                              // return from subroutine;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>这里我们把 <code>RET</code> 相关的内容注释了，是因为之后我们将用 <code>LEV</code> 指令来代替它。</p>\n<p>在实际调用函数时，不仅要考虑函数的地址，还要考虑如何传递参数和如何返回结果。这里我们约定，如果子函数有返回结果，那么就在返回时保存在 <code>ax</code> 中，它可以是一个值，也可以是一个地址。那么参数的传递呢？</p>\n<p>各种编程语言关于如何调用子函数有不同的约定，例如 C 语言的调用标准是：</p>\n<ol>\n<li>由调用者将参数入栈。</li>\n<li>调用结束时，由调用者将参数出栈。</li>\n<li>参数逆序入栈。</li>\n</ol>\n<p>事先声明一下，我们的编译器参数是顺序入栈的，下面的例子（C 语言调用标准）取自 <a target=\"_blank\" rel=\"noopener\" href=\"https://en.wikipedia.org/wiki/X86_calling_conventions\">维基百科</a>：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">callee</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">caller</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> ret<span class=\"token punctuation\">;</span>\n\n\tret <span class=\"token operator\">=</span> <span class=\"token function\">callee</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tret <span class=\"token operator\">+=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>会生成如下的 x86 汇编代码：</p>\n<pre class=\"line-numbers language-assembly\" data-language=\"assembly\"><code class=\"language-assembly\">caller:\n\t; make new call frame\n\tpush    ebp\n\tmov     ebp, esp\n        sub     1, esp       ; save stack for variable: i\n\t; push call arguments\n\tpush    3\n\tpush    2\n\tpush    1\n\t; call subroutine 'callee'\n\tcall    callee\n\t; remove arguments from frame\n\tadd     esp, 12\n\t; use subroutine result\n\tadd     eax, 5\n\t; restore old call frame\n        mov     esp, ebp\n\tpop     ebp\n\t; return\n\tret<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上面这段代码在我们自己的虚拟机里会有几个问题：</p>\n<ol>\n<li><code>push ebp</code>，但我们的 <code>PUSH</code> 指令并无法指定寄存器。</li>\n<li><code>mov ebp, esp</code>，我们的 <code>MOV</code> 指令同样功能不足。</li>\n<li><code>add esp, 12</code>，也是一样的问题（尽管我们还没定义）。</li>\n</ol>\n<p>也就是说由于我们的指令过于简单（如只能操作<code>ax</code>寄存器），所以用上面提到的指令，我们连函数调用都无法实现。而我们又不希望扩充现有指令的功能，因为这样实现起来就会变得复杂，因此我们采用的方法是增加指令集。毕竟我们不是真正的计算机，增加指令会消耗许多资源（钱）。</p>\n<h4 id=\"ENT\">ENT</h4>\n<p><code>ENT &lt;size&gt;</code> 指的是 <code>enter</code>，用于实现 ‘make new call frame’ 的功能，即保存当前的栈指针，同时在栈上保留一定的空间，用以存放局部变量。对应的汇编代码为：</p>\n<pre class=\"line-numbers language-assembly\" data-language=\"assembly\"><code class=\"language-assembly\">; make new call frame\npush    ebp\nmov     ebp, esp\n       sub     1, esp       ; save stack for variable: i<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>实现如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> ENT<span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">{</span><span class=\"token operator\">*</span><span class=\"token operator\">--</span>sp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>bp<span class=\"token punctuation\">;</span> bp <span class=\"token operator\">=</span> sp<span class=\"token punctuation\">;</span> sp <span class=\"token operator\">=</span> sp <span class=\"token operator\">-</span> <span class=\"token operator\">*</span>pc<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>      <span class=\"token comment\">// make new stack frame</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"ADJ\">ADJ</h4>\n<p><code>ADJ &lt;size&gt;</code> 用于实现 ‘remove arguments from frame’。在将调用子函数时压入栈中的数据清除，本质上是因为我们的 <code>ADD</code> 指令功能有限。对应的汇编代码为：</p>\n<pre class=\"line-numbers language-assembly\" data-language=\"assembly\"><code class=\"language-assembly\">; remove arguments from frame\nadd     esp, 12<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>实现如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> ADJ<span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">{</span>sp <span class=\"token operator\">=</span> sp <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>pc<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>                                <span class=\"token comment\">// add esp, &lt;size&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"LEV\">LEV</h4>\n<p>本质上这个指令并不是必需的，只是我们的指令集中并没有 <code>POP</code> 指令。并且三条指令写来比较麻烦且浪费空间，所以用一个指令代替。对应的汇编指令为：</p>\n<pre class=\"line-numbers language-assembly\" data-language=\"assembly\"><code class=\"language-assembly\">; restore old call frame\n       mov     esp, ebp\npop     ebp\n; return\nret<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>具体的实现如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> LEV<span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">{</span>sp <span class=\"token operator\">=</span> bp<span class=\"token punctuation\">;</span> bp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> pc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>  <span class=\"token comment\">// restore call frame and PC</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>注意的是，<code>LEV</code> 已经把 <code>RET</code> 的功能包含了，所以我们不再需要 <code>RET</code> 指令。</p>\n<h4 id=\"LEA\">LEA</h4>\n<p>上面的一些指令解决了调用帧的问题，但还有一个问题是如何在子函数中获得传入的参数。这里我们首先要了解的是当参数调用时，栈中的调用帧是什么样的。我们依旧用上面的例子（只是现在用“顺序”调用参数）：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sub_function<span class=\"token punctuation\">(</span>arg1, arg2, arg3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">|</span>    <span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>       <span class=\"token operator\">|</span> high address\n+---------------+\n<span class=\"token operator\">|</span> arg: <span class=\"token number\">1</span>        <span class=\"token operator\">|</span>    new_bp + <span class=\"token number\">4</span>\n+---------------+\n<span class=\"token operator\">|</span> arg: <span class=\"token number\">2</span>        <span class=\"token operator\">|</span>    new_bp + <span class=\"token number\">3</span>\n+---------------+\n<span class=\"token operator\">|</span> arg: <span class=\"token number\">3</span>        <span class=\"token operator\">|</span>    new_bp + <span class=\"token number\">2</span>\n+---------------+\n<span class=\"token operator\">|</span><span class=\"token builtin class-name\">return</span> address <span class=\"token operator\">|</span>    new_bp + <span class=\"token number\">1</span>\n+---------------+\n<span class=\"token operator\">|</span> old BP        <span class=\"token operator\">|</span> <span class=\"token operator\">&lt;</span>- new BP\n+---------------+\n<span class=\"token operator\">|</span> <span class=\"token builtin class-name\">local</span> var <span class=\"token number\">1</span>   <span class=\"token operator\">|</span>    new_bp - <span class=\"token number\">1</span>\n+---------------+\n<span class=\"token operator\">|</span> <span class=\"token builtin class-name\">local</span> var <span class=\"token number\">2</span>   <span class=\"token operator\">|</span>    new_bp - <span class=\"token number\">2</span>\n+---------------+\n<span class=\"token operator\">|</span>    <span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>       <span class=\"token operator\">|</span>  low address<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>所以为了获取第一个参数，我们需要得到 <code>new_bp + 4</code>，但就如上面的说，我们的 <code>ADD</code> 指令无法操作除 <code>ax</code> 外的寄存器，所以我们提供了一个新的指令：<code>LEA &lt;offset&gt;</code></p>\n<p>实现如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> LEA<span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">{</span>ax <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>bp <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>pc<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>                         <span class=\"token comment\">// load address for arguments.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>以上就是我们为了实现函数调用需要的指令了。</p>\n<h3 id=\"运算符指令\">运算符指令</h3>\n<p>我们为 C 语言中支持的运算符都提供对应汇编指令。每个运算符都是二元的，即有两个参数，第一个参数放在栈顶，第二个参数放在 <code>ax</code> 中。这个顺序要特别注意。因为像 <code>-</code>，<code>/</code> 之类的运算符是与参数顺序有关的。计算后会将栈顶的参数退栈，结果存放在寄存器 <code>ax</code> 中。因此计算结束后，两个参数都无法取得了（汇编的意义上，存在内存地址上就另当别论）。</p>\n<p>实现如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> OR<span class=\"token punctuation\">)</span>  ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">|</span> ax<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> XOR<span class=\"token punctuation\">)</span> ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">^</span> ax<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> AND<span class=\"token punctuation\">)</span> ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">&amp;</span> ax<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> EQ<span class=\"token punctuation\">)</span>  ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">==</span> ax<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> NE<span class=\"token punctuation\">)</span>  ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">!=</span> ax<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> LT<span class=\"token punctuation\">)</span>  ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">&lt;</span> ax<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> LE<span class=\"token punctuation\">)</span>  ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">&lt;=</span> ax<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> GT<span class=\"token punctuation\">)</span>  ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">&gt;</span>  ax<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> GE<span class=\"token punctuation\">)</span>  ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">&gt;=</span> ax<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> SHL<span class=\"token punctuation\">)</span> ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">&lt;&lt;</span> ax<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> SHR<span class=\"token punctuation\">)</span> ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">&gt;&gt;</span> ax<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> ADD<span class=\"token punctuation\">)</span> ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">+</span> ax<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> SUB<span class=\"token punctuation\">)</span> ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">-</span> ax<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> MUL<span class=\"token punctuation\">)</span> ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">*</span> ax<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> DIV<span class=\"token punctuation\">)</span> ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">/</span> ax<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> MOD<span class=\"token punctuation\">)</span> ax <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>sp<span class=\"token operator\">++</span> <span class=\"token operator\">%</span> ax<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"内置函数\">内置函数</h3>\n<p>写的程序要”有用“，除了核心的逻辑外还需要输入输出，例如 C 语言中我们经常使用的 <code>printf</code> 函数就是用于输出。但是 <code>printf</code> 函数的实现本身就十分复杂，如果我们的编译器要达到自举，就势必要实现 <code>printf</code> 之类的函数，但它又与编译器没有太大的联系，因此我们继续实现新的指令，从虚拟机的角度予以支持。</p>\n<p>编译器中我们需要用到的函数有：<code>exit</code>, <code>open</code>, <code>close</code>, <code>read</code>, <code>printf</code>, <code>malloc</code>, <code>memset</code> 及 <code>memcmp</code>。代码如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> EXIT<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exit(%d)\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>sp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">*</span>sp<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> OPEN<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> ax <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>sp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> CLOS<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> ax <span class=\"token operator\">=</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>sp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> READ<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> ax <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>sp<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>sp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>sp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> PRTF<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> tmp <span class=\"token operator\">=</span> sp <span class=\"token operator\">+</span> pc<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> ax <span class=\"token operator\">=</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>tmp<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> tmp<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> tmp<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> tmp<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> tmp<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> tmp<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> MALC<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> ax <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>sp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> MSET<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> ax <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>sp<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>sp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> MCMP<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> ax <span class=\"token operator\">=</span> <span class=\"token function\">memcmp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>sp<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>sp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>sp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里的原理是，我们的电脑上已经有了这些函数的实现，因此编译编译器时，这些函数的二进制代码就被编译进了我们的编译器，因此在我们的编译器/虚拟机上运行我们提供的这些指令时，这些函数就是可用的。换句话说就是不需要我们自己去实现了。</p>\n<p>最后再加上一个错误判断：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unknown instruction:%d\\n\"</span><span class=\"token punctuation\">,</span> op<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"测试\">测试</h3>\n<p>下面我们用我们的汇编写一小段程序，来计算 <code>10+20</code>，在 <code>main</code> 函数中加入下列代码：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    ax <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    text<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>\n    text<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    text<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>\n    text<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>\n    text<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n    text<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ADD<span class=\"token punctuation\">;</span>\n    text<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>\n    text<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> EXIT<span class=\"token punctuation\">;</span>\n    pc <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token function\">program</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>编译程序 <code>gcc xc-tutor.c</code>，运行程序：<code>./a.out hello.c</code>。输出</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>另外，我们的代码里有一些指针的强制转换，默认是 32 位的，因此在 64 位机器下，会出现 <code>segmentation fault</code>，解决方法（二选一）：</p>\n<ol>\n<li>编译时加上 <code>-m32</code> 参数：<code>gcc -m32 xc-tutor.c</code></li>\n<li>在代码的开头，增加 <code>#define int long long</code>，<code>long long</code> 是 64 位的，不会出现强制转换后的问题。</li>\n</ol>\n<p>注意我们的之前的程序需要指令一个源文件，只是现在还用不着，但从结果可以看出，我们的虚拟机还是工作良好的。</p>\n<h3 id=\"小结\">小结</h3>\n<p>本章中我们回顾了计算机的内部运行原理，并仿照 x86 汇编指令设计并实现了我们自己的指令集。希望通过本章的学习，你能对计算机程序的原理有一定的了解，同时能对汇编语言有一定的概念，因为汇编语言就是 C 编译器的输出。</p>\n<p>本章的代码可以在 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/lotabout/write-a-C-interpreter/tree/step-1\">Github</a> 上下载，也可以直接 clone</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone -b step-1 https://github.com/lotabout/write-a-C-interpreter<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>实际计算机中，添加一个新的指令需要设计许多新的电路，会增加许多的成本，但我们的虚拟机中，新的指令几乎不消耗资源，因此我们可以利用这一点，用更多的指令来完成更多的功能，从而简化具体的实现。</p>\n<h2 id=\"词法分析器\">词法分析器</h2>\n<blockquote>\n<p>本章我们要讲解如何构建词法分析器。</p>\n</blockquote>\n<h3 id=\"什么是词法分析器\">什么是词法分析器</h3>\n<p>简而言之，词法分析器用于对源码字符串做预处理，以减少语法分析器的复杂程度。</p>\n<p>词法分析器以源码字符串为输入，输出为标记流（token stream），即一连串的标记，每个标记通常包括： <code>(token, token value)</code> 即标记本身和标记的值。例如，源码中若包含一个数字 <code>'998'</code> ，词法分析器将输出 <code>(Number, 998)</code>，即（数字，998）。再例如：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">2 + 3 * (4 - 5)\n=&gt;\n(Number, 2) Add (Number, 3) Multiply Left-Bracket (Number, 4) Subtract (Number, 5) Right-Bracket<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>通过词法分析器的预处理，语法分析器的复杂度会大大降低，这点在后面的语法分析器我们就能体会。</p>\n<h3 id=\"词法分析器与编译器\">词法分析器与编译器</h3>\n<p>要是深入词法分析器，你就会发现，它的本质上也是编译器。我们的编译器是以标记流为输入，输出汇编代码，而词法分析器则是以源码字符串为输入，输出标记流。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">                   +-------+                      +--------+\n-- source code --&gt; | lexer | --&gt; token stream --&gt; | parser | --&gt; assembly\n                   +-------+                      +--------+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>在这个前提下，我们可以这样认为：直接从源代码编译成汇编代码是很困难的，因为输入的字符串比较难处理。所以我们先编写一个较为简单的编译器（词法分析器）来将字符串转换成标记流，而标记流对于语法分析器而言就容易处理得多了。</p>\n<h3 id=\"词法分析器的实现\">词法分析器的实现</h3>\n<p>由于词法分析的工作很常见，但又枯燥且容易出错，所以人们已经开发出了许多工具来生成词法分析器，如 <code>lex, flex</code>。这些工具允许我们通过正则表达式来识别标记。</p>\n<p>这里注意的是，我们并不会一次性地将所有源码全部转换成标记流，原因有二：</p>\n<ol>\n<li>字符串转换成标记流有时是有状态的，即与代码的上下文是有关系的。</li>\n<li>保存所有的标记流没有意义且浪费空间。</li>\n</ol>\n<p>所以实际的处理方法是提供一个函数（即前几篇中提到的 <code>next()</code>），每次调用该函数则返回下一个标记。</p>\n<h4 id=\"支持的标记\">支持的标记</h4>\n<p>在全局中添加如下定义：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">// tokens and classes (operators last and in precedence order)</span>\n<span class=\"token keyword\">enum</span> <span class=\"token punctuation\">{</span>\n  Num <span class=\"token operator\">=</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> Fun<span class=\"token punctuation\">,</span> Sys<span class=\"token punctuation\">,</span> Glo<span class=\"token punctuation\">,</span> Loc<span class=\"token punctuation\">,</span> Id<span class=\"token punctuation\">,</span>\n  Char<span class=\"token punctuation\">,</span> Else<span class=\"token punctuation\">,</span> Enum<span class=\"token punctuation\">,</span> If<span class=\"token punctuation\">,</span> Int<span class=\"token punctuation\">,</span> Return<span class=\"token punctuation\">,</span> Sizeof<span class=\"token punctuation\">,</span> While<span class=\"token punctuation\">,</span>\n  Assign<span class=\"token punctuation\">,</span> Cond<span class=\"token punctuation\">,</span> Lor<span class=\"token punctuation\">,</span> Lan<span class=\"token punctuation\">,</span> Or<span class=\"token punctuation\">,</span> Xor<span class=\"token punctuation\">,</span> And<span class=\"token punctuation\">,</span> Eq<span class=\"token punctuation\">,</span> Ne<span class=\"token punctuation\">,</span> Lt<span class=\"token punctuation\">,</span> Gt<span class=\"token punctuation\">,</span> Le<span class=\"token punctuation\">,</span> Ge<span class=\"token punctuation\">,</span> Shl<span class=\"token punctuation\">,</span> Shr<span class=\"token punctuation\">,</span> Add<span class=\"token punctuation\">,</span> Sub<span class=\"token punctuation\">,</span> Mul<span class=\"token punctuation\">,</span> Div<span class=\"token punctuation\">,</span> Mod<span class=\"token punctuation\">,</span> Inc<span class=\"token punctuation\">,</span> Dec<span class=\"token punctuation\">,</span> Brak\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这些就是我们要支持的标记符。例如，我们会将 <code>=</code> 解析为 <code>Assign</code>；将 <code>==</code> 解析为 <code>Eq</code>；将 <code>!=</code> 解析为 <code>Ne</code> 等等。</p>\n<p>所以这里我们会有这样的印象，一个标记（token）可能包含多个字符，且多数情况下如此。而词法分析器能减小语法分析复杂度的原因，正是因为它相当于通过一定的编码（更多的标记）来压缩了源码字符串。</p>\n<p>当然，上面这些标记是有顺序的，跟它们在 C 语言中的优先级有关，如 <code>*(Mul)</code> 的优先级就要高于 <code>+(Add)</code>。它们的具体使用在后面的语法分析中会提到。</p>\n<p>最后要注意的是还有一些字符，它们自己就构成了标记，如右方括号 <code>]</code> 或波浪号 <code>~</code> 等。我们不另外处理它们的原因是：</p>\n<ol>\n<li>它们是单字符的，即并不是多个字符共同构成标记（如 <code>==</code> 需要两个字符）；</li>\n<li>它们不涉及优先级关系。</li>\n</ol>\n<h4 id=\"词法分析器的框架\">词法分析器的框架</h4>\n<p>即 <code>next()</code> 函数的主体：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>last_pos<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> hash<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>src<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">++</span>src<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// parse token here</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里的一个问题是，为什么要用 <code>while</code> 循环呢？这就涉及到编译器（记得我们说过词法分析器也是某种意义上的编译器）的一个问题：如何处理错误？</p>\n<p>对词法分析器而言，若碰到了一个我们不认识的字符该怎么处理？一般处理的方法有两种：</p>\n<ol>\n<li>指出错误发生的位置，并退出整个程序</li>\n<li>指出错误发生的位置，跳过当前错误并继续编译</li>\n</ol>\n<p>这个 <code>while</code> 循环的作用就是跳过这些我们不识别的字符，我们同时还用它来处理空白字符。我们知道，C 语言中空格是用来作为分隔用的，并不作为语法的一部分。因此在实现中我们将它作为“不识别”的字符，这个 <code>while</code> 循环可以用来跳过它。</p>\n<h4 id=\"换行符\">换行符</h4>\n<p>换行符和空格类似，但有一点不同，每次遇到换行符，我们需要将当前的行号加一：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">// parse token here</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">++</span>line<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"宏定义\">宏定义</h4>\n<p>C 语言的宏定义以字符 <code>#</code> 开头，如 <code># include &lt;stdio.h&gt;</code>。我们的编译器并不支持宏定义，所以直接跳过它们。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'#'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// skip macro, because we will not support it</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">*</span>src <span class=\"token operator\">!=</span> <span class=\"token char\">'\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        src<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"标识符与符号表\">标识符与符号表</h4>\n<p>标识符（identifier）可以理解为变量名。对于语法分析而言，我们并不关心一个变量具体叫什么名字，而只关心这个变量名代表的唯一标识。例如 <code>int a;</code> 定义了变量 <code>a</code>，而之后的语句 <code>a = 10</code>，我们需要知道这两个 <code>a</code> 指向的是同一个变量。</p>\n<p>基于这个理由，词法分析器会把扫描到的标识符全都保存到一张表中，遇到新的标识符就去查这张表，如果标识符已经存在，就返回它的唯一标识。</p>\n<p>那么我们怎么表示标识符呢？如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">identifier</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> token<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> hash<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> class<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> type<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> Bclass<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> Btype<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> Bvalue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里解释一下具体的含义：</p>\n<ol>\n<li><code>token</code>：该标识符返回的标记，理论上所有的变量返回的标记都应该是 <code>Id</code>，但实际上由于我们还将在符号表中加入关键字如 <code>if</code>, <code>while</code> 等，它们都有对应的标记。</li>\n<li><code>hash</code>：顾名思义，就是这个标识符的哈希值，用于标识符的快速比较。</li>\n<li><code>name</code>：存放标识符本身的字符串。</li>\n<li><code>class</code>：该标识符的类别，如数字，全局变量或局部变量等。</li>\n<li><code>type</code>：标识符的类型，即如果它是个变量，变量是 <code>int</code> 型、<code>char</code> 型还是指针型。</li>\n<li><code>value</code>：存放这个标识符的值，如标识符是函数，刚存放函数的地址。</li>\n<li><code>BXXXX</code>：C 语言中标识符可以是全局的也可以是局部的，当局部标识符的名字与全局标识符相同时，用作保存全局标识符的信息。</li>\n</ol>\n<p>由上可以看出，我们实现的词法分析器与传统意义上的词法分析器不太相同。传统意义上的符号表只需要知道标识符的唯一标识即可，而我们还存放了一些只有语法分析器才会得到的信息，如 <code>type</code> 。</p>\n<p>由于我们的目标是能自举，而我们定义的语法不支持 <code>struct</code>，故而使用下列方式。</p>\n<pre class=\"line-numbers language-assembly\" data-language=\"assembly\"><code class=\"language-assembly\">Symbol table:\n----+-----+----+----+----+-----+-----+-----+------+------+----\n .. |token|hash|name|type|class|value|btype|bclass|bvalue| ..\n----+-----+----+----+----+-----+-----+-----+------+------+----\n    |&lt;---       one single identifier                ---&gt;|<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>即用一个整型数组来保存相关的ID信息。每个ID占用数组中的9个空间，分析标识符的相关代码如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> token_val<span class=\"token punctuation\">;</span>                <span class=\"token comment\">// value of current token (mainly for number)</span>\n<span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>current_id<span class=\"token punctuation\">,</span>              <span class=\"token comment\">// current parsed ID</span>\n    <span class=\"token operator\">*</span>symbols<span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// symbol table</span>\n\n<span class=\"token comment\">// fields of identifier</span>\n<span class=\"token keyword\">enum</span> <span class=\"token punctuation\">{</span>Token<span class=\"token punctuation\">,</span> Hash<span class=\"token punctuation\">,</span> Name<span class=\"token punctuation\">,</span> Type<span class=\"token punctuation\">,</span> Class<span class=\"token punctuation\">,</span> Value<span class=\"token punctuation\">,</span> BType<span class=\"token punctuation\">,</span> BClass<span class=\"token punctuation\">,</span> BValue<span class=\"token punctuation\">,</span> IdSize<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>token <span class=\"token operator\">&gt;=</span> <span class=\"token char\">'a'</span> <span class=\"token operator\">&amp;&amp;</span> token <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'z'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">&gt;=</span> <span class=\"token char\">'A'</span> <span class=\"token operator\">&amp;&amp;</span> token <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'Z'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'_'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n            <span class=\"token comment\">// parse identifier</span>\n            last_pos <span class=\"token operator\">=</span> src <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            hash <span class=\"token operator\">=</span> token<span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">&gt;=</span> <span class=\"token char\">'a'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">*</span>src <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'z'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">&gt;=</span> <span class=\"token char\">'A'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">*</span>src <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'Z'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">&gt;=</span> <span class=\"token char\">'0'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">*</span>src <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'9'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">==</span> <span class=\"token char\">'_'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                hash <span class=\"token operator\">=</span> hash <span class=\"token operator\">*</span> <span class=\"token number\">147</span> <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>src<span class=\"token punctuation\">;</span>\n                src<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// look for existing identifier, linear search</span>\n            current_id <span class=\"token operator\">=</span> symbols<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>current_id<span class=\"token punctuation\">[</span>Token<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>current_id<span class=\"token punctuation\">[</span>Hash<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> hash <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">memcmp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>current_id<span class=\"token punctuation\">[</span>Name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> last_pos<span class=\"token punctuation\">,</span> src <span class=\"token operator\">-</span> last_pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token comment\">//found one, return</span>\n                    token <span class=\"token operator\">=</span> current_id<span class=\"token punctuation\">[</span>Token<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                current_id <span class=\"token operator\">=</span> current_id <span class=\"token operator\">+</span> IdSize<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n\n            <span class=\"token comment\">// store new ID</span>\n            current_id<span class=\"token punctuation\">[</span>Name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>last_pos<span class=\"token punctuation\">;</span>\n            current_id<span class=\"token punctuation\">[</span>Hash<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> hash<span class=\"token punctuation\">;</span>\n            token <span class=\"token operator\">=</span> current_id<span class=\"token punctuation\">[</span>Token<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Id<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>查找已有标识符的方法是线性查找 <code>symbols</code> 表。</p>\n<h4 id=\"数字\">数字</h4>\n<p>数字中较为复杂的一点是需要支持十进制、十六进制及八进制。逻辑也较为直接，可能唯一不好理解的是获取十六进制的值相关的代码。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">token_val <span class=\"token operator\">=</span> token_val <span class=\"token operator\">*</span> <span class=\"token number\">16</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">&amp;</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">&gt;=</span> <span class=\"token char\">'A'</span> <span class=\"token operator\">?</span> <span class=\"token number\">9</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这里要注意的是在ASCII码中，字符<code>a</code>对应的十六进制值是 <code>61</code>, <code>A</code>是<code>41</code>，故通过 <code>(token &amp; 15)</code> 可以得到个位数的值。其它就不多说了，这里这样写的目的是装B（其实是抄 c4 的源代码的）。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">&gt;=</span> <span class=\"token char\">'0'</span> <span class=\"token operator\">&amp;&amp;</span> token <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'9'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// parse number, three kinds: dec(123) hex(0x123) oct(017)</span>\n            token_val <span class=\"token operator\">=</span> token <span class=\"token operator\">-</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token_val <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// dec, starts with [1-9]</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">&gt;=</span> <span class=\"token char\">'0'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">*</span>src <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'9'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    token_val <span class=\"token operator\">=</span> token_val<span class=\"token operator\">*</span><span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>src<span class=\"token operator\">++</span> <span class=\"token operator\">-</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// starts with number 0</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">==</span> <span class=\"token char\">'x'</span> <span class=\"token operator\">||</span> <span class=\"token operator\">*</span>src <span class=\"token operator\">==</span> <span class=\"token char\">'X'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token comment\">//hex</span>\n                    token <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token operator\">++</span>src<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>token <span class=\"token operator\">&gt;=</span> <span class=\"token char\">'0'</span> <span class=\"token operator\">&amp;&amp;</span> token <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'9'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">&gt;=</span> <span class=\"token char\">'a'</span> <span class=\"token operator\">&amp;&amp;</span> token <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'f'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">&gt;=</span> <span class=\"token char\">'A'</span> <span class=\"token operator\">&amp;&amp;</span> token <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'F'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        token_val <span class=\"token operator\">=</span> token_val <span class=\"token operator\">*</span> <span class=\"token number\">16</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">&amp;</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">&gt;=</span> <span class=\"token char\">'A'</span> <span class=\"token operator\">?</span> <span class=\"token number\">9</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        token <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token operator\">++</span>src<span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token comment\">// oct</span>\n                    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">&gt;=</span> <span class=\"token char\">'0'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">*</span>src <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'7'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        token_val <span class=\"token operator\">=</span> token_val<span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>src<span class=\"token operator\">++</span> <span class=\"token operator\">-</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n            token <span class=\"token operator\">=</span> Num<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"字符串\">字符串</h4>\n<p>在分析时，如果分析到字符串，我们需要将它存放到前一篇文章中说的 <code>data</code> 段中。然后返回它在 <code>data</code> 段中的地址。另一个特殊的地方是我们需要支持转义符。例如用 <code>\\n</code> 表示换行符。由于本编译器的目的是达到自己编译自己，所以代码中并没有支持除 <code>\\n</code> 的转义符，如 <code>\\t</code>, <code>\\r</code> 等，但仍支持 <code>\\a</code> 表示字符 <code>a</code> 的语法，如 <code>\\\"</code> 表示 <code>\"</code>。</p>\n<p>在分析时，我们将同时分析单个字符如 <code>'a'</code> 和字符串如 <code>\"a string\"</code>。若得到的是单个字符，我们以 <code>Num</code> 的形式返回。相关代码如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'\"'</span> <span class=\"token operator\">||</span> token <span class=\"token operator\">==</span> <span class=\"token char\">'\\''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// parse string literal, currently, the only supported escape</span>\n            <span class=\"token comment\">// character is '\\n', store the string literal into data.</span>\n            last_pos <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">*</span>src <span class=\"token operator\">!=</span> token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                token_val <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>src<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token_val <span class=\"token operator\">==</span> <span class=\"token char\">'\\\\'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token comment\">// escape character</span>\n                    token_val <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>src<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token_val <span class=\"token operator\">==</span> <span class=\"token char\">'n'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        token_val <span class=\"token operator\">=</span> <span class=\"token char\">'\\n'</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'\"'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token operator\">*</span>data<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> token_val<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n            src<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// if it is a single character, return Num token</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'\"'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                token_val <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>last_pos<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                token <span class=\"token operator\">=</span> Num<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"注释\">注释</h4>\n<p>在我们的 C 语言中，只支持 <code>//</code> 类型的注释，不支持 <code>/* comments */</code> 的注释。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'/'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">==</span> <span class=\"token char\">'/'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// skip comments</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">*</span>src <span class=\"token operator\">!=</span> <span class=\"token char\">'\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token operator\">++</span>src<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// divide operator</span>\n                token <span class=\"token operator\">=</span> Div<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里我们要额外介绍 <code>lookahead</code> 的概念，即提前看多个字符。上述代码中我们看到，除了跳过注释，我们还可能返回除号 <code>/(Div)</code> 标记。</p>\n<p>提前看字符的原理是：有一个或多个标记是以同样的字符开头的（如本小节中的注释与除号），因此只凭当前的字符我们并无法确定具体应该解释成哪一个标记，所以只能再向前查看字符，如本例需向前查看一个字符，若是 <code>/</code> 则说明是注释，反之则是除号。</p>\n<p>我们之前说过，词法分析器本质上也是编译器，其实提前看字符的概念也存在于编译器，只是这时就是提前看k个“标记”而不是“字符”了。平时听到的 <code>LL(k)</code> 中的 <code>k</code> 就是需要向前看的标记的个数了。</p>\n<p>另外，我们用词法分析器将源码转换成标记流，能减小语法分析复杂度，原因之一就是减少了语法分析器需要“向前看”的字符个数。</p>\n<h4 id=\"其它\">其它</h4>\n<p>其它的标记的解析就相对容易一些了，我们直接贴上代码：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'='</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// parse '==' and '='</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">==</span> <span class=\"token char\">'='</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                src <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                token <span class=\"token operator\">=</span> Eq<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                token <span class=\"token operator\">=</span> Assign<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'+'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// parse '+' and '++'</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">==</span> <span class=\"token char\">'+'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                src <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                token <span class=\"token operator\">=</span> Inc<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                token <span class=\"token operator\">=</span> Add<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'-'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// parse '-' and '--'</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">==</span> <span class=\"token char\">'-'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                src <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                token <span class=\"token operator\">=</span> Dec<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                token <span class=\"token operator\">=</span> Sub<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'!'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// parse '!='</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">==</span> <span class=\"token char\">'='</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                src<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                token <span class=\"token operator\">=</span> Ne<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'&lt;'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// parse '&lt;=', '&lt;&lt;' or '&lt;'</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">==</span> <span class=\"token char\">'='</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                src <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                token <span class=\"token operator\">=</span> Le<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">==</span> <span class=\"token char\">'&lt;'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                src <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                token <span class=\"token operator\">=</span> Shl<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                token <span class=\"token operator\">=</span> Lt<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'&gt;'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// parse '&gt;=', '&gt;&gt;' or '&gt;'</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">==</span> <span class=\"token char\">'='</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                src <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                token <span class=\"token operator\">=</span> Ge<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">==</span> <span class=\"token char\">'&gt;'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                src <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                token <span class=\"token operator\">=</span> Shr<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                token <span class=\"token operator\">=</span> Gt<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'|'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// parse '|' or '||'</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">==</span> <span class=\"token char\">'|'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                src <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                token <span class=\"token operator\">=</span> Lor<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                token <span class=\"token operator\">=</span> Or<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'&amp;'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// parse '&amp;' and '&amp;&amp;'</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">==</span> <span class=\"token char\">'&amp;'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                src <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                token <span class=\"token operator\">=</span> Lan<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                token <span class=\"token operator\">=</span> And<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'^'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            token <span class=\"token operator\">=</span> Xor<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'%'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            token <span class=\"token operator\">=</span> Mod<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'*'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            token <span class=\"token operator\">=</span> Mul<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'['</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            token <span class=\"token operator\">=</span> Brak<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'?'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            token <span class=\"token operator\">=</span> Cond<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'~'</span> <span class=\"token operator\">||</span> token <span class=\"token operator\">==</span> <span class=\"token char\">';'</span> <span class=\"token operator\">||</span> token <span class=\"token operator\">==</span> <span class=\"token char\">'{'</span> <span class=\"token operator\">||</span> token <span class=\"token operator\">==</span> <span class=\"token char\">'}'</span> <span class=\"token operator\">||</span> token <span class=\"token operator\">==</span> <span class=\"token char\">'('</span> <span class=\"token operator\">||</span> token <span class=\"token operator\">==</span> <span class=\"token char\">')'</span> <span class=\"token operator\">||</span> token <span class=\"token operator\">==</span> <span class=\"token char\">']'</span> <span class=\"token operator\">||</span> token <span class=\"token operator\">==</span> <span class=\"token char\">','</span> <span class=\"token operator\">||</span> token <span class=\"token operator\">==</span> <span class=\"token char\">':'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// directly return the character as token;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>代码较多，但主要逻辑就是向前看一个字符来确定真正的标记。</p>\n<h4 id=\"关键字与内置函数\">关键字与内置函数</h4>\n<p>虽然上面写完了词法分析器，但还有一个问题需要考虑，那就是“关键字”，例如 <code>if</code>, <code>while</code>, <code>return</code> 等。它们不能被作为普通的标识符，因为有特殊的含义。</p>\n<p>一般有两种处理方法：</p>\n<ol>\n<li>词法分析器中直接解析这些关键字。</li>\n<li>在语法分析前将关键字提前加入符号表。</li>\n</ol>\n<p>这里我们就采用第二种方法，将它们加入符号表，并提前为它们赋予必要的信息（还记得前面说的标识符 <code>Token</code> 字段吗？）。这样当源代码中出现关键字时，它们会被解析成标识符，但由于符号表中已经有了相关的信息，我们就能知道它们是特殊的关键字。</p>\n<p>内置函数的行为也和关键字类似，不同的只是赋值的信息，在<code>main</code>函数中进行初始化如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">// types of variable/function</span>\n<span class=\"token keyword\">enum</span> <span class=\"token punctuation\">{</span> CHAR<span class=\"token punctuation\">,</span> INT<span class=\"token punctuation\">,</span> PTR <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>idmain<span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// the `main` function</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    src <span class=\"token operator\">=</span> <span class=\"token string\">\"char else enum if int return sizeof while \"</span>\n          <span class=\"token string\">\"open read close printf malloc memset memcmp exit void main\"</span><span class=\"token punctuation\">;</span>\n\n     <span class=\"token comment\">// add keywords to symbol table</span>\n    i <span class=\"token operator\">=</span> Char<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> While<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        current_id<span class=\"token punctuation\">[</span>Token<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// add library to symbol table</span>\n    i <span class=\"token operator\">=</span> OPEN<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> EXIT<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        current_id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Sys<span class=\"token punctuation\">;</span>\n        current_id<span class=\"token punctuation\">[</span>Type<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> INT<span class=\"token punctuation\">;</span>\n        current_id<span class=\"token punctuation\">[</span>Value<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> current_id<span class=\"token punctuation\">[</span>Token<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Char<span class=\"token punctuation\">;</span> <span class=\"token comment\">// handle void type</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> idmain <span class=\"token operator\">=</span> current_id<span class=\"token punctuation\">;</span> <span class=\"token comment\">// keep track of main</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token function\">program</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"代码\">代码</h3>\n<p>本章的代码可以在 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/lotabout/write-a-C-interpreter/tree/step-2\">Github</a> 上下载，也可以直接 clone</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">git clone <span class=\"token operator\">-</span>b step<span class=\"token operator\">-</span><span class=\"token number\">2</span> https<span class=\"token operator\">:</span><span class=\"token comment\">//github.com/lotabout/write-a-C-interpreter</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>上面的代码运行后会出现 ‘Segmentation Falt’，这是正常的，因为它会尝试运行我们上一章创建的虚拟机，但其中并没有任何汇编代码。</p>\n<h3 id=\"小结-2\">小结</h3>\n<p>本章我们为我们的编译器构建了词法分析器，通过本章的学习，我认为有几个要点需要强调：</p>\n<ol>\n<li>词法分析器的作用是对源码字符串进行预处理，作用是减小语法分析器的复杂程度。</li>\n<li>词法分析器本身可以认为是一个编译器，输入是源码，输出是标记流。</li>\n<li><code>lookahead(k)</code> 的概念，即向前看 <code>k</code> 个字符或标记。</li>\n<li>词法分析中如何处理标识符与符号表。</li>\n</ol>\n<p>下一章中，我们将介绍递归下降的语法分析器。我们下一章见。</p>\n<h2 id=\"递归下降\">递归下降</h2>\n<blockquote>\n<p>本章我们将讲解递归下降的方法，并用它完成一个基本的四则运算的语法分析器。</p>\n</blockquote>\n<h3 id=\"什么是递归下降\">什么是递归下降</h3>\n<p>传统上，编写语法分析器有两种方法，一种是自顶向下，一种是自底向上。自顶向下是从起始非终结符开始，不断地对非终结符进行分解，直到匹配输入的终结符；自底向上是不断地将终结符进行合并，直到合并成起始的非终结符。</p>\n<p>其中的自顶向下方法就是我们所说的递归下降。</p>\n<h3 id=\"终结符与非终结符\">终结符与非终结符</h3>\n<p>没有学过编译原理的话可能并不知道什么是“终结符”，“非终结符”。这里我简单介绍一下。首先是 <a target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E5%B7%B4%E7%A7%91%E6%96%AF%E8%8C%83%E5%BC%8F\">BNF</a> 范式，就是一种用来描述语法的语言，例如，四则运算的规则可以表示如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;expr&gt; ::= &lt;expr&gt; + &lt;term&gt;\n         | &lt;expr&gt; - &lt;term&gt;\n         | &lt;term&gt;\n\n&lt;term&gt; ::= &lt;term&gt; * &lt;factor&gt;\n         | &lt;term&gt; / &lt;factor&gt;\n         | &lt;factor&gt;\n\n&lt;factor&gt; ::= ( &lt;expr&gt; )\n           | Num<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>用尖括号 <code>&lt;&gt;</code> 括起来的就称作 <strong>非终结符</strong> ，因为它们可以用 <code>::=</code> 右侧的式子代替。<code>|</code> 表示选择，如 <code>&lt;expr&gt;</code> 可以是 <code>&lt;expr&gt; + &lt;term&gt;</code>、<code>&lt;expr&gt; - &lt;term&gt;</code>或 <code>&lt;term&gt;</code> 中的一种。而没有出现在<code>::=</code>左边的就称作 <strong>终结符</strong> ，一般终结符对应于词法分析器输出的标记。</p>\n<h3 id=\"四则运算的递归下降\">四则运算的递归下降</h3>\n<p>例如，我们对 <code>3 * (4 + 2)</code> 进行语法分析。我们假设词法分析器已经正确地将其中的数字识别成了标记 <code>Num</code>。</p>\n<p>递归下降是从起始的非终结符开始（顶），本例中是 <code>&lt;expr&gt;</code>，实际中可以自己指定，不指定的话一般认为是第一个出现的非终结符。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1. &lt;expr&gt; =&gt; &lt;expr&gt;\n2.           =&gt; &lt;term&gt;        * &lt;factor&gt;\n3.              =&gt; &lt;factor&gt;     |\n4.                 =&gt; Num (3)   |\n5.                              =&gt; ( &lt;expr&gt; )\n6.                                   =&gt; &lt;expr&gt;           + &lt;term&gt;\n7.                                      =&gt; &lt;term&gt;          |\n8.                                         =&gt; &lt;factor&gt;     |\n9.                                            =&gt; Num (4)   |\n10.                                                        =&gt; &lt;factor&gt;\n11.                                                           =&gt; Num (2)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以看到，整个解析的过程是在不断对非终结符进行替换（向下），直到遇见了终结符（底）。而我们可以从解析的过程中看出，一些非终结符如<code>&lt;expr&gt;</code>被递归地使用了。</p>\n<h3 id=\"为什么选择递归下降\">为什么选择递归下降</h3>\n<p>从上小节对四则运算的递归下降解析可以看出，整个解析的过程和语法的 BNF 表示是十分接近的，更为重要的是，我们可以很容易地直接将 BNF 表示转换成实际的代码。方法是为每个产生式（即 <code>非终结符 ::= ...</code>）生成一个同名的函数。</p>\n<p>这里会有一个疑问，就是上例中，当一个终结符有多个选择时，如何确定具体选择哪一个？如为什么用 <code>&lt;expr&gt; ::= &lt;term&gt; * &lt;factor&gt;</code> 而不是 <code>&lt;expr&gt; ::= &lt;term&gt; / &lt;factor&gt;</code> ？这就用到了上一章中提到的“向前看 k 个标记”的概念了。我们向前看一个标记，发现是 <code>*</code>，而这个标记足够让我们确定用哪个表达式了。</p>\n<p>另外，递归下下降方法对 BNF 方法本身有一定的要求，否则会有一些问题，如经典的“左递归”问题。</p>\n<h3 id=\"左递归\">左递归</h3>\n<p>原则上我们是不讲这么深入，但我们上面的四则运算的文法就是左递归的，而左递归的语法是没法直接使用递归下降的方法实现的。因此我们要消除左递归，消除后的文法如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;expr&gt; ::= &lt;term&gt; &lt;expr_tail&gt;\n&lt;expr_tail&gt; ::= + &lt;term&gt; &lt;expr_tail&gt;\n              | - &lt;term&gt; &lt;expr_tail&gt;\n              | &lt;empty&gt;\n\n&lt;term&gt; ::= &lt;factor&gt; &lt;term_tail&gt;\n&lt;term_tail&gt; ::= * &lt;factor&gt; &lt;term_tail&gt;\n              | / &lt;factor&gt; &lt;term_tail&gt;\n              | &lt;empty&gt;\n\n&lt;factor&gt; ::= ( &lt;expr&gt; )\n           | Num<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>消除左递归的相关方法，这里不再多说，请自行查阅相关的资料。</p>\n<h3 id=\"四则运算的实现\">四则运算的实现</h3>\n<p>本节中我们专注语法分析器部分的实现，具体实现很容易，我们直接贴上代码，就是上述的消除左递归后的文法直接转换而来的：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">expr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">factor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'('</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'('</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        value <span class=\"token operator\">=</span> <span class=\"token function\">expr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">')'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        value <span class=\"token operator\">=</span> token_val<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">term_tail</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> lvalue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'*'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> value <span class=\"token operator\">=</span> lvalue <span class=\"token operator\">*</span> <span class=\"token function\">factor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">term_tail</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'/'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> value <span class=\"token operator\">=</span> lvalue <span class=\"token operator\">/</span> <span class=\"token function\">factor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">term_tail</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> lvalue<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">term</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> lvalue <span class=\"token operator\">=</span> <span class=\"token function\">factor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">term_tail</span><span class=\"token punctuation\">(</span>lvalue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">expr_tail</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> lvalue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'+'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'+'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> value <span class=\"token operator\">=</span> lvalue <span class=\"token operator\">+</span> <span class=\"token function\">term</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">expr_tail</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'-'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> value <span class=\"token operator\">=</span> lvalue <span class=\"token operator\">-</span> <span class=\"token function\">term</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">expr_tail</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> lvalue<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">expr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> lvalue <span class=\"token operator\">=</span> <span class=\"token function\">term</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">expr_tail</span><span class=\"token punctuation\">(</span>lvalue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以看到，有了BNF方法后，采用递归向下的方法来实现编译器是很直观的。</p>\n<p>我们把词法分析器的代码一并贴上：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">##include <span class=\"token operator\">&lt;</span>stdio<span class=\"token punctuation\">.</span>h<span class=\"token operator\">&gt;</span>\n##include <span class=\"token operator\">&lt;</span>stdlib<span class=\"token punctuation\">.</span>h<span class=\"token operator\">&gt;</span>\n\n<span class=\"token keyword\">enum</span> <span class=\"token punctuation\">{</span>Num<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> token<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> token_val<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>line <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>src <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// skip white space</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">==</span> <span class=\"token char\">' '</span> <span class=\"token operator\">||</span> <span class=\"token operator\">*</span>src <span class=\"token operator\">==</span> <span class=\"token char\">'\\t'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        src <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    token <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>src<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">&gt;=</span> <span class=\"token char\">'0'</span> <span class=\"token operator\">&amp;&amp;</span> token <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'9'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        token_val <span class=\"token operator\">=</span> token <span class=\"token operator\">-</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">;</span>\n        token <span class=\"token operator\">=</span> Num<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src <span class=\"token operator\">&gt;=</span> <span class=\"token char\">'0'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">*</span>src <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'9'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            token_val <span class=\"token operator\">=</span> token_val<span class=\"token operator\">*</span><span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>src <span class=\"token operator\">-</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">;</span>\n            src <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> tk<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">!=</span> tk<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"expected token: %d(%c), got: %d(%c)\\n\"</span><span class=\"token punctuation\">,</span> tk<span class=\"token punctuation\">,</span> tk<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>最后是<code>main</code>函数：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">size_t</span> linecap <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">ssize_t</span> linelen<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>linelen <span class=\"token operator\">=</span> <span class=\"token function\">getline</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>line<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>linecap<span class=\"token punctuation\">,</span> <span class=\"token constant\">stdin</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        src <span class=\"token operator\">=</span> line<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">expr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"小结-3\">小结</h3>\n<p>本章中我们介绍了递归下降的方法，并用它来实现了四则运算的语法分析器。</p>\n<p>花这么大精力讲解递归下降方法，是因为几乎所有手工编写的语法分析器都或多或少地有它的影子。换句话说，掌握了递归下降的方法，就可以应付大多数的语法分析器编写。</p>\n<p>同时我们也用实例看到了理论（BNF 语法，左递归的消除）是如何帮助我们的工程实现的。尽管理论不是必需的，但如果能掌握它，对于提高我们的水平还是很有帮助的。</p>\n<h2 id=\"变量定义\">变量定义</h2>\n<blockquote>\n<p>本章中我们用 EBNF 来大致描述我们实现的 C 语言的文法，并实现其中解析变量定义部分。</p>\n<p>由于语法分析本身比较复杂，所以我们将它拆分成 3 个部分进行讲解，分别是：变量定义、函数定义、表达式。</p>\n</blockquote>\n<h3 id=\"EBNF-表示\">EBNF 表示</h3>\n<p>EBNF 是对前一章提到的 BNF 的扩展，它的语法更容易理解，实现起来也更直观。但真正看起来还是很烦，如果不想看可以跳过。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">program ::= {global_declaration}+\n\nglobal_declaration ::= enum_decl | variable_decl | function_decl\n\nenum_decl ::= 'enum' [id] '{' id ['=' 'num'] {',' id ['=' 'num'] '}'\n\nvariable_decl ::= type {'*'} id { ',' {'*'} id } ';'\n\nfunction_decl ::= type {'*'} id '(' parameter_decl ')' '{' body_decl '}'\n\nparameter_decl ::= type {'*'} id {',' type {'*'} id}\n\nbody_decl ::= {variable_decl}, {statement}\n\nstatement ::= non_empty_statement | empty_statement\n\nnon_empty_statement ::= if_statement | while_statement | '{' statement '}'\n                     | 'return' expression | expression ';'\n\nif_statement ::= 'if' '(' expression ')' statement ['else' non_empty_statement]\n\nwhile_statement ::= 'while' '(' expression ')' non_empty_statement<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中 <code>expression</code> 相关的内容我们放到后面解释，主要原因是我们的语言不支持跨函数递归，而为了实现自举，实际上我们也不能使用递归（亏我们说了一章的递归下降）。</p>\n<p>P.S. 我是先写程序再总结上面的文法，所以实际上它们间的对应关系并不是特别明显。</p>\n<h3 id=\"解析变量的定义\">解析变量的定义</h3>\n<p>本章要讲解的就是上节文法中的 <code>enum_decl</code> 和 <code>variable_decl</code> 部分。</p>\n<h4 id=\"program\">program()</h4>\n<p>首先是之前定义过的 <code>program</code> 函数，将它改成：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">program</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// get next token</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">global_declaration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我知道 <code>global_declaration</code> 函数还没有出现过，但没有关系，采用自顶向下的编写方法就是要不断地实现我们需要的内容。下面是 <code>global_declaration</code> 函数的内容：</p>\n<h4 id=\"global-declaration\">global_declaration()</h4>\n<p>即全局的定义语句，包括变量定义，类型定义（只支持枚举）及函数定义。代码如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> basetype<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// the type of a declaration, make it global for convenience</span>\n<span class=\"token keyword\">int</span> expr_type<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// the type of an expression</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">global_declaration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// global_declaration ::= enum_decl | variable_decl | function_decl</span>\n    <span class=\"token comment\">//</span>\n    <span class=\"token comment\">// enum_decl ::= 'enum' [id] '{' id ['=' 'num'] {',' id ['=' 'num'} '}'</span>\n    <span class=\"token comment\">//</span>\n    <span class=\"token comment\">// variable_decl ::= type {'*'} id { ',' {'*'} id } ';'</span>\n    <span class=\"token comment\">//</span>\n    <span class=\"token comment\">// function_decl ::= type {'*'} id '(' parameter_decl ')' '{' body_decl '}'</span>\n\n\n    <span class=\"token keyword\">int</span> type<span class=\"token punctuation\">;</span> <span class=\"token comment\">// tmp, actual type for variable</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// tmp</span>\n\n    basetype <span class=\"token operator\">=</span> INT<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// parse enum, this should be treated alone.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Enum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// enum [id] { a = 10, b = 20, ... }</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Enum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">!=</span> <span class=\"token char\">'{'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// skip the [id] part</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'{'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// parse the assign part</span>\n            <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'{'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">enum_declaration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'}'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">';'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// parse type information</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Int<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Int<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Char<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Char<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        basetype <span class=\"token operator\">=</span> CHAR<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// parse the comma seperated variable declaration.</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">!=</span> <span class=\"token char\">';'</span> <span class=\"token operator\">&amp;&amp;</span> token <span class=\"token operator\">!=</span> <span class=\"token char\">'}'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        type <span class=\"token operator\">=</span> basetype<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// parse pointer type, note that there may exist `int ****x;`</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Mul<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Mul<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            type <span class=\"token operator\">=</span> type <span class=\"token operator\">+</span> PTR<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">!=</span> Id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// invalid declaration</span>\n            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: bad global declaration\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>current_id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// identifier exists</span>\n            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: duplicate global declaration\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        current_id<span class=\"token punctuation\">[</span>Type<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> type<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'('</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            current_id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Fun<span class=\"token punctuation\">;</span>\n            current_id<span class=\"token punctuation\">[</span>Value<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// the memory address of function</span>\n            <span class=\"token function\">function_declaration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// variable declaration</span>\n            current_id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Glo<span class=\"token punctuation\">;</span> <span class=\"token comment\">// global variable</span>\n            current_id<span class=\"token punctuation\">[</span>Value<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>data<span class=\"token punctuation\">;</span> <span class=\"token comment\">// assign memory address</span>\n            data <span class=\"token operator\">=</span> data <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">','</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>看了上面的代码，能大概理解吗？这里我们讲解其中的一些细节。</p>\n<p><strong>向前看标记</strong> ：其中的 <code>if (token == xxx)</code> 语句就是用来向前查看标记以确定使用哪一个产生式，例如只要遇到 <code>enum</code> 我们就知道是需要解析枚举类型。而如果只解析到类型，如 <code>int identifier</code> 时我们并不能确定 <code>identifier</code> 是一个普通的变量还是一个函数，所以还需要继续查看后续的标记，如果遇到 <code>(</code> 则可以断定是函数了，反之则是变量。</p>\n<p><strong>变量类型的表示</strong> ：我们的编译器支持指针类型，那意味着也支持指针的指针，如 <code>int **data;</code>。那么我们如何表示指针类型呢？前文中我们定义了支持的类型：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">// types of variable/function</span>\n<span class=\"token keyword\">enum</span> <span class=\"token punctuation\">{</span> CHAR<span class=\"token punctuation\">,</span> INT<span class=\"token punctuation\">,</span> PTR <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>所以一个类型首先有基本类型，如 <code>CHAR</code> 或 <code>INT</code>，当它是一个指向基本类型的指针时，如 <code>int *data</code>，我们就将它的类型加上 <code>PTR</code> 即代码中的：<code>type = type + PTR;</code>。同理，如果是指针的指针，则再加上 <code>PTR</code>。</p>\n<h4 id=\"enum-declaration\">enum_declaration()</h4>\n<p>用于解析枚举类型的定义。主要的逻辑用于解析用逗号（<code>,</code>）分隔的变量，值得注意的是在编译器中如何保存枚举变量的信息。</p>\n<p>即我们将该变量的类别设置成了 <code>Num</code>，这样它就成了全局的常量了，而注意到上节中，正常的全局变量的类别则是 <code>Glo</code>，类别信息在后面章节中解析 <code>expression</code> 会使用到。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">enum_declaration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// parse enum [id] { a = 1, b = 3, ...}</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n    i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">!=</span> <span class=\"token char\">'}'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">!=</span> Id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: bad enum identifier %d\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Assign<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// like {a=10}</span>\n            <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">!=</span> Num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: bad enum initializer\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            i <span class=\"token operator\">=</span> token_val<span class=\"token punctuation\">;</span>\n            <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        current_id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Num<span class=\"token punctuation\">;</span>\n        current_id<span class=\"token punctuation\">[</span>Type<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> INT<span class=\"token punctuation\">;</span>\n        current_id<span class=\"token punctuation\">[</span>Value<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">','</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"其它-2\">其它</h4>\n<p>其中的 <code>function_declaration</code> 函数我们将放到下一章中讲解。<code>match</code> 函数是一个辅助函数：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> tk<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> tk<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: expected token: %d\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">,</span> tk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>它将 <code>next</code> 函数包装起来，如果不是预期的标记则报错并退出。</p>\n<h3 id=\"代码-2\">代码</h3>\n<p>本章的代码可以在 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/lotabout/write-a-C-interpreter/tree/step-3\">Github</a> 上下载，也可以直接 clone</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone -b step-3 https://github.com/lotabout/write-a-C-interpreter<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>本章的代码还无法正常运行，因为还有许多功能没有实现，但如果有兴趣的话，可以自己先试着去实现它。</p>\n<h3 id=\"小结-4\">小结</h3>\n<p>本章的内容应该不难，除了开头的 EBNF 表达式可能相对不好理解一些，但如果你查看了 EBNF 的具体表示方法后就不难理解了。</p>\n<p>剩下的内容就是按部就班地将 EBNF 的产生式转换成函数的过程，如果你理解了上一章中的内容，相信这部分也不难理解。</p>\n<p>下一章中我们将介绍如何解析函数的定义，敬请期待。</p>\n<h2 id=\"函数定义\">函数定义</h2>\n<blockquote>\n<p>由于语法分析本身比较复杂，所以我们将它拆分成 3 个部分进行讲解，分别是：变量定义、函数定义、表达式。本章讲解函数定义相关的内容。</p>\n</blockquote>\n<h3 id=\"EBNF-表示-2\">EBNF 表示</h3>\n<p>这是上一章的 EBNF 方法中与函数定义相关的内容。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">variable_decl ::= type {'*'} id { ',' {'*'} id } ';'\n\nfunction_decl ::= type {'*'} id '(' parameter_decl ')' '{' body_decl '}'\n\nparameter_decl ::= type {'*'} id {',' type {'*'} id}\n\nbody_decl ::= {variable_decl}, {statement}\n\nstatement ::= non_empty_statement | empty_statement\n\nnon_empty_statement ::= if_statement | while_statement | '{' statement '}'\n                     | 'return' expression | expression ';'\n\nif_statement ::= 'if' '(' expression ')' statement ['else' non_empty_statement]\n\nwhile_statement ::= 'while' '(' expression ')' non_empty_statement<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"解析函数的定义\">解析函数的定义</h3>\n<p>上一章的代码中，我们已经知道了什么时候开始解析函数的定义，相关的代码如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'('</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    current_id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Fun<span class=\"token punctuation\">;</span>\n    current_id<span class=\"token punctuation\">[</span>Value<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// the memory address of function</span>\n    <span class=\"token function\">function_declaration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>即在这断代码之前，我们已经为当前的标识符（identifier）设置了正确的类型，上面这断代码为当前的标识符设置了正确的类别（Fun），以及该函数在代码段（text segment）中的位置。接下来开始解析函数定义相关的内容：<code>parameter_decl</code> 及 <code>body_decl</code>。</p>\n<h4 id=\"函数参数与汇编代码\">函数参数与汇编代码</h4>\n<p>现在我们要回忆如何将“函数”转换成对应的汇编代码，因为这决定了在解析时我们需要哪些相关的信息。考虑下列函数：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> param_a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>param_b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> local_1<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> local_2<span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>那么它应该被转换成什么样的汇编代码呢？在思考这个问题之前，我们需要了解当 <code>demo</code>函数被调用时，计算机的栈的状态，如下（参照第三章讲解的虚拟机）：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">|    ....       | high address\n+---------------+\n| arg: param_a  |    new_bp + 3\n+---------------+\n| arg: param_b  |    new_bp + 2\n+---------------+\n|return address |    new_bp + 1\n+---------------+\n| old BP        | &lt;- new BP\n+---------------+\n| local_1       |    new_bp - 1\n+---------------+\n| local_2       |    new_bp - 2\n+---------------+\n|    ....       |  low address<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里最为重要的一点是，无论是函数的参数（如 <code>param_a</code>）还是函数的局部变量（如 <code>local_1</code>）都是存放在计算机的 <strong>栈</strong> 上的。因此，与存放在 <strong>数据段</strong> 中的全局变量不同，在函数内访问它们是通过 <code>new_bp</code> 指针和对应的位移量进行的。因此，在解析的过程中，我们需要知道参数的个数，各个参数的位移量。</p>\n<h4 id=\"函数定义的解析\">函数定义的解析</h4>\n<p>这相当于是整个函数定义的语法解析的框架，代码如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">function_declaration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// type func_name (...) {...}</span>\n    <span class=\"token comment\">//               | this part</span>\n\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'('</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">function_parameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">')'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'{'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">function_body</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//match('}');                 //  ①</span>\n\n    <span class=\"token comment\">// ②</span>\n    <span class=\"token comment\">// unwind local variable declarations for all local variables.</span>\n    current_id <span class=\"token operator\">=</span> symbols<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>current_id<span class=\"token punctuation\">[</span>Token<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>current_id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Loc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            current_id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> current_id<span class=\"token punctuation\">[</span>BClass<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            current_id<span class=\"token punctuation\">[</span>Type<span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> current_id<span class=\"token punctuation\">[</span>BType<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            current_id<span class=\"token punctuation\">[</span>Value<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> current_id<span class=\"token punctuation\">[</span>BValue<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        current_id <span class=\"token operator\">=</span> current_id <span class=\"token operator\">+</span> IdSize<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中①中我们没有消耗最后的<code>}</code>字符。这么做的原因是：<code>variable_decl</code> 与 <code>function_decl</code> 是放在一起解析的，而 <code>variable_decl</code> 是以字符 <code>;</code> 结束的。而 <code>function_decl</code> 是以字符 <code>}</code> 结束的，若在此通过 <code>match</code> 消耗了 ‘;’ 字符，那么外层的 <code>while</code> 循环就没法准确地知道函数定义已经结束。所以我们将结束符的解析放在了外层的 <code>while</code> 循环中。</p>\n<p>而②中的代码是用于将符号表中的信息恢复成全局的信息。这是因为，局部变量是可以和全局变量同名的，一旦同名，在函数体内局部变量就会覆盖全局变量，出了函数体，全局变量就恢复了原先的作用。这段代码线性地遍历所有标识符，并将保存在 <code>BXXX</code> 中的信息还原。</p>\n<h4 id=\"解析参数\">解析参数</h4>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">parameter_decl ::= type {'*'} id {',' type {'*'} id}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>解析函数的参数就是解析以逗号分隔的一个个标识符，同时记录它们的位置与类型。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> index_of_bp<span class=\"token punctuation\">;</span> <span class=\"token comment\">// index of bp pointer on stack</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">function_parameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> type<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> params<span class=\"token punctuation\">;</span>\n    params <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">!=</span> <span class=\"token char\">')'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ①</span>\n\n        <span class=\"token comment\">// int name, ...</span>\n        type <span class=\"token operator\">=</span> INT<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Int<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Int<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Char<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            type <span class=\"token operator\">=</span> CHAR<span class=\"token punctuation\">;</span>\n            <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Char<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// pointer type</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Mul<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Mul<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            type <span class=\"token operator\">=</span> type <span class=\"token operator\">+</span> PTR<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// parameter name</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">!=</span> Id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: bad parameter declaration\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>current_id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Loc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: duplicate parameter declaration\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//②</span>\n        <span class=\"token comment\">// store the local variable</span>\n        current_id<span class=\"token punctuation\">[</span>BClass<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> current_id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> current_id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> Loc<span class=\"token punctuation\">;</span>\n        current_id<span class=\"token punctuation\">[</span>BType<span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> current_id<span class=\"token punctuation\">[</span>Type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  current_id<span class=\"token punctuation\">[</span>Type<span class=\"token punctuation\">]</span>   <span class=\"token operator\">=</span> type<span class=\"token punctuation\">;</span>\n        current_id<span class=\"token punctuation\">[</span>BValue<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> current_id<span class=\"token punctuation\">[</span>Value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> current_id<span class=\"token punctuation\">[</span>Value<span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> params<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// index of current parameter</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">','</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// ③</span>\n    index_of_bp <span class=\"token operator\">=</span> params<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中①与全局变量定义的解析十分一样，用于解析该参数的类型。</p>\n<p>而②则与上节中提到的“局部变量覆盖全局变量”相关，先将全局变量的信息保存（无论是是否真的在全局中用到了这个变量）在 <code>BXXX</code> 中，再赋上局部变量相关的信息，如 <code>Value</code> 中存放的是参数的位置（是第几个参数）。</p>\n<p>③则与汇编代码的生成有关，<code>index_of_bp</code> 就是前文提到的 <code>new_bp</code> 的位置。</p>\n<h4 id=\"函数体的解析\">函数体的解析</h4>\n<p>我们实现的 C 语言与现代的 C 语言不太一致，我们需要所有的变量定义出现在所有的语句之前。函数体的代码如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">function_body</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// type func_name (...) {...}</span>\n    <span class=\"token comment\">//                   --&gt;|   |&lt;--</span>\n\n    <span class=\"token comment\">// ... {</span>\n    <span class=\"token comment\">// 1. local declarations</span>\n    <span class=\"token comment\">// 2. statements</span>\n    <span class=\"token comment\">// }</span>\n\n    <span class=\"token keyword\">int</span> pos_local<span class=\"token punctuation\">;</span> <span class=\"token comment\">// position of local variables on the stack.</span>\n    <span class=\"token keyword\">int</span> type<span class=\"token punctuation\">;</span>\n    pos_local <span class=\"token operator\">=</span> index_of_bp<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ①</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Int <span class=\"token operator\">||</span> token <span class=\"token operator\">==</span> Char<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// local variable declaration, just like global ones.</span>\n        basetype <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Int<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> INT <span class=\"token operator\">:</span> CHAR<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">!=</span> <span class=\"token char\">';'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            type <span class=\"token operator\">=</span> basetype<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Mul<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Mul<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                type <span class=\"token operator\">=</span> type <span class=\"token operator\">+</span> PTR<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">!=</span> Id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// invalid declaration</span>\n                <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: bad local declaration\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>current_id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Loc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// identifier exists</span>\n                <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: duplicate local declaration\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// store the local variable</span>\n            current_id<span class=\"token punctuation\">[</span>BClass<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> current_id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> current_id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> Loc<span class=\"token punctuation\">;</span>\n            current_id<span class=\"token punctuation\">[</span>BType<span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> current_id<span class=\"token punctuation\">[</span>Type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  current_id<span class=\"token punctuation\">[</span>Type<span class=\"token punctuation\">]</span>   <span class=\"token operator\">=</span> type<span class=\"token punctuation\">;</span>\n            current_id<span class=\"token punctuation\">[</span>BValue<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> current_id<span class=\"token punctuation\">[</span>Value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> current_id<span class=\"token punctuation\">[</span>Value<span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>pos_local<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// index of current parameter</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">','</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">';'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// ②</span>\n    <span class=\"token comment\">// save the stack size for local variables</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> ENT<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> pos_local <span class=\"token operator\">-</span> index_of_bp<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// statements</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">!=</span> <span class=\"token char\">'}'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">statement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// emit code for leaving the sub function</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> LEV<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中①用于解析函数体内的局部变量的定义，代码与全局的变量定义几乎一样。</p>\n<p>而②则用于生成汇编代码，我们在第三章的虚拟机中提到过，我们需要在栈上为局部变量预留空间，这两行代码起的就是这个作用。</p>\n<h3 id=\"代码-3\">代码</h3>\n<p>本章的代码可以在 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/lotabout/write-a-C-interpreter/tree/step-4\">Github</a> 上下载，也可以直接 clone</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone -b step-4 https://github.com/lotabout/write-a-C-interpreter<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>本章的代码依旧无法运行，还有两个重要函数没有完成：<code>statement</code> 及 <code>expression</code>，感兴趣的话可以尝试自己实现它们。</p>\n<h3 id=\"小结-5\">小结</h3>\n<p>本章中我们用了不多的代码完成了函数定义的解析。大部分的代码依旧是用于解析变量：参数和局部变量，而它们的逻辑和全局变量的解析几乎一致，最大的区别就是保存的信息不同。</p>\n<p>当然，要理解函数定义的解析过程，最重要的是理解我们会为函数生成怎样的汇编代码，因为这决定了我们需要从解析中获取什么样的信息（例如参数的位置，个数等），而这些可能需要你重新回顾一下“虚拟机”这一章，或是重新学习学习汇编相关的知识。</p>\n<p>下一章中我们将讲解语句的解析，敬请期待。</p>\n<h2 id=\"语句\">语句</h2>\n<blockquote>\n<p>整个编译器还剩下最后两个部分：语句和表达式的解析。它们的内容比较多，主要涉及如何将语句和表达式编译成汇编代码。这章讲解语句的解析，相对于表达式来说它还是较为容易的。</p>\n</blockquote>\n<h3 id=\"语句-2\">语句</h3>\n<p>C 语言区分“语句”（statement）和“表达式”（expression）两个概念。简单地说，可以认为语句就是表达式加上末尾的分号。</p>\n<p>在我们的编译器中共识别 6 种语句：</p>\n<ol>\n<li><code>if (...) &lt;statement&gt; [else &lt;statement&gt;]</code></li>\n<li><code>while (...) &lt;statement&gt;</code></li>\n<li><code>{ &lt;statement&gt; }</code></li>\n<li><code>return xxx;</code></li>\n<li><code>&lt;empty statement&gt;</code>;</li>\n<li><code>expression;</code> (expression end with semicolon)</li>\n</ol>\n<p>它们的语法分析都相对容易，重要的是去理解如何将这些语句编译成汇编代码，下面我们逐一解释。</p>\n<h4 id=\"IF-语句\">IF 语句</h4>\n<p>IF 语句的作用是跳转，跟据条件表达式决定跳转的位置。我们看看下面的伪代码：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">if (...) &lt;statement&gt; [else &lt;statement&gt;]\n\n  if (&lt;cond&gt;)                   &lt;cond&gt;\n                                JZ a\n    &lt;true_statement&gt;   ===&gt;     &lt;true_statement&gt;\n  else:                         JMP b\na:                           a:\n    &lt;false_statement&gt;           &lt;false_statement&gt;\nb:                           b:<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>对应的汇编代码流程为：</p>\n<ol>\n<li>执行条件表达式 <code>&lt;cond&gt;</code>。</li>\n<li>如果条件失败，则跳转到 <code>a</code> 的位置，执行 <code>else</code> 语句。这里 <code>else</code> 语句是可以省略的，此时 <code>a</code> 和 <code>b</code> 都指向 IF 语句后方的代码。</li>\n<li>因为汇编代码是顺序排列的，所以如果执行了 <code>true_statement</code>，为了防止因为顺序排列而执行了 <code>false_statement</code>，所以需要无条件跳转 <code>JMP b</code>。</li>\n</ol>\n<p>对应的 C 代码如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> If<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>If<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'('</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Assign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// parse condition</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">')'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> JZ<span class=\"token punctuation\">;</span>\n    b <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>text<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">statement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// parse statement</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Else<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// parse else</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Else<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// emit code for JMP B</span>\n        <span class=\"token operator\">*</span>b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> JMP<span class=\"token punctuation\">;</span>\n        b <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>text<span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">statement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token operator\">*</span>b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"While-语句\">While 语句</h4>\n<p>While 语句比 If 语句简单，它对应的汇编代码如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">a<span class=\"token operator\">:</span>                     a<span class=\"token operator\">:</span>\n   <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>cond<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">)</span>        <span class=\"token operator\">&lt;</span>cond<span class=\"token operator\">&gt;</span>\n                         JZ b\n    <span class=\"token operator\">&lt;</span>statement<span class=\"token operator\">&gt;</span>          <span class=\"token operator\">&lt;</span>statement<span class=\"token operator\">&gt;</span>\n                         JMP a\nb<span class=\"token operator\">:</span>                     b<span class=\"token operator\">:</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>没有什么值得说明的内容，它的 C 代码如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> While<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>While<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    a <span class=\"token operator\">=</span> text <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'('</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Assign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">')'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> JZ<span class=\"token punctuation\">;</span>\n    b <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>text<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">statement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> JMP<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>a<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span>b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"Return-语句\">Return 语句</h4>\n<p>Return 唯一特殊的地方是：一旦遇到了 Return 语句，则意味着函数要退出了，所以需要生成汇编代码 <code>LEV</code> 来表示退出。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Return<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// return [expression];</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Return<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">!=</span> <span class=\"token char\">';'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Assign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">';'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// emit code for return</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> LEV<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"其它语句\">其它语句</h4>\n<p>其它语句并不直接生成汇编代码，所以不多做说明，代码如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'{'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// { &lt;statement&gt; ... }</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'{'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">!=</span> <span class=\"token char\">'}'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">statement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'}'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">';'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// empty statement</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">';'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// a = b; or function_call();</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Assign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">';'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"代码-4\">代码</h3>\n<p>本章的代码可以在 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/lotabout/write-a-C-interpreter/tree/step-5\">Github</a> 上下载，也可以直接 clone</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone -b step-5 https://github.com/lotabout/write-a-C-interpreter<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>本章的代码依旧无法运行，还剩最后一部分没有完成：<code>expression</code>。</p>\n<h3 id=\"小结-6\">小结</h3>\n<p>本章讲解了如何将语句编译成汇编代码，内容相对容易一些，关键就是去理解汇编代码的执行原理。</p>\n<p>同时值得一提的是，编译器的语法分析部分其实是很简单的，而真正的难点是如何在语法分析时收集足够多的信息，最终把源代码转换成目标代码（汇编）。我认为这也是初学者实现编译器的一大难点，往往比词法分析/语法分析更困难。</p>\n<p>所以建议如果没有学过汇编，可以学习学习，它本身不难，但对理解计算机的原理有很大帮助。</p>\n<h2 id=\"表达式\">表达式</h2>\n<blockquote>\n<p>这是整个编译器的最后一部分，解析表达式。什么是表达式？表达式是将各种语言要素的一个组合，用来求值。例如：函数调用、变量赋值、运算符运算等等。</p>\n<p>表达式的解析难点有二：一是运算符的优先级问题，二是如何将表达式编译成目标代码。我们就来逐一说明。</p>\n</blockquote>\n<h3 id=\"运算符的优先级\">运算符的优先级</h3>\n<p>运算符的优先级决定了表达式的运算顺序，如在普通的四则运算中，乘法 <code>*</code> 优先级高于加法 <code>+</code>，这就意味着表达式 <code>2 + 3 * 4</code> 的实际运行顺序是 <code>2 + (3 * 4)</code> 而不是 <code>(2 + 3) * 4</code>。</p>\n<p>C 语言定义了各种表达式的优先级，可以参考 <a target=\"_blank\" rel=\"noopener\" href=\"http://en.cppreference.com/w/c/language/operator_precedence\">C 语言运算符优先级</a>。</p>\n<p>传统的编程书籍会用“逆波兰式”实现四则运算来讲解优先级问题。实际上，优先级关心的就是哪个运算符先计算，哪个运算符后计算（毕竟叫做“优先级”嘛）。而这就意味着我们需要决定先为哪个运算符生成目标代码（汇编），因为汇编代码是顺序排列的，我们必须先计算优先级高的运算符。</p>\n<p>那么如何确定运算符的优先级呢？答曰：栈（递归调用的实质也是栈的处理）。</p>\n<p>举一个例子：<code>2 + 3 - 4 * 5</code>，它的运算顺序是这样的：</p>\n<ol>\n<li>将 <code>2</code> 入栈</li>\n<li>遇到运算符 <code>+</code>，入栈，此时我们期待的是<code>+</code>的另一个参数</li>\n<li>遇到数字 <code>3</code>，原则上我们需要立即计算 <code>2+3</code>的值，但我们不确定数字 <code>3</code> 是否属于优先级更高的运算符，所以先将它入栈。</li>\n<li>遇到运算符 <code>-</code>，它的优先级和 <code>+</code> 相同，此时判断参数 <code>3</code> 属于这前的 <code>+</code>。将运算符 <code>+</code> 出栈，并将之前的 <code>2</code> 和 <code>3</code> 出栈，计算 <code>2+3</code> 的结果，得到 <code>5</code> 入栈。同时将运算符 <code>-</code> 入栈。</li>\n<li>遇到数字<code>4</code>，同样不能确定是否能立即计算，入栈</li>\n<li>遇到运算符 <code>*</code> 优先级大于 <code>-</code>，入栈</li>\n<li>遇到数字<code>5</code>，依旧不能确定是否立即计算，入栈</li>\n<li>表达式结束，运算符出栈，为 <code>*</code>，将参数出栈，计算 <code>4*5</code> 得到结果 <code>20</code> 入栈。</li>\n<li>运算符出栈，为 <code>-</code>，将参数出栈，计算 <code>5-20</code>，得到 <code>-15</code> 入栈。</li>\n<li>此时运算符栈为空，因此得到结果 <code>-15</code>。</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">// after step 1, 2\n|      |\n+------+\n| 3    |   |      |\n+------+   +------+\n| 2    |   | +    |\n+------+   +------+\n\n// after step 4\n|      |   |      |\n+------+   +------+\n| 5    |   | -    |\n+------+   +------+\n\n// after step 7\n|      |\n+------+\n| 5    |\n+------+   +------+\n| 4    |   | *    |\n+------+   +------+\n| 5    |   | -    |\n+------+   +------+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>综上，在计算一个运算符‘x’之前，必须先查看它的右方，找出并计算所有优先级大于‘x’的运算符，之后再计算运算符‘x’。</p>\n<p>最后注意的是优先通常只与多元运算符相关，单元运算符往往没有这个问题（因为只有一个参数）。也可以认为“优先级”的实质就是两个运算符在抢参数。</p>\n<h3 id=\"一元运算符\">一元运算符</h3>\n<p>上节中说到了运算符的优先级，也提到了优先级一般只与多元运算符有关，这也意味着一元运算符的优先级总是高于多元运算符。因为我们需要先对它们进行解析。</p>\n<p>当然，这部分也将同时解析参数本身（如变量、数字、字符串等等）。</p>\n<p>关于表达式的解析，与语法分析相关的部分就是上文所说的优先级问题了，而剩下的较难较烦的部分是与目标代码的生成有关的。因此对于需要讲解的运算符，我们主要从它的目标代码入手。</p>\n<h4 id=\"常量\">常量</h4>\n<p>首先是数字，用 <code>IMM</code> 指令将它加载到 <code>AX</code> 中即可：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// emit code</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> token_val<span class=\"token punctuation\">;</span>\n    expr_type <span class=\"token operator\">=</span> INT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接着是字符串常量。它比较特殊的一点是 C 语言的字符串常量支持如下风格：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span>\np <span class=\"token operator\">=</span> <span class=\"token string\">\"first line\"</span>\n    <span class=\"token string\">\"second line\"</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>即跨行的字符串拼接，它相当于：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span>\np <span class=\"token operator\">=</span> <span class=\"token string\">\"first linesecond line\"</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>所以解析的时候要注意这一点：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'\"'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// emit code</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> token_val<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'\"'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// store the rest strings</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'\"'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'\"'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// append the end of string character '\\0', all the data are default</span>\n    <span class=\"token comment\">// to 0, so just move data one position forward.</span>\n    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>data <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    expr_type <span class=\"token operator\">=</span> PTR<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"sizeof\">sizeof</h4>\n<p><code>sizeof</code> 是一个一元运算符，我们需要知道后面参数的类型，类型的解析在前面的文章中我们已经很熟悉了。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Sizeof<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// sizeof is actually an unary operator</span>\n    <span class=\"token comment\">// now only `sizeof(int)`, `sizeof(char)` and `sizeof(*...)` are</span>\n    <span class=\"token comment\">// supported.</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Sizeof<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'('</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    expr_type <span class=\"token operator\">=</span> INT<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Int<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Int<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Char<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Char<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        expr_type <span class=\"token operator\">=</span> CHAR<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Mul<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Mul<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        expr_type <span class=\"token operator\">=</span> expr_type <span class=\"token operator\">+</span> PTR<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">')'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// emit code</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>expr_type <span class=\"token operator\">==</span> CHAR<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    expr_type <span class=\"token operator\">=</span> INT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>注意的是只支持 <code>sizeof(int)</code>，<code>sizeof(char)</code> 及 <code>sizeof(pointer type...)</code>。并且它的结果是 <code>int</code> 型。</p>\n<h4 id=\"变量与函数调用\">变量与函数调用</h4>\n<p>由于取变量的值与函数的调用都是以 <code>Id</code> 标记开头的，因此将它们放在一起处理。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// there are several type when occurs to Id</span>\n    <span class=\"token comment\">// but this is unit, so it can only be</span>\n    <span class=\"token comment\">// 1. function call</span>\n    <span class=\"token comment\">// 2. Enum variable</span>\n    <span class=\"token comment\">// 3. global/local variable</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    id <span class=\"token operator\">=</span> current_id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'('</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// function call</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'('</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// ①</span>\n        <span class=\"token comment\">// pass in arguments</span>\n        tmp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// number of arguments</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">!=</span> <span class=\"token char\">')'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Assign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>\n            tmp <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">','</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">')'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// ②</span>\n        <span class=\"token comment\">// emit code</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Sys<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// system functions</span>\n            <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> id<span class=\"token punctuation\">[</span>Value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Fun<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// function call</span>\n            <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> CALL<span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> id<span class=\"token punctuation\">[</span>Value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: bad function call\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// ③</span>\n        <span class=\"token comment\">// clean the stack for arguments</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmp <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> ADJ<span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        expr_type <span class=\"token operator\">=</span> id<span class=\"token punctuation\">[</span>Type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ④</span>\n        <span class=\"token comment\">// enum variable</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> id<span class=\"token punctuation\">[</span>Value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        expr_type <span class=\"token operator\">=</span> INT<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ⑤</span>\n        <span class=\"token comment\">// variable</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Loc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> LEA<span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> index_of_bp <span class=\"token operator\">-</span> id<span class=\"token punctuation\">[</span>Value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">[</span>Class<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Glo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> id<span class=\"token punctuation\">[</span>Value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: undefined variable\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//⑥</span>\n        <span class=\"token comment\">// emit code, default behaviour is to load the value of the</span>\n        <span class=\"token comment\">// address which is stored in `ax`</span>\n        expr_type <span class=\"token operator\">=</span> id<span class=\"token punctuation\">[</span>Type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>expr_type <span class=\"token operator\">==</span> Char<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> LC <span class=\"token operator\">:</span> LI<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>①中注意我们是顺序将参数入栈，这和第三章：虚拟机中讲解的指令是对应的。与之不同，标准 C 是逆序将参数入栈的。</p>\n<p>②中判断函数的类型，同样在第三章：“虚拟机”中我们介绍过内置函数的支持，如 <code>printf</code>, <code>read</code>, <code>malloc</code> 等等。内置函数有对应的汇编指令，而普通的函数则编译成 <code>CALL &lt;addr&gt;</code> 的形式。</p>\n<p>③用于清除入栈的参数。因为我们不在乎出栈的值，所以直接修改栈指针的大小即可。</p>\n<p>④：当该标识符是全局定义的枚举类型时，直接将对应的值用 <code>IMM</code> 指令存入 <code>AX</code> 即可。</p>\n<p>⑤则是用于加载变量的值，如果是局部变量则采用与 <code>bp</code> 指针相对位置的形式（参见第 7章函数定义）。而如果是全局变量则用 <code>IMM</code> 加载变量的地址。</p>\n<p>⑥：无论是全局还是局部变量，最终都根据它们的类型用 <code>LC</code> 或 <code>LI</code> 指令加载对应的值。</p>\n<p>关于变量，你可能有疑问，如果遇到标识符就用 <code>LC/LI</code> 载入相应的值，那诸如 <code>a[10]</code> 之类的表达式要如何实现呢？后面我们会看到，根据标识符后的运算符，我们可能会修改或删除现有的 <code>LC/LI</code> 指令。</p>\n<h4 id=\"强制转换\">强制转换</h4>\n<p>虽然我们前面没有提到，但我们一直用 <code>expr_type</code> 来保存一个表达式的类型，强制转换的作用是获取转换的类型，并直接修改 <code>expr_type</code> 的值。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'('</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// cast or parenthesis</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'('</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Int <span class=\"token operator\">||</span> token <span class=\"token operator\">==</span> Char<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Char<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> CHAR <span class=\"token operator\">:</span> INT<span class=\"token punctuation\">;</span> <span class=\"token comment\">// cast type</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Mul<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Mul<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            tmp <span class=\"token operator\">=</span> tmp <span class=\"token operator\">+</span> PTR<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">')'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Inc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// cast has precedence as Inc(++)</span>\n\n        expr_type  <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// normal parenthesis</span>\n        <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Assign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">')'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"指针取值\">指针取值</h4>\n<p>诸如 <code>*a</code> 的指针取值，关键是判断 <code>a</code> 的类型，而就像上节中提到的，当一个表达式解析结束时，它的类型保存在变量 <code>expr_type</code> 中。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Mul<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// dereference *&lt;addr&gt;</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Mul<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Inc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// dereference has the same precedence as Inc(++)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>expr_type <span class=\"token operator\">&gt;=</span> PTR<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        expr_type <span class=\"token operator\">=</span> expr_type <span class=\"token operator\">-</span> PTR<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: bad dereference\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>expr_type <span class=\"token operator\">==</span> CHAR<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> LC <span class=\"token operator\">:</span> LI<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"取址操作\">取址操作</h4>\n<p>这里我们就能看到“变量与函数调用”一节中所说的修改或删除 <code>LC/LI</code> 指令了。前文中我们说到，对于变量，我们会先加载它的地址，并根据它们类型使用 <code>LC/LI</code> 指令加载实际内容，例如对变量 <code>a</code>：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">IMM &lt;addr&gt;\nLI<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>那么对变量 <code>a</code> 取址，其实只要不执行 <code>LC/LI</code> 即可。因此我们删除相应的指令。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> And<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// get the address of</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>And<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Inc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// get the address of</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>text <span class=\"token operator\">==</span> LC <span class=\"token operator\">||</span> <span class=\"token operator\">*</span>text <span class=\"token operator\">==</span> LI<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        text <span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: bad address of\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    expr_type <span class=\"token operator\">=</span> expr_type <span class=\"token operator\">+</span> PTR<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"逻辑取反\">逻辑取反</h4>\n<p>我们没有直接的逻辑取反指令，因此我们判断它是否与数字 0 相等。而数字 0 代表了逻辑 “False”。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'!'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// not</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Inc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// emit code, use &lt;expr&gt; == 0</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> EQ<span class=\"token punctuation\">;</span>\n\n    expr_type <span class=\"token operator\">=</span> INT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"按位取反\">按位取反</h4>\n<p>同样我们没有相应的指令，所以我们用异或来实现，即 <code>~a = a ^ 0xFFFF</code>。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">'~'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// bitwise not</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">'~'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Inc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// emit code, use &lt;expr&gt; XOR -1</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> XOR<span class=\"token punctuation\">;</span>\n\n    expr_type <span class=\"token operator\">=</span> INT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"正负号\">正负号</h4>\n<p>注意这里并不是四则运算中的加减法，而是单个数字的取正取负操作。同样，我们没有取负的操作，用 <code>0 - x</code> 来实现 <code>-x</code>。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Add<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// +var, do nothing</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Add<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Inc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    expr_type <span class=\"token operator\">=</span> INT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Sub<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// -var</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Sub<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>token_val<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Inc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> MUL<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    expr_type <span class=\"token operator\">=</span> INT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"自增自减\">自增自减</h4>\n<p>注意的是自增自减操作的优先级是和它的位置有关的。如 <code>++p</code> 的优先级高于 <code>p++</code>，这里我们解析的就是类似 <code>++p</code> 的操作。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Inc <span class=\"token operator\">||</span> token <span class=\"token operator\">==</span> Dec<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    tmp <span class=\"token operator\">=</span> token<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Inc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ①</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>text <span class=\"token operator\">==</span> LC<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">*</span>text <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// to duplicate the address</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> LC<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>text <span class=\"token operator\">==</span> LI<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">*</span>text <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> LI<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: bad lvalue of pre-increment\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ②</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>expr_type <span class=\"token operator\">&gt;</span> PTR<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tmp <span class=\"token operator\">==</span> Inc<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> ADD <span class=\"token operator\">:</span> SUB<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>expr_type <span class=\"token operator\">==</span> CHAR<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> SC <span class=\"token operator\">:</span> SI<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>对应的汇编代码也比较直观，只是在实现 <code>++p</code>时，我们要使用变量 <code>p</code> 的地址两次，所以我们需要先 <code>PUSH</code> （①）。</p>\n<p>②则是因为自增自减操作还需要处理是指针的情形。</p>\n<h3 id=\"二元运算符\">二元运算符</h3>\n<p>这里，我们需要处理多运算符的优先级问题，就如前文的“优先级”一节提到的，我们需要不断地向右扫描，直到遇到优先级 <strong>小于</strong> 当前优先级的运算符。</p>\n<p>回想起我们之前定义过的各个标记，它们是以优先级从低到高排列的，即 <code>Assign</code> 的优先级最低，而 <code>Brak</code>（<code>[</code>） 的优先级最高。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">enum</span> <span class=\"token punctuation\">{</span>\n  Num <span class=\"token operator\">=</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> Fun<span class=\"token punctuation\">,</span> Sys<span class=\"token punctuation\">,</span> Glo<span class=\"token punctuation\">,</span> Loc<span class=\"token punctuation\">,</span> Id<span class=\"token punctuation\">,</span>\n  Char<span class=\"token punctuation\">,</span> Else<span class=\"token punctuation\">,</span> Enum<span class=\"token punctuation\">,</span> If<span class=\"token punctuation\">,</span> Int<span class=\"token punctuation\">,</span> Return<span class=\"token punctuation\">,</span> Sizeof<span class=\"token punctuation\">,</span> While<span class=\"token punctuation\">,</span>\n  Assign<span class=\"token punctuation\">,</span> Cond<span class=\"token punctuation\">,</span> Lor<span class=\"token punctuation\">,</span> Lan<span class=\"token punctuation\">,</span> Or<span class=\"token punctuation\">,</span> Xor<span class=\"token punctuation\">,</span> And<span class=\"token punctuation\">,</span> Eq<span class=\"token punctuation\">,</span> Ne<span class=\"token punctuation\">,</span> Lt<span class=\"token punctuation\">,</span> Gt<span class=\"token punctuation\">,</span> Le<span class=\"token punctuation\">,</span> Ge<span class=\"token punctuation\">,</span> Shl<span class=\"token punctuation\">,</span> Shr<span class=\"token punctuation\">,</span> Add<span class=\"token punctuation\">,</span> Sub<span class=\"token punctuation\">,</span> Mul<span class=\"token punctuation\">,</span> Div<span class=\"token punctuation\">,</span> Mod<span class=\"token punctuation\">,</span> Inc<span class=\"token punctuation\">,</span> Dec<span class=\"token punctuation\">,</span> Brak\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>所以，当我们调用 <code>expression(level)</code> 进行解析的时候，我们其实通过了参数 <code>level</code> 指定了当前的优先级。在前文的一元运算符处理中也用到了这一点。</p>\n<p>所以，此时的二元运算符的解析的框架为：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">&gt;=</span> level<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// parse token for binary operator and postfix operator</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>解决了优先级的问题，让我们继续讲解如何把运算符编译成汇编代码吧。</p>\n<h4 id=\"赋值操作\">赋值操作</h4>\n<p>赋值操作是优先级最低的运算符。考虑诸如 <code>a = (expession)</code> 的表达式，在解析 <code>=</code> 之前，我们已经为变量 <code>a</code> 生成了如下的汇编代码：</p>\n<pre class=\"line-numbers language-assembly\" data-language=\"assembly\"><code class=\"language-assembly\">IMM &lt;addr&gt;\nLC/LI<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>当解析完<code>=</code>右边的表达式后，相应的值会存放在 <code>ax</code> 中，此时，为了实际将这个值保存起来，我们需要类似下面的汇编代码：</p>\n<pre class=\"line-numbers language-assembly\" data-language=\"assembly\"><code class=\"language-assembly\">IMM &lt;addr&gt;\nPUSH\nSC/SI<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>明白了这点，也就能理解下面的源代码了：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">tmp <span class=\"token operator\">=</span> expr_type<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Assign<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// var = expr;</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Assign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>text <span class=\"token operator\">==</span> LC <span class=\"token operator\">||</span> <span class=\"token operator\">*</span>text <span class=\"token operator\">==</span> LI<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">*</span>text <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span> <span class=\"token comment\">// save the lvalue's pointer</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: bad lvalue in assignment\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Assign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    expr_type <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>expr_type <span class=\"token operator\">==</span> CHAR<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> SC <span class=\"token operator\">:</span> SI<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"三目运算符\">三目运算符</h4>\n<p>这是 C 语言中唯一的一个三元运算符： <code>? :</code>，它相当于一个小型的 If 语句，所以生成的代码也类似于 If 语句，这里就不多作解释。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Cond<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// expr ? a : b;</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Cond<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> JZ<span class=\"token punctuation\">;</span>\n    addr <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>text<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Assign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token char\">':'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: missing colon in conditional\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">*</span>addr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> JMP<span class=\"token punctuation\">;</span>\n    addr <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>text<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Cond<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span>addr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"逻辑运算符\">逻辑运算符</h4>\n<p>这包括 <code>||</code> 和 <code>&amp;&amp;</code>。它们对应的汇编代码如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;expr1&gt; || &lt;expr2&gt;     &lt;expr1&gt; &amp;&amp; &lt;expr2&gt;\n\n  ...&lt;expr1&gt;...          ...&lt;expr1&gt;...\n  JNZ b                  JZ b\n  ...&lt;expr2&gt;...          ...&lt;expr2&gt;...\nb:                     b:<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>所以源码如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Lor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// logic or</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Lor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> JNZ<span class=\"token punctuation\">;</span>\n    addr <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>text<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Lan<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span>addr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    expr_type <span class=\"token operator\">=</span> INT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Lan<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// logic and</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Lan<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> JZ<span class=\"token punctuation\">;</span>\n    addr <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>text<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Or<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span>addr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    expr_type <span class=\"token operator\">=</span> INT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"数学运算符\">数学运算符</h4>\n<p>它们包括 <code>|</code>, <code>^</code>, <code>&amp;</code>, <code>==</code>, <code>!=</code> <code>&lt;=</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;&lt;</code>, <code>&gt;&gt;</code>, <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code>。它们的实现都很类似，我们以异或 <code>^</code> 为例：</p>\n<pre class=\"line-numbers language-assembly\" data-language=\"assembly\"><code class=\"language-assembly\">&lt;expr1&gt; ^ &lt;expr2&gt;\n\n...&lt;expr1&gt;...          &lt;- now the result is on ax\nPUSH\n...&lt;expr2&gt;...          &lt;- now the value of &lt;expr2&gt; is on ax\nXOR<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>所以它对应的代码为：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Xor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// bitwise xor</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Xor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>And<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> XOR<span class=\"token punctuation\">;</span>\n    expr_type <span class=\"token operator\">=</span> INT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其它的我们便不再详述。但这当中还有一个问题，就是指针的加减。在 C 语言中，指针加上数值等于将指针移位，且根据不同的类型移动的位移不同。如 <code>a + 1</code>，如果 <code>a</code> 是 <code>char *</code> 型，则移动一字节，而如果 <code>a</code> 是 <code>int *</code> 型，则移动 4 个字节（32位系统）。</p>\n<p>另外，在作指针减法时，如果是两个指针相减（相同类型），则结果是两个指针间隔的元素个数。因此要有特殊的处理。</p>\n<p>下面以加法为例，对应的汇编代码为：</p>\n<pre class=\"line-numbers language-assembly\" data-language=\"assembly\"><code class=\"language-assembly\">&lt;expr1&gt; + &lt;expr2&gt;\n\nnormal         pointer\n\n&lt;expr1&gt;        &lt;expr1&gt;\nPUSH           PUSH\n&lt;expr2&gt;        &lt;expr2&gt;     |\nADD            PUSH        | &lt;expr2&gt; * &lt;unit&gt;\n               IMM &lt;unit&gt;  |\n               MUL         |\n               ADD<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>即当 <code>&lt;expr1&gt;</code> 是指针时，要根据它的类型放大 <code>&lt;expr2&gt;</code> 的值，因此对应的源码如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Add<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// add</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Add<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Mul<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    expr_type <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>expr_type <span class=\"token operator\">&gt;</span> PTR<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// pointer type, and not `char *`</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> MUL<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> ADD<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>相应的减法的代码就不贴了，可以自己实现看看，也可以看文末给出的链接。</p>\n<h4 id=\"自增自减-2\">自增自减</h4>\n<p>这次是后缀形式的，即 <code>p++</code> 或 <code>p--</code>。与前缀形式不同的是，在执行自增自减后， <code>ax</code>上需要保留原来的值。所以我们首先执行类似前缀自增自减的操作，再将 <code>ax</code> 中的值执行减/增的操作。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">// 前缀形式 生成汇编代码</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>expr_type <span class=\"token operator\">&gt;</span> PTR<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tmp <span class=\"token operator\">==</span> Inc<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> ADD <span class=\"token operator\">:</span> SUB<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>expr_type <span class=\"token operator\">==</span> CHAR<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> SC <span class=\"token operator\">:</span> SI<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 后缀形式 生成汇编代码</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>expr_type <span class=\"token operator\">&gt;</span> PTR<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Inc<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> ADD <span class=\"token operator\">:</span> SUB<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>expr_type <span class=\"token operator\">==</span> CHAR<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> SC <span class=\"token operator\">:</span> SI<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>                                             <span class=\"token comment\">//</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>                                              <span class=\"token comment\">// 执行相反的增/减操作</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>expr_type <span class=\"token operator\">&gt;</span> PTR<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Inc<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> SUB <span class=\"token operator\">:</span> ADD<span class=\"token punctuation\">;</span>                       <span class=\"token comment\">//</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"数组取值操作\">数组取值操作</h4>\n<p>在学习 C 语言的时候你可能已经知道了，诸如 <code>a[10]</code> 的操作等价于 <code>*(a + 10)</code>。因此我们要做的就是生成类似的汇编代码：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> Brak<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// array access var[xx]</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>Brak<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span>Assign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token char\">']'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmp <span class=\"token operator\">&gt;</span> PTR<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// pointer, `not char *`</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> IMM<span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> MUL<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmp <span class=\"token operator\">&lt;</span> PTR<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d: pointer type expected\\n\"</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    expr_type <span class=\"token operator\">=</span> tmp <span class=\"token operator\">-</span> PTR<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> ADD<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token operator\">++</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>expr_type <span class=\"token operator\">==</span> CHAR<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> LC <span class=\"token operator\">:</span> LI<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"代码-5\">代码</h3>\n<p>除了上述对表达式的解析外，我们还需要初始化虚拟机的栈，我们可以正确调用 <code>main</code> 函数，且当 <code>main</code> 函数结束时退出进程。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>tmp<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// setup stack</span>\nsp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>stack <span class=\"token operator\">+</span> poolsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">--</span>sp <span class=\"token operator\">=</span> EXIT<span class=\"token punctuation\">;</span> <span class=\"token comment\">// call exit if main returns</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">--</span>sp <span class=\"token operator\">=</span> PUSH<span class=\"token punctuation\">;</span> tmp <span class=\"token operator\">=</span> sp<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">--</span>sp <span class=\"token operator\">=</span> argc<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">--</span>sp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>argv<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">--</span>sp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>tmp<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>当然，最后要注意的一点是：所有的变量定义必须放在语句之前。</p>\n<p>本章的代码可以在 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/lotabout/write-a-C-interpreter/tree/step-6\">Github</a> 上下载，也可以直接 clone</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone -b step-6 https://github.com/lotabout/write-a-C-interpreter<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>通过 <code>gcc -o xc-tutor xc-tutor.c</code> 进行编译。并执行 <code>./xc-tutor hello.c</code> 查看结果。</p>\n<p>正如我们保证的那样，我们的代码是自举的，能自己编译自己，所以你可以执行 <code>./xc-tutor xc-tutor.c hello.c</code>。可以看到和之前有同样的输出。</p>\n<h3 id=\"小结-7\">小结</h3>\n<p>本章我们进行了最后的解析，解析表达式。本章有两个难点：</p>\n<ol>\n<li>如何通过递归调用 <code>expression</code> 来实现运算符的优先级。</li>\n<li>如何为每个运算符生成对应的汇编代码。</li>\n</ol>\n<p>尽管代码看起来比较简单（虽然多），但其中用到的原理还是需要仔细推敲的。</p>\n<p>最后，恭喜你！通过一步步的学习，自己实现了一个C语言的编译器（好吧，是解释器）。</p>\n<h2 id=\"总结-4\">总结</h2>\n<blockquote>\n<p>恭喜你完成了自己的 C 语言编译器，本章中我们发一发牢骚，说一说编写编译器值得注意的一些问题；编写编译器时遇到的一些难题。</p>\n</blockquote>\n<h3 id=\"虚拟机与目标代码\">虚拟机与目标代码</h3>\n<p>整个系列的一开始，我们就着手虚拟机的实现。不知道你是否有同感，这部分对于整个编译器的编写其实是十分重要的。我认为至少占了重要程度的50%。</p>\n<p>这里要说明这样一个观点，学习编译原理时常常着眼于词法分析和语法分析，而忽略了同样重要的代码生成。对于学习或考试而言或许可以，但实际编译项目时，最为重要的是能“跑起来”，所以我们需要给予代码生成高度的重视。</p>\n<p>同时我们也看到，在后期解析语句和表达式时，难点已经不再是语法分析了，而是如何为运算符生成相应的汇编代码。</p>\n<h3 id=\"词法分析\">词法分析</h3>\n<p>我们用了很暴力的手段编写了我们的词法分析器，我认为这并无不可。</p>\n<p>但你依旧可以学习相关的知识，了解自动生成词法分析器的原理，它涉及到了“正则表达式”，“状态机”等等知识。相信这部分的知识能够很大程度上提高你的编程水平。</p>\n<p>同时，如果今后你仍然想编写编译器，不妨试试这些自动生成工具。</p>\n<h3 id=\"语法分析\">语法分析</h3>\n<p>长期以来，语法分析对我而言一直是迷一样的存在，直到真正用递归下降的方式实现了一个。</p>\n<p>我们用了专门的一章讲解了“递归下降”与 BNF 文法的关系。希望能减少你对理论的厌恶。至少，实现起来并不是太难。</p>\n<p>如果有兴趣，可以学习学习这些文法，因为已经有许多自动生成的工具支持它们。这样你就不需要重复造轮子。可以看看 yacc 等工具，更先进的版本是 <code>bsion</code>。同时其它语言也有许多类似的支持。</p>\n<p>题外话，最近知道了一个叫“PEG 文法”的表示方法，无论是读起来，还是实现起来，都比 BNF 要容易，你也可以学习看看。</p>\n<h3 id=\"关于编代码\">关于编代码</h3>\n<p>这也是我自己的感慨吧。无论多好的教程，想要完全理解它，最好的方式恐怕还是要自己实现它。</p>\n<p>只是在编写代码的过程中，我们会遇到许多的挫折，例如需要考虑许多细节，或是调试起来十分困难。但也只有真正静下心来去克服它，我们才能有所成长吧。</p>\n<p>例如在编写表达式的解析时，大量重复的代码特别让人崩溃。还有就是调试编译器，简直痛苦地无话可说。</p>\n<p>P.S. 如果你按这个系列自己编写代码，记得事先写一些用于输出汇编代码的函数，很有帮助的。</p>\n<p>还有就是写这个系列的文章，开始的冲动过了之后，每写一篇都特别心烦，希望文章本身没有受我的这种情绪影响吧。</p>\n<h3 id=\"结语\">结语</h3>\n<p>编程有趣又无趣，只有身在其中的我们才能体会吧。</p>\n<h2 id=\"参考-5\">参考</h2>\n<ul>\n<li>Github <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry/write-a-C-interpreter\">write-a-C-interpreter</a></li>\n<li>编辑整理 <a target=\"_blank\" rel=\"noopener\" href=\"https://lotabout.me/2015/write-a-C-interpreter-0/\">手把手教你构建 C 语言编译器</a></li>\n</ul>\n<h3 id=\"相关书籍-3\">相关书籍</h3>\n<h4 id=\"30天自制操作系统-2\">30天自制操作系统</h4>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/11530329\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s11138117.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s11138117.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">\n        我最近在读这本书\n      </div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>30天自制操作系统</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>[日]川合秀实</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2012-8</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>8.3</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h4 id=\"自制编译器-2\">自制编译器</h4>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/26806041\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s28768045.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s28768045.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>自制编译器</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>[日]青木峰郎</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2016-6</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>7.9</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h4 id=\"自制搜索引擎-2\">自制搜索引擎</h4>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/26681675\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s28357851.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s28357851.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>自制搜索引擎</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>[日]山田浩之</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2016-1</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>7.8</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h4 id=\"自己动手实现Lua-2\">自己动手实现Lua</h4>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/30348061\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s29891318.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s29891318.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>自己动手实现Lua</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>张秀宏</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2018-1-1</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>9.1</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h4 id=\"两周自制脚本语言-2\">两周自制脚本语言</h4>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/25908672\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s27306068.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s27306068.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>两周自制脚本语言</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>[日]千叶滋</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2014-6</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>8.5</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h4 id=\"自制编程语言-2\">自制编程语言</h4>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/25735333\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img3.doubanio.com/view/subject/s/public/s27065250.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img3.doubanio.com/view/subject/s/public/s27065250.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>自制编程语言</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>［日］前桥和弥</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2013-11</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>8.1</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h4 id=\"CPU自制入门-2\">CPU自制入门</h4>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/25780703\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s27160217.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s27160217.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>CPU自制入门</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>[日]水头一寿</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2014-1</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>7.8</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h4 id=\"Orange-S-一个操作系统的实现-2\">Orange'S:一个操作系统的实现</h4>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/3735649\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s3788445.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s3788445.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">\n        我最近在读这本书\n      </div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>Orange'S:一个操作系统的实现</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>于渊</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2009-6</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>8.8</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h4 id=\"Linux内核完全注释-3\">Linux内核完全注释</h4>\n<div class=\"douban-card-block\">\n    <a class=\"douban-card\" target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/1231236\">\n        <div class=\"douban-card-bgimg\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s8955528.jpg');\">\n        </div>\n        <div class=\"douban-card-left\">\n            <div class=\"douban-card-img\" style=\"background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s8955528.jpg');\">\n            </div>\n            <div class=\"douban-card-status\">见字如晤</div>\n        </div>\n        <div class=\"douban-card-right\" style=\"line-height: 1.7;\">\n            <div class=\"douban-card-item\"><span>书名: </span><strong>Linux内核完全注释</strong></div>\n            <div class=\"douban-card-item\"><span>作者: </span><span>赵炯</span></div>\n            <div class=\"douban-card-item\"><span>出版年份: </span><span>2005-8</span></div>\n            <div class=\"douban-card-item\"><span>评分: </span><span>8.5</span></div>\n        </div>\n    </a>\n</div>\n<style>\n    .douban-card-block {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-height: 400px;\n}\n\n.douban-card {\n    display: flex;\n    margin: 30px 10px;\n    padding: 15px;\n    border-radius: 15px;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    color: antiquewhite;\n    text-decoration: none;\n}\n\n.douban-card:hover {\n    text-decoration: none;\n}\n\n.douban-card-bgimg {\n    position: absolute;\n    width: 115%;\n    height: 115%;\n    filter: blur(15px) brightness(0.6);\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-img {\n    position: relative;\n    height: 130px;\n    width: 80px;\n    background-size: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n}\n\n.douban-card-left:hover .douban-card-img {\n    filter: blur(5px) brightness(0.6);\n    transform: perspective(800px) rotateX(180deg);\n}\n\n.douban-card-left .douban-card-img {\n    transition: all 500ms ease;\n}\n\n.douban-card-left {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.douban-card-left .douban-card-status {\n    height: 130px;\n    width: 80px;\n    text-align: center;\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n    top: 30%;\n    transform: rotateX(180deg);\n    backface-visibility: hidden;\n    transition: all 500ms ease;\n}\n\n.douban-card-left:hover .douban-card-status {\n    transform: perspective(800px) rotateX(0deg);\n}\n\n.douban-card-right {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n    font-size: 16px;\n    font-family: \"Courier New\", Courier, monospace;\n    line-height: 1.3;\n    color: antiquewhite;\n}\n\n.douban-card-item {\n    margin-top: 4px;\n}\n\n</style>\n<h3 id=\"相关仓库-2\">相关仓库</h3>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"appotry\" data-repo=\"write-a-C-interpreter\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"appotry\" data-repo=\"flash-linux0.11-talk\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"appotry\" data-repo=\"linux-0.11-lab\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"appotry\" data-repo=\"linux-lab\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "自制",
                "编译器",
                "C",
                "compiler"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/ace8b709/",
            "url": "https://blog.17lai.site/posts/ace8b709/",
            "title": "什么才是真正的知识与智慧？",
            "date_published": "2022-07-02T10:54:59.000Z",
            "content_html": "<blockquote>\n<p>现代人都可以说是学富五车，阅读量远超孔子，那么是否现代人就比孔子聪明了？没那个傻缺敢这么吹吧！那么，什么才是真正的知识与智慧了？</p>\n</blockquote>\n<span id=\"more\"></span>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/02/20220702191205.webp\" alt=\"\"></p>\n<h2 id=\"什么才是聪明？\">什么才是聪明？</h2>\n<blockquote>\n<p>不好理解什么是聪明，那么，我们先来找个聪明人，看看聪明人有什么特点！</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/02/20220702194122.webp\" alt=\"老子\"></p>\n<p>老子，孔子可以说是聪明吧！</p>\n<p>他们有什么成果流传于世了？</p>\n<p>没错，就是《论语》《道德经》，能写出这种作品的人，没有那个大骗子敢说这两老爷子不聪明吧。</p>\n<h2 id=\"知识与聪明\">知识与聪明</h2>\n<blockquote>\n<p>很多人把技能，知识储量当作聪明，这其实是不对的。</p>\n<p>读书读到博士，只能说明知识储量高，但是智慧不一定高。</p>\n</blockquote>\n<p>一个受过基本教育的现代人，就阅读量，知识储备来说，知识量远不止学富五车，学富五十车，五百车都不止。</p>\n<p>但是，有谁能写出《论语》《道德经》这样的集智慧之大成做？</p>\n<p>学不出来这种作品，你能说比孔子，老子聪明？</p>\n<p>没那个骗子敢这么大言不惭吧！</p>\n<p>那么，什么才是真正的智慧了？到底什么才是聪明真正的评价标准？</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/02/20220702195210.webp\" alt=\"知识与书籍\"></p>\n<h2 id=\"机器学习与聪明\">机器学习与聪明</h2>\n<blockquote>\n<p>为了更好的理解和解释智慧，这里用机器学习三要素来类比聪明程度。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>机器学习评价</th>\n<th>聪明评价</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>算力（cpu频率，某个特定算法专用硬件加速器，cache,内存大小等的综合评价。在某个算法算力高，在另一种算法算力低是很常见的。）</td>\n<td>个人精力，专注力，在某一特定学科领域处理速度的综合表现。一种综合概念，经过长时间学习，训练形成的在某一<mark>特定领域</mark>解决问题的能力，包括速度，准确性等。</td>\n</tr>\n<tr>\n<td>算法（解决问题的逻辑思路，不同算法自建性能，速度可以差距几个，甚至几十个数量级）</td>\n<td>智慧，处理各种知识，技能的能力。偏向哲学概念，天才真正是在这里突出。可以说是天分，后天很难增加。</td>\n</tr>\n<tr>\n<td>数据（被标注的数据）</td>\n<td>知识储量，技能数量。剋有后天学习积累，只要肯花时间，可以积累巨量的知识。知识量足够多，但是处理知识的智慧不够时，我们称呼这种人为书呆子！</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/02/20220702193955.webp\" alt=\"AI与智慧\"></p>\n<h2 id=\"科学与聪明\">科学与聪明</h2>\n<blockquote>\n<p>经过前一个章节的对比，我们可以知道，智慧更多的是一个哲学方面的概念。而科学更多的是一个对现实世界认识的知识量储备！</p>\n</blockquote>\n<p>科技发达，不代表智慧高！</p>\n<p>智慧高，也不代表科技发达！</p>\n<p>中国过去几千年，智慧成果有《道德经》《论语》《孙子兵法》等等，都是远超时代的智慧结晶，领先世界几千年！</p>\n<p>近代西方几百年，科学成果超越才超越中国，但论社会智慧成果，连两千多年前的中国都比不上。</p>\n<p>盎克鲁撒克逊国家只是海盗穿上了西服，但本质上还是海盗，几千年一直没变。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/07/02/20220702203734.webp\" alt=\"科学\"></p>\n<p>教育的目的是培养技能工人，而不是教你赚钱！</p>\n<h2 id=\"总结-3\">总结</h2>\n<p>聪明，智慧，知识是三个不同角度的评判标准。</p>\n<p>知识储量 + 处理知识的技巧和方法 + 特定领域的专注钻研 才是真正的聪明！</p>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "社会观察",
                "知识",
                "智慧"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/f4926c88/",
            "url": "https://blog.17lai.site/posts/f4926c88/",
            "title": "RSS的使用与Tiny Tiny RSS Selfhost自建",
            "date_published": "2022-05-31T02:19:46.000Z",
            "content_html": "<blockquote>\n<p>RSS 是对你信任的网站的订阅，微博是对你信任的人的订阅，即刻是对你感兴趣的话题的订阅。</p>\n</blockquote>\n<span id=\"more\"></span>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/31/20220531102733.webp\" alt=\"\"></p>\n<h2 id=\"RSS-的介绍\">RSS 的介绍</h2>\n<blockquote>\n<p><strong>维基百科</strong><a target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/RSS\">zh.wikipedia.org/wiki/RSS</a></p>\n</blockquote>\n<p>RSS（简易信息聚合）是一种消息来源格式规范，用以聚合经常发布更新数据的网站，例如博客文章、新闻、音频或视频的网摘。RSS文件（或称做摘要、网络摘要、或频更新，提供到频道）包含全文或是节录的文字，再加上发布者所订阅之网摘数据和授权的元数据。</p>\n<p>社交媒体混乱的时间线、聚合阅读工具烦人的算法推荐，都让我们无法高效地获取需要的信息。RSS 将信息的选择权交还给了用户，但 RSS 并不是什么新玩意，20多年前就有了。RSS可以让我们高效的获取感兴趣的信息。</p>\n<p>互联网的信息是庞杂的，甚至可以说是无限的，随着我们关注量的上升，我们关注的内容会越来越多，可能每天要去打开几十几百个网站或APP。手机里的有些 APP，收藏夹里的某些网站，也许就是为了看一小部分的内容，但是我们不得不装上它。通过 RSS 我们就可以将它们聚合在一起，还免受广告和追踪的困扰。也许对于一些内容还有即时推送的要求，有些网站和APP可能并没有推送，但是我们又需要即时收到推送（比如停水通知），这时如果通过 RSS 联动 IFTTT 便可以做到即时推送。可见 RSS 可以有提高信息获取效率、时效性高、便于管理、无广告等优点。</p>\n<h2 id=\"RSS工具\">RSS工具</h2>\n<h3 id=\"RSSHub\"><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/DIYgod/RSSHub\">RSSHub</a></h3>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://docs.rsshub.app\">RSSHub docs</a></p>\n<blockquote>\n<p>万物皆可 RSS</p>\n<p>RSSHub 是一个轻量、易于扩展的 RSS 生成器，可以给任何奇奇怪怪的内容生成 RSS 订阅源</p>\n</blockquote>\n<p>在使用一段时间后你可能会发现有很多网站和想订阅的内容没有提供 RSS，因为 RSS 不利于投放广告、收集数据等商业行为，越来越多的网站不再提供 RSS，甚至还反爬虫。幸好，我们还有 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/DIYgod/RSSHub\">RSSHub</a> 项目（反爬严格的网站也需要自建，RSSHub 文档有自建教程）。RSSHub 项目由 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/DIYgod\">DIYgod</a> 发起，经过许多开发者一年多的活跃开发，现在已经支持很多网站的 RSS 输出。具体支持那些网站可以查阅<a target=\"_blank\" rel=\"noopener\" href=\"https://docs.rsshub.app/\">文档</a>。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/31/20220531104157.webp\" alt=\"RSSHUB\"></p>\n<h3 id=\"RSSHub-Radar\">RSSHub Radar</h3>\n<p>RSSHub 项目，作者开发了相应的浏览器插件 -- RSSHub Radar。浏览器插件可以帮助你快速发现和订阅当前网站 RSS ，RSSHub 项目网站上也提供了很多可以直接拿来用的方式，例如订阅 B 站某 UP 主的投稿等，具体的请参看 https://docs.rsshub.app/social-media.html 后食用。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/31/20220531104112.webp\" alt=\"例如blog.17lai.site支持的订阅\"></p>\n<h3 id=\"Tiny-Tiny-RSS\"><a target=\"_blank\" rel=\"noopener\" href=\"https://tt-rss.org/\">Tiny Tiny RSS</a></h3>\n<blockquote>\n<p>可以Selfhost部署的RSS聚合客户端，支持多用户注册。</p>\n</blockquote>\n<h3 id=\"FEEDX\">FEEDX</h3>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://feedx.net/\">FEEDX</a> 是一个个人站，主打一些网站的全文 RSS，但质量上乘，没有 RSS 的话留言站长也会考虑做 RSS。</p>\n<h3 id=\"与其他-APP-联动\">与其他 APP 联动</h3>\n<h4 id=\"IFTTT\">IFTTT</h4>\n<blockquote>\n<p>IFTTT，是一个新生的网络服务平台，通过其他不同平台的条件来决定是否执行下一条命令。即对网络服务通过其他网络服务作出反应。IFTTT得名为其口号“if this then that”。</p>\n<p><strong>维基百科</strong><a target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/IFTTT\">zh.wikipedia.org/wiki/IFTTT</a></p>\n</blockquote>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://ifttt.com/\">IFTTT</a> 是一款可玩性很高的软件，其中便包含着 RSS Feed（有简单的关键词过滤功能），可以做到停水通知（×××有更新...）发送邮件或通知等功能。</p>\n<h4 id=\"Telegram-bot\">Telegram bot</h4>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://telegram.org/\">Telegram</a> 是一款国外的即时通讯聊天工具，除了加密、简洁流畅、跨平台、消息记录永久保存等优点外，我最喜欢的还是 Telegram bot 的功能。Telegram 里有各种各样的 bot，可以满足许多的需求，比如 十分钟邮箱、油管下载、听歌等 bot，RSS 订阅 bot 也十分多（IFTTT 同样有 Telegram bot）。这里就推荐一款最近才出现在眼前的 RSS bot：<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/indes/flowerss-bot\">flowerss bot</a>。优点是可以将 RSS 内容转换成 telegraph 来支持 Telegram 的应用内 instant view（即时预览用过的都说好！），还可以为 Group 和 Channel 订阅 RSS 消息。支持 Docker 部署。</p>\n<p>RSS 也许还有更多有趣好玩的方式，期待更多的骚操作被广大网友发现</p>\n<h2 id=\"Tiny-Tiny-RSS-Selfhost-搭建\"><a target=\"_blank\" rel=\"noopener\" href=\"https://tt-rss.org/\">Tiny Tiny RSS</a> Selfhost 搭建</h2>\n<h3 id=\"搭建要求\">搭建要求</h3>\n<ol>\n<li>一台服务器（我是 Debian 10,以它为例），能连上外网最好</li>\n<li>知道 Linux 基本命令</li>\n</ol>\n<h3 id=\"安装方式\">安装方式</h3>\n<ol>\n<li>传统方式安装，通过 git clone 的方式安装 TTRSS，这种方式安装比较慢，而且难度比较大，这里不介绍这种方式，如果有兴趣的话可以去<a target=\"_blank\" rel=\"noopener\" href=\"https://git.tt-rss.org/fox/tt-rss/wiki/InstallationNotes\">官方 wiki</a> 瞅瞅。</li>\n<li>Docker 安装，可以将 Docker 看作 虚拟机，但是又有占用小、启动快等优点，这里采用的是 @HenryQW 的通过 docker-compose 部署。<a target=\"_blank\" rel=\"noopener\" href=\"https://ttrss.henry.wang/zh/\">戳这里查看文档</a>。</li>\n</ol>\n<h3 id=\"开始安装\">开始安装</h3>\n<h4 id=\"安装-Docker\">安装 Docker</h4>\n<p>首先升级系统到最新</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt</span> update <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">apt</span> upgrade<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>可以选择使用一键脚本安装 Docker，优点是方便快速，缺点是有可能不稳定，<strong>如果使用此方法运行下面的命令后跳过后面的步骤直接到下一步</strong>。想一步步安装的请无视。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> https://get.docker.com/ <span class=\"token operator\">|</span> <span class=\"token function\">sh</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后安装一些软件包使 <code>apt</code> 支持 https</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token punctuation\">\\</span>\n  apt-transport-https <span class=\"token punctuation\">\\</span>\n  ca-certificates <span class=\"token punctuation\">\\</span>\n  <span class=\"token function\">curl</span> <span class=\"token punctuation\">\\</span>\n  gnupg2 <span class=\"token punctuation\">\\</span>\n  software-properties-common<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>添加 Docker 官方的 GPG 密钥</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -fsSL https://download.docker.com/linux/debian/gpg <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> apt-key <span class=\"token function\">add</span> -<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>添加 Docker CE 稳定版的库（<code>nightly</code>、<code>test</code> 版本可通过替换 <code>stable</code> 实现），这里是 <code>amd64</code> 架构的，其他架构自行替换。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> add-apt-repository <span class=\"token punctuation\">\\</span>\n  <span class=\"token string\">\"deb [arch=amd64] https://download.docker.com/linux/debian \\\n  <span class=\"token variable\"><span class=\"token variable\">$(</span>lsb_release -cs<span class=\"token variable\">)</span></span> \\\n  stable\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来更新 <code>apt</code> 包索引</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt</span> update<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>安装最新的 Docker CE 和 containerd（非必选）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt</span> <span class=\"token function\">install</span> docker-ce docker-ce-cli containerd.io<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>测试 docker 是否安装成功</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run hello-world<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>将 Docker 加入开机自启</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl <span class=\"token builtin class-name\">enable</span> <span class=\"token function\">docker</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/31/20220531110036.webp\" alt=\"成功运行示意图\"></p>\n<h4 id=\"安装-docker-compose\">安装 docker-compose</h4>\n<p>安装 docker-compose 最新版的命令可以在这里查看：https://github.com/docker/compose/releases</p>\n<h4 id=\"通过-docker-compose-部署\">通过 docker-compose 部署</h4>\n<p>下载 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/HenryQW/Awesome-TTRSS/blob/master/docker-compose.yml\">docker-compose.yml</a> 至任意目录或者新建 <code>docker-compose.yml</code> 拷贝我的内容进去。</p>\n<p>注意事项：</p>\n<ol>\n<li>包含了：<a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/wangqiru/ttrss\">TTRSS</a>、<a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/sameersbn/postgresql\">PostgreSQL</a>、<a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/wangqiru/mercury-parser-api\">Mercury Parser API</a>、<a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/wangqiru/opencc-api-server\">OpenCC API</a> 四个镜像，后面两个为可选项，可以安装也可以不安装。</li>\n<li>请务必更改 postgres 用户密码。</li>\n<li>默认通过 <code>181</code> 端口访问 TTRSS，</li>\n<li>默认账户：<code>admin</code> 密码：<code>password</code>，请第一时间更改。</li>\n</ol>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">docker<span class=\"token punctuation\">-</span>compose.yml\n<span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3'</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">database.postgres</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> postgres<span class=\"token punctuation\">:</span>alpine\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> postgres\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> PG_PASSWORD=password <span class=\"token comment\"># 务必修改密码！</span>\n      <span class=\"token punctuation\">-</span> DB_EXTENSION=pg_trgm\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./postgres/data/<span class=\"token punctuation\">:</span>/var/lib/postgresql/ <span class=\"token comment\"># 将数据库数据保存到当前目录的 postgres/data/ 文件夹中</span>\n\n  <span class=\"token key atrule\">service.rss</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> wangqiru/ttrss<span class=\"token punctuation\">:</span>latest\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> ttrss\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 181<span class=\"token punctuation\">:</span><span class=\"token number\">80</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> SELF_URL_PATH=http<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span>181/ <span class=\"token comment\"># 更改为你自己的域名或者 IP！</span>\n      <span class=\"token punctuation\">-</span> DB_HOST=database.postgres <span class=\"token comment\"># 数据库地址</span>\n      <span class=\"token punctuation\">-</span> DB_PORT=5432 <span class=\"token comment\"># 数据库端口</span>\n      <span class=\"token punctuation\">-</span> DB_NAME=ttrss <span class=\"token comment\"># 数据库名称</span>\n      <span class=\"token punctuation\">-</span> DB_USER=postgres <span class=\"token comment\"># 数据库用户名</span>\n      <span class=\"token punctuation\">-</span> DB_PASS=password <span class=\"token comment\"># 务必修改密码（应与上面修改的密码相同）</span>\n      <span class=\"token punctuation\">-</span> ENABLE_PLUGINS=auth_internal<span class=\"token punctuation\">,</span>fever <span class=\"token comment\"># 在系统层面启用的插件名称（为所有用户启用），auth_internal 为必选</span>\n    <span class=\"token key atrule\">stdin_open</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">tty</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> sh <span class=\"token punctuation\">-</span>c 'sh /wait<span class=\"token punctuation\">-</span>for.sh database.postgres<span class=\"token punctuation\">:</span>5432 <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span> php /configure<span class=\"token punctuation\">-</span>db.php <span class=\"token important\">&amp;&amp;</span> exec s6<span class=\"token punctuation\">-</span>svscan /etc/s6/'\n\n  <span class=\"token key atrule\">service.mercury</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 在插件页 API 地址填写 `service.mercury:3000` 启用插件</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> wangqiru/mercury<span class=\"token punctuation\">-</span>parser<span class=\"token punctuation\">-</span>api<span class=\"token punctuation\">:</span>latest\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> mercury\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">expose</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token number\">3000</span>\n\n  <span class=\"token key atrule\">service.opencc</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 在插件页 API 地址填写 `service.opencc:3000` 启用插件</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> wangqiru/opencc<span class=\"token punctuation\">-</span>api<span class=\"token punctuation\">-</span>server<span class=\"token punctuation\">:</span>latest\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> opencc\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> NODE_ENV=production\n    <span class=\"token key atrule\">expose</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token number\">3000</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>支持的环境变量列表：</p>\n<ul>\n<li>SELF_URL_PATH: TTRSS 实例地址</li>\n<li>DB_HOST: 数据库地址</li>\n<li>DB_PORT: 数据库端口</li>\n<li>DB_NAME: 数据库名字</li>\n<li>DB_USER: 数据库用户名</li>\n<li>DB_PASS: 数据库密码</li>\n<li>ENABLE_PLUGINS: 在系统层面启用的插件名称，其中 auth_internal 为必须启用的登录插件</li>\n<li>SESSION_COOKIE_LIFETIME: 使用网页版登陆时 cookie 过期时间，单位为小时，默认为 24 小时</li>\n</ul>\n<p>修改完成后在同目录下运行 <code>docker-compose up -d</code> 等待部署完成即可。此时通过域名（域名需解析到这个 VPS）或 ip 加刚刚设置的端口已经可以开始使用 TTRSS 了，出来登录的界面后先去改个密码，然后来开启 HTTPS 访问。</p>\n<blockquote>\n<p>Tips: TTRSS是每日构建，有时候构建出来的镜像没法使用，还不如固定一个Docker版本</p>\n</blockquote>\n<h3 id=\"配置-HTTPS\">配置 HTTPS</h3>\n<p>首先安装 nginx 并将其加入开机自启：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt</span> <span class=\"token function\">install</span> nginx\nsystemctl <span class=\"token builtin class-name\">enable</span>  nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>然后编写 ttrss 反向代理配置文件</p>\n<p>新建 /etc/nginx/conf.d/ttrss.conf 并将一下内容写入，注意替换域名。</p>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token directive\"><span class=\"token keyword\">nano</span> /etc/nginx/conf.d/ttrss.conf\n/etc/nginx/conf.d/ttrss.conf\nupstream ttrssdev</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token directive\"><span class=\"token keyword\">server</span> 127.0.0.1:181</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token directive\"><span class=\"token keyword\">listen</span> <span class=\"token number\">80</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">server_name</span>  youdomain.com</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">#return 301 https://youdomain.com$request_uri;</span>\n    <span class=\"token comment\">#rewrite ^(.*)$ https://$host$1 permanent;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token directive\"><span class=\"token keyword\">listen</span> <span class=\"token number\">443</span> ssl</span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">gzip</span> <span class=\"token boolean\">on</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">server_name</span>  youdomain.com</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token directive\"><span class=\"token keyword\">access_log</span> /var/log/nginx/ttrssdev_access.log combined</span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">error_log</span>  /var/log/nginx/ttrssdev_error.log</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token directive\"><span class=\"token keyword\">location</span> /</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_redirect</span> <span class=\"token boolean\">off</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_pass</span> http://ttrssdev</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span>  Host                <span class=\"token variable\">$http_host</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span>  X-Real-IP           <span class=\"token variable\">$remote_addr</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span>  X-Forwarded-Ssl     <span class=\"token boolean\">on</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span>  X-Forwarded-For     <span class=\"token variable\">$proxy_add_x_forwarded_for</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span>  X-Forwarded-Proto   <span class=\"token variable\">$scheme</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span>  X-Frame-Options     SAMEORIGIN</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token directive\"><span class=\"token keyword\">client_max_body_size</span>        <span class=\"token number\">100m</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">client_body_buffer_size</span>     <span class=\"token number\">128k</span></span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_buffer_size</span>           <span class=\"token number\">4k</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_buffers</span>               <span class=\"token number\">4</span> <span class=\"token number\">32k</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_busy_buffers_size</span>     <span class=\"token number\">64k</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_temp_file_write_size</span>  <span class=\"token number\">64k</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后使用 <code>nginx -t</code> 查看有无错误，没有错误后使用 <code>nginx -s reload</code> 重启 Nginx 服务。此时使用域名或 ip 应该可以直接访问了，不过这时还是 http。</p>\n<p>然后使用 <a target=\"_blank\" rel=\"noopener\" href=\"https://letsencrypt.org/zh-cn/\">Let’s Encrypt</a> 官方推荐的 <a target=\"_blank\" rel=\"noopener\" href=\"https://certbot.eff.org/\">Certbot</a> 获取免费的 SSL 证书。</p>\n<p>打开 <a target=\"_blank\" rel=\"noopener\" href=\"https://certbot.eff.org/instructions\">Certbot 说明</a> 后选择 Nginx 和运行的系统后就可以查看官方详细地说明，跟着做一遍就好了。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/2020220420142913-1.png\" alt=\"Cerbot 说明界面\"></p>\n<p>有证书之后再再访问我们的 TTRSS 服务器令人喜爱的小绿锁是不是就出来呢（可能需要重启 Nginx 服务）。</p>\n<p>到这个界面就算是告一段落了，撒花！</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/2020220420142913-2.png\" alt=\"TTRSS 界面\"></p>\n<h3 id=\"TTRSS-插件\">TTRSS 插件</h3>\n<h4 id=\"Mercury-全文获取\"><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/HenryQW/mercury_fulltext\">Mercury 全文获取</a></h4>\n<p>Mercury 全文获取插件需要配合单独的 Mercury Parser API 服务器使用，<a target=\"_blank\" rel=\"noopener\" href=\"https://blog.oevery.me/TTRSS%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/#%E9%80%9A%E8%BF%87-docker-compose-%E9%83%A8%E7%BD%B2\">docker-compose</a> 部署方式已经包含 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/HenryQW/mercury-parser-api\">HenryQW/mercury-parser-api</a> 服务器。</p>\n<p>设置步骤：</p>\n<p>首先去 TTRSS 的偏好设置中开启 Mercury。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/2020220420142913-3.png\" alt=\"开启 Mercury\"></p>\n<p>再在设置中填写 <code>mercury</code> 容器的地址。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/2020220420142913-4.png\" alt=\"填写 Mercury API 地址\"></p>\n<p>再右键点击源选择编辑信息源，在插件中对这个源开启插件。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/2020220420142913-5.png\" alt=\"对单个源开启插件\"></p>\n<h4 id=\"OpenCC-繁简转换\"><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/HenryQW/ttrss_opencc\">OpenCC 繁简转换</a></h4>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/BYVoid/OpenCC\">OpenCC</a> 是一个开源的简繁转换项目，需要配合单独的 Mercury Parser API 服务器使用，<a target=\"_blank\" rel=\"noopener\" href=\"https://blog.oevery.me/TTRSS%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/#%E9%80%9A%E8%BF%87-docker-compose-%E9%83%A8%E7%BD%B2\">docker-compose</a> 部署方式已经包含 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/HenryQW/OpenCC.henry.wang\">HenryQW/OpenCC.henry.wang</a> 服务器。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/2020220420142913-6.png\" alt=\"开启 opencc\"></p>\n<p>再在设置中填写刚刚查看的 <code>Opencc</code> 容器的地址。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/2020220420142913-7.png\" alt=\"填写 Opencc API 地址\"></p>\n<p>备注：t2s为繁体转简体，其他的转换方式如下:</p>\n<ul>\n<li>s2t: Simplified Chinese to Traditional Chinese 简体到繁体</li>\n<li>t2s: Traditional Chinese to Simplified Chinese 繁体到简体</li>\n<li>s2tw: Simplified Chinese to Traditional Chinese (Taiwan Standard) 简体到台湾正体</li>\n<li>tw2s: Traditional Chinese (Taiwan Standard) to Simplified Chinese 台湾正体到简体</li>\n<li>s2hk: Simplified Chinese to Traditional Chinese (Hong Kong Standard) 简体到香港繁体（香港小学学习字词表标准）</li>\n<li>hk2s: Traditional Chinese (Hong Kong Standard) to Simplified Chinese 香港繁体（香港小学学习字词表标准）到简体</li>\n<li>s2twp: Simplified Chinese to Traditional Chinese (Taiwan Standard) with Taiwanese idiom 简体到繁体（台湾正体标准）并转换为台湾常用词汇</li>\n<li>tw2sp: Traditional Chinese (Taiwan Standard) to Simplified Chinese with Mainland Chinese idiom 繁体（台湾正体标准）到简体并转换为中国大陆常用词汇</li>\n<li>t2tw: Traditional Chinese (OpenCC Standard) to Taiwan Standard 繁体（OpenCC 标准）到台湾正体</li>\n<li>t2hk: Traditional Chinese (OpenCC Standard) to Hong Kong Standard 繁体（OpenCC 标准）到香港繁体（香港小学学习字词表标准）</li>\n</ul>\n<p>这个插件同样需要去订阅源的编辑源信息中开启。</p>\n<h4 id=\"Fever-API\">Fever API</h4>\n<p>提供 Fever API 支持，对于使用 Reeder 的用户十分有用。<strong>该插件默认作为系统插件启用。</strong></p>\n<p>首先在设置中启用 API</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/2020220420142913-8.png\" alt=\"启用 API\"></p>\n<p>然后在插件中设置 Fever API 密码</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/2020220420142913-9.png\" alt=\"填写 Fever API 密码\"></p>\n<p>在支持 Fever 的阅读器使用 <code>https://youdomain.com/plugins/fever/</code> 作为服务器地址，使用刚刚设置的密码登录。由于该插件使用未加盐的 MD5 加密密码进行通信，强烈建议使用应用专用密码并开启 <a target=\"_blank\" rel=\"noopener\" href=\"https://blog.oevery.me/TTRSS%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/#%E9%85%8D%E7%BD%AE-HTTPS\">HTTPS</a>。</p>\n<h3 id=\"最终效果\">最终效果</h3>\n<blockquote>\n<p>把你感兴趣的RSS订阅了，甚至可以作为一个更加高效的私有搜索引擎来使用！</p>\n<p>个人独立博客是博文质量最高的搜索文章来源！</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/31/20220531105612.webp\" alt=\"TTRSS订阅blog.17lai.site效果\"></p>\n<h2 id=\"参考-2\">参考</h2>\n<ul>\n<li>https://blog.oevery.me/RSS%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/</li>\n<li>https://blog.oevery.me/TTRSS%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "docker",
                "tools",
                "rss",
                "rsshub"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/99be6dfb/",
            "url": "https://blog.17lai.site/posts/99be6dfb/",
            "title": "如何做好竞品分析",
            "date_published": "2022-05-30T10:35:43.000Z",
            "content_html": "<blockquote>\n<p><em>竞品分析</em>可以帮助我们更好地找准自身产品定位，发现自己产品的优劣所在，进而推动产品的优化迭代。</p>\n<p>Tips：友情提示，部分内容RSS输出获取不到，请跳转到源网页地址浏览全文！</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<div class=\"markmap-container\" style=\"height:750px\">\n  <svg data=\"{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;竞品分析&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;一、为什么做竞品分析？&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;1.知己知彼百战百胜&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;2.为自身的产品设计提供功能、可用性、关键技术等方面的参考&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;3.提高自身产品的差异化程度&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;4.降低风险&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;二、如何选择竞品？&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;1.寻找行业内领先的榜样产品（取其精华）&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;2.类似于自己的产品（竞争关系最大）&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;3.有潜力的竞品（存活原因）&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;三、如何做竞品调研？&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;1.市场分析：了解产业和行业的运作模式、所处环境和市场数据，便于筛选目标市场&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;2.用户分析：了解目标市场中全部用户的分层及画像，便于筛选目标用户&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;3.产品分析：了解开发生命周期中的差异&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;4.产品调研：了解产品生命周期中的差异&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;5.用户运营：了解产品中存量用户的细分，便于精细化运营&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[18,19]},&quot;v&quot;:&quot;6.用户调研：了解用户的体验和评价&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;7.竞品分析：从产品背后看企业，了解竞争者的资源配置情况&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[20,21]},&quot;v&quot;:&quot;四、竞品分析的基本思路&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;1.分析目的有哪些？&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[22,23]},&quot;v&quot;:&quot;2.分析对象有哪些？&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[23,24]},&quot;v&quot;:&quot;3.分析角度有哪些？&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[24,25]},&quot;v&quot;:&quot;4.竞品信息的来源有哪些？&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[25,26]},&quot;v&quot;:&quot;5.竞品信息的处理流程有哪些？&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[26,27]},&quot;v&quot;:&quot;6.分析方法有哪些？&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[27,28]},&quot;v&quot;:&quot;7.结论如何呈现？&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[28,29]},&quot;v&quot;:&quot;五、竞品分析的模型方法&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[29,30]},&quot;v&quot;:&quot;1.PEST分析模型&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[30,31]},&quot;v&quot;:&quot;2.STP理论&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[31,32]},&quot;v&quot;:&quot;3.波特五力模型&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[32,33]},&quot;v&quot;:&quot;4.波士顿矩阵分析&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[33,34]},&quot;v&quot;:&quot;5.用户体验五要素&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[34,35]},&quot;v&quot;:&quot;6.APPEALS模型&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[35,36]},&quot;v&quot;:&quot;7.SWOT分析法&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[36,37]},&quot;v&quot;:&quot;六、竞品分析报告模板&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[37,38]},&quot;v&quot;:&quot;1.分析目的：为什么做分析报告&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[38,39]},&quot;v&quot;:&quot;2.确定竞品：分析了哪些、产品形态、产品版本、体验环境&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[39,40]},&quot;v&quot;:&quot;3.竞品分析：战略定位、目标用户、商业模式、运营策略、产品功能及设计、市场推广、盈利模式&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[40,41]},&quot;v&quot;:&quot;4.复盘总结：优缺点总结、结论、趋势预测&quot;}]}]}\"></svg>\n</div>\n\n<p><strong>如何做好竞品分析？竞品分析的六大维度</strong></p>\n<hr>\n<h2 id=\"一、为什么做竞品分析？\">一、为什么做竞品分析？</h2>\n<p>1.知己知彼百战百胜</p>\n<p>2.为自身的产品设计提供功能、可用性、关键技术等方面的参考</p>\n<p>3.提高自身产品的差异化程度</p>\n<p>4.降低风险</p>\n<h2 id=\"二、如何选择竞品？\">二、如何选择竞品？</h2>\n<p>1.寻找行业内领先的榜样产品（取其精华）</p>\n<p>2.类似于自己的产品（竞争关系最大）</p>\n<p>3.有潜力的竞品（存活原因）</p>\n<h2 id=\"三、如何做竞品调研？\">三、如何做竞品调研？</h2>\n<p>1.市场分析：了解产业和行业的运作模式、所处环境和市场数据，便于筛选目标市场</p>\n<p>2.用户分析：了解目标市场中全部用户的分层及画像，便于筛选目标用户</p>\n<p>3.产品分析：了解开发生命周期中的差异</p>\n<p>4.产品调研：了解产品生命周期中的差异</p>\n<p>5.用户运营：了解产品中存量用户的细分，便于精细化运营</p>\n<p>6.用户调研：了解用户的体验和评价</p>\n<p>7.竞品分析：从产品背后看企业，了解竞争者的资源配置情况</p>\n<h2 id=\"四、竞品分析的基本思路\">四、竞品分析的基本思路</h2>\n<p>1.分析目的有哪些？</p>\n<p>2.分析对象有哪些？</p>\n<p>3.分析角度有哪些？</p>\n<p>4.竞品信息的来源有哪些？</p>\n<p>5.竞品信息的处理流程有哪些？</p>\n<p>6.分析方法有哪些？</p>\n<p>7.结论如何呈现？</p>\n<h2 id=\"五、竞品分析的模型方法\">五、竞品分析的模型方法</h2>\n<p>1.PEST分析模型</p>\n<p>2.STP理论</p>\n<p>3.波特五力模型</p>\n<p>4.波士顿矩阵分析</p>\n<p>5.用户体验五要素</p>\n<p>6.APPEALS模型</p>\n<p>7.SWOT分析法</p>\n<h2 id=\"六、竞品分析报告模板\">六、竞品分析报告模板</h2>\n<p>1.分析目的：为什么做分析报告</p>\n<p>2.确定竞品：分析了哪些、产品形态、产品版本、体验环境</p>\n<p>3.竞品分析：战略定位、目标用户、商业模式、运营策略、产品功能及设计、市场推广、盈利模式</p>\n<p>4.复盘总结：优缺点总结、结论、趋势预测</p>\n<p>参考</p>\n<blockquote>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://www.toutiao.com/w/1715860400857102/?app=news_article&amp;timestamp=1636390347&amp;use_new_style=1&amp;wxshare_count=1&amp;tt_from=weixin&amp;utm_source=weixin&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share&amp;share_token=9281a285-eb3d-4deb-8aea-53198576df36\">如何做好竞品分析</a></p>\n</blockquote>\n<h2 id=\"附赠\">附赠</h2>\n<h3 id=\"钱学森《论系统工程》\">钱学森《论系统工程》</h3>\n<blockquote>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://www.toutiao.com/article/7040646100411449860/\">钱学森诞辰110周年：重读经典，钱学森《论系统工程》笔记摘要</a></p>\n</blockquote>\n<p>钱老从中国传统哲学角度出发，把工业企业运行分为人、物、事三类要素。“人”就是组织、岗位和人员；“物”就是产品、设备等；“事”就是事物运转的流程。与国外的TOGAF建模方法不同，钱老说的模型太接地气了，中国人一听就懂。<br>\n事实上，钱老刚回国，一穷二白，怎么搞航天，就是靠得这种系统工程理论，层层递进，才成就复杂的两弹一星工程。我们现在开发工业管理软件，实际上就是要找到这种底层的事物的规律，才可能起到事半功倍的效果，可以说是面向对象的中国特色版：</p>\n<p>以下是钱老的原文，大家可以一起学习下：</p>\n<blockquote>\n<p>就一个工厂甚至任何一个环节而言，都由下列人、物、事三类要素组成。其中“人”当然是第一要素；物包括三个要素即：物资（能源、原料、半成品、成品等），设备（土木建筑、机电设备、工具仪表等）和财（工资、流动资金等）；事包括两个要素：任务的推进（上级所下达的任务或与其他单位所订的合约）与信息的传递（数据、图纸、报表、规章、决策等等）。从历史上一个个体劳动者泥瓦匠的工作开始，就包含这六个要素。</p>\n<p>人、物资、设备、财、任务和信息这六个要素，都要满足一定的制约，一是经济规律的制约，一是技术条件的制约。进行经营管理首先要认识这种制约，并从而能动地求得在制约下的系统的最优运转。通过六个要素，把一个复杂的生产体系组织管理好，需要科学，即所谓经营科学。从历史上一个个体劳动者泥瓦匠的工作开始，就包含这六个要素。那时人当然是有的，不过是个体；砖瓦木料便是物资；斧锯瓦刀是设备；钱当然是个因素，任务指标是明确的；至于信息可能全部都存放在泥瓦匠这个人的头脑中。在现代的大工厂中，还是这六种要素，只不过规模空前地扩大。在工厂这个整系统中，各分系统之间的相互作用和相互依赖的关系，就凭这六个要素的流通而得以体现。</p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://www.toutiao.com/i7001168354962637316/\">中国为什么没有自己的编程语言？哲学、数学和语言学基础是关键</a></p>\n<p>钱老的物、事、人的理论是生根于中国历史文化中，有着具有中国特色的世界观和价值观，这也是中国哲学的基础研究问题。所以非常容易被东方文化人群所接受，每一个中国人都很容易理解物、事和人的划分，这就为理论应用奠定了基础。</p>\n</blockquote>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "管理",
                "竞品分析"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/a2a43504/",
            "url": "https://blog.17lai.site/posts/a2a43504/",
            "title": "中西医的优缺点",
            "date_published": "2022-05-30T09:14:35.000Z",
            "content_html": "<blockquote>\n<p>中医西医谁更科学，总是争论不休，这里说说个人的一些看法，中西医都是非科学，都只是经验科学，各有各自的优缺点</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/30/20220530164117.webp\" alt=\"\"></p>\n<span id=\"more\"></span>\n<p>中医治疗调理费用低，见效慢，但是把人体作为整体调理，治疗疾病的根本原因。西医通过药物提取，化学合成，见效快，但是有耐药性，常常头痛医头，脚痛医脚，哪里有问题，就切除哪里。</p>\n<h2 id=\"中医西医都是非科学\">中医西医都是非科学</h2>\n<blockquote>\n<p>按照现代科学定义，中医西医都非<code>1+1=2</code>这样类似数学的严格意义上面的科学。都只是<mark>经验科学</mark>！</p>\n</blockquote>\n<h2 id=\"人体是非科学的\">人体是非科学的</h2>\n<blockquote>\n<p>现代科学远远不能解释人体运行机制，在系统性人体解释方面西医还不如中医。</p>\n<p>张三心率60，身体健康。李四心率80，身体也是健康的。人体几乎所有的指标都是没法科学量化的，现代仪器检测的指标几乎都是盲人摸象，用现代的科学的手段去研究非科学的人体本身就是反科学的。</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/30/20220530164728.webp\" alt=\"\"></p>\n<h2 id=\"中医治病于未然\">中医治病于未然</h2>\n<blockquote>\n<p>防患于未然，机体稍有功能上的变化，中医即认为是阴阳失衡，就要适当的调整。治病求本，发现问题就要找到发病的根本，从根本上去除疾病，从而使机体恢复正常状态。</p>\n<p>而西医，你的身体不出问题就认为没有问题。而不知道疾病隐患已经在身体慢慢积累，就等某一天爆发</p>\n</blockquote>\n<h2 id=\"中药没有耐药性\">中药没有耐药性</h2>\n<blockquote>\n<p>你找不到两株一模一样的药材，吃中医永远不会有抗药性问题。而西医通过提纯，化学合成看似疗效快，但会有抗药性问题，长期来看，几乎所有的西药都可能失去作用！而中药，几千年后，如果还有人类，还是会吃和今天一样的中药。</p>\n</blockquote>\n<p>中药虽然没有抗药性，但现代中药种植导致药效远不如以前，通过加大剂量可以解决。</p>\n<h2 id=\"中医是生命学，西医是死物学\">中医是生命学，西医是死物学</h2>\n<blockquote>\n<p>中医整体观念，中医认为人与自然是统一的整体，自然界的变化对人体的影响是不容忽视的；人体本身是不可分割的统一整体，一个位置有病，其根本不一定在这里，多数是两三个脏器或经络功能失衡的结果。而西医几百年了，还是在研究分子化学，下药手术都只是作用与复杂人体的一部分区域。</p>\n</blockquote>\n<blockquote>\n<p>西医分析分子结构，但没搞明白同样是水，味道也是不同的。</p>\n<p>同样的纯净水，热水冷水混合的，开水，冰水，恒温静置一晚的水，经过祝福或者咒骂的水，味道都是不同的。对人的作用也是差异极大。</p>\n<p>有兴趣的可以去了解一下酸性食物，碱性食物；寒性食物，热性食物的差异与区分方法。</p>\n<p>同样是水，可以是寒性的，也可以是热性的。同样的茶叶，不同生长环境价值相差上万倍。同一种草药，必须是特定地域生长的才能治病！西医对这一块几乎没啥研究。</p>\n</blockquote>\n<h2 id=\"双盲实验是非科学的\">双盲实验是非科学的</h2>\n<blockquote>\n<p>人体本身是复杂的，多样的，没法量化的。用一批各种年龄，性别，身体条件的人去做双盲实验是初中生生物化学知识都可以判断是不科学的。除非用一堆基因一样，生活成长条件一样的克隆人做双盲实验。</p>\n</blockquote>\n<blockquote>\n<p>现代的双盲实验非常容易操控结果。</p>\n<p>通过选择特定年龄，性别，胖瘦等身体条件，可以很容易的控制实验结果！这也是西方制药公司经常干的事，历史上比比皆是！</p>\n</blockquote>\n<h2 id=\"西医也有很多荒诞无知的历史\">西医也有很多荒诞无知的历史</h2>\n<blockquote>\n<p>早期西医是理发师兼任的，现在理发店外面红白相间旋转的是纪念以前理发师给病人放血治疗的染血绷带。老美创建者乔治.华盛顿就是放血过多死亡的！</p>\n<p>扁桃体，十二指肠西医以前都是建议切除。现在发现了其重要生理功能，建议保留了。</p>\n<p>镭元素发现后，被制作为各种保健品，饮料发售，很长时间都是\"科学\"背书。</p>\n<p>骇人听闻的脑前额切除术，得了诺贝尔奖，把无数正常人变成痴呆，都是以西医科学的名义造成的！</p>\n<p>等等。</p>\n<p>请不要对这些历史视而不见！</p>\n<p>现代医学过度治疗，很多反而不如带病生活的时间长。没见到很多医生自己得了癌症不治疗么？</p>\n</blockquote>\n<blockquote>\n<p>医生一罢工，全国死亡率下降50%！（<a target=\"_blank\" rel=\"noopener\" href=\"https://www.163.com/dy/article/F09O6MQU0519H58O.html\">援引</a>）</p>\n<p>这听起来是个笑话，但确是真实的历史事实。各种解释很多，但这个现象足够引人深思！</p>\n</blockquote>\n<h2 id=\"中医费用低导致被黑\">中医费用低导致被黑</h2>\n<blockquote>\n<p>对于医药公司来说，中医费用低是缺点。它们恨不得你的疾病需要天天服药，一辈子服药。</p>\n<p>费用低，怎么拿回扣？</p>\n<p>费用低，怎么上市圈钱？</p>\n<p>费用低，怎么养写手去黑对手？</p>\n<p>国内各大交流平台，基本都被国外势力操控，连说一点中医中立的观点都会被删帖，封号。其中一部分人拿钱办事，是坏，还有一部分人是智商低，蠢，要注意分辨。</p>\n<p>请警醒，中医国宝一边在被国外势力有计划的抹黑，打压，一边又在偷窃中医的成果。</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/30/20220530164726.webp\" alt=\"\"></p>\n<h2 id=\"总结-2\">总结</h2>\n<blockquote>\n<p>生老病死都是生命旅途中的一部分，我们要学会接受它。</p>\n<p>中医是几千年的经验总结，其中虽然有一些荒诞的部分，但也有非常多的宝藏等待我们去挖掘。</p>\n<p>西医几百年发展虽然有不少见效快的治疗手段，但是由于现代科学本身科学性就有局限性，所以现代西医的科学性也要批判的接受。</p>\n</blockquote>\n<p>个人见解，也请理性接收！</p>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "中医",
                "西医",
                "社会观察"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/e691e603/",
            "url": "https://blog.17lai.site/posts/e691e603/",
            "title": "常用Linux Bash命令教程",
            "date_published": "2022-05-28T13:49:36.000Z",
            "content_html": "<blockquote>\n<p>常用linux命令介绍。入门Linux必学的命令行，熟练掌握后，效率远超Windows GUI操作。重要的是，可以方便的做自动化处理！</p>\n<p>更多命令在线查询 <a target=\"_blank\" rel=\"noopener\" href=\"https://linux-command.17lai.site/\">linux-command.17lai.site</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/2120220421192048.svg\" alt=\"\"></p>\n<h2 id=\"一、系统相关\">一、系统相关</h2>\n<h3 id=\"1-hostname-查看主机名\">1. hostname - 查看主机名</h3>\n<p><code>hostname</code>命令用于查看系统的主机名，或是修改系统的主机名。</p>\n<p><code>hostname</code>的常用命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 显示系统的当前主机名</span>\n<span class=\"token function\">hostname</span>\n\n<span class=\"token comment\"># 修改你系统的主机名</span>\n<span class=\"token function\">hostname</span> blinkfox-system\n\n<span class=\"token comment\"># 使用 -F 选项，从指定的文件中读取主机名</span>\n<span class=\"token function\">hostname</span> -F /root/hostname.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-uptime-查看系统运行时间\">2. uptime - 查看系统运行时间</h3>\n<p><code>uptime</code>命令用于打印系统的运行时间等信息。使用如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">uptime</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"3-w、who-列出登录的用户\">3. w、who - 列出登录的用户</h3>\n<p><code>w</code>命令用于显示登录用户及他们当前运行的进程。输入的内容格式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">w\n\n<span class=\"token comment\"># 打印如下</span>\n<span class=\"token number\">22</span>:42  up <span class=\"token number\">18</span> days, <span class=\"token number\">1</span> hr, <span class=\"token number\">2</span> users, load averages: <span class=\"token number\">1.23</span> <span class=\"token number\">1.79</span> <span class=\"token number\">1.75</span>\n<span class=\"token environment constant\">USER</span>     TTY      FROM              LOGIN@  IDLE WHAT\nblinkfox console  -                日19   6days -\nblinkfox s000     -                五23       - w<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>who</code>命令有与<code>w</code>命令类似的用途，但它的功能比<code>w</code>命令更强大一些。语法格式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">who</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>. <span class=\"token punctuation\">[</span>FILE <span class=\"token operator\">|</span> ARG1 ARG2<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><code>who</code>常用命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 显示当前登录的所有用户信息</span>\n<span class=\"token function\">who</span>\n\n<span class=\"token comment\"># 显示系统的启动时间</span>\n<span class=\"token function\">who</span> -b\n\n<span class=\"token comment\"># 显示系统登录进程</span>\n<span class=\"token function\">who</span> -l\n\n<span class=\"token comment\"># 显示与当前标准输入关联的用户信息</span>\n<span class=\"token function\">who</span> -m\n\n<span class=\"token comment\"># 显示系统的运行级别</span>\n<span class=\"token function\">who</span> -r\n\n<span class=\"token comment\"># 显示所有登录用户的用户名和登录用户数</span>\n<span class=\"token function\">who</span> -q<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"4-uname-查看系统信息\">4. uname - 查看系统信息</h3>\n<p><code>uname</code>命令用于打印内核名称和版本、主机名等系统信息。命令的语法如下所示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">uname</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>常用使用方式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 只打印内核的名称</span>\n<span class=\"token function\">uname</span>\n\n<span class=\"token comment\"># 使用 -n 选项，只打印系统的主机名</span>\n<span class=\"token function\">uname</span> -n\n\n<span class=\"token comment\"># 使用 -r 选项，打印内核版本信息</span>\n<span class=\"token function\">uname</span> -r\n\n<span class=\"token comment\"># 使用 -m 选项，打印系统的硬件名称</span>\n<span class=\"token function\">uname</span> -m\n\n<span class=\"token comment\"># 使用 -p 选项，打印系统的处理器类型信息</span>\n<span class=\"token function\">uname</span> -p\n\n<span class=\"token comment\"># 使用 -i 选项，打印系统的硬件平台信息</span>\n<span class=\"token function\">uname</span> -i\n\n<span class=\"token comment\"># 使用 -a 选项，打印上述所有示例中的信息</span>\n<span class=\"token function\">uname</span> -a<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"5-date-显示和设置系统日期和时间\">5. date - 显示和设置系统日期和时间</h3>\n<p><code>date</code>命令用于以多种格式显示日期和时间，或设置系统的日期和时间。<code>date</code>命令的语法如下所示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">date</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>. <span class=\"token punctuation\">[</span>+FORMAT<span class=\"token punctuation\">]</span>\n<span class=\"token function\">date</span> <span class=\"token punctuation\">[</span>-u<span class=\"token operator\">|</span>--utc<span class=\"token operator\">|</span>--universal<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>MMDDhhmm<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>CC<span class=\"token punctuation\">]</span>YY<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>.ss<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>常用使用命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 以默认格式显示系统的当前日期时间</span>\n<span class=\"token function\">date</span>\n\n<span class=\"token comment\"># 格式化当前日期</span>\n<span class=\"token function\">date</span> +<span class=\"token string\">\"%Y-%m-%d\"</span>\n\n<span class=\"token comment\"># 格式化输出昨天的日期</span>\n<span class=\"token function\">date</span> -d <span class=\"token string\">\"1 day ago\"</span> +<span class=\"token string\">\"%Y-%m-%d\"</span>\n\n<span class=\"token comment\"># 2秒后格式化输出</span>\n<span class=\"token function\">date</span> -d <span class=\"token string\">\"2 second\"</span> +<span class=\"token string\">\"%Y-%m-%d %H:%M.%S\"</span>\n\n<span class=\"token comment\"># 普通格式化转出</span>\n<span class=\"token function\">date</span> -d <span class=\"token string\">\"2009-12-12\"</span> +<span class=\"token string\">\"%Y/%m/%d %H:%M.%S\"</span>\n\n<span class=\"token comment\"># apache格式转换</span>\n<span class=\"token function\">date</span> -d <span class=\"token string\">\"Dec 5, 2009 12:00:37 AM\"</span> +<span class=\"token string\">\"%Y-%m-%d %H:%M.%S\"</span>\n\n<span class=\"token comment\"># 日期加减操作</span>\n<span class=\"token function\">date</span> +%Y%m%d <span class=\"token comment\">#显示前天年月日</span>\n<span class=\"token function\">date</span> -d <span class=\"token string\">\"+1 day\"</span> +%Y%m%d <span class=\"token comment\">#显示前一天的日期</span>\n<span class=\"token function\">date</span> -d <span class=\"token string\">\"-1 day\"</span> +%Y%m%d <span class=\"token comment\">#显示后一天的日期</span>\n<span class=\"token function\">date</span> -d <span class=\"token string\">\"-1 month\"</span> +%Y%m%d <span class=\"token comment\">#显示上一月的日期</span>\n<span class=\"token function\">date</span> -d <span class=\"token string\">\"+1 month\"</span> +%Y%m%d <span class=\"token comment\">#显示下一月的日期</span>\n<span class=\"token function\">date</span> -d <span class=\"token string\">\"-1 year\"</span> +%Y%m%d <span class=\"token comment\">#显示前一年的日期</span>\n<span class=\"token function\">date</span> -d <span class=\"token string\">\"+1 year\"</span> +%Y%m%d <span class=\"token comment\">#显示下一年的日期</span>\n\n<span class=\"token comment\"># 设定时间</span>\n<span class=\"token function\">date</span> -s <span class=\"token comment\"># 设置当前时间，只有root权限才能设置，其他只能查看</span>\n<span class=\"token function\">date</span> -s <span class=\"token number\">20160816</span> <span class=\"token comment\"># 设置成20160816，这样会把具体时间设置成空00:00:00</span>\n<span class=\"token function\">date</span> -s 01:01:01 <span class=\"token comment\"># 设置具体时间，不会对日期做更改</span>\n<span class=\"token function\">date</span> -s <span class=\"token string\">\"01:01:01 2012-05-23\"</span> <span class=\"token comment\"># 这样可以设置全部时间</span>\n<span class=\"token function\">date</span> -s <span class=\"token string\">\"01:01:01 20120523\"</span> <span class=\"token comment\"># 这样可以设置全部时间</span>\n<span class=\"token function\">date</span> -s <span class=\"token string\">\"2012-05-23 01:01:01\"</span> <span class=\"token comment\"># 这样可以设置全部时间</span>\n<span class=\"token function\">date</span> -s <span class=\"token string\">\"20120523 01:01:01\"</span> <span class=\"token comment\"># 这样可以设置全部时间</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"6-id-显示用户属性\">6. id - 显示用户属性</h3>\n<p><code>id</code>命令用于打印输出用户<code>uid</code>、<code>gid</code>、用户名和组名等用户身份信息。<code>id</code>命令的语法如下所示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">id</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>. <span class=\"token punctuation\">[</span>USERNAME<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>常见使用命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 输出当前用户的uid、用户名、gid、组名及用户属于的群组信息</span>\n<span class=\"token function\">id</span>\n\n<span class=\"token comment\"># 使用 -u 选项，输出用户的 uid</span>\n<span class=\"token function\">id</span> -u\n\n<span class=\"token comment\">#-u 选项和 -n 选项结合使用，输出账户的用户名</span>\n<span class=\"token function\">id</span> -un\n\n<span class=\"token comment\"># 使用 -g 选项，输出帐号当前起作用的gid</span>\n<span class=\"token function\">id</span> -g\n\n<span class=\"token comment\"># -g 与 -n 选项结合使用，输出帐号当前起作用的用户组名</span>\n<span class=\"token function\">id</span> -gn\n\n<span class=\"token comment\"># 使用 -G 选项，输出帐号所属的所有群组id</span>\n<span class=\"token function\">id</span> -G root\n\n<span class=\"token comment\"># -G 与 -n 选项结合使用，输出账号所属的所有群组的名称</span>\n<span class=\"token function\">id</span> -Gn root<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"二、文件和目录操作\">二、文件和目录操作</h2>\n<h3 id=\"1-touch-创建文件\">1. touch - 创建文件</h3>\n<p><code>touch</code>命令就可用于创建、变更和修改文件的时间戳。它是 Linux 操作系统的标准程序。<code>touch</code>命令又如下选项：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">-a: 只改变访问时间\n-c: 不创建任何文件\n-m: 只改变修改时间\n-r: 使用指定文件的时间替代当前时间\n-t: 使用 <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>CC<span class=\"token punctuation\">]</span>YY<span class=\"token punctuation\">]</span>MMDDhhmm<span class=\"token punctuation\">[</span>.ss<span class=\"token punctuation\">]</span> 替代当前时间<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>touch 命令的常见用法如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 创建一个名为 effyl 的新空文件</span>\n<span class=\"token function\">touch</span> effyl\n\n<span class=\"token comment\"># 同时创建名称分别为 effyl myeffyl lueffyl 的三个文件</span>\n<span class=\"token function\">touch</span> effyl myeffyl lueffyl\n\n<span class=\"token comment\"># 使用 -a 选项，可以改变或更新文件的最新访问时间，如果文件 effyl 不存在，则新创建一个</span>\n<span class=\"token function\">touch</span> -a effyl\n\n<span class=\"token comment\"># 使用 -c 选项，可以避免创建一个新文件，并用当前时间更新文件的时间戳</span>\n<span class=\"token function\">touch</span> -c effyl\n\n<span class=\"token comment\"># 使用 -m 选项，可以只改变文件的修改时间，而访问时间不变</span>\n<span class=\"token function\">touch</span> -m effyl\n\n<span class=\"token comment\"># 使用 -c 和 -t 选项，来明确设置文件的时间</span>\n<span class=\"token function\">touch</span> -c -t YYMMDDHHMM filename\n\n<span class=\"token comment\"># 如果想使用文件 myeffyl 的时间戳更新文件 effyl 的时间戳，可以使用 -r 选项</span>\n<span class=\"token function\">touch</span> -r myeffyl effyl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-mkdir-创建目录\">2.mkdir - 创建目录</h3>\n<p><code>mkdir</code>命令用于创建一个新目录。最基本的<code>mkdir</code>命令的使用方法如下所示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 在当前目录下创建一个给定的目录名</span>\n<span class=\"token function\">mkdir</span> <span class=\"token operator\">&lt;</span>dirname<span class=\"token operator\">&gt;</span>\n\n<span class=\"token comment\"># 在 backup 中的相对路径创建一个名为 old 的目录</span>\n<span class=\"token function\">mkdir</span> backup/old\n\n<span class=\"token comment\"># 在 backup 中的绝对路径中创建一个名为 old 的目录</span>\n<span class=\"token function\">mkdir</span> /home/blinkfox/backup/old\n\n<span class=\"token comment\"># 使用 -p 选项，会自动创建所有还不存在的父目录</span>\n<span class=\"token function\">mkdir</span> -p backup/old\n\n<span class=\"token comment\"># 使用 -m 选项，可以设置将要创建目录的权限</span>\n<span class=\"token comment\"># 如：创建一个任何人都有读写访问权限的目录</span>\n<span class=\"token function\">mkdir</span> -p -m <span class=\"token number\">777</span> backup/old<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3-cp-复制文件或目录\">3.cp - 复制文件或目录</h3>\n<p><code>cp</code>命令用于将文件从一个地方复制到另一个地方。原来的文件保持不变，新文件可能保持原名或用一个不同的名字。</p>\n<p>使用 cp 命令复制文件和目录的语法有以下几种：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 复制源文件到目标文件</span>\n<span class=\"token function\">cp</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span> SOURCE DEST\n\n<span class=\"token comment\"># 复制一个或多个源文件到一个目录</span>\n<span class=\"token function\">cp</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span> SOURCE<span class=\"token punctuation\">..</span>. DIRECTORY\n\n<span class=\"token comment\"># 同上</span>\n<span class=\"token function\">cp</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span> -t DIRECTORY SOURCE<span class=\"token punctuation\">..</span>.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>常用使用示例如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 在当前目录下，创建一个文件 file.txt 的副本，取名为 newfile.txt</span>\n<span class=\"token function\">cp</span> file.txt newfile.txt\n\n<span class=\"token comment\"># 复制当前目录下的 file.txt 文件到 /tmp 目录下</span>\n<span class=\"token function\">cp</span> file.txt /tmp\n\n<span class=\"token comment\"># 复制当前目录下的所有文件到 /tmp 目录下</span>\n<span class=\"token function\">cp</span> * /tmp\n\n<span class=\"token comment\"># 使用 -p 选项，可以使复制一个文件到新文件时，保留源文件的所有者、权限等信息</span>\n<span class=\"token function\">cp</span> -p filename /path/to/new/location/myfile\n\n<span class=\"token comment\"># 使用 -R 或 -r 选项，恶意递归地复制一个目录</span>\n<span class=\"token comment\"># 即将一个目录及其下的所有文件和子目录都复制到另一个目录</span>\n<span class=\"token function\">cp</span> -R * /home/blinkfox/backup<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"4-ln-链接文件或目录\">4.ln - 链接文件或目录</h3>\n<p><code>ln</code>命令用于创建软链接或硬链接。使用 -s 选项，可以创建一个软链接：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 在目录 lib 下创建一个软链接 library.so，链接到 /home/blinkfox/src/library.so</span>\n<span class=\"token function\">ln</span> -s /home/blinkfox/src/library.so /home/blinkfox/lib\n\n<span class=\"token comment\"># 创建目录的软链接</span>\n<span class=\"token function\">ln</span> -s /home/blinkfox/src <span class=\"token builtin class-name\">source</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"5-mv-移动文件或目录\">5. mv - 移动文件或目录</h3>\n<p><code>mv</code>命令用于将文件和目录从一个位置移到另外一个位置。除了移动文件，<code>mv</code>命令还可用于修改文件或目录的名字。</p>\n<p>mv 命令的基本语法如下所示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mv</span> SOURCE<span class=\"token punctuation\">..</span>. DIRECTORY<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>常用命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 将当前目录下的文件 source.txt 移到目录 /tmp 下</span>\n<span class=\"token function\">mv</span> source.txt /tmp\n\n<span class=\"token comment\"># 将目录 dir1、dir2 移到目录 dir_dist 下</span>\n<span class=\"token function\">mv</span> dir1 dir2 dir_dist\n\n<span class=\"token comment\"># 将当前目录下的 old.txt 文件更名为 new.txt</span>\n<span class=\"token function\">mv</span> old.txt new.txt\n\n<span class=\"token comment\"># 使用 -i 选项，在重写覆盖目标文件或目录之前给出提示信息</span>\n<span class=\"token function\">mv</span> -i old.txt new.txt\n\n<span class=\"token comment\"># 将当前目录下的所有文件移动到目录 /tmp 下</span>\n<span class=\"token function\">mv</span> * /tmp/\n\n<span class=\"token comment\"># 使用 -i 选项，从 dir1 中移动那些在目标目录中不存在的文件到目标目录</span>\n<span class=\"token function\">mv</span> -u dir1/* dir2/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"6-rm-删除文件或目录\">6.rm - 删除文件或目录</h3>\n<p><code>rm</code>命令用于删除指定的文件和目录。其语法如下所示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> <span class=\"token punctuation\">[</span>OPTIONS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>. FILE<span class=\"token punctuation\">..</span>.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><code>rm</code>的常用命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 删除当前目录下的文件 file1.txt、file2.txt、file3.txt</span>\n<span class=\"token function\">rm</span> file1.txt file2.txt file3.txt\n\n<span class=\"token comment\"># 删除当前目录下的所有文件</span>\n<span class=\"token function\">rm</span> *\n\n<span class=\"token comment\"># 删除你当前帐号主目录下的 temp 目录中的所有文件</span>\n<span class=\"token function\">rm</span> ~/temp/*\n\n<span class=\"token comment\"># 使用 -i 选项，可以在删除每个文件或目录前提示用户确认</span>\n<span class=\"token function\">rm</span> -i *\n\n<span class=\"token comment\"># 删除当前目录下所有以\".doc\"结尾的文件</span>\n<span class=\"token function\">rm</span> *.doc\n\n<span class=\"token comment\"># 删除当前目录下所有文件名中包含\"movie\"字符串的文件</span>\n<span class=\"token function\">rm</span> *movie*\n\n<span class=\"token comment\"># 删除当前目录下所有以\"a\"开头的文件</span>\n<span class=\"token function\">rm</span> a*\n\n<span class=\"token comment\"># 删除当前目录下整个文件名（包括扩展名）只有 3 个字符的所有文件</span>\n<span class=\"token function\">rm</span> ???\n\n<span class=\"token comment\"># 删除当前目录下文件扩展名有两个字符的所有文件</span>\n<span class=\"token function\">rm</span> *.??\n\n<span class=\"token comment\"># 删除当前目录下文件名中含有字母 a 或 b 或 c 的所有文件</span>\n<span class=\"token function\">rm</span> *<span class=\"token punctuation\">[</span>abc<span class=\"token punctuation\">]</span>*\n\n<span class=\"token comment\"># 删除当前目录下文件名中包含 0~9 的所有文件</span>\n<span class=\"token function\">rm</span> *<span class=\"token punctuation\">[</span><span class=\"token number\">0</span>-9<span class=\"token punctuation\">]</span>*\n\n<span class=\"token comment\"># 删除当前目录下文件扩展名是字母 c 或 h 的所有文件</span>\n<span class=\"token function\">rm</span> *.<span class=\"token punctuation\">[</span>ch<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 删除 /tmp 目录下的所有文件及其子目录</span>\n<span class=\"token function\">rm</span> -rf /tmp/*<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<ul>\n<li>-f 删除前不提示用户确认，并忽略不存在的文件</li>\n<li>-r 递归地删除目录及其下的内容</li>\n</ul>\n</blockquote>\n<h3 id=\"7-ls-列出文件名和目录\">7. ls - 列出文件名和目录</h3>\n<p><code>ls</code>命令是<code>Linux</code>中最常用的命令之一，其作用就是列出文件名和目录。在命令行提示符下，直接输入<code>ls</code>命令，不带任何选项，将列出当前目录下所有文件和目录，但不会显示详细的信息，比如，文件类型、大小、修改日期和时间、权限等。</p>\n<p>以下便是<code>ls</code>命令及其选项的作用说明：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 仅列出当前目录下所有文件和目录</span>\n<span class=\"token function\">ls</span>\n\n<span class=\"token comment\"># 每行显示一条记录，每条记录包括文件类型、大小、修改日期和时间、权限等</span>\n<span class=\"token function\">ls</span> -l\n\n<span class=\"token comment\"># 将文件大小显示符合人类阅读习惯的格式</span>\n<span class=\"token function\">ls</span> -lh\n\n<span class=\"token comment\"># 将使用不同的特殊字符归类不同的文件类型</span>\n<span class=\"token function\">ls</span> -F\n\n<span class=\"token comment\"># 以长列表格式列出某个目录的信息</span>\n<span class=\"token function\">ls</span> -ld /var/log\n\n<span class=\"token comment\"># 将递归地列出子目录的内容</span>\n<span class=\"token function\">ls</span> -R /etc/sysconfig/\n\n<span class=\"token comment\"># 以长列表格式按文件或目录的修改时间倒序地列出文件和目录</span>\n<span class=\"token function\">ls</span> -ltr\n\n<span class=\"token comment\"># 以长列表格式按文件大小顺序列出文件和目录</span>\n<span class=\"token function\">ls</span> -ls\n\n<span class=\"token comment\"># 列出包括隐藏文件或目录在内的所有文件和目录，包括“.”（当前目录）和“..”（父目录）</span>\n<span class=\"token function\">ls</span> -a\n\n<span class=\"token comment\"># 列出包括隐藏文件或目录在内的所有文件和目录，不包括“.”（当前目录）和“..”（父目录）</span>\n<span class=\"token function\">ls</span> -A\n\n输出的内容类似于-l选项，指示显示uid和gid，替代显示所有者和用户组\n<span class=\"token function\">ls</span> -n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"8-cat-连接显示文件内容\">8. cat - 连接显示文件内容</h3>\n<p><code>cat</code> 命令也是 Linux 系统中最常用的命令之一。<code>cat</code>命令让我们可以看看文件的内容、连接文件、创建一个或多个文件和重定向输出到终端或文件。</p>\n<p><code>cat</code>命令的语法如下所示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>FILE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><code>cat</code>常用命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 使用 cat 命令查看文件 /etc/group 的内容</span>\n<span class=\"token function\">cat</span> /etc/group\n\n<span class=\"token comment\"># 显示多个文件的内容</span>\n<span class=\"token function\">cat</span> /etc/redhat-release /etc/issue\n\n<span class=\"token comment\"># -n 选项，可以显示文件内容的行号</span>\n<span class=\"token function\">cat</span> -n /etc/fstab\n\n<span class=\"token comment\"># -b 选项和 -n 选项类似，但只标识非空白行的行号</span>\n<span class=\"token function\">cat</span> -b /etc/fstab\n\n<span class=\"token comment\"># -e 选项，将在每一行的结尾显示“$”字符</span>\n<span class=\"token function\">cat</span> -e /etc/fstab<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>当你只输入 cat 命令，而没有任何参数时，它只是接收标准输入的内容并在标准输出中显示。所以你在输入一行内容并回车后，会在接下来的一行显示相同的内容。你也可以重定向标准输出到一个新文件。</p>\n<p>dd</p>\n</blockquote>\n<h3 id=\"9-less、more-分屏显示文件\">9.less、more - 分屏显示文件</h3>\n<p><code>more</code>命令在你使用小的 xterm 窗口时，或是想不使用文本编辑器而只是简单地阅读一个文件时是很有用的。more 命令是一个用于一次翻阅一整屏文件的过滤器。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 查看一个文件，自动清空屏幕并显示文件开头部分</span>\n<span class=\"token function\">more</span> /etc/inittab\n\n<span class=\"token comment\"># 指定一次显示num行</span>\n<span class=\"token function\">more</span> -num /etc/inittab<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>与<code>more</code>命令相比，我个人更喜欢<code>less</code>命令来查看文件。<code>less</code>命令与<code>more</code>命令类似，但<code>less</code>命令向前和向后翻页都支持，而且<code>less</code>命令不需要在查看前加载整个文件，即<code>less</code>命令查看文件更快速。</p>\n<p><code>less</code>常用命令参数如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">-b  <span class=\"token operator\">&lt;</span>缓冲区大小<span class=\"token operator\">&gt;</span> 设置缓冲区的大小\n-e  当文件显示结束后，自动离开\n-f  强迫打开特殊文件，例如外围设备代号、目录和二进制文件\n-g  只标志最后搜索的关键词\n-i  忽略搜索时的大小写\n-m  显示类似more命令的百分比\n-N  显示每行的行号\n-o  <span class=\"token operator\">&lt;</span>文件名<span class=\"token operator\">&gt;</span> 将less 输出的内容在指定文件中保存起来\n-Q  不使用警告音\n-s  显示连续空行为一行\n-S  行过长时间将超出部分舍弃\n-x  <span class=\"token operator\">&lt;</span>数字<span class=\"token operator\">&gt;</span> 将“tab”键显示为规定的数字空格\n/字符串：向下搜索“字符串”的功能\n?字符串：向上搜索“字符串”的功能\nn： 重复前一个搜索（与 / 或 ? 有关）\nN： 反向重复前一个搜索（与 / 或 ? 有关）\nb  向后翻一页\nd  向后翻半页\nh  显示帮助界面\nQ  退出less 命令\nu  向前滚动半页\ny  向前滚动一行\n空格键 滚动一行\n回车键 滚动一页\n<span class=\"token punctuation\">[</span>pagedown<span class=\"token punctuation\">]</span>： 向下翻动一页\n<span class=\"token punctuation\">[</span>pageup<span class=\"token punctuation\">]</span>：   向上翻动一页<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"10-head-显示文件头部\">10.head - 显示文件头部</h3>\n<p><code>head</code>命令用于打印指定输入的开头部分内容。默认情况下，打印每个指定输入的前 10 行内容。</p>\n<p>使用<code>-n</code>选项可以指定打印文件的前 N 行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 指定打印文件的前5行</span>\n<span class=\"token function\">head</span> -n <span class=\"token number\">5</span> /etc/inittab\n（或）head -5 /etc/inittab\n\n<span class=\"token comment\"># 打印文件的前N个字节的数据</span>\n<span class=\"token function\">head</span> -c <span class=\"token number\">10</span> /etc/inittab<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"11-tail-显示文件尾部\">11.tail - 显示文件尾部</h3>\n<p><code>tail</code>命令和<code>head</code>命令相反，它打印指定输入的结尾部分的内容。默认情况下，它打印指定输入的最后 10 行内容。</p>\n<p>使用<code>-n</code>选项可以指定打印文件的最后 N 行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 指定打印文件的后10行</span>\n<span class=\"token function\">tail</span> -n <span class=\"token number\">10</span> /etc/inittab\n<span class=\"token function\">tail</span> -10 /etc/inittab\n\n<span class=\"token comment\"># 即时打印文件中新写入的行</span>\n<span class=\"token function\">tail</span> -f /var/log/messages\n\n<span class=\"token comment\"># --retry选项表示持续尝试打开某个文件，当你想打开一个稍后才会创建或即使不可用的文件</span>\n<span class=\"token function\">tail</span> -f /tmp/debug.log --retry<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"12-file-查看文件类型\">12.file - 查看文件类型</h3>\n<p><code>file</code>命令用于接收一个文件作为参数并执行某些测试，已确定正确的文件类型。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 查看文件类型</span>\n<span class=\"token function\">file</span> /etc/inittab\n\n<span class=\"token comment\"># 可以MIME类型的格式显示文件类型的信息</span>\n<span class=\"token function\">file</span> -i  /etc/inittab\n\n<span class=\"token comment\"># 使用-N 选项，输出的队列可以以在文件名之后无空白填充的形式显示</span>\n<span class=\"token function\">file</span> -N *<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"13-wc-查看文件统计信息\">13.wc - 查看文件统计信息</h3>\n<p><code>wc</code>命令用于查看文件的行数、单词数和字符数等信息。语法类似如下所示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wc</span> filename\nX Y Z /etc/inittab<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>其中 X 表示行数，Y 表示单词数，Z 表示字节数，filename 表示文件名。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># -l选项，可以只统计文件的行数信息</span>\n<span class=\"token function\">wc</span> -l /etc/inittab\n\n<span class=\"token comment\"># -w选项，可以只统计文件的单词数信息</span>\n<span class=\"token function\">wc</span> -w /etc/inittab\n\n<span class=\"token comment\"># -c选项，可以只统计文件的字节数信息</span>\n<span class=\"token function\">wc</span> -c /etc/inittab\n\n<span class=\"token comment\"># -L选项，可以只统计文件中最长的行的长度</span>\n<span class=\"token function\">wc</span> -L /etc/inittab<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"14-find-查找文件或目录\">14.find - 查找文件或目录</h3>\n<p><code>find</code>命令用于根据你指定的参数搜索和定位文件和目录的列表。<code>find</code>命令可以在多种情况下使用，比如你可以通过权限、用户、用户组、文件类型、日期、大小和其他可能的条件来查找文件。</p>\n<p><code>find</code>命令常用使用和说明如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 查找指定目录下的某个文件</span>\n<span class=\"token function\">find</span> /etc/ -name inittab\n\n<span class=\"token comment\"># 在当前目录下查找名称为 inittab 的文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -name inittab\n\n<span class=\"token comment\"># 在当前目录下，文件不区分大小写是example的所有文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -iname example\n\n<span class=\"token comment\"># 找出当前目录下所有以 sh 结尾的文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -name <span class=\"token string\">\"*.sh\"</span>\n\n<span class=\"token comment\"># 找出当前目录下，文件权限是 777 的所有文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -perm <span class=\"token number\">777</span>\n\n<span class=\"token comment\"># 找出当前目录下，文件权限不是 777 的所有文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f <span class=\"token operator\">!</span> -perm <span class=\"token number\">777</span>\n\n<span class=\"token comment\"># 找出当前目录下所有只读文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f <span class=\"token operator\">!</span> -perm /a+w\n\n<span class=\"token comment\"># 找出你帐号主目录下的所有可执行文件</span>\n<span class=\"token function\">find</span> ~ -type f -perm /a+w\n\n<span class=\"token comment\"># 找出 /tmp 目录下的.log文件并将其删除：</span>\n<span class=\"token function\">find</span> /tmp/ -type f -name <span class=\"token string\">\"*.log\"</span> -exec <span class=\"token function\">rm</span> -f <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 找出当前目录下的所有空文件</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -empty\n\n<span class=\"token comment\"># 找出当前目录下的所有空目录</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type d -empty\n\n<span class=\"token comment\"># 找出 /tmp 目录下的所有隐藏文件</span>\n<span class=\"token function\">find</span> /tmp/ -type f -name <span class=\"token string\">\".*\"</span>\n\n<span class=\"token comment\"># 找出 /tmp 目录下，所有者是 root 的文件和目录</span>\n<span class=\"token function\">find</span> /tmp/ -user root\n\n<span class=\"token comment\"># 找出 /tmp 目录下，用户组是 developer 的文件和目录</span>\n<span class=\"token function\">find</span> /tmp/ -group root\n\n<span class=\"token comment\"># 找出你账号的主目录下，3 天前修改的文件</span>\n<span class=\"token function\">find</span> ~ -type f -mtime <span class=\"token number\">3</span>\n\n<span class=\"token comment\"># 找出你账号的主目录下，30 天以前修改的所有文件</span>\n<span class=\"token function\">find</span> ~ -type f -mtime +30\n\n<span class=\"token comment\"># 找出你账号的主目录下，3 天以内修改的所有文件</span>\n<span class=\"token function\">find</span> ~ -type f -mtime -3\n\n<span class=\"token comment\"># 找出你账号的主目录下，30 天以前，60 天以内修改的所有文件</span>\n<span class=\"token function\">find</span> ~ -type f -mtime +30 -mtime -60\n\n<span class=\"token comment\"># 找出 /etc 目录下，一小时以内变更过的文件</span>\n<span class=\"token function\">find</span> /etc -type f -cmin -60\n\n<span class=\"token comment\"># 找出 /etc 目录下，一小时以内访问过的文件</span>\n<span class=\"token function\">find</span> /etc -type f -amin -60\n\n<span class=\"token comment\"># 找出你账号主目录下，大小是50MB的所有文件</span>\n<span class=\"token function\">find</span> ~ -type f -size 50MB\n\n<span class=\"token comment\"># 找出你账号主目录下，大于50MB小于100MB的所有文件</span>\n<span class=\"token function\">find</span> ~ -type f -size +50MB -size -100MB\n\n<span class=\"token comment\"># 找出你账号主目录下，大于100MB的文件并将其删除</span>\n<span class=\"token function\">find</span> ~ -type f -size +100MB -exec <span class=\"token function\">rm</span> -rf <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"三、文本处理\">三、文本处理</h2>\n<h3 id=\"1-sort-文本排序\">1. sort - 文本排序</h3>\n<p><code>sort</code>命令用于将文本文件的行排序。默认情况下，<code>sort</code>命令是按照字符串的字母顺序排序。</p>\n<p>sort 的常用命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 将文本内容按字母顺序排序</span>\n<span class=\"token function\">sort</span> example.txt\n\n<span class=\"token comment\"># 使用 -u 选项，移除所有重复行后排序</span>\n<span class=\"token function\">sort</span> -u example.txt\n\n<span class=\"token comment\"># 使用 -n 选项，将令数字按数值的大小排序</span>\n<span class=\"token function\">sort</span> -n example.txt\n\n<span class=\"token comment\"># 使用 -r 选项，以倒序方式排序</span>\n<span class=\"token function\">sort</span> -n -r example.txt\n\n<span class=\"token comment\"># 同时将 file1、file2 的内容排序</span>\n<span class=\"token function\">sort</span> file1 file2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-uniq-文本去重\">2.uniq - 文本去重</h3>\n<p><code>uniq</code>命令用于移除或发现文件中重复的条目。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 它将移除文件中重复的行并显示单一行</span>\n<span class=\"token function\">uniq</span> example.txt\n\n<span class=\"token comment\"># 可以统计重复行出现的次数</span>\n<span class=\"token function\">uniq</span> -c example.txt\n\n<span class=\"token comment\"># 使用 -d 选项，只显示文件中有重复的行并只显示一次</span>\n<span class=\"token function\">uniq</span> -d example.txt\n\n<span class=\"token comment\"># 使用 -D 选项，显示文件中所有重复的行</span>\n<span class=\"token function\">uniq</span> -D example.txt\n\n<span class=\"token comment\"># 使用 -u 选项，只显示文件中不重复的行</span>\n<span class=\"token function\">uniq</span> -u example.txt\n\n<span class=\"token comment\"># 使用 -w 选项，限制 uniq 命令只比较每行的前 3 个字符是否重复</span>\n<span class=\"token function\">uniq</span> -w <span class=\"token number\">3</span> example.txt\n\n<span class=\"token comment\"># 使用 -s 选项，避免 uniq 命令比较每行的前 3 个字符，只比较后面的字符是否重复</span>\n<span class=\"token function\">uniq</span> -s <span class=\"token number\">3</span> example.txt\n\n<span class=\"token comment\"># 使用 -f 选项，避免 uniq 命令比较第一列的内容，只比较后面的字符是否重复</span>\n<span class=\"token function\">uniq</span> -f <span class=\"token number\">1</span> example.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3-tr-替换或删除字符\">3.tr - 替换或删除字符</h3>\n<p><code>tr</code>命令主要用于删除文件中控制字符或进行字符转换。使用<code>tr</code>时要转换两个字符串：字符串 1 用于查询，字符串 2 用于处理各种转换。<code>tr</code>刚执行时，字符串 1 中的字符被映射到字符串 2 中的字符，然后转换操作开始。</p>\n<p><code>tr</code>命令的语法如下所示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tr</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>. SET1 <span class=\"token punctuation\">[</span>SET2<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>常用命令示例：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 若要将大括号转换为小括号</span>\n<span class=\"token function\">tr</span> <span class=\"token string\">'{}'</span> <span class=\"token string\">'()'</span> <span class=\"token operator\">&lt;</span> textfile <span class=\"token operator\">&gt;</span> newfile\n\n<span class=\"token comment\"># 若要将大括号转换成方括号</span>\n<span class=\"token function\">tr</span> <span class=\"token string\">'{}'</span> <span class=\"token string\">'\\[]'</span> <span class=\"token operator\">&lt;</span> textfile <span class=\"token operator\">&gt;</span> newfile\n\n<span class=\"token comment\"># 若要将小写字符转换成大写，请输入：</span>\n<span class=\"token function\">tr</span> <span class=\"token string\">'a-z'</span> <span class=\"token string\">'A-Z'</span> <span class=\"token operator\">&lt;</span> textfile <span class=\"token operator\">&gt;</span> newfile\n\n<span class=\"token comment\"># 若要创建一个文件中的单词列表</span>\n<span class=\"token function\">tr</span> -cs <span class=\"token string\">'[:lower:][:upper:]'</span> <span class=\"token string\">'[\\n*]'</span> <span class=\"token operator\">&lt;</span> textfile <span class=\"token operator\">&gt;</span> newfile\n\n<span class=\"token comment\"># 若要从某个文件中删除所有空字符</span>\n<span class=\"token function\">tr</span> -d <span class=\"token string\">'\\0'</span> <span class=\"token operator\">&lt;</span> textfile <span class=\"token operator\">&gt;</span> newfile\n\n<span class=\"token comment\"># 若要用单独的换行替换每一序列的一个或多个换行，请输入：</span>\n<span class=\"token function\">tr</span> -s <span class=\"token string\">'\\n'</span> <span class=\"token operator\">&lt;</span> textfile <span class=\"token operator\">&gt;</span> newfile\n\n<span class=\"token comment\"># 要以单个“#”字符替换 &lt;space&gt; 字符类中的每个字符序列</span>\n<span class=\"token function\">tr</span> -s <span class=\"token string\">'[:space:]'</span> <span class=\"token string\">'[#*]'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"4-grep-查找字符串\">4.grep - 查找字符串</h3>\n<p><code>grep</code>命令用于搜索文本或指定的文件中与指定的字符串或模式相匹配的行。默认情况下，<code>grep</code>命令只显示匹配的行。</p>\n<p><code>grep</code>命令的语法如下所示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>. PATTERN <span class=\"token punctuation\">[</span>FILE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>.\n<span class=\"token function\">grep</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>. <span class=\"token punctuation\">[</span>-e PATTERN <span class=\"token operator\">|</span> -f FILE<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>FILE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># `grep`命令查找文件/etc/passwd 中帐号 blinkfox 的信息</span>\n<span class=\"token function\">grep</span> blinkfox /etc/passwd\n\n<span class=\"token comment\"># 使用 -i 选项，强制 grep 命令忽略搜索关键字的大小写</span>\n<span class=\"token function\">grep</span> -i blinkfox /etc/passwd\n\n<span class=\"token comment\"># 使用 -r 选项，可以递归搜索指定目录下的所有文件</span>\n<span class=\"token function\">grep</span> -r blinkfox /etc/\n\n<span class=\"token comment\"># 使用 -w 选项，只匹配包含指定单词的行</span>\n<span class=\"token function\">grep</span> -w blinkfox /etc/\n\n<span class=\"token comment\"># 使用 -c 选项，报告文件或文本中模式被匹配的次数</span>\n<span class=\"token function\">grep</span> -c blinkfox /etc/passwd\n\n<span class=\"token comment\"># 使用 -n 选项，显示每一个匹配的行的行号</span>\n<span class=\"token function\">grep</span> -n blinkfox /etc/passwd\n\n<span class=\"token comment\"># 使用 -v 选项，可以输出除匹配指定模式的行以外的其他所有行</span>\n<span class=\"token function\">grep</span> -v blinkfox /etc/passwd\n\n<span class=\"token comment\"># 使用 --color 选项，在输出中将匹配的字符串以彩色的形式标出</span>\n<span class=\"token function\">grep</span> --color blinkfox /etc/passwd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"5-diff-比较两个文件\">5.diff - 比较两个文件</h3>\n<p><code>diff</code>命令用于比较两个文件，并找出它们之间的不同。<code>diff</code>命令的语法如下所示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">diff</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>. from-file to-file<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>常用使用方式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 比较两个文件</span>\n<span class=\"token function\">diff</span> nsswitch.conf nsswitch.conf.org\n\n<span class=\"token comment\"># 使用 -w 选项，比较时忽略空格</span>\n<span class=\"token function\">diff</span> -w nsswitch.conf nsswitch.conf.org\n\n<span class=\"token comment\"># 使用 -y 选项，以并排的格式输出两个文件的比较结果</span>\n<span class=\"token function\">diff</span> -y nsswitch.conf nsswitch.conf.org\n\n使用 -c 选项，以上下对比的格式输出两个文件的比较结果\n<span class=\"token function\">diff</span> -c nsswitch.conf nsswitch.conf.org<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"参考\">参考</h2>\n<ul>\n<li>[1] https://blinkfox.github.io/2018/10/09/ruan-jian-gong-ju/linux/chang-yong-bash-ming-ling-zheng-li-zhi-cha-kan-wen-jian-he-mu-lu/</li>\n<li>[2] https://blinkfox.github.io/2018/10/13/ruan-jian-gong-ju/linux/chang-yong-bash-ming-ling-zheng-li-zhi-qi-ta-chang-yong-ming-ling/</li>\n<li>[3] https://blinkfox.github.io/2018/10/11/ruan-jian-gong-ju/linux/chang-yong-bash-ming-ling-zheng-li-zhi-wen-ben-chu-li/</li>\n<li>https://blinkfox.github.io/2018/10/09/ruan-jian-gong-ju/linux/chang-yong-bash-ming-ling-zheng-li-zhi-cha-kan-wen-jian-he-mu-lu/</li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "linux",
                "bash"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/1acb0edb/",
            "url": "https://blog.17lai.site/posts/1acb0edb/",
            "title": "Doxygen入门教程",
            "date_published": "2022-05-28T12:30:11.000Z",
            "content_html": "<blockquote>\n<p>Doxygen是API文档生成工具，可以根据代码注释生成文档的工具。支持HTML、CHM、PDF等格式。主要支持C语言、Python语言，其它C语系语言也支持（如C++、Java、C#等）。</p>\n</blockquote>\n<span id=\"more\"></span>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211032.webp\" alt=\"Doxygen效果演示\"></p>\n<p>本教程的测试环境</p>\n<ul>\n<li>Ubuntu 18.04 LTS</li>\n<li>Doxygen 1.8.13</li>\n<li>C++</li>\n<li>Gitlab CI/CD</li>\n<li>windows</li>\n</ul>\n<h2 id=\"什么是-Doxygen？\">什么是 Doxygen？</h2>\n<p>Doxygen 是一个将文件的特定注释转化为文档的工具</p>\n<h2 id=\"如何安装-Doxygen？\">如何安装 Doxygen？</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> graphviz\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> doxygen<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"如何使用-Doxygen？\">如何使用 Doxygen？</h2>\n<p><strong>1. 查看你使用的语言 Doxygen 是否默认支持？</strong></p>\n<p>Doxygen 默认支持的语言有：C，C++，C#，Objective-C，IDL，Java，VHDL，PHP，Python，Tcl，Fortran 和 D</p>\n<p><strong>2. 生成配置文件</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token comment\">## 生成配置文件，默认配置文件名为：Doxyfile</span>\n$ doxygen -g   <span class=\"token operator\">&lt;</span>config-file<span class=\"token operator\">&gt;</span>\n$\n$ <span class=\"token comment\">## 生成配置文件（不含注释）</span>\n$ doxygen -s -g <span class=\"token operator\">&lt;</span>config-file<span class=\"token operator\">&gt;</span>\n$<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>3. 修改配置文件</strong></p>\n<pre class=\"line-numbers language-makefile\" data-language=\"makefile\"><code class=\"language-makefile\"><span class=\"token comment\">## 常见配置选项</span>\n\n<span class=\"token comment\">## 设置项目编码，默认为 UTF-8</span>\nDOXYFILE_ENCODING <span class=\"token operator\">=</span> UTF-8\n\n<span class=\"token comment\">## 设置项目名称</span>\nPROJECT_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"project-name\"</span>\n\n<span class=\"token comment\">## 设置项目版本号</span>\nPROJECT_NUMBER <span class=\"token operator\">=</span> <span class=\"token string\">\"1.0.0\"</span>\n\n<span class=\"token comment\">## 设置项目的描述</span>\nPROJECT_BRIEF <span class=\"token operator\">=</span> <span class=\"token string\">\"这是项目描述\"</span>\n\n<span class=\"token comment\">## 设置项目的 logo </span>\nPROJECT_LOGO <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n\n<span class=\"token comment\">## 设置输入目录，如果未设置，则在当前目录查找</span>\nINPUT <span class=\"token operator\">=</span> src\n\n<span class=\"token comment\">## 设置要匹配的输入文件</span>\nFILE_PATTERNS <span class=\"token operator\">=</span> *.cc *.h\n\n<span class=\"token comment\">## 设置不需要处理的输入目录</span>\nEXCLUDE <span class=\"token operator\">=</span>\n\n<span class=\"token comment\">## 设置不需要匹配的输入文件</span>\nEXCLUDE_PATTERNS <span class=\"token operator\">=</span>\n\n<span class=\"token comment\">## 设置输入编码，默认为 UTF-8</span>\nINPUT_ENCODING <span class=\"token operator\">=</span> UTF-8\n\n<span class=\"token comment\">## 设置是否递归搜索输入目录，默认为 NO</span>\nRECURSIVE <span class=\"token operator\">=</span> NO\n\n<span class=\"token comment\">## 设置是否提取所有类，函数等（不包括类的私有成员和静态成员），默认为 NO</span>\nEXTRACT_ALL <span class=\"token operator\">=</span> NO\n\n<span class=\"token comment\">## 设置是否提取类的私有成员，默认为 NO</span>\nEXTRACT_PRIVATE <span class=\"token operator\">=</span> NO\n\n<span class=\"token comment\">## 设置是否提取类的静态成员，默认为 NO</span>\nEXTRACT_STATIC <span class=\"token operator\">=</span> NO\n\n<span class=\"token comment\">## 设置文档是否包含源文件，默认为 NO</span>\nSOURCE_BROWSER <span class=\"token operator\">=</span> NO\n\n<span class=\"token comment\">## 设置是否对每个类都链接到其所在的头文件中，默认值为 YES</span>\nVERBATIM_HEADERS <span class=\"token operator\">=</span> YES\n\n<span class=\"token comment\">## 设置文档的输出目录</span>\nOUTPUT_DIRECTORY <span class=\"token operator\">=</span> doc\n\n<span class=\"token comment\">## 设置是否支持 Markdown，默认值为 YES</span>\nMARKDOWN_SUPPORT <span class=\"token operator\">=</span> YES\n\n<span class=\"token comment\">## 设置文档的主界面</span>\nUSE_MDFILE_AS_MAINPAGE <span class=\"token operator\">=</span>\n\n<span class=\"token comment\">## 设置文档的语言，默认为 English</span>\nOUTPUT_LANGUAGE <span class=\"token operator\">=</span> Chinese         <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>4. 给代码添加注释</strong><br>\n并不是所有的注释都会被收入文档，Doxygen 支持的常用的注释风格有：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">/**     注释的内容       */</span>\n<span class=\"token comment\">/*!     注释的内容       */</span>\n\n## 在变量后 注释文件，类，结构体，共同体，枚举成员 或 函数参数\n<span class=\"token keyword\">int</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">/**&lt;      注释的内容        */</span>\n<span class=\"token keyword\">int</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">/*!&lt;      注释的内容        */</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>注意：</strong> 这里并不是所有的注释风格，更多注释风格见 <a target=\"_blank\" rel=\"noopener\" href=\"http://doxygen.nl/manual/docblocks.html\">官网</a></p>\n<p>Doxygen 常用的注释标记（标记以 / 或 @ 开头表示）：</p>\n<pre class=\"line-numbers language-makefile\" data-language=\"makefile\"><code class=\"language-makefile\"><span class=\"token comment\">## 添加作者</span>\n<span class=\"token operator\">@</span>author 作者1 作者2\n\n<span class=\"token comment\">## 添加日期</span>\n<span class=\"token operator\">@</span>date 日期\n\n<span class=\"token comment\">## 添加文件名</span>\n<span class=\"token operator\">@</span>file 文件名\n\n<span class=\"token comment\">## 添加简单描述</span>\n<span class=\"token operator\">@</span>brief 简要描述\n\n<span class=\"token comment\">## 添加详细描述</span>\n<span class=\"token operator\">@</span>details 详细描述\n\n<span class=\"token comment\">## 添加类信息</span>\n<span class=\"token operator\">@</span>class 类名 类所在的文件 类所在的文件（可包括路径） \n\n<span class=\"token comment\">## 添加结构体信息</span>\n<span class=\"token operator\">@</span>class 结构体名 结构体所在的文件 结构体所在的文件（可包括路径）\n\n<span class=\"token comment\">## 添加宏信息</span>\n<span class=\"token operator\">@</span>enum 宏名\n\n<span class=\"token comment\">## 添加函数信息</span>\n<span class=\"token operator\">@</span>fn 函数信息\n\n<span class=\"token comment\">## 添加参数说明</span>\n<span class=\"token operator\">@</span>param [in]   输入参数名 说明\n<span class=\"token operator\">@</span>param [out] 输出参数名 说明\n\n<span class=\"token comment\">## 添加返回说明</span>\n<span class=\"token operator\">@</span>return 返回说明\n\n<span class=\"token comment\">## 添加返回特定值说明</span>\n<span class=\"token operator\">@</span>retval 特定值 特定返回值说明\n\n<span class=\"token comment\">## 添加异常说明</span>\n<span class=\"token operator\">@</span>exception 异常类型 异常说明\n\n<span class=\"token comment\">## 添加代码</span>\n<span class=\"token operator\">@</span>code\n...代码...\n<span class=\"token operator\">@</span>encode\n\n<span class=\"token comment\">## 添加文件名说明</span>\n<span class=\"token operator\">@</span>headfile 文件名 文件名（可包括路径） \n\n<span class=\"token comment\">## 添加版本号</span>\n<span class=\"token operator\">@</span>version 版本号\n\n<span class=\"token comment\">## 添加计划做的事儿</span>\n<span class=\"token operator\">@</span>todo 计划做的事\n\n<span class=\"token comment\">## 添加参考 </span>\n<span class=\"token operator\">@</span>see 参加其它\n\n<span class=\"token comment\">## 添加过时说明</span>\n<span class=\"token operator\">@</span>deprecated 过时说明\n\n<span class=\"token comment\">## 添加 bug 说明</span>\n<span class=\"token operator\">@</span>bug <span class=\"token string\">\"bug 说明\"</span>\n\n<span class=\"token comment\">## 添加例子</span>\n<span class=\"token operator\">@</span>example 例子文件名\n\n<span class=\"token comment\">## 添加警告信息</span>\n<span class=\"token operator\">@</span>warning 警告信息\n\n<span class=\"token comment\">## 添加开始使用的版本</span>\n<span class=\"token operator\">@</span>since 版本\n\n<span class=\"token comment\">## 添加测试信息</span>\n<span class=\"token operator\">@</span>test 测试\n\n<span class=\"token comment\">## 添加主界面信息</span>\n<span class=\"token operator\">@</span>mainpage 标题\n\n<span class=\"token comment\">## 添加注意事项 </span>\n<span class=\"token operator\">@</span>note 注意事项\n\n<span class=\"token comment\">## 添加协议信息</span>\n<span class=\"token operator\">@</span>copyright 协议信息<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"为C-C-添加注释\">为C/C++添加注释</h3>\n<p>首先为函数添加注释信息，这是必须要做的。这里有个选择性问题，添加到哪里呢？.c文件？.h文件？</p>\n<p>一般来说：</p>\n<ul>\n<li>.h文件代表模块对外的接口最小信息，面向模块使用者</li>\n<li>.c文件代表模块的实现代码，面向的是开发者</li>\n</ul>\n<p>在实际编程中，事先约定各个模块间的接口，然后将不同的模块分配给不同的开发者，与此同时，测试人员根据接口要求，编写测试代码，这就完全保证了并发编程和白盒测试要求。</p>\n<p>这里我们可以看到，文档主要是用来描述接口信息的，所以，我对代码的注释规定如下：</p>\n<ul>\n<li>模块对外接口，仅在.h中提供注释信息</li>\n<li>模块内部辅助函数，全部用static设为私有函数，同时仅在.c中保留注释信息</li>\n</ul>\n<p>当然，您也可以同时为.c .h的接口函数编写两份完全一样的注释信息，但这么做，您会同时维护两份信息，出错的概率会更大些。</p>\n<p>确定了注释位置，下一步考虑一个函数需要哪些信息</p>\n<p>一般来说，需要函数功能，入口参数，返回值，注意事项，某些时候还需要说明上下文环境，从而保证函数能正确执行</p>\n<p>比如这个函数</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">extern</span> <span class=\"token keyword\">int</span> <span class=\"token function\">Dev_PrintInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>它的功能就是打印一个整形数据，传入参数为整数，返回的是成功打印的数据长度（字节为单位），同时呢，我们在调用这个函数之前，必须要先初始化Dev设备</p>\n<p>ok，这就是所有接口信息，稍微规范一下，就变成了下面的样子</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">// 函数功能：打印整数</span>\n<span class=\"token comment\">// 入口参数：number为一个整数类型</span>\n<span class=\"token comment\">// 返回结构：返回的是成功打印的数据长度（字节为单位）</span>\n<span class=\"token comment\">// 注意事项：</span>\n<span class=\"token comment\">//          1：在调用本函数前，请确保已经调用Dev_Init初始化设备</span>\n<span class=\"token comment\">//          2：请注意函数返回值，如果该值为0，则说明函数执行失败</span>\n\n<span class=\"token keyword\">extern</span> <span class=\"token keyword\">int</span> <span class=\"token function\">Dev_PrintInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>用英文来书写呢，则变成下面的样子</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">// brief  : Print Int number to terimal device.</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">// param  : number is the data you want to print.</span>\n<span class=\"token comment\">// retval : the number of print information, in bytes. return zero indicate print error !</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">// Note:</span>\n<span class=\"token comment\">//      * Be sure you have called \\ref Dev_Init function before call this fuction.</span>\n<span class=\"token comment\">//      * Remember to check return value.</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token keyword\">extern</span> <span class=\"token keyword\">int</span> <span class=\"token function\">Dev_PrintInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>注释信息写完了，一般来说，函数能达到这种信息程度就ok了，但既然要生成文档，就不得不考虑一个问题</p>\n<p>如果你是Doxygen作者，怎么从上面的注释里面提取信息呢，信息那么多，有<code>*</code>号，有各种文字信息。</p>\n<p>你可以将所有的注释信息都输出出来，但这么做，等于没有分类整理，同时也包含了杂乱信息，比如一排<code>*</code></p>\n<p>另外一个解决方法是：设置某些特殊字符，比如<code>function</code>表示，一旦检测到这个特殊标记，则认为是接下来<br>\n的一行是函数功能描述。但这么做，万一用户的注释里面出现很多个function，你怎么识别哪个是普通文本，<br>\n哪个是特殊标记？</p>\n<p>也许你会说了，可以采用<img src=\"https://math.now.sh?inline=FUNCTION\" style=\"filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;\">这种形式啊，恩，这么做是可行的，可以确保识别出来特殊标记</p>\n<p>接下来，还有一个问题，我们上面的注释中，有很多<code>*</code>号，仅仅起到美观和格式化的作用，当然不希望在<br>\n输出文档中显示这些东西，问题是你怎么识别这些符号，并不显示呢？也许你会说，可以强制规定注释的<br>\n格式，不让用户在代码中写很多<code>*</code>，ok，假设用户同意这么做。那接下来呢，如果我希望在代码中写某些话<br>\n，但是不希望输出到文档中，比如“XX是2B”等等，你又该怎么做呢？</p>\n<p>正向思考遇到问题时，不妨反向考虑，这是谁的问题：是我设计思路的问题还是用户用法的问题？</p>\n<p>困难重重，肯定是设计思路的问题</p>\n<p>如果设计一个标记符，将普通注释和要生成的文档注释区分开来，就能解决问题了。</p>\n<p>Doxygen的用法，说白了，就是为了解决上面提到的两个问题：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">怎么区分普通注释和输出注释  \n怎么在输出注释里面，识别特殊标记和普通文本  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>ok，讲到这里，基本把Doxygen的机制给解释清楚了，如果您还不理解，最简单的方法就是把你假设为Doxygen<br>\n作者，重新推演一遍。</p>\n<p>下面咱们看看Doxygen怎么解决这两个问题的</p>\n<p><strong>区分普通注释和特殊注释</strong></p>\n<p>对于C/C++语言来说，注释形式有两种</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//</span>\n<span class=\"token comment\">/* */</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>Doxygen通过在这里增加<code>*</code>，<code>/</code>，<code>!</code>来作为特殊标记，比如</p>\n<p>对于<code>/* */</code>这种注释来说，正常注释为</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">/*\n * 正常注释\n */</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>Doxygen在注释第一个<code>*</code>后，设置<code>*</code>或<code>!</code>作为标志，如果检测到有这些，<br>\n就将接下来的注释作为导出文档来解释</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">/**\n * 要输出成文档的注释\n */</span>\n\n 或者\n\n<span class=\"token comment\">/*!\n * 要输出成文档的注释\n */</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>同时，中间的<code>*</code>号可以省略，像这样</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">/**\n   要输出成文档的注释\n */</span>\n\n 或者\n\n<span class=\"token comment\">/*!\n   要输出成文档的注释\n */</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>对于<code>//</code>这种类型的注释，Doxygen在第二个<code>/</code>后，增加<code>!</code>或<code>/</code>作为区分标志，如果检测到有这些，<br>\n就将接下来的注释作为导出文档来解释</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">/// 要输出成文档的注释</span>\n\n或者\n\n<span class=\"token comment\">//! 要输出成文档的注释</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>对于这种呢，有一个潜在的问题，很多时候，我们需要在把注释放到后面，比如下面这种</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DEV_ON</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>      </span><span class=\"token comment\">//! Simple device is power on.</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DEV_OFF</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>      </span><span class=\"token comment\">//! Simple device is power off.</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>如果真要这么写的话，Doxygen会把<code>//! Simple device is power on.</code>当做<code>DEV_OFF</code>的注释，这<br>\n当然不是我们所希望的! 怎么办呢，只好再加一个特殊标记了，Doxygen针对这种情况，需要在<code>!</code>后<br>\n再增加一个<code>&lt;</code>标志符，如果检测到这个，则认为这个注释是为前面代码准备的，所以，上面的注释应该<br>\n这么写</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DEV_ON</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>      </span><span class=\"token comment\">//!&lt; Simple device is power on.</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DEV_OFF</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>      </span><span class=\"token comment\">//!&lt; Simple device is power off.</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>做到这里，Doxygen就可以正确区分普通注释和特殊注释了。</p>\n<p>**注：**提到特殊标记，其实吧，编程语言非常常用，比如HTML就是典型的markup语言，一堆一堆的括号，看着就头疼</p>\n<p>Doxygen采用<code>\\</code>和<code>@</code>作为特殊标记符，当在特殊注释里面检测到了特殊标记符，则接下来检测紧跟单词是不是Doxygen<br>\n事先规定好的，如果是，则将按照特定的规则来解释紧跟着的注释；如果不是呢，则将<code>\\</code>和<code>@</code>解释为普通文本，聪明吧</p>\n<p>可能有点拗口，下面给你个例子</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//! \\brief  Print Int number to terimal device.</span>\n<span class=\"token comment\">//!</span>\n<span class=\"token comment\">//! \\param  [in] number is the data you want to print.</span>\n<span class=\"token comment\">//! \\retval the number of print information, in bytes. return zero indicate print error !.</span>\n<span class=\"token comment\">//!</span>\n<span class=\"token comment\">//! \\note</span>\n<span class=\"token comment\">//! * Be sure you have called \\ref Dev_Init function before call this fuction.</span>\n<span class=\"token comment\">//! * Remember to check return value.</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token keyword\">extern</span> <span class=\"token keyword\">int</span> <span class=\"token function\">Dev_PrintInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>看到了吧，这里的<code>\\brief</code>和<code>\\param</code>都是特殊符号，表示简要描述和参数。万一你小手一抖，把<code>\\param</code><br>\n写成了<code>\\parame</code>，那就悲剧了，因为Doxygen不认识<code>parame</code>，所以它会把这句话当做是普通文本来处理</p>\n<p>其实，上面的<code>\\</code>换成<code>@</code>也是ok的，如下所示</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//! @brief  Print Int number to terimal device.</span>\n<span class=\"token comment\">//!</span>\n<span class=\"token comment\">//! @param  [in] number is the data you want to print.</span>\n<span class=\"token comment\">//! @retval the number of print information, in bytes. return zero indicate print error !.</span>\n<span class=\"token comment\">//!</span>\n<span class=\"token comment\">//! @note</span>\n<span class=\"token comment\">//! * Be sure you have called \\ref Dev_Init function before call this fuction.</span>\n<span class=\"token comment\">//! * Remember to check return value.</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token keyword\">extern</span> <span class=\"token keyword\">int</span> <span class=\"token function\">Dev_PrintInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>相信某些玩过ARM芯片的，对这类注释非常熟悉，官方库都是采用Doxygen语法规则注释的</p>\n<h3 id=\"示例\">示例</h3>\n<p>采用Doxygen语法为main.c dev.c dev.h添加注释信息，完成后的效果如下所示：</p>\n<p><code>main.c</code></p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//! \\file main.c </span>\n<span class=\"token comment\">//! This is an simple example show developer how to use dev api to print int number.</span>\n<span class=\"token comment\">//!</span>\n<span class=\"token comment\">//! \\author    Cedar</span>\n<span class=\"token comment\">//! \\version   V1.0</span>\n<span class=\"token comment\">//! \\date      2014-03-23</span>\n<span class=\"token comment\">//! \\copyright GNU Public License V3.0</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//***************************************************************************************</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"dev.h\"</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CNT_MAX</span>  <span class=\"token expression\"><span class=\"token number\">10</span>  </span><span class=\"token comment\">//!&lt; The maxium number of print</span></span>\n\n<span class=\"token comment\">//! Simple device example.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">DEV_Example</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">Dev_Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> CNT_MAX<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">Dev_PrintInt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">Dev_Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//! Application Entry</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n\t<span class=\"token function\">DEV_Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>dev.c</code></p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//! \\file dev.c </span>\n<span class=\"token comment\">//! the implement of simple device.</span>\n<span class=\"token comment\">//!</span>\n<span class=\"token comment\">//! \\author    Cedar</span>\n<span class=\"token comment\">//! \\version   V1.0</span>\n<span class=\"token comment\">//! \\date      2014-03-23</span>\n<span class=\"token comment\">//! \\copyright GNU Public License V3.0</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//***************************************************************************************</span>\n\n<span class=\"token comment\">//! Simple device status.</span>\n<span class=\"token comment\">//! </span>\n<span class=\"token comment\">//! \\warning This variable is designed for internal, user \\b MUST \\b NOT call it.</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> __DevStatus <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">Dev_Init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Print debug information</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dev Initialize OK!\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">Dev_PrintInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> number<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Print IntType number: %d\\r\\n\"</span><span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">Dev_StatusCheck</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> \t<span class=\"token punctuation\">(</span>__DevStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">Dev_Close</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dev Close OK!\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>dev.h</code></p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//! \\file dev.h</span>\n<span class=\"token comment\">//!  Simple device user API.</span>\n<span class=\"token comment\">//!</span>\n<span class=\"token comment\">//! \\author    Cedar</span>\n<span class=\"token comment\">//! \\version   V1.0</span>\n<span class=\"token comment\">//! \\date      2014-03-23</span>\n<span class=\"token comment\">//! \\copyright GNU Public License V3.0</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//***************************************************************************************</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n\n\n<span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//! \\addtogroup Dev_Status  Simple device status information.</span>\n<span class=\"token comment\">//! @{</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//***************************************************************************************</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DEV_ON</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>      </span><span class=\"token comment\">//!&lt; Simple device is power on.</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DEV_OFF</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>      </span><span class=\"token comment\">//!&lt; Simple device is power off.</span></span>\n\n<span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//! @}</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//***************************************************************************************</span>\n\n\n<span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//! \\addtogroup Dev_API  Simple device APIs list.</span>\n<span class=\"token comment\">//! @{</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//***************************************************************************************</span>\n\n<span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//! \\brief  Initialize simple device.</span>\n<span class=\"token comment\">//!</span>\n<span class=\"token comment\">//! \\param  none.</span>\n<span class=\"token comment\">//! \\retval none.</span>\n<span class=\"token comment\">//!</span>\n<span class=\"token comment\">//! \\note   This function \\b MUST be called first before others function.</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token keyword\">extern</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Dev_Init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//! \\brief  Print Int number to terimal device.</span>\n<span class=\"token comment\">//!</span>\n<span class=\"token comment\">//! \\param  [in] number is the data you want to print.</span>\n<span class=\"token comment\">//! \\retval the number of print information, in bytes. return zero indicate print error !.</span>\n<span class=\"token comment\">//!</span>\n<span class=\"token comment\">//! \\note</span>\n<span class=\"token comment\">//! * Be sure you have called \\ref Dev_Init function before call this fuction.</span>\n<span class=\"token comment\">//! * Remember to check return value.</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token keyword\">extern</span> <span class=\"token keyword\">int</span> <span class=\"token function\">Dev_PrintInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//! \\brief  Check simple device status information.</span>\n<span class=\"token comment\">//!</span>\n<span class=\"token comment\">//! \\param  none.</span>\n<span class=\"token comment\">//! \\retval status information of simple device, which can be one of the following value:\\n</span>\n<span class=\"token comment\">//!  - \\ref DEV_ON</span>\n<span class=\"token comment\">//!  - \\ref DEV_OFF</span>\n<span class=\"token comment\">//!  \\n More information, please reference \\ref Dev_Status.</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token keyword\">extern</span> <span class=\"token keyword\">int</span> <span class=\"token function\">Dev_StatusCheck</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//! \\brief  Close simple device.</span>\n<span class=\"token comment\">//!</span>\n<span class=\"token comment\">//! \\param  none.</span>\n<span class=\"token comment\">//! \\retval none.</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token keyword\">extern</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Dev_Close</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//! @}</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//***************************************************************************************</span>\n\n<span class=\"token comment\">//***************************************************************************************</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//! \\example main.c</span>\n<span class=\"token comment\">//!  Show how to use simple device to print int number.</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//***************************************************************************************</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>4. 生成文档</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ doxygen <span class=\"token operator\">&lt;</span>config-file<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"Win-图形界面使用\">Win 图形界面使用</h2>\n<h3 id=\"第1章-安装\">第1章 安装</h3>\n<p>在Linux下可以通过<code>apt install doxygen</code>安装命令行工具，然后用<code>apt install doxygen-gui</code>安装图形界面。对Linux用户来说，命令行工具可以通过<code>doxygen</code>命令运行，而图形界面可以通过<code>doxywizard</code>命令运行。</p>\n<p>而Windows用户可以在<a target=\"_blank\" rel=\"noopener\" href=\"https://links.jianshu.com/go?to=http%3A%2F%2Fwww.doxygen.nl%2Fdownload.html\">这里</a>下载，安装完毕后，直接双击就能运行图形界面。</p>\n<h4 id=\"1-1-基本使用\">1.1 基本使用</h4>\n<p>图形工具的基本使用如下图所示，有非常多的配置选项，这里我们只填入必要的配置，其它配置都用默认值。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211414.webp\" alt=\"doxywizard使用步骤\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211414-1.webp\" alt=\"doxywizard使用步骤\"></p>\n<p>我们的工作目录如下：</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token punctuation\">.</span>\n├── <span class=\"token keyword\">out</span>\n└── src\n    └── math<span class=\"token punctuation\">.</span>h<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中<code>math.h</code>代码如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">/*! \\file math.h */</span>\n\n<span class=\"token comment\">/*!\n    用于求一个角度的sin值，输入是字符串以便同时支持弧度制和角度制表示\n    \\li 弧度制用pi表示，例如：2pi表示一圈、0.5pi表示直角\n    \\li 角度制用d结尾，例如：360d表示一圈、90d表示直角\n    \\li 输入也可以是数值，例如：输入3.14159大约表示180度\n\n    \\param a 用弧度制或角度制表示都行，字符串必须用'\\0'表示结束\n    \\param[out] res 是输出参数，用于保存sin运算的结果\n\n    \\return 错误码，0表示成功，其它表示失败\n\n    \\todo 在xxx的情况下存在BUG，预计下一版本修复\n*/</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> <span class=\"token operator\">*</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>Doxygen生成的HTML会放到<code>out</code>目录下，生成的HTML如图1-3所示。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211414-2.webp\" alt=\"HTML界面\"></p>\n<h4 id=\"1-2-保存配置\">1.2 保存配置</h4>\n<p>在1.1节中我们配置了一些选项，也成功生成了HTML文档。我们希望下次代码改动后能够继续沿用上次配置，那么我们可以把这些配置保存成<code>Doxyfile</code>文件，见图1-4。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211414-3.webp\" alt=\"保存Doxyfile配置文件\"></p>\n<h4 id=\"1-3-命令行运行Doxygen\">1.3 命令行运行Doxygen</h4>\n<p>有了配置文件后我们完全可以通过命令行来生成API文档，假设配置文件名为Doxyfile，那么我们只需要执行<code>doxygen /path/to/Doxyfile</code>即可生成API文档。</p>\n<p>通过命令行生成文档有许多好处，其中最主要的好处就是：能够集成到持续集成之类的自动化系统中。</p>\n<h3 id=\"第2章-为代码编写注释\">第2章 为代码编写注释</h3>\n<h4 id=\"2-1-什么样的注释会被Doxygen识别？\">2.1 什么样的注释会被Doxygen识别？</h4>\n<p>Doxygen能识别这几种风格的注释：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">/**\n * ... text ...\n */</span>\n\n<span class=\"token comment\">/*!\n * ... text ...\n */</span>\n\n<span class=\"token comment\">///</span>\n<span class=\"token comment\">/// ... text ...</span>\n<span class=\"token comment\">///</span>\n\n<span class=\"token comment\">//!</span>\n<span class=\"token comment\">//!... text ...</span>\n<span class=\"token comment\">//!</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>文件的开头必须有文件注释，否则该文件不会被识别：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">/*! \\file math.h */</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"2-2-注释怎么写\">2.2 注释怎么写</h4>\n<p>这个自己看<a target=\"_blank\" rel=\"noopener\" href=\"https://www.doxygen.nl/manual/docblocks.html#cppblock\">官网例子</a>体会吧。</p>\n<h3 id=\"第3章-为其它编程语言生成注释\">第3章 为其它编程语言生成注释</h3>\n<p>Doxygen主要支持C语言，其它语法跟C差不多的语言（如：C++/C#/PHP/Java）也能够支持，我们称这类语言为「C语系语言」。而哪些跟C语法差异较大的语言叫做「非C语系语言」。</p>\n<p>对于大多非C语系语言，Doxygen都是支持的，Doxygen原生支持这些语言：IDL、Java、Javascript、C#、C、C++、D、PHP、Objective-C、Python、Fortran、VHDL。</p>\n<p>万一项目需要的语言（例如：Lua）Doxygen官方并不支持，那么只能自行编写「第三方语言扩展」来支持了。</p>\n<h4 id=\"3-1-Doxygen官方支持的语言\">3.1 Doxygen官方支持的语言</h4>\n<p>见图3-1，文件名符合<code>FILE_PATTERNS</code>都会被处理。其中包括了<code>.c</code>、<code>.h</code>、<code>.py</code>等等。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211414-4.webp\" alt=\"img\"></p>\n<p>如果我们的扩展名并不在<code>FILE_PATTERNS</code>内，那么可以加上去。例如我们项目下的所有<code>.ccc</code>文件，其实是C语言代码（这很奇葩，举个例子而已）。那我们可以编辑Doxyfile配置文件满足这一需求，需要2个步骤。</p>\n<p>(1) 在<code>FILE_PATTERNS</code>中添加<code>*.ccc</code>，如图3-2</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211414-5.webp\" alt=\"img\"></p>\n<p>(2) 在<code>EXTENSION_MAPPING</code>中添加映射规则<code>ccc=C</code>，如图3-3。语法是<code>ext=language</code>，其中language可以取的值有：IDL、Java、Javascript、C#、C、C++、D、PHP、Objective-C、Python、Fortran、VHDL。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211414-6.webp\" alt=\"img\"></p>\n<h4 id=\"3-2-Doxygen官方不支持的语言\">3.2 Doxygen官方不支持的语言</h4>\n<p>以Lua语言为例，它的代码是长这样的：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token comment\">-- \\file lmath.h</span>\n\n<span class=\"token comment\">--[[\n    用于求一个角度的sin值，输入是字符串以便同时支持弧度制和角度制表示\n    \\li 弧度制用pi表示，例如：2pi表示一圈、0.5pi表示直角\n    \\li 角度制用d结尾，例如：360d表示一圈、90d表示直角\n    \\li 输入也可以是数值，例如：输入3.14159大约表示180度\n\n    \\param a 字符串类型，表示角度，用弧度制或角度制表示都行\n\n    \\return 返回sin运算的结果\n\n    \\todo 在xxx的情况下存在BUG，预计下一版本修复\n--]]</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">1.123</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以看到Lua的语法既不像C也不像Python。本节以Lua为例，介绍如何为Doxygen编写Lua语言扩展。<br>\n好吧，大多数人没有这种需求，这里就不介绍了。</p>\n<h3 id=\"第4章-定制Doxygen的输出\">第4章 定制Doxygen的输出</h3>\n<h4 id=\"4-1-定制页面样式\">4.1 定制页面样式</h4>\n<p>Doxygen输出的默认HTML比较难看，如图4-1。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211414-7.webp\" alt=\"img\"></p>\n<p>如果嫌生成的HTML不好看，可以自定义HTML页面头部、尾部以及页面整体CSS样式表。<br>\n(1) 生成默认的风格的配置文件，敲这个命令：<code>doxygen -w html header.html footer.html customdoxygen.css</code>，可以生成<code>header.html</code>、<code>footer.html</code>、<code>customdoxygen.css</code>。<br>\n(2) 根据自己的需求修改这三个文件。<br>\n(3) 配置<code>HTML_HEADER</code>、<code>HTML_FOOTER</code>、<code>HTML_STYLESHEET</code>指向修改后的文件，如图4-2。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211414-8.webp\" alt=\"img\"></p>\n<p>Doxygen默认的页面主色调大约是天蓝色的，可以通过<code>HTML_COLORSTYLE_HUE</code>、<code>HTML_COLORSTYLE_SAT</code>、<code>HTML_COLORSTYLE_GAMMA</code>修改主色调，这3个配置分别对应色相、饱和度、Gamma校正，见图4-3。如果不太懂色相、饱和度是啥意思，请自行百度「色彩模式」或参考Photoshop相关教程。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211414-9.webp\" alt=\"img\"></p>\n<p>经过图4-3的修改，页面的主色调变为图4-4的样子。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211414-10.webp\" alt=\"img\"></p>\n<h4 id=\"4-2-导航栏\">4.2 导航栏</h4>\n<p>Doxygen中「导航栏」有两种展示方式：Treeview和Index，分别是竖向和横向的，如图4-5。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211414-11.webp\" alt=\"img\"></p>\n<p>可以配置<code>DISABLE_INDEX</code>和<code>GENERATE_TREEVIEW</code>来控制是否显示它们，如图4-6。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211414-12.webp\" alt=\"img\"></p>\n<h4 id=\"4-3-自定义「导航栏」的目录结构\">4.3 自定义「导航栏」的目录结构</h4>\n<p>我们已经知道Doxygen中「导航栏」有Treeview和Index两种了。这节介绍如何定制导航栏的目录结构。这需要三个步骤。<br>\n(1) 执行<code>doxygen -l</code>，生成<code>DoxygenLayout.xml</code>文件<br>\n(2) 编辑<code>DoxygenLayout.xml</code>文件，修改其中的布局<br>\n(3) 修改<code>LAYOUT_FILE</code>配置，使其指向<code>DoxygenLayout.xml</code>文件，如图4-7<br>\n(4) 运行Doxygen</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211414-13.webp\" alt=\"img\"></p>\n<p>那么如何修改XML文件呢？默认的<code>DoxygenLayout.xml</code>代码如下：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>doxygenlayout</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>navindex</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mainpage<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pages<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">intro</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modules<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">intro</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>namespaces<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>namespacelist<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">intro</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>namespacemembers<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">intro</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tab</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>classes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>classlist<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">intro</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>classindex<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$ALPHABETICAL_INDEX<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span> \n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hierarchy<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">intro</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>classmembers<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">intro</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tab</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>files<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>filelist<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">intro</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>globals<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">intro</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tab</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>examples<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">intro</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>  \n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>navindex</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>doxygenlayout</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>XML对应了导航栏的目录树结构，我们通过该文件改变布局。标签的<code>type</code>属性取值除了上面列出的这些预定义值以外，还可以是<code>type=\"user\"</code>或<code>type=\"usergroup\"</code>，我们只能通过这两个<code>type</code>自定义布局，例如下面这段代码，生成的效果如图4-8：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>doxygenlayout</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>navindex</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>usergroup<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>友情链接（演示如何外链）<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>百度<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.baidu.com<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>163<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.163.com<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tab</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>usergroup<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>数学库（演示如何链接文件）<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@ref math.h<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>math<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@ref math2.h<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>math2<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tab</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>usergroup<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>三角函数（演示链接函数、结构体）<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@ref sin<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sin<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tab</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@ref sin2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sin2<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tab</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>navindex</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>doxygenlayout</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211414-14.webp\" alt=\"img\"></p>\n<h4 id=\"4-4-完全自定义\">4.4 完全自定义</h4>\n<p>如果Doxygen输出的界面实在不入你的法眼，4.1~4.3介绍的定制化功能也不能彻底满足你的需求。那么你需要根据Doxygen输出的XML数据自行生成界面了。<br>\n(1) 将<code>GENERATE_XML</code>配置为<code>YES</code><br>\n(2) 去输出目录寻找生成的XML文件，XML文件包括了函数信息、注释信息等<br>\n(3) 自己写程序读取XML文件，并生成漂亮的文档</p>\n<h3 id=\"第5章-Markdown支持\">第5章 Markdown支持</h3>\n<blockquote>\n<p>待补充完善</p>\n</blockquote>\n<p>Markdown在工业界是非常流行的文档格式，文件名以.md结尾，其简洁直观的语法深受广大程序员喜爱。对Markdown本身的介绍超出了本文范围，本章介绍Doxygen对Markdown的支持。</p>\n<h4 id=\"5-1-为-md文件生成文档\">5.1 为.md文件生成文档</h4>\n<h4 id=\"5-2-在代码注释中使用Markdown语法\">5.2 在代码注释中使用Markdown语法</h4>\n<h3 id=\"第6章-搜索功能\">第6章 搜索功能</h3>\n<h2 id=\"Gitlab-CI-CD使用\">Gitlab CI/CD使用</h2>\n<blockquote>\n<p>https://gitlab.com/pages/doxygen</p>\n<p>结合Docker和Gitlab CI/CD使用案例</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/28/20220528211032.webp\" alt=\"Gitlab Doxygen运行效果如下\"></p>\n<h2 id=\"参考资源\">参考资源</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"http://doxygen.nl/\">Doxygen 官网</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.doxygen.nl/manual/docblocks.html#cppblock\">官网注释例子</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.jianshu.com/p/bf5afbbe183b\">Doxygen文档生成工具教程</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://cedar-renjun.github.io/2014/03/21/learn-doxygen-in-10-minutes/\">Doxygen 10 分钟入门教程</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://gitlab.com/pages/doxygen\">Gitlab CI/CD doxygen</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "tools",
                "doxygen"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/ab63eb8f/",
            "url": "https://blog.17lai.site/posts/ab63eb8f/",
            "title": "自建全套开源Devops开发系统",
            "date_published": "2022-05-09T05:00:25.000Z",
            "content_html": "<blockquote>\n<p>国内的Devops云平台动辄封号，删库，屏蔽，还多次发生数据泄密，项目被云平台克隆事件，国内云平台devops已死！数据安全没法保证，自建私有Devops平台才靠谱。这里采用开源项目建立一个完善的低成本Devops系统，基本运行良好！</p>\n</blockquote>\n<blockquote>\n<p>目标：单节点，以最低成本，最低消耗，使用开源软件实现一个可用的DevOps！满足中小企业的研发、测试、运维需求。并对后续如何扩展本套DevOps系统做了项目，成本，路线升级规划，可以一直扩展到业界最前沿最大系统。</p>\n<p>整套系统已经跑起来很长时间了！单节点Nas服务器，32G内存，共运行了约80个Docker，优化到平均负载10以下。</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/14/20220514113906.webp\" alt=\"devops\"></p>\n<span id=\"more\"></span>\n<h2 id=\"Devops框架图解\">Devops框架图解</h2>\n<blockquote>\n<p>下面系统大多可以做负载平衡，多节点备份，可以扩展为一个高可用，大中央平台。</p>\n<p>珍爱生命，使用<code>Docker</code>！</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/09/20220509132230.webp\" alt=\"自建Devops.drawio\"></p>\n<h2 id=\"开源云平台生死连问\">开源云平台生死连问</h2>\n<blockquote>\n<p>珍爱生命，不建议使用国内云平台。</p>\n</blockquote>\n<p>什么是大教堂？</p>\n<p>什么是集市？</p>\n<p>什么是信任链？</p>\n<p>什么是开源生态？</p>\n<p>为什么要做开源生态？</p>\n<p>怎么做开源生态？</p>\n<p>开源生态的土壤肥力维护如何做？</p>\n<p>这些问题没想明白，没想到如何做的是没法做开源的。</p>\n<p>国内平台连种子嫩芽都要收割，到处收费，动辄删库，屏蔽，封号，注定做不了开源生态。</p>\n<h2 id=\"Consul自动负载均衡\"><code>Consul</code>自动负载均衡</h2>\n<blockquote>\n<p>基于服务自动发现和注册的负载均衡，负载均衡的方式没有变，只是多了一些<strong>外围组件</strong>，当然这些组件对 <code>Client</code> 是不可见的，<code>client</code> 依然只能看到 <code>Nginx</code> 入口，访问方式也没变化。</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/29/20220429190914-1.webp\" alt=\"Consul\"></p>\n<h2 id=\"Github仓库备份\"><code>Github</code>仓库备份</h2>\n<blockquote>\n<p>最优秀的资源，大多只在短时间内出现！</p>\n<p>平时多备份你重要的仓库，以及你使用的仓库的重要上下游仓库！</p>\n</blockquote>\n<blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry/docker-github-backup\">github-backup Githb</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/lnxd/github-backup\">github-backup Dockerhub</a></li>\n</ul>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">githubback</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> lnxd/github<span class=\"token punctuation\">-</span>backup\n  <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"githubback\"</span>\n  <span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> githubback\n  <span class=\"token comment\"># ports:</span>\n    <span class=\"token comment\"># - \"80:80\"</span>\n  <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"${USERDIR}/githubback/data:/home/docker/backups:rw\"</span>\n  <span class=\"token key atrule\">env_file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> .env\n  <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> HTTP_PROXY=http<span class=\"token punctuation\">:</span>//<span class=\"token punctuation\">[</span>ip<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>port<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">-</span> HTTPS_PROXY=http<span class=\"token punctuation\">:</span>//<span class=\"token punctuation\">[</span>ip<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>port<span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"配置要求\">配置要求</h2>\n<p>个人Nas配置</p>\n<blockquote>\n<ul>\n<li>cpu j4125 4 核 14nm 2.00 GHz ~2.70 GHz</li>\n<li>SSD sata 接口的 读写 500MB/S</li>\n<li>32G DDR4. 2x16G 双通道</li>\n</ul>\n</blockquote>\n<p>上图中介绍的系统都是上面配置的单服务器中可以运行的。</p>\n<p>如何以最低的配置，最少的内存运行起来最多的功能才是本文的追求，花费更多金钱去满足极少数情况的高压力是钱多的没处花。</p>\n<ul>\n<li><code>8G</code>内存的nas 就可以运行 <code>gitea + drone</code> ，<code>zentao</code> 想用就用</li>\n<li><code>gitlab</code> 要跑起来至少要2核 <code>8G</code> 内存，<code>jenkins</code> 也是内存 <code>cpu</code> 占用大户。大于 <code>16G</code> 内存时考虑上这个</li>\n<li>4核 <code>32G</code> 内存的nas，图片中介绍的可以全都跑起来！</li>\n</ul>\n<h2 id=\"可靠性\">可靠性</h2>\n<p><code>ELK</code>集群监控对于单服务器来说完全多余，<code>netdata</code>监控也不错，<code>portainer</code>就够用了，以后为了节约资源，<code>portainer</code>说不定也会被干掉，大多数时候命令行监控就够了。少于200节点<code>K8S</code>就是多余的。</p>\n<h3 id=\"数据安全\">数据安全</h3>\n<blockquote>\n<p>云平台把数据交给别人，赌别人的道德不会私自偷拿你的数据？真是想多了。</p>\n<p>某垄断社交平台内部有专门的团队分析客户的数据，看有什么有价值的没有，是很多年前就爆出来的消息。</p>\n<p>自建<code>DevOps</code>成本其实相当的低！</p>\n</blockquote>\n<p>整套系统可以从少到多，从小到大，慢慢优化，扩展的。硬件成本也是随着需求变化而变化的，随着业务扩展而增加成本，一开始单节点单服务器就可以满足要求了，后面业务增加慢慢扩展为集群，k8s 等。</p>\n<p>数据，代码是公司核心资产与竞争力的公司，上云赌别人的人品就是找死。你注册账户的时候，就同意了，无论别人随意删除你的数据，或者窃取你的数据都是不用付任何责任的，再说，整个系统数据都在别人手上，你要维权也没有证据。</p>\n<h3 id=\"备份\">备份</h3>\n<ul>\n<li><code>UPS</code>电源，防止意外断电</li>\n<li><code>rsync</code> 备份，对于大多数人，已经够用了</li>\n<li>文件系统快照</li>\n<li>离线每日，或者每周冷备份</li>\n<li>大系统，多台服务器的时候可以用多节点集群备灾。<code>nginx</code>,<code>harbor</code>，<code>gitlab</code>，<code>elasticsearch</code>等都可以使用集群</li>\n</ul>\n<h2 id=\"扩展性\">扩展性</h2>\n<blockquote>\n<p>上面说的都可以单服务器搞定。多台服务器的时候可以用多节点集群备灾。<code>nginx</code>,<code>harbor</code>，<code>gitlab</code>，<code>elasticsearch</code>等都可以使用集群。</p>\n<p>多于200节点，大于3台服务器以后考虑上<code>K8S</code>。ELK监控之类的这时候可以上了。<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/Tencent/bk-sops\">蓝鲸智云标准运维</a>这时候也可以考虑了。</p>\n<p>再次扩大的时候可以考虑<code>Proxmox VE（PVE）</code> + <code>ceph</code></p>\n<p>更大的系统，或者对外提供云平台服务的时候可以考虑上<code>OpenStack</code></p>\n</blockquote>\n<h2 id=\"项目介绍\">项目介绍</h2>\n<h3 id=\"ELK\">ELK</h3>\n<blockquote>\n<p>消耗资源很多，至少上百节点以上再考虑上这个</p>\n<p><code>portainer</code> -&gt; <code>netdata </code>-&gt; <code>ELK</code>，<code>zabbix </code></p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2021/08/0520210805165405.png\" alt=\"\"></p>\n<h3 id=\"cacti\"><a target=\"_blank\" rel=\"noopener\" href=\"https://www.cacti.net/\">cacti</a></h3>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"Cacti\" data-repo=\"\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"Cacti\" data-repo=\"cacti\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<h3 id=\"zabbix\">zabbix</h3>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"zabbix\" data-repo=\"\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"zabbix\" data-repo=\"zabbix\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<h3 id=\"ansible\">ansible</h3>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"ansible\" data-repo=\"\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"ansible\" data-repo=\"ansible\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<h3 id=\"CMDB\">CMDB</h3>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"netbox-community\" data-repo=\"netbox\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"open-cmdb\" data-repo=\"cmdb\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<h3 id=\"PVE\">PVE</h3>\n<blockquote>\n<p>Proxmox VE（PVE）</p>\n</blockquote>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"proxmox\" data-repo=\"\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<h3 id=\"CEPH\"><a target=\"_blank\" rel=\"noopener\" href=\"https://ceph.io/\">CEPH</a></h3>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"ceph\" data-repo=\"\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"ceph\" data-repo=\"ceph\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<h3 id=\"OpenStack\">OpenStack</h3>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"openstack\" data-repo=\"\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"openstack\" data-repo=\"openstack\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<h2 id=\"其它项目\">其它项目</h2>\n<blockquote>\n<p>大家还有啥好项目建议？</p>\n</blockquote>\n<h3 id=\"onedev\">onedev</h3>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/theonedev/onedev\">onedev</a> 是替代<code>Gitlab</code>的极佳候补，看文档介绍，潜力无限！</p>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"theonedev\" data-repo=\"onedev\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<h2 id=\"系列教程-16\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Devops系列</strong> <a href=\"https://blog.17lai.site/categories/devops/atom.xml\"><strong>Devops 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/ab63eb8f/\">自建全套开源Devops开发系统</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d32a07a7/\">Git介绍以及分支模型图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/39563241/\">三万字无坑搭建基于Docker+K8S+GitLab/SVN+Jenkins+Harbor持续集成交付环境</a></li>\n<li><a href=\"https://blog.17lai.site/posts/3437994a/\">DevOps系列---【Jenkinsfile+Dockerfile+nginx+vue】</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f4c3ad41/\">项目开发管理工具推荐</a></li>\n<li><a href=\"https://blog.17lai.site/posts/acc13b70/\">Gitlab的安装及使用教程完全版</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d08eb7b/\">Gitlab的安装及使用</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "docker",
                "devops",
                "框架",
                "图解"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/db7bf49b/",
            "url": "https://blog.17lai.site/posts/db7bf49b/",
            "title": "视频图书和音乐完全自动化管理框架图解",
            "date_published": "2022-05-09T03:37:48.000Z",
            "content_html": "<blockquote>\n<p>音视频，音乐和图书管理全过程自动化解决方案框架图解！结构化你的音视频、音乐和图书资源。所有过程一张图搞定！</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"框架自动化构架图解-2\">框架自动化构架图解</h2>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/09/20220509113832.webp\" alt=\"自动化框架构架\"></p>\n<h2 id=\"相关文章\">相关文章</h2>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/2b9325d0/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/music.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/2b9325d0/\">私人在线音乐服务器搭建与使用介绍</a>\n        <hr>\n        <div class=\"desc\">私人在线音乐服务器搭建与使用介绍！Mstream Docker 部署， rclone 挂载 webdav 网盘。 cloudflare parterner加速。</div>\n    </div>\n</div>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/9912bd5d/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/emby.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a>\n        <hr>\n        <div class=\"desc\">jackett 作为种子源，sonarr剧集管理，bt下载，qbittorrent主力下载，使用iyuu转移辅种，emby，jellyfin做海报墙，sunfinder自动下载字幕。基本算是完美打通全流程自动追剧。bt种子文件命名规则SxxExx的自动识别下载，国内的资源手动查找下载，自动推送到emby刮削好。结合本地DNS管理，DNS去广告，Nginx 反向代理去端口访问，形成一个完整解决方案。</div>\n    </div>\n</div>\n<h2 id=\"图书、音乐、视频三剑客！-3\">图书、音乐、视频三剑客！</h2>\n<blockquote>\n<p>结构化自己的图书，音乐，和视频！</p>\n</blockquote>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/dc1c8194/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/book.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/dc1c8194/\">如何建立自己的私人图书馆</a>\n        <hr>\n        <div class=\"desc\">图书管理员似乎是个非常有前途的职业，远的有孔子，游学之前当图书管理员，近的有本朝开国毛教员，也当了很长时间图书管理员。我们也可以自己做个私人电子图书馆，单个管理员，说不定很有前途？</div>\n    </div>\n</div>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/3847ad58/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/music.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/3847ad58/\">如何使用media Go,MusicBrainz,Mp3tag工具刮削音乐 整理音乐资料库</a>\n        <hr>\n        <div class=\"desc\">音乐文件则是将歌名、歌手、专辑、发行时间、歌词、封面图等信息写入文件标签，称为ID3 Tag 。它能够在MP3中附加曲子的演出者、作者以及其它类别资讯，方便众多乐曲的管理。</div>\n    </div>\n</div>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/e6d40157/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/emby.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/e6d40157/\">如何使用tinyMediaManager刮削电影和电视剧，动画，并自动下载字幕</a>\n        <hr>\n        <div class=\"desc\">tinyMediaManager是最好用的视频刮削工具，可以刮削电影，动画，电视剧。使用TinyMediaManager生成nfo元数据文件，多媒体软件解析生成海报墙展示丰富的影片信息，配合Emby，Plex使用体验绝佳</div>\n    </div>\n</div>\n<h2 id=\"相关资源\">相关资源</h2>\n<blockquote>\n<p>更多相关资源可以到下面网址查看</p>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/repositories\">DockerHub</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry\">Github</a></li>\n</ul>\n</blockquote>\n<h3 id=\"nas-tools\">nas-tools</h3>\n<blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/jxxghp/nas-tools\">nas-tools Github</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/repository/docker/jxxghp/nas-tools\">nas-tools DockerHub</a></li>\n</ul>\n</blockquote>\n<p>推荐一下这个，作者相当勤奋，更新速度非常快！最重要的是它是国人开发，对中文支持很好！有问题提Issue，作者回复也很快！</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/09/20220509115933.webp\" alt=\"nas-tools\"></p>\n<h4 id=\"功能：\">功能：</h4>\n<h5 id=\"1、资源检索\">1、资源检索</h5>\n<ul>\n<li>PT站聚合<code>RSS</code>订阅，实现资源自动追新。</li>\n<li>通过微信、Telegram或者WEB界面聚合检索资源并择优，最新热门一键搜索或者订阅。</li>\n<li>在豆瓣中标记，后台自动检索，未出全的自动加入<code>RSS</code>追更。</li>\n</ul>\n<h5 id=\"2、媒体识别和重命名\">2、媒体识别和重命名</h5>\n<ul>\n<li>监控下载软件，下载完成后自动识别真实名称，硬链接到媒体库并重命名。</li>\n<li>对目录进行监控，文件变化时自动识别媒体信息硬链接到媒体库并重命名。</li>\n<li>支持国产剧集，支持动漫，改名后<code>Emby/Jellyfin/Plex</code> 100%搜刮。</li>\n</ul>\n<h5 id=\"3、消息服务\">3、消息服务</h5>\n<ul>\n<li>支持<code>ServerChan</code>、微信、<code>Telegram</code>、<code>Bark</code>等图文消息通知，直接在手机上控制。</li>\n</ul>\n<h5 id=\"4、其它\">4、其它</h5>\n<ul>\n<li>自动签到、<code>Emby/Jellyfin/Plex</code>播放状态通知等等。</li>\n</ul>\n<h4 id=\"安装\">安装</h4>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.4\"</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nastools</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> jxxghp/nas<span class=\"token punctuation\">-</span>tools<span class=\"token punctuation\">:</span>latest\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> nastools\n    <span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> nastools\n    <span class=\"token comment\"># ports:</span>\n      <span class=\"token comment\"># - 3000:3000        # 默认的webui控制端口</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/nastools/config<span class=\"token punctuation\">:</span>/config   <span class=\"token comment\"># 冒号左边请修改为你想保存配置的路径</span>\n      <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span>/Download<span class=\"token punctuation\">:</span>/share/Download\n      <span class=\"token comment\">#- /你的媒体目录:/你想设置的容器内能见到的目录   # 媒体目录，多个目录需要分别映射进来</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> PUID=$<span class=\"token punctuation\">{</span>PUID<span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">-</span> PGID=$<span class=\"token punctuation\">{</span>PGID<span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">-</span> TZ=$<span class=\"token punctuation\">{</span>TZ<span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">-</span> UMASK=022 <span class=\"token comment\"># 掩码权限，默认000，可以考虑设置为022</span>\n     <span class=\"token comment\">#- REPO_URL=https://ghproxy.com/https://github.com/jxxghp/nas-tools.git  </span>\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"参数配置\">参数配置</h4>\n<p>新版参数基本都可以在web界面配置。</p>\n<p>也可以直接修改配置文件，配置文件中有非常详细的注释！请认真查看配置文件中的文本注释！</p>\n<p>配置文件位置，基于docker路径<code>/config/config.yaml</code></p>\n<p>配置文件模板，可以仓库下面链接文件</p>\n<p><code>https://github.com/jxxghp/nas-tools/blob/master/config/config.yaml</code></p>\n<h3 id=\"硬链接工具-2\">硬链接工具</h3>\n<blockquote>\n<ul>\n<li><strong><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry/PTtool\">Github appotry/PTtool</a></strong></li>\n</ul>\n</blockquote>\n<h3 id=\"nginx-docker\">nginx docker</h3>\n<blockquote>\n<ul>\n<li><strong><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry\">Github appotry</a>/<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry/nginx-purge-docker\">nginx-purge-docker</a></strong></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/repository/docker/bloodstar/nginx-purge\">nginx DockerHub</a></li>\n</ul>\n</blockquote>\n<h3 id=\"prowlarr\">prowlarr</h3>\n<blockquote>\n<p>最早是玩<code>sonarr</code>、<code>radarr</code>，然后找到i相关的全家桶，见下图</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/09/20220509122743.webp\" alt=\"prowlarr\"></p>\n<blockquote>\n<p>发现各种资源，结构化，<code>Github</code>上面都有很完善的解决方案，但大都对中文支持不好。而且各种上下游资源也是越来越丰富，看看<code>prowlarr</code>支持的<code>app</code>，基本覆盖你的所有所需！<code>Whisparr</code>项目的介绍惊呆了我😄</p>\n<p>国人也有一些好项目，<code> IYUU</code>，<code>nas-tools</code>等。</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/09/20220509122740.webp\" alt=\"prowlarr\"></p>\n<h3 id=\"FlareSolverr\"><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/FlareSolverr/FlareSolverr\">FlareSolverr</a></h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run -d <span class=\"token punctuation\">\\</span>\n  --name<span class=\"token operator\">=</span>flaresolverr <span class=\"token punctuation\">\\</span>\n  -p <span class=\"token number\">8191</span>:8191 <span class=\"token punctuation\">\\</span>\n  -e <span class=\"token assign-left variable\">LOG_LEVEL</span><span class=\"token operator\">=</span>info <span class=\"token punctuation\">\\</span>\n  --restart unless-stopped <span class=\"token punctuation\">\\</span>\n  ghcr.io/flaresolverr/flaresolverr:latest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>如果成功启动，访问<code>ip:8191</code>将看到如下信息</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n<span class=\"token property\">\"msg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"FlareSolverr is ready!\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"v2.2.4\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"userAgent\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mozilla/5.0 (X11; Linux x86_64; rv:94.0) Gecko/20100101 Firefox/94.0\"</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "pt",
                "nas",
                "docker",
                "emby"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/dc1c8194/",
            "url": "https://blog.17lai.site/posts/dc1c8194/",
            "title": "如何建立自己的私人图书馆",
            "date_published": "2022-05-02T14:39:37.000Z",
            "content_html": "<blockquote>\n<p>继刮削音乐，刮削电影、电视剧、动画等视频之后的第三季，刮削图书！</p>\n<p>结构化自己的图书，方便自己随时查阅，是提高自己各种能力的重要辅助手段！把各方面知识都结构化，可以极大的扩展你的思维，放飞你的思想，让你以更清晰的目光看待这个世界!</p>\n<p>友情提示：中国法规是不允许私人做电子出版的！<mark>自用可以，公开访问是违法的</mark>！</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"操作指南\">操作指南</h2>\n<p>Web界面的<code>Calibre</code>作为阅读界面，支持<code>OPDS</code>接口，可以手机访问！</p>\n<p><code>PC </code>版的<code>Calibrez</code>作为电子书导入，转移，和管理的工具更方便！</p>\n<p>注意不要同时在web和PC端操作数据库，很容易导致数据库出bug。</p>\n<p>虽然<code>pc calibre</code>有数据库恢复功能，大部分时间都可以成功恢复数据库，但是偶尔也有不能恢复的时候！</p>\n<h2 id=\"安装Docker\">安装Docker</h2>\n<blockquote>\n<p>更多平台Docker安装介绍，请看这里</p>\n<p><a href=\"https://blog.17lai.site/posts/40300608/#Hexo-Docker%E7%8E%AF%E5%A2%83%E4%BD%BF%E7%94%A8%E7%AF%87\">Hexo Docker环境使用篇</a></p>\n</blockquote>\n<h3 id=\"1、安装docker\">1、安装docker</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -fsSL https://get.docker.com <span class=\"token operator\">|</span> <span class=\"token function\">sh</span> <span class=\"token operator\">&amp;&amp;</span> systemctl <span class=\"token builtin class-name\">enable</span> --now <span class=\"token function\">docker</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"2、安装docker-compose\">2、安装docker-compose</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p /usr/local/lib/docker/cli-plugins\n<span class=\"token function\">curl</span> -SL https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -s<span class=\"token variable\">`</span></span>-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -m<span class=\"token variable\">`</span></span> -o /usr/local/lib/docker/cli-plugins/docker-compose\n<span class=\"token function\">chmod</span> +x /usr/local/lib/docker/cli-plugins/docker-compose<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3、运行bookstack\">3、运行bookstack</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> compose up -d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"4、查看日志\">4、查看日志</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> logs -f calibre<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"CalibreWeb\">CalibreWeb</h2>\n<blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/technosoft2000/calibre-web\">Github</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.github.com/Technosoft2000/docker-calibre-web\">Dockerhub</a></li>\n<li><code>Calibre</code>相关的<code>Docker</code>很多，这是其中界面很漂亮的一个版本</li>\n<li>注意这个<code>Docker</code>安装需要访问<code>Github</code>下载相关文件！注意你的网络是否正常</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/03/20220503001726.webp\" alt=\"technosoft2000/calibre-web\"></p>\n<p>视频详细<code>Calibre web</code>讲解</p>\n<style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class=\"bbplayer\"><iframe class=\"bbplayer\" id=\"mmedia-ZPVCxzUzXmxGxnPp\" src=\"https://player.bilibili.com/player.html?bvid=bv12v411W7Pw&amp;page=1&amp;high_quality=1&amp;danmaku=true\" allowfullscreen=\"allowfullscreen\" scrolling=\"no\" border=\"0\" frameborder=\"0\" framespacing=\"0\" sandbox=\"allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups\"></iframe></div><script> document.getElementById(\"mmedia-ZPVCxzUzXmxGxnPp\").style.height=document.getElementById(\"mmedia-ZPVCxzUzXmxGxnPp\").scrollWidth*0.76+\"px\";\n    window.onresize = function(){\n      document.getElementById(\"mmedia-ZPVCxzUzXmxGxnPp\").style.height=document.getElementById(\"mmedia-ZPVCxzUzXmxGxnPp\").scrollWidth*0.76+\"px\";\n    }; </script>\n<p><strong>Compose 安装示例</strong></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">calibre</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> technosoft2000/calibre<span class=\"token punctuation\">-</span>web\n  <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> calibre\n  <span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> calibre\n  <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n  <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/Calibre/web/config<span class=\"token punctuation\">:</span>/calibre<span class=\"token punctuation\">-</span>web/config\n    <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/Calibre/web/kindlegen<span class=\"token punctuation\">:</span>/calibre<span class=\"token punctuation\">-</span>web/kindlegen\n    <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/Calibre/web/app<span class=\"token punctuation\">:</span>/calibre<span class=\"token punctuation\">-</span>web/app\n    <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/Calibre/books<span class=\"token punctuation\">:</span>/books\n\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n   <span class=\"token punctuation\">-</span> 8283<span class=\"token punctuation\">:</span><span class=\"token number\">8083</span>\n  <span class=\"token key atrule\">env_file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> .env\n  <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> PUID=$<span class=\"token punctuation\">{</span>PUID<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">-</span> PGID=$<span class=\"token punctuation\">{</span>PGID<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">-</span> TZ=$<span class=\"token punctuation\">{</span>TZ<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">-</span> USE_CONFIG_DIR=true\n    <span class=\"token punctuation\">-</span> SET_CONTAINER_TIMEZONE=true<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"talebook\">talebook</h2>\n<blockquote>\n<ul>\n<li>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://www.github.com/talebook/talebook\">Github</a></p>\n</li>\n<li>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/talebook/talebook\">Dockerhub</a></p>\n</li>\n<li>\n<p>Tips: 国人开发的，个人感觉更适合作为图书管理的界面</p>\n</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/03/20220503001726-1.webp\" alt=\"talebook/talebook\"></p>\n<p><strong>Compose 安装示例</strong></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">talebook</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> talebook/talebook\n  <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> talebook\n  <span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> talebook\n  <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token datetime number\">90:80</span>\n  <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/talebook/data<span class=\"token punctuation\">:</span>/data\n  <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> PUID=$<span class=\"token punctuation\">{</span>PUID<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">-</span> PGID=$<span class=\"token punctuation\">{</span>PGID<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">-</span> TZ=$<span class=\"token punctuation\">{</span>TZ<span class=\"token punctuation\">}</span>\n  <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">public_access</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">aliases</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> talebook <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"Calibre\">Calibre</h2>\n<blockquote>\n<p><code>Pc</code>版的<code>Calibre</code>用来做数据库管理，有各种插件支持，是最方便的。</p>\n<p>主页：<a target=\"_blank\" rel=\"noopener\" href=\"https://calibre-ebook.com/\">calibre-ebook</a></p>\n<p>下载：<a target=\"_blank\" rel=\"noopener\" href=\"https://calibre-ebook.com/download\">download</a></p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/03/20220503001726-2.webp\" alt=\"Calibre\"></p>\n<h3 id=\"刮削插件安装\">刮削插件安装</h3>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/03/20220503001726-3.webp\" alt=\"Calibre首选项\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/03/20220503001726-4.webp\" alt=\"Calibre插件\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/03/20220503001726-5.webp\" alt=\"安装Calibre插件\"></p>\n<blockquote>\n<p>豆瓣刮削插件这里下载安装</p>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/fugary/calibre-douban/releases\">Github</a></li>\n<li>官方地址 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/fugary/calibre-douban/releases/download/v1.0.5/NewDouban.zip\">Github 下载地址</a></li>\n<li>本站自建加速地址 <a target=\"_blank\" rel=\"noopener\" href=\"https://onebox.17lai.site/ODE5/NewDouban.zip\">onebox.17lai.site加速下载</a> 更新到1.05 如果打不开，多刷新几次！</li>\n</ul>\n</blockquote>\n<h3 id=\"添加书库\">添加书库</h3>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/03/20220503013543.webp\" alt=\"添加书库\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/03/20220503013546.webp\" alt=\"添加书库\"></p>\n<h3 id=\"图书刮削\">图书刮削</h3>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/03/20220503001726-6.webp\" alt=\"下载元数据\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/03/20220503001726-7.webp\" alt=\"检查元数据\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/03/20220503001726-8.webp\" alt=\"检查元数据\"></p>\n<p>检查完毕就可以点击确认</p>\n<h3 id=\"数据库转移\">数据库转移</h3>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/03/20220503001726-9.webp\" alt=\"数据库转移\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/03/20220503001726-10.webp\" alt=\"数据库转移\"></p>\n<blockquote>\n<p>这里最好建立一个临时书库作为转移和刮削预备用，防止意外崩溃导致数据库损坏或丢失！</p>\n<p>你可以和你的好友之间共享或者转移某个书库。</p>\n<p>图书太多，刮削太耗时间，合作刮削建立书库才是正途！</p>\n</blockquote>\n<h3 id=\"Calibre数据库恢复\"><code>Calibre</code>数据库恢复</h3>\n<p><img src=\"https://cimg1.17lai.site/data/2022/05/03/20220503001726-11.webp\" alt=\"数据库恢复\"></p>\n<h2 id=\"图书、音乐、视频三剑客！-2\">图书、音乐、视频三剑客！</h2>\n<blockquote>\n<p>结构化自己的图书，音乐，和视频！</p>\n</blockquote>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/dc1c8194/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/book.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/dc1c8194/\">如何建立自己的私人图书馆</a>\n        <hr>\n        <div class=\"desc\">图书管理员似乎是个非常有前途的职业，远的有孔子，游学之前当图书管理员，近的有本朝开国毛教员，也当了很长时间图书管理员。我们也可以自己做个私人电子图书馆，单个管理员，说不定很有前途？</div>\n    </div>\n</div>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/3847ad58/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/music.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/3847ad58/\">如何使用media Go,MusicBrainz,Mp3tag工具刮削音乐 整理音乐资料库</a>\n        <hr>\n        <div class=\"desc\">音乐文件则是将歌名、歌手、专辑、发行时间、歌词、封面图等信息写入文件标签，称为ID3 Tag 。它能够在MP3中附加曲子的演出者、作者以及其它类别资讯，方便众多乐曲的管理。</div>\n    </div>\n</div>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/e6d40157/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/emby.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/e6d40157/\">如何使用tinyMediaManager刮削电影和电视剧，动画，并自动下载字幕</a>\n        <hr>\n        <div class=\"desc\">tinyMediaManager是最好用的视频刮削工具，可以刮削电影，动画，电视剧。使用TinyMediaManager生成nfo元数据文件，多媒体软件解析生成海报墙展示丰富的影片信息，配合Emby，Plex使用体验绝佳</div>\n    </div>\n</div>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "刮削",
                "calibre",
                "douban",
                "book"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/ba4ef326/",
            "url": "https://blog.17lai.site/posts/ba4ef326/",
            "title": "QNAP添加man pages",
            "date_published": "2022-04-21T11:04:33.000Z",
            "content_html": "<blockquote>\n<p>默认<code>QNAP</code>是不带<code>man</code>命令的，但是，作为一个<code>Linux</code>重度用户怎么能忍？得想办法安装man啊！经过一番努力，最终成功安装man pages!</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/2120220421192048.svg\" alt=\"\"></p>\n<h2 id=\"需求\">需求</h2>\n<p>默认<code>QNAP</code>是不带<code>man</code>命令的，但是，作为一个<code>Linux</code>重度用户怎么能忍？</p>\n<blockquote>\n<p>得想办法安装man啊！</p>\n</blockquote>\n<h2 id=\"验证\">验证</h2>\n<p>先试一下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># man</span>\n-sh: man: <span class=\"token builtin class-name\">command</span> not found<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>基本可以死心了。</p>\n<p>看看busybox版本</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># /bin/busybox </span>\nBusyBox v1.24.1 <span class=\"token punctuation\">(</span><span class=\"token number\">2022</span>-03-24 03:13:07 CST<span class=\"token punctuation\">)</span> multi-call binary.\nBusyBox is copyrighted by many authors between <span class=\"token number\">1998</span>-2015.\nLicensed under GPLv2. See <span class=\"token builtin class-name\">source</span> distribution <span class=\"token keyword\">for</span> detailed\ncopyright notices.\n\nUsage: busybox <span class=\"token punctuation\">[</span>function <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\n   or: busybox --list\n   or: <span class=\"token keyword\">function</span> <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>.\n\n        BusyBox is a multi-call binary that combines many common Unix\n        utilities into a single executable.  Most people will create a\n        <span class=\"token function\">link</span> to busybox <span class=\"token keyword\">for</span> each <span class=\"token keyword\">function</span> they wish to use and BusyBox\n        will act like whatever it was invoked as.\n\nCurrently defined functions:\n        <span class=\"token punctuation\">[</span>, <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>, addgroup, adduser, arping, ash, awk, base64, basename, bunzip2, bzcat, bzip2, cat, chattr, chgrp, chmod, chown,\n        chroot, chvt, cksum, clear, cmp, cp, cpio, crond, crontab, cut, date, dc, dd, deallocvt, delgroup, deluser, depmod, df,\n        diff, dirname, dmesg, dnsdomainname, dos2unix, du, echo, egrep, env, expr, false, fdisk, fgrep, find, free, fsync, getty,\n        grep, groups, gunzip, gzip, halt, hd, head, hexdump, hostname, hwclock, id, ifconfig, init, insmod, install, ip, ipaddr,\n        iplink, iproute, iprule, iptunnel, kill, killall, killall5, klogd, less, linuxrc, ln, logger, login, logread, ls, lsattr,\n        lsmod, lspci, md5sum, mkdir, mknod, mktemp, modprobe, more, mount, mv, nameif, netstat, nslookup, openvt, passwd, pidof,\n        ping, ping6, pivot_root, poweroff, printf, ps, pwd, rdate, readlink, realpath, reboot, renice, reset, resize, rm, rmdir,\n        rmmod, route, sed, seq, sh, sha1sum, sleep, sort, split, start-stop-daemon, stat, strings, swapoff, swapon, switch_root,\n        sync, sysctl, syslogd, tail, tar, taskset, tee, telnet, test, tftp, time, top, touch, tr, traceroute, traceroute6, true,\n        tty, umount, uname, uniq, unix2dos, unzip, uptime, usleep, vi, watch, wc, wget, which, whoami, xargs, yes, zcat<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以看到内置<code>busybox</code>不支持<code>man</code>的。</p>\n<h2 id=\"寻找解决方案\">寻找解决方案</h2>\n<p>去看看官方<code>Busybox</code>是否支持</p>\n<blockquote>\n<p><strong>Busybox</strong> : https://busybox.net/downloads/BusyBox.html</p>\n</blockquote>\n<p>发现是支持<code>man</code>的，只是<code>QNAP</code>没有编译进去。</p>\n<h2 id=\"解决思路\">解决思路</h2>\n<ul>\n<li>给<code>QNAP</code>提需求单？ 是一个选择，但是太慢了，想官方内置，不知道等到猴年马月了。</li>\n<li><code>QNAP</code>似乎开发了底层SDK，记得有下载过，还没有仔细研究怎么使用。不过记得有附带编译工具链，自己动手编译一个<code>busybox</code>版本替代系统内置的，应该也是可行的。</li>\n</ul>\n<h2 id=\"去看看别人有啥解决方案？\">去看看别人有啥解决方案？</h2>\n<blockquote>\n<p>Optware has man but only for the optware installed packages (if supplied) and or manually added files in the man folder.</p>\n<p>https://forum.qnap.com/viewtopic.php?t=49961</p>\n</blockquote>\n<p>柳暗花明又一村， <code>entware</code> 支持<code>man pages</code>，可以直接安装了。</p>\n<blockquote>\n<p>插入<code>entware</code>安装方法：</p>\n<p>打开<code>App Center</code>，源选择刚添加的<code>Qnapclub</code>，点击搜索框输入<code>entware</code>，选<code>Entware-std 1.03</code></p>\n</blockquote>\n<p>一条命令解决：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">opkg <span class=\"token function\">install</span> man-db man-pages<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>安装完之后验证：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># man fopen</span>\nFOPEN<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>                                            Linux Programmer's Manual                                            FOPEN<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\nNAME\n       fopen, fdopen, freopen - stream <span class=\"token function\">open</span> functions\n\nSYNOPSIS\n       <span class=\"token comment\">#include &lt;stdio.h&gt;</span>\n\n       FILE *fopen<span class=\"token punctuation\">(</span>const char *restrict pathname, const char *restrict mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       FILE *fdopen<span class=\"token punctuation\">(</span>int fd, const char *mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       FILE *freopen<span class=\"token punctuation\">(</span>const char *restrict pathname, const char *restrict mode,\n                     FILE *restrict stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   Feature Test Macro Requirements <span class=\"token keyword\">for</span> glibc <span class=\"token punctuation\">(</span>see feature_test_macros<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">))</span>:\n\n       fdopen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>:\n           _POSIX_C_SOURCE\n\nDESCRIPTION\n       The fopen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">function</span> opens the <span class=\"token function\">file</span> whose name is the string pointed to by pathname and associates a stream with it.\n\n       The  argument mode points to a string beginning with one of the following sequences <span class=\"token punctuation\">(</span>possibly followed by additional char‐\n       acters, as described below<span class=\"token punctuation\">)</span>:\n\n       r      Open text <span class=\"token function\">file</span> <span class=\"token keyword\">for</span> reading.  The stream is positioned at the beginning of the file.\n\n       r+     Open <span class=\"token keyword\">for</span> reading and writing.  The stream is positioned at the beginning of the file.\n\n       w      Truncate <span class=\"token function\">file</span> to zero length or create text <span class=\"token function\">file</span> <span class=\"token keyword\">for</span> writing.  The stream is positioned at  the  beginning  of  the\n              file.\n\n       w+     Open  <span class=\"token keyword\">for</span> reading and writing.  The <span class=\"token function\">file</span> is created <span class=\"token keyword\">if</span> it does not exist, otherwise it is truncated.  The stream is\n              positioned at the beginning of the file.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>问题就这么解决了。</p>\n<blockquote>\n<p>一个问题，我有很多其它手册，想要安装，怎么办？</p>\n</blockquote>\n<h2 id=\"安装其它man手册\">安装其它<code>man</code>手册</h2>\n<p>已经有了<code>man</code>命令，只要把手册安装到<code>entware man</code>命令目录中就行了。</p>\n<p>找到<code>enteware man</code>手册目录。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /share/CACHEDEV3_DATA/.qpkg/Entware\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -name <span class=\"token string\">\"*man*\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<blockquote>\n<p>TIPS：<code>CACHEDEV3_DATA/.qpkg</code>这个是安装qpkg软件的磁盘。<code>CACHEDEV3</code>似乎是表示第三块插入机器的磁盘。</p>\n</blockquote>\n<p>结果输出：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./bin/catman\n./bin/go/misc/chrome/gophertool/manifest.json\n./bin/go/pkg/linux_amd64/cmd/vendor/github.com/ianlancetaylor/demangle.a\n./bin/go/src/cmd/compile/internal/types2/testdata/manual.go2\n./bin/go/src/cmd/go/internal/modconv/testdata/dockerman.glide\n./bin/go/src/cmd/go/internal/modconv/testdata/dockerman.out\n./bin/go/src/cmd/go/internal/modconv/testdata/govmomi.vmanifest\n./bin/go/src/cmd/go/internal/modconv/vmanifest.go\n./bin/go/src/cmd/go/testdata/script/mod_convert_vendor_manifest.txt\n./bin/go/src/cmd/go/testdata/script/mod_list_command_line_arguments.txt\n./bin/go/src/cmd/go/testdata/script/mod_download_too_many_redirects.txt\n./bin/go/src/cmd/go/testdata/script/gccgo_mangle.txt\n./bin/go/src/cmd/vendor/github.com/google/pprof/internal/driver/commands.go\n./bin/go/src/cmd/vendor/github.com/ianlancetaylor/demangle\n./bin/go/src/cmd/vendor/github.com/ianlancetaylor/demangle/demangle.go\n./bin/go/src/compress/bzip2/huffman.go\n./bin/go/src/compress/flate/huffman_bit_writer.go\n./bin/go/src/compress/flate/huffman_bit_writer_test.go\n./bin/go/src/compress/flate/huffman_code.go\n./bin/go/src/compress/flate/testdata/huffman-null-max.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-null-max.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-null-max.golden\n./bin/go/src/compress/flate/testdata/huffman-null-max.in\n./bin/go/src/compress/flate/testdata/huffman-null-max.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-null-max.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-pi.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-pi.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-pi.golden\n./bin/go/src/compress/flate/testdata/huffman-pi.in\n./bin/go/src/compress/flate/testdata/huffman-pi.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-pi.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.golden\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.in\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.golden\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.in\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-rand-max.golden\n./bin/go/src/compress/flate/testdata/huffman-rand-max.in\n./bin/go/src/compress/flate/testdata/huffman-shifts.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-shifts.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-shifts.golden\n./bin/go/src/compress/flate/testdata/huffman-shifts.in\n./bin/go/src/compress/flate/testdata/huffman-shifts.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-shifts.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-text-shift.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-text-shift.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-text-shift.golden\n./bin/go/src/compress/flate/testdata/huffman-text-shift.in\n./bin/go/src/compress/flate/testdata/huffman-text-shift.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-text-shift.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-text.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-text.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-text.golden\n./bin/go/src/compress/flate/testdata/huffman-text.in\n./bin/go/src/compress/flate/testdata/huffman-text.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-text.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-zero.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-zero.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-zero.golden\n./bin/go/src/compress/flate/testdata/huffman-zero.in\n./bin/go/src/compress/flate/testdata/huffman-zero.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-zero.wb.expect-noinput\n./bin/go/src/go/parser/performance_test.go\n./bin/go/src/go/printer/performance_test.go\n./bin/go/src/go/types/testdata/manual.go2\n./bin/go/src/image/jpeg/huffman.go\n./bin/go/src/vendor/golang.org/x/net/http2/hpack/huffman.go\n./bin/go/test/bench/go1/mandel_test.go\n./bin/go/test/abi/many_int_input.go\n./bin/go/test/abi/many_int_input.out\n./bin/go/test/abi/many_intstar_input.go\n./bin/go/test/abi/many_intstar_input.out\n./bin/man\n./bin/mandb\n./bin/manpath\n./etc/man_db.conf\n./lib/opkg/info/man-db.conffiles\n./lib/opkg/info/man-db.control\n./lib/opkg/info/man-pages.list\n./lib/opkg/info/man-db.list\n./lib/opkg/info/man-pages.control\n./lib/opkg/info/man-pages.postinst\n./lib/python3.10/encodings/__pycache__/hp_roman8.cpython-310.opt-1.pyc\n./lib/python3.10/encodings/__pycache__/hp_roman8.cpython-310.opt-2.pyc\n./lib/python3.10/encodings/__pycache__/mac_roman.cpython-310.opt-2.pyc\n./lib/python3.10/encodings/__pycache__/mac_roman.cpython-310.pyc\n./lib/python3.10/encodings/__pycache__/hp_roman8.cpython-310.pyc\n./lib/python3.10/encodings/__pycache__/mac_romanian.cpython-310.pyc\n./lib/python3.10/encodings/__pycache__/mac_roman.cpython-310.opt-1.pyc\n./lib/python3.10/encodings/__pycache__/mac_romanian.cpython-310.opt-1.pyc\n./lib/python3.10/encodings/__pycache__/mac_romanian.cpython-310.opt-2.pyc\n./lib/python3.10/encodings/hp_roman8.pyc\n./lib/python3.10/encodings/mac_roman.pyc\n./lib/python3.10/encodings/mac_romanian.pyc\n./lib/tcl8.5/encoding/macRoman.enc\n./lib/tcl8.5/encoding/macRomania.enc\n./lib/groff/groffer/man.pl\n./lib/man-db\n./lib/man-db/libman-2.10.2.so\n./lib/man-db/libman.so\n./lib/man-db/libmandb-2.10.2.so\n./lib/man-db/libmandb.so\n./lib/man-db/manconv\n./share/zoneinfo/Asia/Amman\n./share/zoneinfo/Asia/Kathmandu\n./share/zoneinfo/Asia/Katmandu\n./share/doc/man-db\n./share/doc/man-db/man-db-manual.ps\n./share/doc/man-db/man-db-manual.txt\n./share/groff/1.22.4/tmac/man.tmac\n./share/groff/1.22.4/tmac/mandoc.tmac\n./share/groff/site-tmac/man.local\n./share/man\n./share/man/man1\n./share/man/man1/man-recode.1\n./share/man/man1/man.1\n./share/man/man1/manconv.1\n./share/man/man1/manpath.1\n./share/man/man5\n./share/man/man5/manpath.5\n./share/man/man8\n./share/man/man8/catman.8\n./share/man/man8/mandb.8\n./share/man/man2\n./share/man/man3\n./share/man/man4\n./share/man/man6\n./share/man/man7\n./share/man/man7/man-pages.7\n./share/man/man7/man.7\n./var/cache/man<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>很显然，路径就在<code>/share/CACHEDEV3_DATA/.qpkg/Entware/share//man/</code>中了。</p>\n<p>那么，安装完<code>entware</code>之后，其它的man 手册放到 <code>/share/CACHEDEV3_DATA/.qpkg/Entware/share/man</code>这个目录中就行了。</p>\n<p>把<code>gh git</code>等手册放进去。再次验证</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">man</span> gh\nGH<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>                                                   GitHub CLI manual                                                   GH<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\nNAME\n       gh - GitHub CLI\n\nSYNOPSIS\n       gh <span class=\"token operator\">&lt;</span>command<span class=\"token operator\">&gt;</span> <span class=\"token operator\">&lt;</span>subcommand<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span>flags<span class=\"token punctuation\">]</span>\n\nDESCRIPTION\n       Work seamlessly with GitHub from the <span class=\"token builtin class-name\">command</span> line.\n\nCORE COMMANDS\n       gh-auth<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Authenticate gh and <span class=\"token function\">git</span> with GitHub\n\n       gh-browse<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Open the repository <span class=\"token keyword\">in</span> the browser\n\n       gh-codespace<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Connect to and manage your codespaces\n\n       gh-gist<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Manage gists\n\n       gh-issue<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Manage issues\n\n       gh-pr<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Manage pull requests\n\n       gh-release<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Manage releases\n\n       gh-repo<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Manage repositories\n\nACTIONS COMMANDS<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>完美收工！</p>\n<p>可能需要注意的地方，注意<code>man</code>手册的权限<code>644</code>，如果手册copy进去了，发现使用不了。运行下面命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> <span class=\"token number\">644</span> -R /share/CACHEDEV3_DATA/.qpkg/Entware/share/man<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"安装更多的man-pages\">安装更多的<code>man pages</code></h2>\n<blockquote>\n<ul>\n<li><code>Git</code>手册下载地址： https://mirrors.edge.kernel.org/pub/software/scm/git/</li>\n<li>中文<code>man</code>手册： https://github.com/man-pages-zh/manpages-zh</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>PS: 中文<code>man</code>手册有不少依赖需要解决，在<code>Docker</code>中已经可以查询中文<code>man</code>了，<code>qnap</code>中试了下，解决依赖搞得头大，暂时就<code>docker</code>中用中文<code>man</code>好了</p>\n</blockquote>\n<p>真正收工了！</p>\n<h2 id=\"附录\">附录</h2>\n<h3 id=\"man介绍\">man介绍</h3>\n<p>man命令并非仅仅能查看命令或者函数的介绍，在linux中，有丰富的帮助手册信息，并且每一个手册都有一个编号。编号和对应内容如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">编号</th>\n<th style=\"text-align:left\">代表内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">可执行程序或shell命令，如ls</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">系统调用，如chdir</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">库函数，如printf</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">设备或特殊文件，如tty</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\">配置文件格式或约定</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">6</td>\n<td style=\"text-align:left\">游戏</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">7</td>\n<td style=\"text-align:left\">杂项</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">8</td>\n<td style=\"text-align:left\">管理命令，通常只有root用户可以使用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">9</td>\n<td style=\"text-align:left\">内核例程</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">n</td>\n<td style=\"text-align:left\">内置命令，如cd</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"常用快捷键\">常用快捷键</h3>\n<blockquote>\n<p><strong>手册内容</strong></p>\n<p>多数手册包含以下几部分内容：</p>\n<ul>\n<li>NAME 功能的简单描述</li>\n<li>SYNOPSIS 语法格式</li>\n<li>DESCRIPTION 描述</li>\n<li>OPTIONS 选项</li>\n<li>ERRORS 描述出错场景，<strong>这在排查错误时很有帮助</strong></li>\n<li>NOTES 注意事项</li>\n<li>FILES 相关文件，例如对于man命令的FILES部分内容显示了它的配置文件位置等信息</li>\n<li>EXAMPLES 使用示例，会提供一些简单的示例</li>\n<li>BUGS 存在的bug，<strong>当遇到奇怪的问题时，不妨看看当前命令是否有已知的bug</strong></li>\n</ul>\n<p><strong>基本查看</strong></p>\n<p>手册的查看和less查看文本类似，可以参考《文本查看篇》或查看less命令的使用，这里介绍基本操作：</p>\n<ul>\n<li>空格 向下翻页</li>\n<li>Home 回到第一页</li>\n<li>End 跳到最后一页</li>\n<li>/string 向前搜索string字符串</li>\n<li>?string 向后搜索string字符串</li>\n<li>n 下一个匹配字符</li>\n<li>N 上一个匹配字符</li>\n<li>q 退出</li>\n</ul>\n</blockquote>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "qnap",
                "nas",
                "embeded",
                "man"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/d32a07a7/",
            "url": "https://blog.17lai.site/posts/d32a07a7/",
            "title": "Git介绍以及分支模型图解",
            "date_published": "2022-04-19T12:07:16.000Z",
            "content_html": "<blockquote>\n<p>不废话，直接上图。</p>\n<p>由 Drawio 绘制</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1920220419221343.svg\" alt=\"git使用\"></p>\n<h2 id=\"GIT架构\"><strong>GIT架构</strong></h2>\n<p>GIT的架构，可以分为几个部分：</p>\n<ul>\n<li>本地工作区(working directory)</li>\n<li>暂存区(stage area, 又称为索引区, index)、</li>\n<li>本地仓库(local repository)、</li>\n<li>远程仓库副本</li>\n<li>远程仓库(remote repository)。</li>\n</ul>\n<p><strong>工作区(working directory)</strong> 简言之就是你工作的区域。对于git而言，就是的本地工作目录。工作区的内容会包含提交到暂存区和版本库(当前提交点)的内容，同时也包含自己的修改内容。</p>\n<p><strong>暂存区(stage area, 又称为索引区index)</strong> 是git中一个非常重要的概念。是我们把修改提交版本库前的一个过渡阶段。查看GIT自带帮助手册的时候，通常以index来表示暂存区。在工作目录下有一个.git的目录，里面有个index文件，存储着关于暂存区的内容。git add命令将工作区内容添加到暂存区。</p>\n<p><strong>本地仓库(local repository)</strong> 版本控制系统的仓库，存在于本地。当执行git commit命令后，会将暂存区内容提交到仓库之中。在工作区下面有.git的目录，这个目录下的内容不属于工作区，里面便是仓库的数据信息，暂存区相关内容也在其中。</p>\n<p><strong>远程版本库(remote repository)</strong> 与本地仓库概念基本一致，不同之处在于一个存在远程，可用于远程协作，一个却是存在于本地。通过push/pull可实现本地与远程的交互；</p>\n<p><strong>远程仓库副本</strong> 可以理解为存在于本地的远程仓库缓存。如需更新，可通过git fetch/pull命令获取远程仓库内容。使用fech获取时，并未合并到本地仓库，此时可使用git merge实现远程仓库副本与本地仓库的合并。</p>\n<h2 id=\"git介绍\"><code>.git</code>介绍</h2>\n<p><code>.git</code>目录下各个文件中所存放的内容信息：</p>\n<ul>\n<li>\n<p><strong>HEAD</strong> 当前所在位置，其实就是工作区的在版本库中的那个提交点，最终会指向一个40位的HASH值；</p>\n</li>\n<li>\n<p><strong>config</strong> 当前版本库的专有配置文件，如使用命令git config user.name poloxue便会记录在此文件；</p>\n</li>\n<li>\n<p><strong>description</strong> 被gitweb (Github的原型)用来显示对repo的描述。</p>\n</li>\n<li>\n<p><strong>hooks</strong> git有可自动运行在 git 任有意义阶段的脚本hooks, 如commit/release/pull/push等状态之前或者之后。个人思考的一个用处，如pre-push可以用来强制进行代码检查。</p>\n</li>\n<li>\n<p><strong>index</strong> 存放暂存区(stage area)的相关信息；</p>\n</li>\n<li>\n<p><strong>info/exclue</strong> 可以做到和.gitignore相同的事情，用于排除不要包含进版本库的文件。区别就是，此文件不会被共享。</p>\n</li>\n<li>\n<p><strong>refs/heads</strong> 目录下有关于本地仓库的所有分支；</p>\n</li>\n<li>\n<p><strong>refs/remote</strong> 目录下有关于远程仓库的所有分支；</p>\n</li>\n<li>\n<p><strong>object</strong> 目录下存放的就是实际的数据文件</p>\n</li>\n</ul>\n<h2 id=\"附录-2\"><strong>附录</strong></h2>\n<p><a href=\"http%3A//www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">Git 教程</a></p>\n<p><a href=\"https%3A//git-scm.com/book/zh/v2\">Git book</a></p>\n<h2 id=\"系列教程-15\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Devops系列</strong> <a href=\"https://blog.17lai.site/categories/devops/atom.xml\"><strong>Devops 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/ab63eb8f/\">自建全套开源Devops开发系统</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d32a07a7/\">Git介绍以及分支模型图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/39563241/\">三万字无坑搭建基于Docker+K8S+GitLab/SVN+Jenkins+Harbor持续集成交付环境</a></li>\n<li><a href=\"https://blog.17lai.site/posts/3437994a/\">DevOps系列---【Jenkinsfile+Dockerfile+nginx+vue】</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f4c3ad41/\">项目开发管理工具推荐</a></li>\n<li><a href=\"https://blog.17lai.site/posts/acc13b70/\">Gitlab的安装及使用教程完全版</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d08eb7b/\">Gitlab的安装及使用</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "git",
                "devops",
                "drowio"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/ac0df556/",
            "url": "https://blog.17lai.site/posts/ac0df556/",
            "title": "PMBOK指南（第6版）",
            "date_published": "2022-04-17T10:50:15.000Z",
            "content_html": "<blockquote>\n<p>PMBOK 只是一套悬在空中的方法论，要想具体落地还需要具体的行业知识。两条腿，缺一不可！瘸腿项目管理有还不如没有，由部门管理或者研发兼任也行。PMBOK 是基础中的基础知识，了解总是没有坏处的。是常识，不懂就没法做，但要做项目管理，光PMBOK远远不够。<br>\nPMBOK 远不如华为的 IPD 端到端管理体系来的接地气，实用！<br>\n一整套匹配的管理工具，平台。Jira 或禅道，SVN/Git，Gitlab, confluence/xwiki，jenkins，nexus，sonarqube，docker，harbor，openldap等等。推荐本地私有化部署！管理方法和工具，最终一定是要落地的，没法结合企业实际落地的管理一定是财务负担！<br>\n有效的管理 = <strong><code>[ 管理收益 - 管理成本 &gt;= 0 ]</code></strong><br>\n负面的管理 = <strong><code>[ 管理收益 - 管理成本 &lt;= 0 ]</code></strong></p>\n</blockquote>\n<p><img src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/appotry/cloudimg/main/data/2022/04/1720220417191300.png\" alt=\"\"></p>\n<p><strong>可以看到项目管理其实只是企业管理中很小的一部分</strong></p>\n<h2 id=\"1-引论\">1 引论</h2>\n<h2 id=\"1-2-基本要素\">1.2 基本要素</h2>\n<h3 id=\"1-2-1-项目\">1.2.1 项目</h3>\n<p>项目是为创造独特的产品、服务或成果而进行的临时性工作。</p>\n<p><strong>独特的产品、服务或成果</strong></p>\n<ul>\n<li>开展项目是为了通过可交付成果达成目标。</li>\n<li>可交付成果指的是在某一个过程、阶段或项目完成时，必须产出的任何独特性并可核实的产品、成果或服务能力，可以是有形的，也可以是无形的。</li>\n<li>一个独特的产品，可能是其他产品的组成部分、某个产品的升级版或修正版，也可能其本身就是新的最终产品；</li>\n<li>一种独特的服务或提供某种服务的能力；</li>\n<li>一项独特的成果，例如某个结果或文件；</li>\n<li>一个或多个产品、服务或成果的独特组合。</li>\n<li>某些项目可交付成果和活动中可能存在重复的元素，但这种重复并不会改变项目本质上的独特性。</li>\n</ul>\n<p><strong>临时性工作</strong></p>\n<ul>\n<li>项目的“临时性”是指项目有明确的起点和终点。</li>\n<li>“临时性”并不意味着项目的持续时间短。</li>\n<li>虽然项目是临时的，但是项目产生的可交付成果可能会在项目的终止后依然存在。</li>\n</ul>\n<p>项目驱动变革</p>\n<ul>\n<li>从商业角度来看，项目旨在推动组织从一个状态转到另一个状态，从而达成特定目标。</li>\n<li>在项目开始之前，通常将此时的组织描述为“当前状态”，项目驱动变革是为了获得期望的结果，即“将来状态”。</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417172027.png\" alt=\"\"></p>\n<p><strong>项目创造商业价值</strong></p>\n<ul>\n<li>项目的商业价值指特定项目的成果能够为相关方带来的效益。</li>\n<li>项目带来的效益可以是有形的（货币资产、市场份额等）、无形的（品牌认知度、荣誉等）或两者兼有之。</li>\n</ul>\n<p><strong>项目启动背景</strong></p>\n<ul>\n<li>符合法规、法律或社会要求；</li>\n<li>满足相关方的要求或需求；</li>\n<li>执行、变更业务或技术战略；</li>\n<li>创造、改进或修复产品、过程或服务。</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417172027-1.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417172027-2.png\" alt=\"\"></p>\n<p>如何将示例因素归入一个或多个基本因素类别</p>\n<h3 id=\"1-2-2-项目管理的重要性\">1.2.2 项目管理的重要性</h3>\n<p>项目管理就是将知识、技能、工具与技术应用于项目活动，以满足项目的要求。项目管理通过合理运用与整合特定项目所需的项目管理过程得以实现。项目管理使组织能够有效且高效地开展项目。</p>\n<ul>\n<li>达成业务目标；</li>\n<li>满足相关方的期望；</li>\n<li>提高可预测性；</li>\n<li>提高成功的概率；</li>\n<li>在适当的时间交付正确的产品；</li>\n<li>解决问题和争议；</li>\n<li>及时应对风险；</li>\n<li>优化组织资源的使用；</li>\n<li>识别、挽救或终止失败项目；</li>\n<li>管理制约因素（例如范围、质量、进度、成本、资源）；</li>\n<li>平衡制约因素对项目的影响（例如范围扩大可能会增加成本或延长进度）；</li>\n<li>以更好的方式管理变更。</li>\n</ul>\n<h3 id=\"1-2-3-项目、项目集、项目组合以及运营管理之间的关系\">1.2.3 项目、项目集、项目组合以及运营管理之间的关系</h3>\n<h4 id=\"1-2-3-1-概述\">1.2.3.1 概述</h4>\n<p>项目集：项目集是一组相互关联且被协调管理的项目、子项目集和项目集活动，以便获得分别管理所无法获得的利益。项目集不是大项目，大项目指规模特别大的项目。</p>\n<p>项目组合：项目组合是指为实现战略目标而组合在一起的项目、项目集、子项目组合和运营工作。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417172027-3.png\" alt=\"\"></p>\n<p>项目集、项目、共享资源和相关方之间的关系</p>\n<p>从组织的角度看项目、项目集和项目组合管理：</p>\n<ul>\n<li>项目集和项目管理的重点在于以“正确”的方式开展项目集和项目；</li>\n<li>项目组合管理则注重于开展“正确”的项目集和项目。</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417172027-4.png\" alt=\"\"></p>\n<p>项目组合、项目集与项目组合管理的比较</p>\n<h4 id=\"1-2-3-2-项目集管理\">1.2.3.2 项目集管理</h4>\n<p>项目集管理指在项目集中应用知识、技能与原则来实现项目集的目标，获得分别管理项目集组成部分所无法实现的利益和控制。</p>\n<p>项目集管理注重项目与项目以及项目与项目集之间的依赖关系。</p>\n<h4 id=\"1-2-3-3-项目组合管理\">1.2.3.3 项目组合管理</h4>\n<p>项目组合管理是指为了实现战略目标而对一个或多个项目组合进行的集中管理。</p>\n<p>项目组合中的项目集或项目不一定彼此依赖或直接相关。</p>\n<p>项目组合管理的目的：</p>\n<ul>\n<li>指导组织的投资决策；</li>\n<li>选择项目集与项目的最佳组合方式，以达成战略目标；</li>\n<li>提供决策透明度；</li>\n<li>确定团队和实物资源分配的优先顺序；</li>\n<li>提高实现预期投资回报的可能性；</li>\n<li>实现对所有组成部分的综合风险的集中式管理；</li>\n<li>确定项目组合符合组织战略。</li>\n</ul>\n<h4 id=\"1-2-3-5-运营与项目管理\">1.2.3.5 运营与项目管理</h4>\n<p>项目与运营会在产品生命周期的不同时点交叉，例如：</p>\n<ul>\n<li>在新产品开发、产品升级或提高产量时；</li>\n<li>在改进运营或产品开发流程时；</li>\n<li>在产品生命周期结束阶段；</li>\n<li>在每个收尾阶段。</li>\n</ul>\n<h3 id=\"1-2-4-指南的组成部分\">1.2.4 指南的组成部分</h3>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417172027-5.png\" alt=\"\"></p>\n<p>PMBOK指南关键组成部分的描述</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417172027-6.png\" alt=\"\"></p>\n<p>PMBOK指南关键组成部分在项目中的相互关系</p>\n<h3 id=\"1-2-4-1项目和开发生命周期\">1.2.4.1项目和开发生命周期</h3>\n<p>项目生命周期指项目从启动到完成开始到结束所经历的一系列阶段。</p>\n<p>项目生命周期内通常有一个或多个阶段与产品、服务或成果的开发相关，这些阶段成为<strong>开发生命周期</strong>。开发生命周期可以是预测型、迭代型、增量型、适应型或混合型的模式。</p>\n<p><strong>预测型</strong>：在生命周期早期阶段确定项目范围、时间和成本。</p>\n<p><strong>迭代型</strong>：范围通常于项目生命周期的早期确定，但时间及成本估算将随着项目团队对产品理解的不断深入而定期修改。迭代方法是通过一系列重复的循环活动来开发产品，而增量方法是渐进地增加产品的功能。</p>\n<p><strong>增量型</strong>：通过在预定的时间区间内渐进增加产品功能的一系列迭代来产出可交付成果。</p>\n<p><strong>适应型</strong>：也称为敏捷或变更驱动型，详细范围在迭代开始之前就得到了定义和批准。</p>\n<p><strong>混合型</strong>：预测型和适应型的组合。</p>\n<h4 id=\"1-2-4-2-项目阶段\">1.2.4.2 项目阶段</h4>\n<p><strong>项目阶段</strong>是一组具有逻辑关系的项目活动的集合，通常以一个或多个可交付成果的完成为结束。</p>\n<p>生命周期的各个阶段可以通过各种不同的属性来描述。</p>\n<p>属性可能包括（但不限于）：名称、数量、持续时间、资源需求、项目进入某一阶段的准入标准、项目完成某一阶段的退出标准。</p>\n<p>项目分为多个阶段的方式有助于更好地掌控项目管理，同时还提供了评估项目绩效并在后续阶段采取必要的纠正或预防措施的机会。</p>\n<h4 id=\"1-2-4-3-阶段关口\">1.2.4.3 阶段关口</h4>\n<p><strong>阶段关口</strong>设立在阶段结束点，在该时点，把项目及进展与各种项目文件及业务文件（项目商业论证、项目章程、项目管理计划、效益管理计划）进行比较，并根据比较结果做出决定，以便：</p>\n<ul>\n<li>进入下个阶段；</li>\n<li>整改后进入下个阶段；</li>\n<li>结束项目；</li>\n<li>停留在当前阶段；</li>\n<li>重复阶段或某个要素。</li>\n</ul>\n<h4 id=\"1-2-4-4-项目管理过程\">1.2.4.4 项目管理过程</h4>\n<p>项目生命周期是通过一系列项目管理活动进行的，即项目管理过程。每个项目管理过程通过合适的项目管理工具和技术将一个或多个输入转化成一个或多个输出。一个过程的输出通常成为以下二者之一：另一个过程的输入；项目或项目阶段的可交付成果。</p>\n<p>过程通常分三类：</p>\n<ul>\n<li>仅开展一次或仅在项目预定义点开展的过程，如制定章程；</li>\n<li>根据需要定期开展的过程，如需要采购时开展采购过程；</li>\n<li>在整个项目期间持续开展的过程，如开展监控过程。</li>\n</ul>\n<h4 id=\"1-2-4-5-项目管理过程组\">1.2.4.5 项目管理过程组</h4>\n<ul>\n<li><strong>启动过程组</strong>：定义一个新项目或现有项目的一个新阶段，授权开始该项目/阶段的一组过程；</li>\n<li><strong>规划过程组</strong>：明确项目范围，优化目标，为实现目标制定行动方案的一组过程；</li>\n<li><strong>执行过程组</strong>：完成项目管理计划中确定的工作，以满足项目要求的一组过程；</li>\n<li>监控过程组：跟踪、审查和调整项目进展与绩效，识别必要的计划变更并启动相应变更的一组过程；</li>\n<li><strong>收尾过程组</strong>：正式完成或结束项目、阶段或合同所执行的过程。<br>\n*注意：过程组和项目阶段是不同的。</li>\n</ul>\n<h4 id=\"1-2-4-6-项目管理知识领域\">1.2.4.6 项目管理知识领域</h4>\n<p><strong>项目整合管理</strong>：为识别、定义、组合、统一和协调各项目管理过程组的各个过程和活动而开展的过程与活动。<br>\n<strong>项目范围管理</strong>：确保项目做且只做所需的全部工作以成功完成项目的各个过程。<br>\n<strong>项目进度管理</strong>：管理项目按时完成所需的各个过程。<br>\n<strong>项目成本管理</strong>：为使项目在批准的预算内完成而对成本进行规划、估算、预算、融资、筹资、管理和控制的各个过程。<br>\n<strong>项目质量管理</strong>：把组织的质量政策应用于规划、管理、控制项目和产品质量要求，以满足相关方的期望的各个过程。<br>\n<strong>项目资源管理</strong>：识别、获取和管理所需资源以完成项目的各个过程。<br>\n<strong>项目沟通管理</strong>：为确保项目信息及时且恰当地规划、收集、生成、发布、存储、检索、管理、控制、监督和最终处置所需的各个过程。<br>\n<strong>项目风险管理</strong>：包含规划风险管理、识别风险、开展风险分析、规划风险应对、实施风险应对和监督风险的各个过程。<br>\n<strong>项目采购管理</strong>：从项目团队外部采购或获取所需产品、服务或成果的各个过程。<br>\n<strong>项目干系人管理</strong>：识别影响或受项目影响的人员、团队或组织，分析相关方对项目的期望和影响，制定合适的管理策略来有效调动相关方参与项目决策和执行。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417172027-7.png\" alt=\"\"></p>\n<h4 id=\"1-2-4-7-项目管理数据和信息\">1.2.4.7 项目管理数据和信息</h4>\n<ul>\n<li><strong>工作绩效数据</strong>：在执行项目工作的过程中，从每个正在执行的活动中收集到的原始观察结果和测量值。例如工作完成百分比、质量和技术绩效测量结果、进度计划活动的开始和结束日期、变更请求的数量、缺陷的数量、实际成本和实际持续时间等。</li>\n<li><strong>工作绩效信息</strong>：从各控制过程收集，并结合相关背景和跨领域关系进行整合分析而得到的绩效数据。绩效信息的例子包括可交付成果的状态、变更请求的落实情况及预测的完工尚需估算。</li>\n<li><strong>工作绩效报告</strong>：为制定决策、提出问题、采取行动或引起关注，而汇编工作绩效信息所形成的实物或电子项目文件。例如状况报告、备忘录、论证报告、信息札记、电子仪表盘、推荐意见和情况更新。</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417172027-8.png\" alt=\"\"></p>\n<h3 id=\"1-2-5-裁剪\">1.2.5 裁剪</h3>\n<p>由于每个项目都是独特的，所以在实际应用时，应把项目管理裁剪成适合于特定项目，应选择恰当的项目管理过程、输入、工具、技术、输出和生命周期阶段以管理项目。</p>\n<h3 id=\"1-2-6-项目管理商业文件\">1.2.6 项目管理商业文件</h3>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417172027-9.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417172027-10.png\" alt=\"\"></p>\n<p>需求评估与关键业务/项目文件的相互关系</p>\n<h4 id=\"1-2-6-1-项目商业论证\">1.2.6.1 项目商业论证</h4>\n<p>项目商业论证指文档化的经济可行性研究报告，用来对尚缺乏充分定义的所选方案的收益进行有效性论证，是启动后续项目管理活动的依据。商业论证列出了项目启动的目标和理由。在商业论证之前，通常需要进行需求评估，包含了解业务目的和目标、问题及机会，并提出处理建议。</p>\n<p>商业论证可能包括（但不限于）记录一下内容：</p>\n<ul>\n<li>业务需要\n<ul>\n<li>确定促进采取行动的动机；</li>\n<li>情况说明，记录了待处理的业务问题或机会，包含能够为组织创造的价值；</li>\n<li>确定受影响的相关方；</li>\n<li>确定范围。</li>\n</ul>\n</li>\n<li>形势分析\n<ul>\n<li>确定组织战略、目的和目标；</li>\n<li>确保问题的根本原因或机会的触发因素；</li>\n<li>分析项目所需能力与组织现有能力之间的差距；</li>\n<li>识别已知风险；</li>\n<li>识别成功的关键因素；</li>\n<li>确定可能用于评估各种行动方案的决策准则；</li>\n<li>建立一些可选方案，用以处理业务问题或机会。可选方案指组织可能采取的备选行动方案。</li>\n</ul>\n</li>\n<li>推荐\n<ul>\n<li>对所推荐方案的说明；</li>\n<li>说明书的内容可能包含（但不限于）：\n<ul>\n<li>对潜在方案的分析结果；</li>\n<li>潜在方案的制约因素、假设、风险和依赖关系；</li>\n<li>成功标准。</li>\n<li>一种实施方法，可能包括（但不限于）：</li>\n<li>里程碑；</li>\n<li>依赖关系；</li>\n<li>角色与职责。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>评估\n<ul>\n<li>对如何测量项目所交付的效益的说明。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-2-6-2-项目效益管理计划\">1.2.6.2 项目效益管理计划</h4>\n<p><strong>项目效益管理计划</strong>描述了项目实现效益的方式和时间，以及应制定的效益衡量机制。项目效益指为发起组织和项目预期收益方创造价值的行动、行为、产品、服务或成果的结果。</p>\n<p>项目效益管理计划可能包括（但不限于）记录一下内容：</p>\n<ul>\n<li>目标效益（例如预计通过项目实施可以创造的有形价值和无形价值；财物价值体现为净现值）；</li>\n<li>战略一致性（例如项目效益与组织业务战略的一致程度）；</li>\n<li>实现效益的时限（例如阶段效益、短期效益、长期效益和持续效益）；</li>\n<li>效益责任人（例如在计划确定的整个时限内负责监督、记录和报告已实现效益的负责人）；</li>\n<li>测量指标（例如用于显示已实现效益的直接测量值和间接测量值）；</li>\n<li>假设（例如预计存在或显而易见的因素）；</li>\n<li>风险（例如实现效益的风险）。<br>\n*注意：项目效益管理计划的制定和维护是一项迭代活动。</li>\n</ul>\n<h4 id=\"1-2-6-3-项目章程和项目管理计划\">1.2.6.3 项目章程和项目管理计划</h4>\n<p>项目章程是由项目发起人发布的，正式批准项目成立，并授权项目经理动用组织资源开展活动的文件。</p>\n<p>项目管理计划是描述如何执行、监督和控制项目的一份文件。</p>\n<h4 id=\"1-2-6-4-项目成功标准\">1.2.6.4 项目成功标准</h4>\n<p>确定项目是否成功是项目管理中最常见的挑战之一。</p>\n<p><strong>时间、成本、范围和质量等项目管理测量指标历来被视为确定项目是否成功的最重要的因素。</strong></p>\n<p>最近，从业者和学者提出，确定项目是否成功还应考虑项目目标的实现情况。</p>\n<p>关于项目成功的定义和最重要的因素，项目相关方可能有不同的看法。明确记录项目目标并选择可测量的目标是项目成功的关键。主要相关方和项目经理应思考以下三个问题：</p>\n<p><strong>怎样才是项目成功？<br>\n如何评估项目成功？<br>\n哪些因素会影响项目成功？</strong></p>\n<p>主要相关方和项目经理应就这些问题达成共识并予以记录。</p>\n<p>项目成功可能涉及与组织战略和业务成果交付有关的其他标准。这些项目目标可能包括（但不限于）：</p>\n<ul>\n<li>完成项目效益管理计划；</li>\n<li>达到商业论证中记录的已商定的财务测量指标。这些财务测量指标可能包括（但不限于）：</li>\n<li>净现值 (NPV)；</li>\n<li>投资回报率 (ROI)；</li>\n<li>内部报酬率 (IRR)；</li>\n<li>回收期 (PBP)；</li>\n<li>效益成本比率 (BCR)。</li>\n<li>达到商业论证的非财务目标；</li>\n<li>完成组织从“当前状态”转到“将来状态”；</li>\n<li>履行合同条款和条件；</li>\n<li>达到组织战略、目的和目标；</li>\n<li>使相关方满意；</li>\n<li>可接受的客户/最终用户的采纳度；</li>\n<li>将可交付成果整合到组织的运营环境中；</li>\n<li>满足商定的交付质量；</li>\n<li>遵循治理规则；</li>\n<li>满足商定的其他成功标准或准则（例如过程产出率）。</li>\n<li>为了取得项目成功，项目团队必须能够正确评估项目状况，平衡项目要求，并与相关方保持积极主动的沟通。</li>\n</ul>\n<p>但在业务环境中，如果项目能够与组织的战略方向持续保持一致，那么项目成功的概率就会显著提高。</p>\n<p>有可能一个项目从范围/进度/预算来看是成功的，但从商业角度来看并不成功。这是因为业务需要和市场环境在项目完成之前发生了变化。</p>\n<h2 id=\"2-项目运行环境\">2.项目运行环境</h2>\n<h2 id=\"2-1-概述\">2.1 概述</h2>\n<p>项目所处的环境可能对项目的开展产生有利或不利的影响。这些影响的两大主要来源为事业环境因素 (EEF) 和组织过程资产 (OPA)。</p>\n<ul>\n<li>事业环境因素源于项目外部（往往是企业外部）的环境，事业环境因素可能对整个企业、项目组合、项目集或项目产生影响。</li>\n<li>组织过程资产源于组织内部，可能来自组织自身、项目组合、项目集、其他项目或这些的组合。</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417172558.png\" alt=\"\"></p>\n<p>项目影响</p>\n<h2 id=\"2-2-事业环境因素\">2.2 事业环境因素</h2>\n<p>事业环境因素（EEFs）是指项目团队不能控制的，将对项目产生影响、限制或指令作用的各种条件。这些条件可能来自于组织的内部和外部。</p>\n<h3 id=\"2-2-1-组织内部的事业环境因素\">2.2.1 组织内部的事业环境因素</h3>\n<ul>\n<li>组织文化、结构和治理，例如：愿景、使命、价值观、制度等；</li>\n<li>设施和资源的地理分布；</li>\n<li>基础设施；</li>\n<li>信息技术软件；</li>\n<li>资源可用性，例如合同和采购制约因素；</li>\n<li>员工能力。</li>\n</ul>\n<h3 id=\"2-2-2-组织外部的事业环境因素\">2.2.2 组织外部的事业环境因素</h3>\n<ul>\n<li>市场条件，例如：竞争对手、市场份额等；</li>\n<li>社会和文化影响与问题，例如：政治氛围；</li>\n<li>法律限制；</li>\n<li>商业数据库，例如风险数据库等；</li>\n<li>学术研究；</li>\n<li>政府或行业标准；</li>\n<li>财务考虑因素，例如：关税、利率等；</li>\n<li>物理环境要素，例如工作环境等。</li>\n</ul>\n<h2 id=\"2-3-组织过程资产\">2.3 组织过程资产</h2>\n<p>组织过程资产是执行组织所持有并使用的计划、过程、政策、程序和知识库，会影响对具体项目的管理。组织过程资产包含来自任何项目执行组织的，可用于执行或治理项目的任何工件、实践或知识，还包括来自组织以往项目的经验教育和历史信息，可能还包括完成的进度计划、风险数据和挣值数据。</p>\n<p>组织过程资产主要分两类：</p>\n<ul>\n<li>过程、政策和程序；</li>\n<li>组织知识库。</li>\n</ul>\n<h3 id=\"2-3-1-过程、政策和程序\">2.3.1 过程、政策和程序</h3>\n<p>组织用于执行项目工作的流程与程序，包括（但不限于）：</p>\n<ul>\n<li>启动和规划\n<ul>\n<li>指南和标准，用于裁剪组织标准流程和程序以满足项目的特定要求；</li>\n<li>特定的组织标准，例如人力资源政策；</li>\n<li>产品和项目生命周期，以及方法和程序；</li>\n<li>模板，例如项目管理计划、项目文件、报告格式等；</li>\n<li>预先批准的供应商清单和各种合同协议类型。</li>\n</ul>\n</li>\n<li>执行和监控\n<ul>\n<li>变更控制程序，包括修改组织标准、政策、计划和程序等所须遵循的步骤，以及如何批准和确认变更；</li>\n<li>跟踪矩阵；</li>\n<li>财务控制程序，例如定期报告、支付审查等；</li>\n<li>问题与缺陷管理程序，例如定义问题和缺陷控制等；</li>\n<li>资源的可用性控制和分配管理；</li>\n<li>组织对沟通的要求，例如可用的沟通技术、许可的沟通媒介等；</li>\n<li>确定工作优先顺序、批准工作与签发工作授权的程序；</li>\n<li>模板，例如问题日志，变更日志；</li>\n<li>标准化的指南、工作提示、建议书评价准则和绩效测量准则；</li>\n<li>产品、服务或成果的核实和确认程序。</li>\n</ul>\n</li>\n<li>收尾\n<ul>\n<li>项目收尾指南或要求，例如项目评价、项目审计、成果验收等。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-3-2-组织知识库\">2.3.2 组织知识库</h3>\n<p>组织用来存取信息的知识库，包含（但不限于）：</p>\n<ul>\n<li>配置管理知识库，包括软件和硬件组件版本以及所有执行组织的标准、政策、程序和任何项目文件的基准；</li>\n<li>财务数据库，包括人工时、实际成本、预算等方面的信息；</li>\n<li>历史信息与经验教训知识库，例如从以往风险管理活动中获取的信息等；</li>\n<li>问题与缺陷管理数据库，包括问题与缺陷的状态、控制信息、解决方案以及相关行动的结果；</li>\n<li>测量指标数据库，用来收集与提供过程和产品的测量数据；</li>\n<li>以往项目的项目档案。</li>\n</ul>\n<h2 id=\"2-4-组织系统\">2.4 组织系统</h2>\n<p>单个组织内多种因素的交互影响创造出一个独特的系统，会对在该系统内运行的项目造成影</p>\n<p>响。组织系统是动态的、能优化的。</p>\n<p>系统因素包括（但不限于）：</p>\n<ul>\n<li>管理要素\n<ul>\n<li>管理要素是组织中的关键职能或一般管理原则。</li>\n</ul>\n</li>\n<li>治理框架\n<ul>\n<li>项目集和项目管理的常见治理框架，涉及四个治理领域：一致性、风险、绩效和沟通。各个领域都具备以下职能部门：监督、控制、整合与决策。</li>\n</ul>\n</li>\n<li>组织结构类型\n<ul>\n<li>组织需要权衡两个关键变量之后才可确定合适的组织结构类型。这两个变量指可以采用的组织结构类型以及针对特定组织如何优化组织结构类型的方式。</li>\n</ul>\n</li>\n</ul>\n<p>组织对项目的影响</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417172558-1.png\" alt=\"\"></p>\n<h4 id=\"2-4-4-3-项目管理办公室\">2.4.4.3 项目管理办公室</h4>\n<p>项目管理办公室 (PMO) 是对与项目相关的治理过程进行标准化，并促进资源、方法论、工具和技术共享的一个组织结构。PMO 的职责范围可大可小，从提供项目管理支持服务，到直接管理一个或多个项目。</p>\n<p>PMO 有几种不同类型，它们对项目的控制和影响程度各不相同，例如：</p>\n<ul>\n<li>支持型。支持型 PMO 担当顾问的角色，向项目提供模板、最佳实践、培训，以及来自其他项目的信息和经验教训。这种类型的 PMO 其实就是一个项目资源库，对项目的控制程度很低。</li>\n<li>控制型。控制型 PMO 不仅给项目提供支持，而且通过各种手段要求项目服从，这种类型的 PMO对项目的控制程度属于中等。服从可能包括：</li>\n<li>采用项目管理框架或方法论；</li>\n<li>使用特定的模板、格式和工具；</li>\n<li>服从治理。</li>\n<li>指令型。指令型 PMO 直接管理和控制项目。项目经理由 PMO 指定并向其报告。这种类型的 PMO对项目的控制程度很高。<br>\n项目管理办公室可能会承担整个组织范围的职责，在支持战略调整和创造组织价值方面发挥重要的作用。PMO 从组织战略项目中获取数据和信息，进行综合分析，评估如何实现更高级别的战略目标的。PMO 在组织的项目组合、项目集、项目与组织考评体系（如平衡计分卡）之间建立联系。</li>\n</ul>\n<p>除了被集中管理以外，PMO 所支持和管理的项目不一定彼此关联。PMO 的具体形式、职能和结构取决于所在组织的需要。</p>\n<p>为了保证项目符合组织的业务目标，PMO 可能有权在每个项目的生命周期中充当重要相关方和关键决策者。PMO 可以：</p>\n<ul>\n<li>\n<p>提出建议；</p>\n</li>\n<li>\n<p>领导知识传递；</p>\n</li>\n<li>\n<p>终止项目；</p>\n</li>\n<li>\n<p>根据需要采取其他行动。<br>\nPMO 的一个主要职能是通过各种方式向项目经理提供支持，这些方式包括（但不限于）：</p>\n</li>\n<li>\n<p>对 PMO 所辖的全部项目的共享资源进行管理；</p>\n</li>\n<li>\n<p>识别和制定项目管理方法、最佳实践和标准；</p>\n</li>\n<li>\n<p>指导、辅导、培训和监督；</p>\n</li>\n<li>\n<p>通过项目审计，监督对项目管理标准、政策、程序和模板的遵守程度；</p>\n</li>\n<li>\n<p>制定和管理项目政策、程序、模板和其他共享的文件（组织过程资产）；</p>\n</li>\n<li>\n<p>对跨项目的沟通进行协调。</p>\n</li>\n</ul>\n<h2 id=\"3-项目经理的角色\">3.项目经理的角色</h2>\n<h2 id=\"3-2-项目经理的定义\">3.2 项目经理的定义</h2>\n<p>项目经理的角色不同于职能经理或运营经理，项目经理是由执行组织委派，领导团队实现项目目标的个人。</p>\n<h2 id=\"3-3-项目经理的影响力范围\">3.3 项目经理的影响力范围</h2>\n<h3 id=\"3-3-1-概述\">3.3.1 概述</h3>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173057.png\" alt=\"\"></p>\n<p>项目经理的影响力范围示例</p>\n<h3 id=\"3-3-2-项目\">3.3.2 项目</h3>\n<ul>\n<li>项目经理需要领导项目团队实现项目目标和相关方的期望。</li>\n<li>项目经理需要利用可用资源，以平衡相互竞争的项目制约因素。</li>\n<li>项目经理还充当项目发起人、团队成员与其他相关方之间的沟通者，包括提供指导和展示项目成功的愿景。</li>\n<li>项目经理需要使用软技能（例如人际关系技能和人员管理技能）来平衡项目相关方之间相互冲突和竞争的目标，以达成共识。</li>\n</ul>\n<p>与团队和发起人等相关方沟通的能力适用于项目的各个方面，包括（但不限于）以下各个方面：</p>\n<ul>\n<li>通过多种方法（例如口头、书面和非口头）培养完善的技能；</li>\n<li>创建、维护和遵循沟通计划和进度计划；</li>\n<li>以可预见且一致的方式进行沟通；</li>\n<li>寻求了解项目相关方的沟通需求；</li>\n<li>以简练、清晰、完整、简单、相关和经过裁剪的方式进行沟通；</li>\n<li>包含重要的正面和负面消息；</li>\n<li>合并反馈渠道；</li>\n<li>人际关系技能，即通过项目经理的影响力范围拓展广泛的人际网络。</li>\n</ul>\n<h3 id=\"3-3-3-组织\">3.3.3 组织</h3>\n<p>项目经理需要积极地与其他项目经理互动。其他独立项目或同一项目集的其他项目可能会对项目</p>\n<p>造成影响，原因包括（但不限于）：</p>\n<ul>\n<li>对相同资源的需求；</li>\n<li>资金分配的优先顺序；</li>\n<li>可交付成果的接受或发布；</li>\n<li>项目与组织的目的和目标的一致性。</li>\n</ul>\n<h3 id=\"3-3-4-行业\">3.3.4 行业</h3>\n<p>项目经理应时刻关注行业的最新发展趋势，获得并思考这一信息对当前项目是否有影响或可用。这些趋势包括（但不限于）：</p>\n<ul>\n<li>产品和技术开发；</li>\n<li>新兴且正在变化的市场空间；</li>\n<li>标准（例如项目管理标准、质量管理标准等）；</li>\n<li>技术支持工具；</li>\n<li>影响当前项目的经济力量；</li>\n<li>影响项目管理学科的各种力量；</li>\n<li>过程改进和可持续发展战略。</li>\n</ul>\n<h2 id=\"3-4-项目经理的胜任力\">3.4 项目经理的胜任力</h2>\n<h3 id=\"3-4-1-概述\">3.4.1 概述</h3>\n<p>PMI人才三角：</p>\n<ul>\n<li>技术项目管理</li>\n<li>领导力</li>\n<li>战略和商务管理</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173057-1.png\" alt=\"\"></p>\n<h3 id=\"3-4-2-技术项目管理技能\">3.4.2 技术项目管理技能</h3>\n<p>技术项目管理技能指有效运用管理知识实现项目集或项目的预期成果的能力。包括（但不限于）：</p>\n<ul>\n<li>重点关注所管理的各个项目的关键技术项目管理要素。简单来说，就是随时准备好合适的资料。最主要的是：\n<ul>\n<li>项目成功的关键因素；</li>\n<li>进度计划；</li>\n<li>指定的财务报告；</li>\n<li>问题日志。</li>\n</ul>\n</li>\n<li>针对每个项目裁剪传统和敏捷工具、技术和方法。</li>\n<li>花时间制定完整的计划并谨慎排定优先顺序。</li>\n<li>管理项目要素，包括（但不限于）进度、成本、资源和风险。</li>\n</ul>\n<h3 id=\"3-4-3-战略和商务管理技能\">3.4.3 战略和商务管理技能</h3>\n<p>战略和商务管理技能包括纵览组织概况并有效协商和执行有利于战略调整和创新的决策和行动的能力。战略和商务管理技能可能还包括发展和运用相关的产品和行业专业知识，这些业务知识也称为领域知识。</p>\n<p>项目经理应掌握足够的业务知识，以便能够：</p>\n<ul>\n<li>\n<p>向其他人解释关于项目的必要商业信息；</p>\n</li>\n<li>\n<p>与项目发起人、团队和主题专家合作制定合适的项目交付策略；</p>\n</li>\n<li>\n<p>以实现项目商业价值最大化的方式执行策略。<br>\n对项目经理而言，对项目主题的了解越多越好，至少应能够向其他人说明关于组织的以下方面：</p>\n</li>\n<li>\n<p>战略</p>\n</li>\n<li>\n<p>使命</p>\n</li>\n<li>\n<p>目的和目标</p>\n</li>\n<li>\n<p>产品和服务</p>\n</li>\n<li>\n<p>运营（例如位置、类型、技术）</p>\n</li>\n<li>\n<p>市场和市场条件，例如客户、市场状况</p>\n</li>\n<li>\n<p>竞争（例如竞争什么、竞争地位）</p>\n</li>\n</ul>\n<p>为确保一致性，项目经理应将以下关于组织的知识和信息运用到项目中：</p>\n<ul>\n<li>战略</li>\n<li>使命</li>\n<li>目的和目标</li>\n<li>优先级</li>\n<li>策略</li>\n<li>产品或服务（例如可交付成果）</li>\n</ul>\n<p>战略和商业技能有助于项目经理确定应为其项目考虑哪些商业因素。这些因素包括（但不限于）：</p>\n<ul>\n<li>风险和问题；</li>\n<li>财务影响；</li>\n<li>成本效益分析，包括各种可选方案；</li>\n<li>商业价值；</li>\n<li>效益预期实现情况和战略；</li>\n<li>范围、预算、进度和质量。</li>\n</ul>\n<h3 id=\"3-4-4-领导力技能\">3.4.4 领导力技能</h3>\n<h4 id=\"3-4-4-1-人际交往\">3.4.4.1 人际交往</h4>\n<p>项目经理应研究人的行为和动机，应尽力成为一个好的领导者，因为领导力对组织项目是否成功至关重要。项目经理需要运用领导力技能和品质与所有项目相关方合作，包括项目团队、团队指导和项目发起人。</p>\n<h4 id=\"3-4-4-2-领导者的品质和技能\">3.4.4.2 领导者的品质和技能</h4>\n<p>领导者的品质和技能包含（但不限于）：</p>\n<ul>\n<li>有远见（例如帮助描述项目的产品、目的和目标）；</li>\n<li>积极乐观；</li>\n<li>乐于合作；</li>\n<li>通过以下方式管理关系和冲突：\n<ul>\n<li>建立信任；</li>\n<li>解决顾虑；</li>\n<li>寻求共识；</li>\n<li>平衡相互竞争和对立的目标；</li>\n<li>运用说服、协商、妥协和解决冲突的技能；</li>\n<li>发展和培养个人及专业网络；</li>\n<li>以长远的眼光把人际关系看成与项目本身同样重要；</li>\n<li>持续发展和运用政治敏锐性。</li>\n</ul>\n</li>\n<li>通过以下方式进行沟通：\n<ul>\n<li>花大量的时间沟通；</li>\n<li>管理期望；</li>\n<li>诚恳地接受反馈；</li>\n<li>提出建议性的反馈；</li>\n<li>询问和倾述。</li>\n</ul>\n</li>\n<li>尊重他人（帮助他人保持独立自主）、谦恭有礼、友善待人、诚实可信、忠诚可靠、遵守职业道德；</li>\n<li>展现出诚信正直和文化敏感性，果断、勇敢，能够解决问题；</li>\n<li>适时称赞他人；</li>\n<li>终身学习，以结果和行动为导向；</li>\n<li>关注重要的事情，包括：\n<ul>\n<li>通过必要的审查和调整，不断调整工作优先级；</li>\n<li>寻求并采用适用于团队和项目的优先级排序方法；</li>\n<li>区分高层级战略优先级，尤其是与项目成功的关键因素相关的事项；</li>\n<li>对项目的主要制约因素保持警惕；</li>\n<li>在战术优先级上保持灵活；</li>\n<li>能够从大量信息中筛选出最重要的信息。</li>\n</ul>\n</li>\n<li>以整体和系统的角度来看待项目，同等对待内部和外部因素；</li>\n<li>能够运用批判性思维并将自己视为变革推动者；</li>\n<li>能够创建高效的团队、以服务为导向、展现出幽默的一面，与团队成员有效地分享乐趣。</li>\n</ul>\n<h4 id=\"3-4-4-3-政治、权力和办好事情\">3.4.4.3 政治、权力和办好事情</h4>\n<p>领导和管理的最终目的是办好事情。这些技能和品质有助于项目经理实现项目目的和目标。很多</p>\n<p>技能和品质归根究底就是处理政治的能力。政治涉及影响、谈判、自主和权力。政治及其相关要素不局限于“好”与“不好”以及“正面”与“负面”之分。项目经理对组织运行方式的了解越多，就越有可能获得成功。</p>\n<p>权力的种类包括（但不限于）：</p>\n<ul>\n<li>地位（有时称为正式的、权威的、合法权力的，例如组织或团队授予的正式职位）；</li>\n<li>信息（例如对信息收集或分发的控制）；</li>\n<li>参考（例如因为他人的尊重和赞赏，获得的信任）；</li>\n<li>情境（例如在特别危机等特殊情况下获得的权力）；</li>\n<li>个性或魅力（例如魅力、吸引力）；</li>\n<li>关系（例如参与人际交往、联系和结盟）；</li>\n<li>专家（例如拥有的技能和信息、经验、培训、教育、证书）；</li>\n<li>奖励相关的（例如能够给予表扬、金钱或其他奖励）；</li>\n<li>处罚或强制力（例如给予纪律处分或施加负面后果的能力）；</li>\n<li>迎合（例如运用奉承或其他常用手段赢得青睐或合作）；</li>\n<li>施加压力（例如限制选择或活动自由，以符合预期的行动）；</li>\n<li>愧疚（例如强加的义务或责任感）；</li>\n<li>说服力（例如能够提供论据，使他人执行预期的行动方案）；</li>\n<li>回避（例如拒绝参与）。</li>\n</ul>\n<h3 id=\"3-4-5-领导力与管理之比较\">3.4.5 领导力与管理之比较</h3>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173057-2.png\" alt=\"\"></p>\n<h2 id=\"3-5-执行整合\">3.5 执行整合</h2>\n<p>执行项目整合时，项目经理承担双重角色：</p>\n<ul>\n<li>项目经理扮演重要角色，与项目发起人携手合作，来理解战略目标，并确保项目目标和成果与项目组合、项目集以及业务领域保持一致。项目经理以这种方式帮助实现战略层面的整合与执行。</li>\n<li>在项目层面上，项目经理负责指导团队关注真正重要的事务并协同工作。为此，项目经理需要整合过程、知识和人员。</li>\n</ul>\n<h2 id=\"4-项目整合管理\">4.项目整合管理</h2>\n<p>项目整合管理包括对隶属于项目管理过程组的各个过程和项目管理活动进行识别、定义、组合、统一和协调的各个过程。项目整合管理包括进行以下选择：</p>\n<ul>\n<li>资源分配；</li>\n<li>平衡竞争性需求；</li>\n<li>研究各种备选方法；</li>\n<li>为实现项目目标而裁剪过程；</li>\n<li>管理各个项目管理知识领域之间的依赖关系。<br>\n项目整合管理过程包括：</li>\n</ul>\n<p><strong>4.1 制定项目章程</strong> — 编写一份正式批准项目并授权项目经理在项目活动中使用组织资源的文件的过程。</p>\n<p><strong>4.2 制定项目管理计划</strong> — 定义、准备和协调项目计划的所有组成部分，并把它们整合为一份综合项目管理计划的过程。</p>\n<p><strong>4.3 指导与管理项目工作</strong> — 为实现项目目标而领导和执行项目管理计划中所确定的工作，并实施已批准变更的过程。</p>\n<p><strong>4.4 管理项目知识</strong> — 使用现有知识并生成新知识，以实现项目目标，并且帮助组织学习的过程。</p>\n<p><strong>4.5 监控项目工作</strong> — 跟踪、审查和报告整体项目进展，以实现项目管理计划中确定的绩效目标的过程。</p>\n<p><strong>4.6 实施整体变更控制</strong> — 审查所有变更请求，批准变更，管理对可交付成果、组织过程资产、项目文件和项目管理计划的变更，并对变更处理结果进行沟通的过程。</p>\n<p><strong>4.7 结束项目或阶段</strong> — 终结项目、阶段或合同的所有活动的过程。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173329.png\" alt=\"\"></p>\n<p>项目整合管理概述</p>\n<p><strong>项目整合管理的核心概念</strong></p>\n<h2 id=\"项目整合管理指的是：\">项目整合管理指的是：</h2>\n<ul>\n<li>确保产品、服务或成果的交付日期，项目生命周期以及效益管理计划这些方面保持一致；</li>\n<li>编制项目管理计划以实现项目目标；</li>\n<li>确保创造合适的只是并运用到项目中，并从项目中获取必要的知识；</li>\n<li>管理项目管理计划中活动的绩效和变更；</li>\n<li>做出针对影响项目的关键变更的综合决策；</li>\n<li>测量和监督项目进展，并采取适当措施以实现项目目标；</li>\n<li>收集关于已实现的成果的数据，分析数据以获取信息，并与相关方分享信息；</li>\n<li>完成全部项目工作，正式关闭各个阶段、合同以及整个项目；</li>\n<li>管理可能需要的阶段过渡。</li>\n</ul>\n<p><strong>项目整合管理的发展趋势和新兴实践</strong></p>\n<p>项目整合管理知识领域要求整合所有其他知识领域的成果。与整合管理过程相关的发展趋势包括（但不限于）：</p>\n<ul>\n<li>使用自动化工具；</li>\n<li>使用可视化工具；</li>\n<li>项目知识管理，项目人员的流动性和不稳定性越来越高，就要求采用更严格的过程，在整个项目生命周期中积累知识和其他相关方识别和解决问题的能力。</li>\n<li>增加项目经理的职责，比如被要求接入启动和结束项目，如开展项目商业论证和效益管理。</li>\n<li>混合型方法，比如采用敏捷或其他迭代做法，为开展需求管理而采用商业分析技术等。</li>\n</ul>\n<p><strong>裁剪时需要考虑的因素</strong></p>\n<p>裁剪时应考虑的因素包括（但不限于）：</p>\n<ul>\n<li>项目生命周期</li>\n<li>开发生命周期</li>\n<li>管理方法</li>\n<li>知识管理</li>\n<li>变更</li>\n<li>治理</li>\n<li>经验教训</li>\n<li>效益</li>\n</ul>\n<p><strong>在敏捷或适应型环境中需要考虑的因素</strong></p>\n<p>迭代和敏捷方法能够促进团队成员以相关领域专家的身份参与整合管理。团队成员自行决定计划及其组件的整合方式。</p>\n<p>在适应型环境下，《整合管理的核心概念》中所述的对项目经理的期望保持不变，但把对具体产品的规划和交付授权给团队来控制。项目经理的关注点在于营造一个合作型的决策氛围，并确保团队有能力应对变更。</p>\n<h2 id=\"4-1-制定项目章程\">4.1 制定项目章程</h2>\n<p><strong>制定项目章程是编写一份正式批准项目并授权项目经理在项目活动中使用组织资源的文件的过程。本过程的主要作用是，明确项目与组织战略目标之间的直接联系，确立项目的正式地位，并展示组织对项目的承诺</strong>。</p>\n<p><strong>项目章程一旦被批准，就标志着项目的正式启动。</strong></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173329-1.png\" alt=\"\"></p>\n<p>制定项目章程：输入、工具与技术和输出</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173329-2.png\" alt=\"\"></p>\n<p>制定项目章程：数据流向图</p>\n<h3 id=\"4-1-1-制定项目章程：输入\">4.1.1 制定项目章程：输入</h3>\n<p>制定项目章程的输入包括：</p>\n<ul>\n<li>商业文件\n<ul>\n<li>商业论证。经批准的商业论证或类似文件是最常用于制定项目章程的商业文件。商业论证从商业视角描述必要的信息。\n<ul>\n<li>市场需求</li>\n<li>组织需要</li>\n<li>客户要求</li>\n<li>技术进步</li>\n<li>法律要求</li>\n<li>生态影响</li>\n<li>社会需要</li>\n</ul>\n</li>\n<li>效益管理计划</li>\n</ul>\n</li>\n<li>协议\n<ul>\n<li>协议用于定义启动项目的初衷。协议有多种形式，包含合同、谅解备忘录、服务水平协议、协议书、意向书、口头协议、电子邮件或其他书面协议。</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>政府或行业标准；</li>\n<li>法律法规要求和（或）制约因素；</li>\n<li>市场条件；</li>\n<li>组织文化和政治氛围；</li>\n<li>组织治理框架；</li>\n<li>相关方的期望和风险临界值。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>组织的标准政策、流程和程序；</li>\n<li>项目组合、项目集和项目的治理框架；</li>\n<li>监督和报告方法；</li>\n<li>模板（项目章程模板）；</li>\n<li>历史信息和经验教训知识库。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-1-2-制定项目章程：工具与技术\">4.1.2 制定项目章程：工具与技术</h3>\n<p>制定项目章程的工具和技术包含：</p>\n<ul>\n<li>专家判断：专家判断是基于某应用领域、知识领域、学科和行业等的专业知识而做出的，关于当前活动的合理判断，这些专业知识可来自具有专业学历、知识、技能、经验或培训经理的任何小组或个人。\n<ul>\n<li>组织战略；</li>\n<li>效益管理；</li>\n<li>关于项目所在的行业以及项目关注的领域的技术知识；</li>\n<li>持续时间和成本估算；</li>\n<li>风险识别。</li>\n</ul>\n</li>\n<li>数据收集\n<ul>\n<li>头脑风暴</li>\n<li>焦点小组</li>\n<li>访谈</li>\n</ul>\n</li>\n<li>人际关系与团队技能\n<ul>\n<li>冲突管理</li>\n<li>引导</li>\n<li>会议管理</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"4-1-3-制定项目章程：输出\">4.1.3 制定项目章程：输出</h3>\n<p>制定项目章程的输出包括：</p>\n<ul>\n<li>项目章程：项目章程是由项目启动者或发起人发布的，正式批准项目成立，并授权项目经理使用组织资源开展项目活动的文件。它记录了关于项目和项目预期要交付的产品、服务或成果的高层级信息，例如：\n<ul>\n<li>项目目的；</li>\n<li>可测量的项目目标和相关的成功标准；</li>\n<li>高层级需求；</li>\n<li>高层级项目描述、边界定义以及主要可交付成果；</li>\n<li>整体项目风险；</li>\n<li>总体里程碑进度计划；</li>\n<li>预先批准的财务资源；</li>\n<li>关键相关方名单；</li>\n<li>项目审批要求；</li>\n<li>项目退出标准；</li>\n<li>委派的项目经理及其职责和职权；</li>\n<li>发起人或其他批准项目章程的人员的姓名和职权。</li>\n</ul>\n</li>\n<li>假设日志\n<ul>\n<li>通常，在项目启动之前编制商业论证时，识别高层级的战略和运营假设条件与制约因素。这些假设条件与制约因素应纳入项目章程。较低层级的活动和任务假设条件在项目期间随着诸如定义技术规范、估算、进度和风险等活动的开展而生成。假设日志用于记录整个项目生命周期中的所有假设条件和制约因素。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-2-制定项目管理计划\">4.2 制定项目管理计划</h2>\n<p>制定项目管理计划是定义、准备和协调项目计划的所有组成部分，并把它们整合为一份综合项目</p>\n<p>管理计划的过程。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173329-3.png\" alt=\"\"></p>\n<p>制定项目管理计划：输入、工具与技术和输出</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173329-4.png\" alt=\"\"></p>\n<p>制定项目管理计划：数据流向图</p>\n<p>*注意点</p>\n<p>项目管理计划应基准化，即，至少应规定项目的范围、时间和成本方面的基准，以便据此考核项目执行情况和管理项目绩效。在确定基准之前，可能要对项目管理计划进行多次更新，且这些更新无需遵循正式流程。但是，一旦确定了基准，就只能通过实施整体变更控制过程进行更新。在这种情况下，如果需要进行变更，应提出变更请求以待决定。</p>\n<h3 id=\"4-2-1-制定项目管理计划：输入\">4.2.1 制定项目管理计划：输入</h3>\n<p>制定项目管理计划的输入包含：</p>\n<ul>\n<li>项目章程\n<ul>\n<li>项目团队把项目章程作为初始项目规划的起始点。项目章程所包含的信息种类和数量因项目的复杂程度和已知的信息而异。在项目章程中至少应该定义项目的高层级信息，供将来在项目管理计划的各个组成部分中进一步细化。</li>\n</ul>\n</li>\n<li>其他过程的输出\n<ul>\n<li>其他规划过程所输出的子计划和基准都是本过程的输入。此外，对这些子计划和基准的变更都可能导致对项目管理计划的相应更新。</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>政府或行业标准；</li>\n<li>法律法规要求和制约因素；</li>\n<li>垂直市场和专门领域的项目管理知识体系；</li>\n<li>组织的结构、文化、管理实践和可持续性；</li>\n<li>组织治理框架；</li>\n<li>基础设施。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>组织的标准政策、流程和程序；</li>\n<li>项目管理计划模板\n<ul>\n<li>根据项目的特定要求而裁剪组织的标准流程的指南和标准；</li>\n<li>项目收尾指南或要求，如产品确认及验收标准。</li>\n</ul>\n</li>\n<li>变更控制程序；</li>\n<li>监督和报告方法、风险控制程序以及沟通要求；</li>\n<li>以往类似项目的相关信息；</li>\n<li>历史信息和经验教训知识库。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-2-2-制定项目管理计划：工具与技术\">4.2.2 制定项目管理计划：工具与技术</h3>\n<p>制定项目管理计划的工具与技术包含：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>根据项目需要裁剪项目管理过程，包括这些过程间的依赖关系和相互影响，以及这些过程的主要输入和输出；</li>\n<li>根据需要制定项目管理计划的附加组成部分；</li>\n<li>确定这些过程所需的工具与技术；</li>\n<li>编制应包括在项目管理计划中的技术与管理细节；</li>\n<li>确定项目所需的资源与技能水平；</li>\n<li>定义项目的配置管理级别；</li>\n<li>确定哪些项目文件受制于正式的变更控制过程；</li>\n<li>确定项目工作的优先级，确保把项目资源在合适的时间分配到合适的工作。</li>\n</ul>\n</li>\n<li>数据收集\n<ul>\n<li>头脑风暴</li>\n<li>核对单</li>\n<li>焦点小组</li>\n<li>访谈</li>\n</ul>\n</li>\n<li>人际关系与团队技能\n<ul>\n<li>冲突管理</li>\n<li>引导</li>\n<li>会议管理</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"4-2-3-制定项目管理计划：输出\">4.2.3 制定项目管理计划：输出</h3>\n<p>制定项目管理计划的输出包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>子管理计划\n<ul>\n<li><strong>范围管理计划</strong>：确定如何定义、制定、监督、控制和确认项目范围。</li>\n<li><strong>需求管理计划</strong>：确定如何分析、记录和管理需求。</li>\n<li><strong>进度管理计划</strong>：为编制、监督和控制项目进度建立准则并确定活动。</li>\n<li><strong>成本管理计划</strong>：确定如何规划、安排和控制成本。</li>\n<li><strong>质量管理计划</strong>：确定在项目中如何实施组织的质量政策、方法和标准。</li>\n<li><strong>资源管理计划</strong>：指导如何对项目资源进行分类、分配、管理和释放。</li>\n<li><strong>沟通管理计划</strong>：确定项目信息将如何、何时、由谁来进行管理和传播。</li>\n<li><strong>风险管理计划</strong>：确定如何安排与实施风险管理活动。</li>\n<li><strong>采购管理计划</strong>：确定项目团队将如何从执行组织外部获取货物和服务。</li>\n<li><strong>相关方参与计划</strong>：确定如何根据相关方的需求、利益和影响让他们参与项目决策和执行。</li>\n</ul>\n</li>\n<li>基准\n<ul>\n<li><strong>范围基准</strong>：经过批准的范围说明书、工作分解结构（WBS）和相应的WBS词典，用作比较依据。</li>\n<li><strong>进度基准</strong>：经过批准的进度模型，用作与实际结果进行比较的依据。</li>\n<li><strong>成本基准</strong>：经过批准的、按时间段分配的项目预算，用作与实际结果进行比较的依据。</li>\n</ul>\n</li>\n<li>其他组件\n<ul>\n<li><strong>变更管理计划</strong>：描述在整个项目期间如何正式审批和采纳变更请求。</li>\n<li><strong>配置管理计划</strong>：描述如何记录和更新项目的特定信息，以及该记录和更新哪些信息，以保持产品、服务或成果的一致性和（或）有效性。</li>\n<li><strong>绩效测量基准</strong>：经过整合的项目范围、进度和成本计划，用作项目执行的比较依据，以测量和管理项目绩效。</li>\n<li><strong>项目生命周期</strong></li>\n<li><strong>开发方法</strong>：描述产品、服务或成果的开发方法，例如预测、迭代、敏捷或混合型模式。</li>\n<li><strong>管理审查</strong>：确定项目经理和有关相关方审查项目进展的时间点，以考核绩效是否符合预期，或者确定是否有必要采取预防或纠正措施。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173329-5.png\" alt=\"\"></p>\n<p>项目管理计划和项目文件</p>\n<h2 id=\"4-3-指导与管理项目工作\">4.3 指导与管理项目工作</h2>\n<p>指导和管理项目工作是为实现项目目标而领导和执行项目管理计划中所确定的工作，并实施已批准变更的过程。本过程的主要作用是对项目工作和可交付成果开展综合管理，以提高项目成功的可能性。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173329-6.png\" alt=\"\"></p>\n<p>指导与管理项目工作：输入、工具与技术和输出</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173329-7.png\" alt=\"\"></p>\n<p>指导与管理项目工作：数据流向图</p>\n<h3 id=\"4-3-1-指导与管理项目文件：输入\">4.3.1 指导与管理项目文件：输入</h3>\n<p>指导与管理项目文件的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>变更日志</li>\n<li>经验教训登记册</li>\n<li>里程碑清单</li>\n<li>项目沟通记录</li>\n<li>项目进度计划</li>\n<li>需求跟踪矩阵</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n</ul>\n</li>\n<li>批准的变更请求\n<ul>\n<li>批准的变更请求是实施整体变更控制过程的输出，包括经项目经理或变更控制委员会(CCB)（必要时）审查和批准的变更请求。批准的变更请求可能是纠正措施、预防措施或缺陷补救，并由项目团队纳入项目进度计划付诸实施。</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织的结构、文化、管理实践和可持续性；</li>\n<li>基础设施（如现有的设施和固定资产）；</li>\n<li>相关方的风险临界值（如允许的成本超支百分比）。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>组织的标准政策、流程和程序；</li>\n<li>问题与缺陷管理程序，用于定义问题与缺陷控制、问题与缺陷识别及其解决，以及行动事项跟踪；</li>\n</ul>\n</li>\n<li>问题与缺陷管理数据库，包括历史问题与缺陷状态、问题和缺陷解决情况，以及行动事项的结果；</li>\n<li>绩效测量数据库，用来收集与提供过程和产品的测量数据；</li>\n<li>变更控制和风险控制程序；</li>\n<li>以往项目的项目信息（如范围、成本、进度与绩效测量基准，项目日历，项目进度网络图，风险登记册，风险报告以及经验教训知识库）。</li>\n</ul>\n<h3 id=\"4-3-2-指导与管理项目工作：工具与技术\">4.3.2 指导与管理项目工作：工具与技术</h3>\n<p>指导与管理项目工作的工具与技术包括：</p>\n<ul>\n<li>专辑判断</li>\n<li>项目管理信息系统</li>\n<li>会议</li>\n</ul>\n<h3 id=\"4-3-3-指导与管理项目工作：输出\">4.3.3 指导与管理项目工作：输出</h3>\n<p>指导与管理项目工作的输出包括：</p>\n<ul>\n<li>可交付成果</li>\n<li>工作绩效数据\n<ul>\n<li>问题日志</li>\n<li>问题类型</li>\n<li>问题提出者和提出时间</li>\n<li>问题描述</li>\n<li>问题优先级</li>\n<li>由谁负责解决问题</li>\n<li>目标解决日期</li>\n<li>问题状态</li>\n<li>最终解决情况</li>\n</ul>\n</li>\n<li>变更请求\n<ul>\n<li>纠正措施</li>\n<li>预防措施</li>\n<li>缺陷补救</li>\n<li>更新</li>\n</ul>\n</li>\n<li>项目管理计划更新</li>\n<li>项目文件更新\n<ul>\n<li>活动清单</li>\n<li>假设日志</li>\n<li>经验教训登记册</li>\n<li>需求文件</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>组织过程资产更新</li>\n</ul>\n<h2 id=\"4-4-管理项目知识\">4.4 管理项目知识</h2>\n<p>管理项目知识是使用现有知识并生成新知识，以实现项目目标，并且帮助组织学习的过程。本过程的主要作用是，利用已有的组织知识来创造或改进项目成果，并且使当前项目创造的知识可用于支持组织运营和未来的项目或阶段。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173329-8.png\" alt=\"\"></p>\n<p>管理项目知识：输入、工具与技术和输出</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173329-9.png\" alt=\"\"></p>\n<p>管理项目知识：数据流向图</p>\n<p>知识通常分为“显性知识”（易使用文字、图片和数字进行编撰的知识）和“隐性知识”（个体知识以及难以明确表达的知识，如信念、洞察力、经验和“诀窍”）两种。知识管理指管理显性和隐性知识，旨在重复使用现有知识并生成新知识。有助于达成这两个目的的关键活动是知识分享和知识集成（不同领域的知识、情境知识和项目管理知识）。</p>\n<p>从组织的角度来看，知识管理指的是确保项目团队和其他相关方的技能、经验和专业知识在项目开始之前、开展期间和结束之后得到运用。因为知识存在于人们的思想中，且无法强迫人们分享自己的知识或关注他人的知识，所以，知识管理最重要的环节就是营造一种相互信任的氛围，激励人们分享知识或关注他人的知识。如果不激励人们分享知识或关注他人的知识，即便最好的知识管理工具和技术也无法发挥作用。在实践中，联合使用知识管理工具和技术（用于人际互动）以及信息管理工具和技术（用于编撰显性知识）来分享知识。</p>\n<h3 id=\"4-4-1-管理项目知识：输入\">4.4.1 管理项目知识：输入</h3>\n<p>管理项目知识的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>项目团队派工单</li>\n<li>资源分解结构</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>可交付成果</li>\n<li>事业环境因素\n<ul>\n<li>组织文化、相关方文化和客户文化</li>\n<li>设施和资源的地理分布</li>\n<li>组织中的知识专家</li>\n<li>法律法规要求或制约因素</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>组织的标准政策、流程和程序</li>\n<li>人事管理制度</li>\n<li>组织对沟通的要求</li>\n<li>正式的知识分享和信息分享程序</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-4-2-管理项目知识：工具与技术\">4.4.2 管理项目知识：工具与技术</h3>\n<p>管理项目知识需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>知识管理；</li>\n<li>信息管理；</li>\n<li>组织学习；</li>\n<li>知识和信息管理工具；</li>\n<li>来自其他项目的相关信息。</li>\n</ul>\n</li>\n<li>知识管理\n<ul>\n<li>人际交往，包括非正式的社交和在线社交。可以进行开放式提问（如“谁知道……？”）的在线论坛有助于与专家进行知识分享对话；</li>\n<li>实践社区（有时称为“兴趣社区”或“社区”）和特别兴趣小组；</li>\n<li>会议，包括使用通信技术进行互动的虚拟会议；</li>\n<li>工作跟随和跟随指导；</li>\n<li>讨论论坛，如焦点小组；</li>\n<li>知识分享活动，如专题讲座和会议；</li>\n<li>研讨会，包括问题解决会议和经验教训总结会议；</li>\n<li>讲故事；</li>\n<li>创造力和创意管理技术；</li>\n<li>知识展会和茶座；</li>\n<li>交互式培训。</li>\n</ul>\n</li>\n<li>信息管理\n<ul>\n<li>编撰显性知识的方法，例如，如何确定经验教训登记册的条目；</li>\n<li>经验教训登记册；</li>\n<li>图书馆服务；</li>\n<li>信息收集，例如搜索网络和阅读已发表的文章；</li>\n<li>项目管理信息系统 (PMIS)。</li>\n</ul>\n</li>\n<li>人际关系与团队技能\n<ul>\n<li>积极倾听</li>\n<li>引导</li>\n<li>领导力</li>\n<li>人际交往</li>\n<li>政治意识</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-4-3-管理项目知识：输出\">4.4.3 管理项目知识：输出</h3>\n<p>管理项目知识的输出包括：</p>\n<ul>\n<li>经验教训登记册</li>\n<li>经验教训登记册可以包含情况的类别和描述，经验教训登记册还可包括与情况相关的影响、建议和行动方案。经验教训登记册可以记录遇到的挑战、问题、意识到的风险和机会，或其他适用的内容。</li>\n<li>项目管理计划更新</li>\n<li>组织过程资产更新</li>\n</ul>\n<h2 id=\"4-5-监控项目工作\">4.5 监控项目工作</h2>\n<p>监控项目工作是跟踪、审查和报告整体项目进展，以实现项目管理计划中确定的绩效目标的过程。本过程的主要作用是，让相关方了解项目的当前状态并认可为处理绩效问题而采取的行动，以及通过成本和进度预测，让相关方了解未来项目状态。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173329-10.png\" alt=\"\"></p>\n<p>监控项目工作：输入、工具与技术和输出</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173329-11.png\" alt=\"\"></p>\n<p>监控项目工作：数据流向图</p>\n<p>监督是贯穿于整个项目的项目管理活动之一，包括收集、测量和分析测量结果，以及预测趋势，</p>\n<p>以便推动过程改进。持续的监督使项目管理团队能洞察项目的健康状况，并识别须特别关注的任何方面。控制包括制定纠正或预防措施或重新规划，并跟踪行动计划的实施过程，以确定它们能否有效解决问题。监控项目工作过程关注：</p>\n<ul>\n<li>把项目的实际绩效与项目管理计划进行比较；</li>\n<li>定期评估项目绩效，决定是否需要采取纠正或预防措施，并推荐必要的措施；</li>\n<li>检查单个项目风险的状态；</li>\n<li>在整个项目期间，维护一个准确且及时更新的信息库，以反映项目产品及相关文件的情况；</li>\n<li>为状态报告、进展测量和预测提供信息；</li>\n<li>做出预测，以更新当前的成本与进度信息；</li>\n<li>监督已批准变更的实施情况；</li>\n<li>如果项目是项目集的一部分，还应向项目集管理层报告项目进展和状态；</li>\n<li>确保项目与商业需求保持一致。</li>\n</ul>\n<h3 id=\"4-5-1-监控项目工作：输入\">4.5.1 监控项目工作：输入</h3>\n<p>监控项目工作的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>假设日志。假设日志包含会影响项目的假设条件和制约因素的信息。</li>\n<li>估算依据。估算依据说明不同估算是如何得出的，用于决定如何应对偏差。</li>\n<li>成本预测。成本预测基于项目以往的绩效，用于确定项目是否仍处于预算的公差区间内，并识别任何必要的变更。</li>\n<li>问题日志。问题日志用于记录和监督由谁负责在目标日期内解决特定问题。</li>\n<li>经验教训登记册。经验教训登记册可能包含应对偏差的有效方式以及纠正措施和预防措施。</li>\n<li>里程碑清单。里程碑清单列出特定里程碑的实现日期，用于检查是否达到计划的里程碑。</li>\n<li>质量报告。质量报告包含质量管理问题，针对过程、项目和产品的改善建议，纠正措施建议（包括返工、缺陷或漏洞补救、100% 检查等），以及在控制质量过程中发现的情况的概述。</li>\n<li>风险登记册。风险登记册提供在项目执行过程中发生的各种威胁和机会的相关信息。</li>\n<li>风险报告。风险报告提供关于整体项目风险和单个风险的信息。</li>\n<li>进度预测。进度预测基于项目以往的绩效，用于确定项目是否仍处于进度的公差区间内，并识别任何必要的变更。</li>\n</ul>\n</li>\n<li>工作绩效信息\n<ul>\n<li>在工作执行过程中收集工作绩效数据，再交由控制过程做进一步分析。将工作绩效数据与项目管理计划组件、项目文件和其他项目变量比较之后生成工作绩效信息。通过这种比较可以了解项目的执行情况。</li>\n</ul>\n</li>\n<li>协议</li>\n<li>事业环境因素\n<ul>\n<li>项目管理信息系统，例如进度、成本、资源工具、绩效指标、数据库、项目记录和财务数据；</li>\n<li>基础设施（如现有设施、设备、组织通讯渠道）；</li>\n<li>相关方的期望和风险临界值；</li>\n<li>政府或行业标准（如监管机构条例、产品标准、质量标准和工艺标准）。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>组织的标准政策、流程和程序；</li>\n<li>财务控制程序（如必需的费用与支付审查、会计编码及标准合同条款等）；</li>\n<li>监督和报告方法；</li>\n<li>问题管理程序，用于定义问题控制、问题识别及其解决，以及行动事项跟踪；</li>\n<li>缺陷管理程序，用于定义缺陷控制、缺陷识别及其解决，以及行动事项跟踪；</li>\n<li>组织知识库，尤其是过程测量和经验教训知识库。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-5-2-监控项目工作：工具与技术\">4.5.2 监控项目工作：工具与技术</h3>\n<p>监控项目工作所需要的工具和技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>挣值分析；</li>\n<li>数据的解释和情境化；</li>\n<li>持续时间和成本的估算技术；</li>\n<li>趋势分析；</li>\n<li>关于项目所在的行业以及项目关注的领域的技术知识；</li>\n<li>风险管理；</li>\n<li>合同管理。</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>备选方案分析。备选方案分析用于在出现偏差时选择要执行的纠正措施或纠正措施和预防措施的组合。</li>\n<li>成本效益分析。成本效益分析有助于在项目出现偏差时确定最节约成本的纠正措施。</li>\n<li>挣值分析。挣值分析对范围、进度和成本绩效进行了综合分析。</li>\n<li>根本原因分析。根本原因分析关注识别问题的主要原因，它可用于识别出现偏差的原因以及项目经理为达成项目目标应重点关注的领域。</li>\n<li>趋势分析。趋势分析根据以往结果预测未来绩效，它可以预测项目的进度延误，提前让项目经理意识到，按照既定趋势发展，后期进度可能出现的问题。应该在足够早的项目时间进行趋势分析，使项目团队有时间分析和纠正任何异常。可以根据趋势分析的结果，提出必要的预防措施建议。</li>\n<li>偏差分析。偏差分析审查目标绩效与实际绩效之间的差异（或偏差），可涉及持续时间估算、成本估算、资源使用、资源费率、技术绩效和其他测量指标。</li>\n</ul>\n</li>\n<li>决策</li>\n<li>会议</li>\n</ul>\n<h3 id=\"4-5-3-监控项目工作：输出\">4.5.3 监控项目工作：输出</h3>\n<p>监控项目工作的输出包括：</p>\n<ul>\n<li>工作绩效报告</li>\n<li>变更请求\n<ul>\n<li>纠正措施</li>\n<li>预防措施</li>\n<li>缺陷补救</li>\n</ul>\n</li>\n<li>项目管理计划更新</li>\n<li>项目文件更新\n<ul>\n<li>成本预测</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n<li>进度预测</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-6-实施整体变更控制\">4.6 实施整体变更控制</h2>\n<p>实施整体变更控制是审查所有变更请求、批准变更，管理对可交付成果、项目文件和项目管理计划的变更，并对变更处理结果进行沟通的过程。本过程审查对项目文件、可交付成果或项目管理计划的所有变更请求，并决定对变更请求的处置方案。本过程的主要作用是确保对项目中已记录在案的变更做综合评审。如果不考虑变更对整体项目目标或计划的影响就开展变更，往往会加剧整体项目风险。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173329-12.png\" alt=\"\"></p>\n<p>实施整体变更控制：输入、工具与技术和输出</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173329-13.png\" alt=\"\"></p>\n<p>实施整体变更控制：数据流向图</p>\n<p>在基准确定之前，变更无需正式受控于实施整体变更控制过程。一旦确定了项目基准，就必须通过本过程来处理变更请求。依照常规，每个项目的配置管理计划应规定哪些项目工件受控于配置控制程序。对配置要素的任何变更都应该提出变更请求，并经过正式控制。</p>\n<p>尽管也可以口头提出，但所有变更请求都必须以书面形式记录，并纳入变更管理和（或）配置管</p>\n<p>理系统中。在批准变更之前，可能需要了解变更对进度的影响和对成本的影响。在变更请求可能影响任一项目基准的情况下，都需要开展正式的整体变更控制过程。每项记录在案的变更请求都必须由一位责任人批准、推迟或否决，这个责任人通常是项目发起人或项目经理。应该在项目管理计划或组织程序中指定这位责任人，必要时，应该由变更控制委员会（CCB）来开展实施整体变更控制过程。CCB是一个正式组成的团体，负责审查、评价、批准、推迟或否决项目变更，以及记录和传达变更处理决定。</p>\n<p>变更请求得到批准后，可能需要新编（或修订）成本估算、活动排序、进度日期、资源需求和（或）风险应对方案分析，这些变更可能要求调整项目管理计划和其他项目文件。某些特定的变更请求，在 CCB 批准之后，可能还需要得到客户或发起人的批准，除非他们本身就是 CCB 的成员。</p>\n<h3 id=\"4-6-1-实施整体变更控制：输入\">4.6.1 实施整体变更控制：输入</h3>\n<p>实施整体变更控制的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>配置管理计划</li>\n<li>范围基准</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>估算依据</li>\n<li>需求跟踪矩阵</li>\n<li>风险报告</li>\n</ul>\n</li>\n<li>工作绩效报告</li>\n<li>变更请求</li>\n<li>事业环境因素\n<ul>\n<li>法律限制，例如国家或地区法规；</li>\n<li>政府或行业标准（如产品标准、质量标准、安全标准和工艺标准）；</li>\n<li>法律法规要求和（或）制约因素；</li>\n<li>组织治理框架（通过安排人员、制定政策和确定过程，以结构化的方式实施控制、指导和协调，以实现组织的战略和运营目标）；</li>\n<li>合同和采购制约因素。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>变更控制程序，包括修改组织标准、政策、计划和程序或任一项目文件所须遵循的步骤，以及如何批准和确认变更；</li>\n<li>批准与签发变更的程序；</li>\n<li>配置管理知识库，包括组织标准、政策、程序和项目文件的各种版本及基准。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-6-2-实施整体变更控制：工具与技术\">4.6.2 实施整体变更控制：工具与技术</h3>\n<p>实施整体变更控制所需要的工具与技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>变更控制工具\n<ul>\n<li><strong>识别配置项</strong>。识别与选择配置项，从而为定义与核实产品配置、标记产品和文件、管理变更和明确责任提供基础。</li>\n<li><strong>记录并报告配置项状态</strong>。关于各个配置项的信息记录和报告。</li>\n<li><strong>进行配置项核实与审计</strong>。通过配置核实与审计，确保项目的配置项组成的正确性，以及相应的变更都被登记、评估、批准、跟踪和正确实施，从而确保配置文件所规定的功能要求都已实现。</li>\n<li><strong>识别变更</strong>。识别并选择过程或项目文件的变更项。</li>\n<li><strong>记录变更</strong>。将变更记录为合适的变更请求。</li>\n<li><strong>做出变更决定</strong>。审查变更，批准、否决、推迟对项目文件、可交付成果或基准的变更或做出其他决定。</li>\n<li><strong>跟踪变更</strong>。确认变更被登记、评估、批准、跟踪并向相关方传达最终结果。</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li><strong>备选方案分析</strong>。该技术用于评估变更请求，并决定哪些请求可接受、应否决或需修改。</li>\n<li><strong>成本效益分析</strong>。该分析有助于确定变更请求是否值得投入相关成本。</li>\n</ul>\n</li>\n<li>决策\n<ul>\n<li>投票</li>\n<li>独裁型决策制定</li>\n<li>多标准决策分析</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"4-6-3-实施整体变更控制：输出\">4.6.3 实施整体变更控制：输出</h3>\n<p>实施整体变更控制的输出包括：</p>\n<ul>\n<li>批准的变更请求</li>\n<li>项目管理计划更新</li>\n<li>项目文件更新</li>\n</ul>\n<h2 id=\"4-7-结束项目或阶段\">4.7 结束项目或阶段</h2>\n<p>结束项目或阶段是终结项目、阶段或合同的所有活动的过程。本过程的主要作用是，存档项目或阶段信息，完成计划的工作，释放组织团队资源以展开新的工作。它仅开展一次或仅在项目的预定义点开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173329-14.png\" alt=\"\"></p>\n<p>结束项目或阶段：输入、工具与技术和输出</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173329-15.png\" alt=\"\"></p>\n<p>结束项目或阶段：数据流向图</p>\n<p>在结束项目时，项目经理需要回顾项目管理计划，确保所有项目工作都已完成以及项目目标均已实现。项目或阶段行政收尾所需的必要活动包括（但不限于）：</p>\n<ul>\n<li>为达到阶段或项目的完工或退出标准所必须的行动和活动，例如：\n<ul>\n<li>确保所有文件和可交付成果都已是最新版本，且所有问题都已得到解决；</li>\n<li>确认可交付成果已交付给客户并已获得客户的正式验收；</li>\n<li>确保所有成本都已记入项目成本账；</li>\n<li>关闭项目账户；</li>\n<li>重新分配人员；</li>\n<li>处理多余的项目材料；</li>\n<li>重新分配项目设施、设备和其他资源；</li>\n<li>根据组织政策编制详尽的最终项目报告。</li>\n</ul>\n</li>\n<li>为关闭项目合同协议或项目阶段合同协议所必须开展的活动，例如\n<ul>\n<li>确认卖方的工作已通过正式验收；</li>\n<li>最终处置未决索赔；</li>\n<li>更新记录以反映最后的结果；</li>\n<li>存档相关信息供未来使用。</li>\n</ul>\n</li>\n<li>为完成下列工作所必须开展的活动：\n<ul>\n<li>收集项目或阶段记录；</li>\n<li>审计项目成败；</li>\n<li>管理知识分享和传递；</li>\n<li>总结经验教训；</li>\n<li>存档项目信息以供组织未来使用。</li>\n</ul>\n</li>\n<li>为向下一个阶段，或者向生产和（或）运营部门移交项目的产品、服务或成果所必须开展的行动和活动。</li>\n<li>收集关于改进或更新组织政策和程序的建议，并将它们发送给相应的组织部门。</li>\n<li>测量相关方的满意程度。<br>\n如果项目在完工前就提前终止，结束项目或阶段过程还需要制定程序，来调查和记录提前终止的</li>\n</ul>\n<p>原因。为了实现上述目的，项目经理应该引导所有合适的相关方参与本过程。</p>\n<h3 id=\"4-7-1-结束项目或阶段：输入\">4.7.1 结束项目或阶段：输入</h3>\n<p>结束项目或阶段的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>估算依据</li>\n<li>变更日志</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>里程碑清单</li>\n<li>项目沟通记录</li>\n<li>质量控制测量结果</li>\n<li>质量报告</li>\n<li>需求文件</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n</ul>\n</li>\n<li>验收的可交付成果</li>\n<li>商业文件</li>\n<li>协议</li>\n<li>采购文档</li>\n<li>组织过程资产\n<ul>\n<li>项目或阶段收尾指南或要求（如经验教训、项目终期审计、项目评价、产品确认、验收标准、合同收尾、资源重新分配、团队绩效评估，以及知识传递）；</li>\n<li>配置管理知识库，包括组织标准、政策、程序和项目文件的各种版本及基准。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-7-2-结束项目或阶段：工具与技术\">4.7.2 结束项目或阶段：工具与技术</h3>\n<p>结束项目或阶段所需要的工具与技术包含：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>管理控制；</li>\n<li>审计；</li>\n<li>法规与采购；</li>\n<li>法律法规。</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>文件分析，评估现有文件有助于总结经验教训和分享知识，以改进未来项目和组织资产。</li>\n<li>回归分析，该技术分析作用于项目结果的不同项目变量之间的相互关系，以提高未来项目的绩效。</li>\n<li>趋势分析，趋势分析可用于确认组织所用模式的有效性，并且为了未来项目而进行相应的模式调整。</li>\n<li>偏差分析，偏差分析可通过比较最初计划目标与最终结果来改进组织的测量指标。</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"4-7-3-结束项目或阶段：输出\">4.7.3 结束项目或阶段：输出</h3>\n<p>结束项目或阶段的输出包含：</p>\n<ul>\n<li>项目文件更新</li>\n<li>最终产品、服务或成果移交</li>\n<li>最终报告\n<ul>\n<li>项目或阶段的概述；</li>\n<li>范围目标、范围的评估标准，以及证明达到完工标准的证据；</li>\n<li>质量目标、项目和产品质量的评估标准、相关核实信息和实际里程碑交付日期以及偏差原因；</li>\n<li>成本目标，包括可接受的成本区间、实际成本，以及产生任何偏差的原因；</li>\n<li>最终产品、服务或成果的确认信息的总结。</li>\n<li>进度计划目标包括成果是否实现项目所预期的效益。如果在项目结束时未能实现效益，则指出效益实现程度并预计未来实现情况。</li>\n<li>关于最终产品、服务或成果如何满足商业计划所述业务需求的概述。如果在项目结束时未能满足业务需求，则指出需求满足程度并预计业务需求何时能够得到满足。</li>\n<li>关于项目过程中发生的风险或问题及其解决情况的概述。</li>\n</ul>\n</li>\n<li>组织过程资产更新\n<ul>\n<li>项目文件</li>\n<li>运营和支持文件</li>\n<li>项目或阶段收尾文件</li>\n<li>经验教训知识库</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-项目范围管理\">5.项目范围管理</h2>\n<p>项目范围管理包括确保项目做且只做所需的全部工作，以成功完成项目的各个过程。管理项目范围主要在于定义和控制哪些工作应该包括在项目内，哪些不应该包括在项目内。</p>\n<p>项目范围管理过程包括：</p>\n<p><strong>5.1 规划范围管理</strong> — 为记录如何定义、确认和控制项目范围及产品范围，而创建范围管理计划的过程。</p>\n<p><strong>5.2 收集需求</strong> — 为实现项目目标而确定、记录并管理相关方的需要和需求的过程。</p>\n<p><strong>5.3 定义范围</strong> — 制定项目和产品详细描述的过程。</p>\n<p><strong>5.4 创建 WBS</strong> — 将项目可交付成果和项目工作分解为较小的、更易于管理的组件的过程。</p>\n<p><strong>5.5 确认范围</strong> — 正式验收已完成的项目可交付成果的过程。</p>\n<p><strong>5.6 控制范围</strong> — 监督项目和产品的范围状态，管理范围基准变更的过程。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173729.png\" alt=\"\"></p>\n<p><strong>范围的含义：</strong></p>\n<ul>\n<li><strong>产品范围</strong>：某项产品、服务或成果所具有的特征和功能。</li>\n<li><strong>项目范围</strong>：为交付具有规定特性与功能的产品、服务或成果而必须完成的工作。项目范围有时也包括产品范围。</li>\n</ul>\n<p>在项目范围管理过程中，收集、记录和管理相关方需求。项目范围管理的发展趋势和新兴实践包括（但不限于）注重与商业分析专业人士的合作，以便：</p>\n<ul>\n<li>确定问题并识别商业需要；</li>\n<li>识别并推荐能够满足这些需要的可行解决方案；</li>\n<li>收集、记录并管理相关方需求，以满足商业和项目目标；</li>\n<li>推动项目集或项目的产品、服务或最终成果的成功应用 。</li>\n</ul>\n<p>需求管理过程结束于需求关闭，即把产品、服务或成果移交给接收方，以便长期测量、监控、实现和维持效益。</p>\n<p><strong>裁剪时需要考虑的因素</strong></p>\n<p>因为每个项目都是独特的，所以项目经理需要裁剪项目范围管理过程。裁剪时应考虑的因素包括（但不限于）：</p>\n<ul>\n<li><strong>知识和需求管理</strong>。组织是否拥有正式或非正式的知识和需求管理体系？为了在未来项目中重复使用需求，项目经理应建立哪些指南？</li>\n<li><strong>确认和控制</strong>。组织是否拥有正式或非正式的与确认和控制相关的政策、程序和指南？</li>\n<li><strong>开发方法</strong>。组织是否采用敏捷方法管理项目？开发方法属于迭代型还是增量型？是否采用预测型方法？混合型方法是否有效？</li>\n<li><strong>需求的稳定性</strong>。项目中是否存在需求不稳定的领域？是否有必要采用精益、敏捷或其他适应型技术来处理不稳定的需求，直至需求稳定且定义明确？</li>\n<li><strong>治理</strong>。组织是否拥有正式或非正式的审计和治理政策、程序和指南</li>\n</ul>\n<p><strong>在敏捷或适应型环境中需要考虑的因素</strong></p>\n<p>对于需求不断变化、风险大或不确定性高的项目，在项目开始时通常无法明确项目的范围，而需要在项目期间逐渐明确。敏捷方法特意在项目早期缩短定义和协商范围的时间，并为持续探索和明确范围而延长创建相应过程的时间。在许多情况下，不断涌现的需求往往导致真实的业务需求与最初所述的业务需求之间存在差异。因此，敏捷方法有目的地构建和审查原型，并通过发布多个版本来明确需求。这样一来，范围会在在整个项目期间被定义和再定义。在敏捷方法中，把需求列入未完项。</p>\n<h2 id=\"5-1-规划范围管理\">5.1 规划范围管理</h2>\n<p>规划范围管理是为记录如何定义、确认和控制项目范围及产品范围，而创建范围管理计划的过程。本过程的主要作用是，在整个项目期间对如何管理范围提供指南和方向。本过程仅开展一次或仅在项目的预定义点开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173729-1.png\" alt=\"\"></p>\n<p>规划范围管理：输入、工具与技术和输出</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173729-2.png\" alt=\"\"></p>\n<p>规划范围管理：数据流向图</p>\n<h3 id=\"5-1-1-规划范围管理：输入\">5.1.1 规划范围管理：输入</h3>\n<p>规划范围管理的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划\n<ul>\n<li>质量管理计划</li>\n<li>项目生命周期描述</li>\n<li>开发方法</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织文化</li>\n<li>基础设施</li>\n<li>人事管理制度</li>\n<li>市场条件</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>政策和程序</li>\n<li>历史信息和经验教训知识库</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-1-2-规划范围管理：工具与技术\">5.1.2 规划范围管理：工具与技术</h3>\n<p>规划范围管理需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>以往类似项目</li>\n<li>特定行业、学科和应用领域的信息</li>\n</ul>\n</li>\n<li>数据分析</li>\n<li>会议</li>\n</ul>\n<h3 id=\"5-1-3-规划范围管理：输出\">5.1.3 规划范围管理：输出</h3>\n<p>规划范围管理的输出包括：</p>\n<ul>\n<li>范围管理计划\n<ul>\n<li>制定项目范围说明书</li>\n<li>根据详细项目范围说明书创建WBS</li>\n<li>确定如何审批和维护范围基准</li>\n<li>正式验收已完成的项目可交付成果</li>\n</ul>\n</li>\n<li>需求管理计划\n<ul>\n<li>如何规划、跟踪和报告各种需求活动；</li>\n<li>配置管理活动，例如如何启动变更，如何分析其影响，如何进行追溯、跟踪和报告，以及如何变更审批权限；</li>\n<li>需求优先级排序过程；</li>\n<li>测量指标及使用这些指标的理由；</li>\n<li>反映哪些需求属性将被列入跟踪矩阵的跟踪结构。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-2-收集需求\">5.2 收集需求</h2>\n<p>收集需求是为实现目标而确定、记录并管理相关方的需要和需求的过程。本过程的主要作用是，为定义产品范围和项目范围奠定基础，且仅开展一次或仅在项目的预定义点开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173729-3.png\" alt=\"\"></p>\n<p>收集需求：输入、工具与技术和输出</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173729-4.png\" alt=\"\"></p>\n<p>收集需求：数据流向图</p>\n<h3 id=\"5-2-1-收集需求：输入\">5.2.1 收集需求：输入</h3>\n<p>收集需求的需求包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划\n<ul>\n<li>范围管理计划</li>\n<li>需求管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>经验教训登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>商业文件</li>\n<li>协议</li>\n<li>事业环境因素\n<ul>\n<li>组织文化</li>\n<li>基础设施</li>\n<li>人事管理制度</li>\n<li>市场条件</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>政策和程序</li>\n<li>包含以往项目信息的历史信息和经验教训知识库</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-2-2-收集需求：工具与技术\">5.2.2 收集需求：工具与技术</h3>\n<p>收集需求需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>商业分析</li>\n<li>需求获取</li>\n<li>需求分析</li>\n<li>需求文件</li>\n<li>以往类似项目的项目需求</li>\n<li>图解技术</li>\n<li>引导</li>\n<li>冲突管理</li>\n</ul>\n</li>\n<li>数据收集\n<ul>\n<li>头脑风暴</li>\n<li>访谈</li>\n<li>焦点小组</li>\n<li>问卷调查</li>\n<li>标杆对照</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>协议</li>\n<li>商业计划</li>\n<li>业务流程或接口文档</li>\n<li>业务规则库</li>\n<li>现行流程</li>\n<li>市场文献</li>\n<li>问题日志</li>\n<li>政策和程序</li>\n<li>法规文件</li>\n<li>建议邀请书</li>\n<li>用例</li>\n</ul>\n</li>\n<li>决策\n<ul>\n<li>投票</li>\n<li>独裁型决策执行</li>\n<li>多标准决策分析</li>\n</ul>\n</li>\n<li>数据表现\n<ul>\n<li>亲和图：用来对大量创意进行分组的技术，以便进一步审查和分析</li>\n<li>思维导图：把从头脑风暴中获得的创意整合成一张图，用以反映创意之间的共性和差异，激发新创意</li>\n</ul>\n</li>\n<li>人际关系与团队技能\n<ul>\n<li>名义小组技术，名义小组技术是用于促进头脑风暴的一种技术，通过投票排列最有用的创意，以便进一步开展头脑风暴或优先排序。名义小组技术是一种结构化的头脑风暴形式，由四个步骤组成：\n<ul>\n<li>向小组提出一个问题或难题。每个人在沉思后写出自己的想法。</li>\n<li>主持人在活动挂图上记录所有人的想法。</li>\n<li>集体讨论各个想法，直到全体成员清晰理解。</li>\n<li>个人私下投票决出各种想法的优先排序，通常采用 5 分制，1 分最低，5 分最高。为减少想法数量、集中关注想法，可进行数轮投票。每轮投票后，都将清点选票，选出得分靠前的那些想法。</li>\n</ul>\n</li>\n<li>观察和交谈</li>\n<li>引导，引导与主题研讨会结合使用，把主要相关方召集在一起定义产品需求。研讨会可用于快速定义跨职能需求并协调相关方的需求差异。因为具有群体互动的特点，有效引导的研讨会有助于参与者之间建立信任、改进关系、改善沟通，从而有利于相关方达成一致意见。此外，与分别召开会议相比，研讨会能够更早发现并更快解决问题。适合采用引导技能的情境包括（但不限于）：\n<ul>\n<li>联合应用设计或开发 (JAD)。JAD 会议适用于软件开发行业。这种研讨会注重把业务主题专家和开发团队集中在一起，以收集需求和改进软件开发过程。</li>\n<li>质量功能展开 (QFD)。制造行业则采用 QFD 这种引导技能来帮助确定新产品的关键特征。QFD从收集客户需要（又称“客户声音”）开始，然后客观地对这些需要进行分类和排序，并为实现这些需要而设定目标。</li>\n<li>用户故事。用户故事是对所需功能的简短文字描述，经常产生于需求研讨会。用户故事描述哪个相关方将从功能中受益（角色），他需要实现什么（目标），以及他期望获得什么利益（动机）。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>系统交互图，系统交互图是范围模型的一个例子，它是对产品范围的可视化描绘，显示业务系统（过程、设备、计算机系统等）及其与人和其他系统（行动者）之间的交互方式。</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173729-5.png\" alt=\"\"></p>\n<ul>\n<li>原型法，原型法是指在实际制造预期产品之前，先造出该产品的模型，并据此征求对需求的早期反馈。原型包括微缩产品、计算机生成的二维和三维模型、实体模型或模拟。因为原型是有形的实物，它使得相关方可以体验最终产品的模型，而不是仅限于讨论抽象的需求描述。原型法支持渐进明细的理念，需要经历从模型创建、用户体验、反馈收集到原型修改的反复循环过程。在经过足够的反馈循环之后，就可以通过原型获得足够的需求信息，从而进入设计或制造阶段。故事板是一种原型技术，通过一系列的图像或图示来展示顺序或导航路径。故事板用于各种行业的各种项目中，如电影、广告、教学设计，以及敏捷和其他软件开发项目。在软件开发中，故事板使用实体模型来展示网页、屏幕或其他用户界面的导航路径。</li>\n</ul>\n<h3 id=\"5-2-3-收集需求：输出\">5.2.3 收集需求：输出</h3>\n<p>收集需求的输出包括：</p>\n<ul>\n<li>需求文件\n<ul>\n<li>业务需求</li>\n<li>相关方需求</li>\n<li>解决方案需求\n<ul>\n<li>功能需求</li>\n<li>非功能需求</li>\n</ul>\n</li>\n<li>过渡和就绪需求</li>\n<li>项目需求</li>\n<li>质量需求</li>\n</ul>\n</li>\n<li>需求跟踪矩阵：需求跟踪矩阵是把产品需求从其来源连接到能满足需求的可交付成果的一种表格。使用需求跟踪矩阵，把每个需求与业务目标或项目目标联系起来，有助于确保每个需求都具有商业价值。\n<ul>\n<li>\n<p>业务需要、机会、目的和目标；</p>\n</li>\n<li>\n<p>项目目标；</p>\n</li>\n<li>\n<p>项目范围和 WBS 可交付成果；</p>\n</li>\n<li>\n<p>产品设计；</p>\n</li>\n<li>\n<p>产品开发；</p>\n</li>\n<li>\n<p>测试策略和测试场景；</p>\n</li>\n<li>\n<p>高层级需求到详细需求。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173729-6.png\" alt=\"\"></p>\n<p>需求跟踪矩阵示例</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-3-定义范围\">5.3 定义范围</h2>\n<p>定义范围是制定项目和产品详细描述的过程。本过程的主要作用是，描述产品、服务或成果的边界和验收标准。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173729-7.png\" alt=\"\"></p>\n<p>定义范围：输入、工具与技术和输出</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173729-8.png\" alt=\"\"></p>\n<p>定义范围：数据流向图</p>\n<h3 id=\"5-3-1-定义范围：输入\">5.3.1 定义范围：输入</h3>\n<p>定义范围的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>需求文件</li>\n<li>风险登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织文化</li>\n<li>基础设施</li>\n<li>人事管理制度</li>\n<li>市场条件</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>用于制定项目范围说明书的政策、程序和模板</li>\n<li>以往项目的项目档案</li>\n<li>以往阶段或项目的经验教训</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-3-2-定义范围：工具与技术\">5.3.2 定义范围：工具与技术</h3>\n<p>定义范围需要的工具与技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>数据分析</li>\n<li>决策</li>\n<li>人际关系与团队技能</li>\n<li>产品分析\n<ul>\n<li>产品分解</li>\n<li>需求分析</li>\n<li>系统分析</li>\n<li>系统工程</li>\n<li>价值分析</li>\n<li>价值工程</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-3-3-定义范围：输出\">5.3.3 定义范围：输出</h3>\n<p>定义范围的输出包括：</p>\n<ul>\n<li>项目范围说明书：项目范围说明书是对项目范围、主要可交付成果、假设条件和制约因素的描述。它记录了整个范围，包括项目和产品范围；详细描述了项目的可交付成果；还代表项目相关方之间就项目范围所达成的共识。为便于管理相关方的期望，项目范围说明书可明确指出哪些工作不属于本项目范围。\n<ul>\n<li>产品范围描述</li>\n<li>可交付成果</li>\n<li>验收标准</li>\n<li>项目的除外责任：识别排除在项目之外的内容</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-4-创建WBS\">5.4 创建WBS</h2>\n<p>创建工作分解结构（WBS）是把项目可交付成果和项目工作分解成较小、更易于管理的组件的过程。本过程的主要作用是，为所要交付的内容提供架构，它仅开展一次或仅在项目的预定义点开展。</p>\n<p>WBS 是对项目团队为实现项目目标、创建所需可交付成果而需要实施的全部工作范围的层级分解。WBS 组织并定义了项目的总范围，代表着经批准的当前项目范围说明书中所规定的工作。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173729-9.png\" alt=\"\"></p>\n<p>创建 WBS：输入、工具与技术和输出</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173729-10.png\" alt=\"\"></p>\n<p>创建 WBS：数据流向图</p>\n<h3 id=\"5-4-1-创建WBS：输入\">5.4.1 创建WBS：输入</h3>\n<p>创建WBS的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>项目范围说明书</li>\n<li>需求文件</li>\n</ul>\n</li>\n<li>事业环境因素</li>\n<li>组织过程资产\n<ul>\n<li>用于创建WBS的政策、程序和模板</li>\n<li>以往项目的项目档案</li>\n<li>以往项目的经验教训</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-4-2-创建WBS：工具与技术\">5.4.2 创建WBS：工具与技术</h3>\n<p>创建WBS需要的工具和技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>分解：分解是一种把项目范围和项目可交付成果逐步划分为更小、更便于管理的组成部分的技术；工作包是 WBS 最低层的工作，可对其成本和持续时间进行估算和管理。分解的程度取决于所需的控制程度，以实现对项目的高效管理；工作包的详细程度则因项目规模和复杂程度而异。\n<ul>\n<li>识别和分析可交付成果及相关工作；</li>\n<li>确定 WBS 的结构和编排方法；</li>\n<li>自上而下逐层细化分解；</li>\n<li>为 WBS 组成部分制定和分配标识编码；</li>\n<li>核实可交付成果分解的程度是否恰当。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173729-11.png\" alt=\"\"></p>\n<p>WBS示例</p>\n<h3 id=\"5-4-3-创建WBS：输出\">5.4.3 创建WBS：输出</h3>\n<p>创建WBS的输出包括：</p>\n<ul>\n<li>范围基准\n<ul>\n<li>项目范围说明书</li>\n<li>WBS</li>\n<li>工作包：WBS 的最低层级是带有独特标识号的工作包。这些标识号为进行成本、进度和资源信息的逐层汇总提供了层级结构，构成账户编码。每个工作包都是控制账户的一部分，而控制账户则是一个管理控制点。在该控制点上，把范围、预算和进度加以整合，并与挣值相比较，以测量绩效。控制账户拥有两个或更多工作包，但每个工作包只与一个控制账户关联。</li>\n<li>规划包：一个控制账户可以包含一个或多个规划包，其是一种低于控制账户而高于工作包的工作分解结构组件，工作内容已知，但详细的进度活动未知。</li>\n<li>WBS词典</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>需求文件</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-5-确认范围\">5.5 确认范围</h2>\n<p>确认范围是正式验收已完成的项目可交付成果的过程。本过程的主要作用是，使验收过程具有客观性；同时通过确认每个可交付成果，来提高最终产品、服务或成果获得验收的可能性。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173729-12.png\" alt=\"\"></p>\n<p>确认范围：输入、工具与技术和输出</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173729-13.png\" alt=\"\"></p>\n<p>确认范围：数据流向图</p>\n<h3 id=\"5-5-1-确认范围：输入\">5.5.1 确认范围：输入</h3>\n<p>确认范围的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>范围管理计划</li>\n<li>需求管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>质量报告</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n</ul>\n</li>\n<li>核实的可交付成果</li>\n<li>工作绩效数据</li>\n</ul>\n<h3 id=\"5-5-2-确认范围：工具与技术\">5.5.2 确认范围：工具与技术</h3>\n<p>确认范围需要的工具与技术包括：</p>\n<ul>\n<li>检查</li>\n<li>决策</li>\n</ul>\n<h3 id=\"5-5-3-确认范围：输出\">5.5.3 确认范围：输出</h3>\n<p>确认范围的输出包括：</p>\n<ul>\n<li>验收的可交付成果</li>\n<li>工作绩效信息</li>\n<li>变更请求</li>\n<li>项目文件更新</li>\n</ul>\n<h2 id=\"5-6-控制范围\">5.6 控制范围</h2>\n<p>控制范围是监督项目和产品的范围状态，管理范围基准变更的过程。本过程的主要作用是，在整个项目期间保持对项目基准的维护，且需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173729-14.png\" alt=\"\"></p>\n<p>控制范围：输入、工具与技术和输出</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417173729-15.png\" alt=\"\"></p>\n<p>控制范围：数据流向图</p>\n<h3 id=\"5-6-1-控制范围：输入\">5.6.1 控制范围：输入</h3>\n<p>控制范围的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>范围管理计划</li>\n<li>需求管理计划</li>\n<li>变更管理计划</li>\n<li>配置管理计划</li>\n<li>范围基准</li>\n<li>绩效测量基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n</ul>\n</li>\n<li>工作绩效数据</li>\n<li>组织过程资产\n<ul>\n<li>现有的、正式和非正式的，与范围控制相关的政策、程序和指南</li>\n<li>可用的监督和报告的方法和模板</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-6-2-控制范围：工具与技术\">5.6.2 控制范围：工具与技术</h3>\n<p>控制范围需要的工具与技术包括：</p>\n<ul>\n<li>数据分析\n<ul>\n<li>偏差分析</li>\n<li>趋势分析</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-6-3-控制范围：输出\">5.6.3 控制范围：输出</h3>\n<p>控制范围的输出包括：</p>\n<ul>\n<li>工作绩效信息</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>范围管理计划</li>\n<li>范围基准</li>\n<li>进度基准</li>\n<li>成本基准</li>\n<li>绩效测量基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>经验教训登记册</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-项目进度管理\">6.项目进度管理</h2>\n<p>项目进度管理包括为管理项目按时完成所需的各个过程。其过程包括：</p>\n<p><strong>6.1 规划进度管理</strong> — 为规划、编制、管理、执行和控制项目进度而制定政策、程序和文档的过程。</p>\n<p><strong>6.2 定义活动</strong> — 识别和记录为完成项目可交付成果而需采取的具体行动的过程。</p>\n<p><strong>6.3 排列活动顺序</strong> — 识别和记录项目活动之间的关系的过程。</p>\n<p><strong>6.4 估算活动持续时间</strong> — 根据资源估算的结果，估算完成单项活动所需工作时段数的过程。</p>\n<p><strong>6.5 制定进度计划</strong> — 分析活动顺序、持续时间、资源需求和进度制约因素，创建项目进度模型，从而落实项目执行和监控的过程。</p>\n<p><strong>6.6 控制进度</strong> — 监督项目状态，以更新项目进度和管理进度基准变更的过程。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641.png\" alt=\"\"></p>\n<p>项目进度管理概述</p>\n<p><strong>项目进度管理的核心概念</strong></p>\n<p>通过项目进度规划制定详尽的计划，说明项目如何以及何时交付项目范围中定义的产品、服务和成果，并作为一种用于沟通和管理相关方期望的工具，以及报告绩效的基础。</p>\n<p>项目管理团队选择进度计划方法，例如关键路径法或敏捷方法。之后，项目管理团队将项目特定数据，如活动、计划日期、持续时间、资源、依赖关系和制约因素等输入进度计划编制工具，以创建项目进度模型。这件工作的成果就是项目进度计划。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-1.png\" alt=\"\"></p>\n<p>进度规划工作概述</p>\n<p><strong>具有未完项的迭代型进度计划</strong></p>\n<p>这是一种基于适应型生命周期的滚动式规划，例如敏捷的产品开发方法。这种方法将需求记录在用户故事中，然后在建造之前按优先级排序并优化用户故事，最后在规定的时间盒内开发产品功能。这一方法通常用于向客户交付增量价值，或多个团队并行开发大量内部关联较小的功能。适应型生命周期在产品开发中的应用越来越普遍，很多项目都采用这种进度计划方法。这种方法的好处在于，它允许在整个开发生命周期期间进行变更。</p>\n<p><strong>按需进度计划</strong></p>\n<p>这种方法通常用于看板体系，基于制约理论和来自精益生产的拉动式进度计划概念，根据团队的交付能力来限制团队正在开展的工作。按需进度计划方法不依赖于以前为产品开发或产品增量制定的进度计划，而是在资源可用时立即从未完项和工作序列中提取出来开展。按需进度计划方法经常用于此类项目：在运营或持续环境中以增量方式研发产品，且任务的规模或范围相对类似，或者，可以按照规模或范围对任务进行组合的项目。</p>\n<p><strong>裁剪考虑因素</strong></p>\n<p>由于每个项目都是独特的，因此项目经理可能需要裁剪项目进度管理过程。裁剪时应考虑的因素包括（但不限于）：</p>\n<ul>\n<li>生命周期方法。哪种生命周期方法最适合制定详细的进度计划</li>\n<li>资源可用性。影响资源可持续时间的因素是什么（如可用资源与其生产效率之间的相关性）</li>\n<li>项目维度。项目复杂性、技术不确定性、产品新颖度、速度或进度跟踪要求（如挣值、完成百分比、“红黄绿”停止信号灯指示）如何影响预期的控制水平</li>\n<li>技术支持。是否采用技术来制定、记录、传递、接收和存储项目进度模型的信息以及该技术是否易于获取</li>\n</ul>\n<h2 id=\"6-1-规划进度管理\">6.1 规划进度管理</h2>\n<p>规划进度管理是为控制、编制、管理、执行和控制项目进度而制定政策、程序和文档的过程。本过程的主要作用是，为如何在整个项目期间管理项目进度提供指南和方向。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-2.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-3.png\" alt=\"\"></p>\n<h3 id=\"6-1-1-规划进度管理：输入\">6.1.1 规划进度管理：输入</h3>\n<p>规划进度管理的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划\n<ul>\n<li>范围管理计划</li>\n<li>开发方法监督和报告</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织文化和结构</li>\n<li>团队资源可用性、技能以及物流资源可用性</li>\n<li>进度计划软件</li>\n<li>指南和标准，用于裁剪组织标准过程和程序以满足项目的特定要求</li>\n<li>商业数据库</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>历史信息和经验教训知识库</li>\n<li>现有与制定进度计划以及管理和控制进度相关的正式和非正式的程序、程序和时间</li>\n<li>模板和表格</li>\n<li>监督和报告工具</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-1-2-规划进度管理：工具与技术\">6.1.2 规划进度管理：工具与技术</h3>\n<p>规划进度管理需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>进度计划的编制、管理和控制</li>\n<li>进度计划方法</li>\n<li>进度项目软件</li>\n<li>进度计划软件项目所在特定行业</li>\n</ul>\n</li>\n<li>数据分析</li>\n<li>会议</li>\n</ul>\n<h3 id=\"6-1-3-规划进度管理：输出\">6.1.3 规划进度管理：输出</h3>\n<p>规划进度管理的输出包括：</p>\n<ul>\n<li><strong>进度管理计划</strong>：进度管理计划是项目管理计划的组成部分，为编制、监督和控制项目进度建立准则和明确活动。根据项目需要，进度管理计划可以是正式或非正式的，非常详细或高度概括的，其中应包括合适的控制临界值。\n<ul>\n<li><strong>项目进度模型制定</strong>。需要规定用于制定项目进度模型的进度规划方法论和工具。</li>\n<li><strong>进度计划的发布和迭代长度</strong>。使用适应型生命周期时，应指定固定时间的发布时段、阶段和迭代。固定时间段指项目团队稳定地朝着目标前进的持续时间，它可以推动团队先处理基本功能，然后在时间允许的情况下再处理其他功能，从而尽可能减少范围蔓延。</li>\n<li><strong>准确度</strong>。准确度定义了需要规定活动持续时间估算的可接受区间，以及允许的应急储备数量。</li>\n<li><strong>计量单位</strong>。需要规定每种资源的计量单位，例如，用于测量时间的人时数、人天数或周数，用于计量数量的米、升、吨、千米或立方码。</li>\n<li><strong>组织程序链接</strong>。工作分解结构为进度管理计划提供了框架，保证了与估算及相应进度计划的协调性。</li>\n<li><strong>项目进度模型维护</strong>。需要规定在项目执行期间，将如何在进度模型中更新项目状态，记录项目进展。</li>\n<li><strong>控制临界值</strong>。可能需要规定偏差临界值，用于监督进度绩效。它是在需要采取某种措施前，允许出现的最大差异。临界值通常用偏离基准计划中的参数的某个百分数来表示。</li>\n<li><strong>绩效测量规则</strong>。需要规定用于绩效测量的挣值管理（EVM）规则或其他测量规则。例如，进度管理计划可能规定：\n<ul>\n<li>确定完成百分比的规则；</li>\n<li>EVM 技术，如基准法、固定公式法、完成百分比法等；</li>\n<li>进度绩效测量指标，如进度偏差（SV）和进度绩效指数（SPI），用来评价偏离原始进度基准的程度。</li>\n</ul>\n</li>\n<li><strong>报告格式</strong>。需要规定各种进度报告的格式和编制频率。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-2-定义活动\">6.2 定义活动</h2>\n<p>定义活动是识别和记录为完成项目可交付成果而须必须采取的具体行动的过程。本过程的主要作用是，将工作包分解为进度活动，作为对项目工作进行进度估算、规划、执行、监督和控制的基础。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-4.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-5.png\" alt=\"\"></p>\n<h3 id=\"6-2-1-定义活动：输入\">6.2.1 定义活动：输入</h3>\n<p>定义活动的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>进度管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织文化和结构</li>\n<li>商业数据库中发布的商业信息</li>\n<li>项目管理信息系统</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>经验教训知识库，其中包含以往类似项目的活动清单等历史信息</li>\n<li>标准化的流程</li>\n<li>以往项目中包含标准活动清单或部分活动清单的模板</li>\n<li>现有与活动规划相关的正式和非正式的政策、程序和指南，如进度规划方法论，在编制活动定义时应考虑这些因素</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-2-2-定义活动：工具与技术\">6.2.2 定义活动：工具与技术</h3>\n<p>定义活动需要的工具和技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>分解</li>\n<li>滚动式规划：滚动式规划是一种迭代式的规划技术，即详细规划近期要完成的工作，同时在较高层级上粗略规划远期工作。它是一种渐进明细的规划方式，适用于工作包、规划包以及采用敏捷或瀑布式方法的发布规划。</li>\n<li>会议</li>\n</ul>\n<h3 id=\"6-2-3-定义活动：输出\">6.2.3 定义活动：输出</h3>\n<p>定义活动的输出包括：</p>\n<ul>\n<li>活动清单：活动清单包含项目所需的进度活动</li>\n<li>活动属性：活动属性是指每项活动所具有的多重属性，用来扩充对活动的描述</li>\n<li>里程碑清单</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-3-排列活动顺序\">6.3 排列活动顺序</h2>\n<p>排列活动顺序是识别和记录项目活动之间的关系的过程，本过程的主要作用是定义工作之间的逻辑顺序，以便在既定的所有项目制约因素下获得最高的效率。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-6.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-7.png\" alt=\"\"></p>\n<h3 id=\"6-3-1-排列活动顺序：输入\">6.3.1 排列活动顺序：输入</h3>\n<p>排列活动顺序的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>进度管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>活动属性</li>\n<li>活动清单</li>\n<li>假设日志</li>\n<li>里程碑清单</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>政府或行业标准</li>\n<li>项目管理信息系统</li>\n<li>进度规划工具</li>\n<li>组织的工作授权系统</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>项目组织和项目集规划，以及项目之间的依赖关系与关联</li>\n<li>现有与活动规划相关的正式和非正式的政策、程序和指南，如进度计划方法论，在确定逻辑关系时应考虑这些因素；</li>\n<li>有助于加快项目活动网络图编制的各种模板；模板中也会包括有助于排列活动顺序的，与活动属性有关的信息；</li>\n<li>经验教训知识库，其中包含有助于优化排序过程的历史信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-3-2-排列活动顺序：工具与技术\">6.3.2 排列活动顺序：工具与技术</h3>\n<p>排列活动顺序需要的工具和技术包括：</p>\n<ul>\n<li><strong>紧前关系绘图法</strong>：紧前关系绘图法（PDM）是创建进度模型的一种技术，用节点表示活动，用一种或多种逻辑关系连接活动，以显示活动的实施顺序。PDM 包括四种依赖关系或逻辑关系。紧前活动是在进度计划的逻辑路径中，排在某个活动前面的活动。紧后活动是在进度计划的逻辑路径中，排在某个活动后面的活动。\n<ul>\n<li><strong>完成到开始（FS）</strong>。只有紧前活动完成，紧后活动才能开始的逻辑关系。例如，只有完成装配PC 硬件（紧前活动），才能开始在 PC 上安装操作系统（紧后活动）。</li>\n<li><strong>完成到完成（FF）</strong>。只有紧前活动完成，紧后活动才能完成的逻辑关系。例如，只有完成文件的编写（紧前活动），才能完成文件的编辑（紧后活动）。</li>\n<li><strong>开始到开始（SS）</strong>。只有紧前活动开始，紧后活动才能开始的逻辑关系。例如，开始地基浇灌（紧前活动）之后，才能开始混凝土的找平（紧后活动）。</li>\n<li><strong>开始到完成（SF）</strong>。只有紧前活动开始，紧后活动才能完成的逻辑关系。例如，只有启动新的应付账款系统（紧前活动），才能关闭旧的应付账款系统（紧后活动）。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-8.png\" alt=\"\"></p>\n<ul>\n<li>\n<p><strong>确定和整合依赖关系</strong></p>\n<ul>\n<li><strong>强制性依赖关系</strong>。强制性依赖关系是法律或合同要求的或工作的内在性质决定的依赖关系，强制性依赖关系往往与客观限制有关。例如，在建筑项目中，只有在地基建成后，才能建立地面结构；在电子项目中，必须先把原型制造出来，然后才能对其进行测试。强制性依赖关系又称硬逻辑关系或硬依赖关系。技术性依赖关系并非都是强制性的。在活动排序过程中，项目团队应明确哪些关系是强制性依赖关系，不应把强制性依赖关系和进度计划编制工具中的进度制约因素相混淆。</li>\n<li><strong>选择性依赖关系</strong>。选择性依赖关系有时又称首选逻辑关系、优先逻辑关系或软逻辑关系。便还有其他依赖关系可用，选择性依赖关系应基于具体应用领域的最佳实践或项目的某些特殊性质对活动顺序的要求来创建。例如，根据普遍公认的最佳实践，在建筑施工期间，应该先完成给排水施工，再开始电气施工。 这个顺序并不是强制性的。虽然两项工作可以同时(并行)开展，但是按先后顺序开展可以降低整体项目风险。应该对选择性依赖关系进行全面记录，因为它们会影响总浮动时间，并限制后续的进度安排。如果打算进行快速跟进，则应当审查相应的选择性依赖关系，并考虑是否需要调整或去除。在排列活动顺序过程中，项目团队应明确哪些依赖关系属于选择性依赖关系。</li>\n<li><strong>外部依赖关系</strong>。外部依赖关系是项目活动与非项目活动之间的依赖关系，这些依赖关系往往不在项目团队的控制范围内。例如，软件项目的测试活动取决于外部硬件的到货；建筑项目的现场准备，可能要在政府的环境听证会之后才能开始。在排列活动顺序过程中，项目管理团队应明确哪些依赖关系属于外部依赖关系。</li>\n<li><strong>内部依赖关系</strong>。内部依赖关系是项目活动之间的紧前关系，通常在项目团队的控制之中。例如，只有机器组装完毕，团队才能对其测试，这是一个内部的强制性依赖关系。在排列活动顺序过程中，项目管理团队应明确哪些依赖关系属于内部依赖关系。</li>\n</ul>\n</li>\n<li>\n<p><strong>提前量和滞后量</strong></p>\n<ul>\n<li>提前量是相对于紧前活动，紧后活动可以提前的时间量。例如，在新办公大楼建设项目中，绿化施工可以在尾工清单编制完成前 2 周开始，这就是带 2 周提前量的完成到开始的关系，如图 6-10 所示。在进度计划软件中，提前量往往表示为负滞后量。</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-9.png\" alt=\"\"></p>\n<ul>\n<li>滞后量是相对于紧前活动，紧后活动需要推迟的时间量。例如，对于一个大型技术文档，编写小组可以在编写工作开始后 15 天，开始编辑文档草案，这就是带 15 天滞后量的开始到开始关系，如图 6-10 所示。在图 6-11 的项目进度网络图中，活动 H 和活动 I 之间就有滞后量，表示为SS+10（带10 天滞后量的开始到开始关系），虽然图中并没有用精确的时间刻度来表示滞后的量值。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-10.png\" alt=\"\"></p>\n<ul>\n<li>项目管理信息系统</li>\n</ul>\n<h3 id=\"6-3-3-排列活动顺序：输出\">6.3.3 排列活动顺序：输出</h3>\n<p>排列活动顺序的输出包括：</p>\n<ul>\n<li>项目进度网络图：项目进度网络图是表示项目进度活动之间的逻辑关系（也叫依赖关系）的图形。项目进度网络图可手工或借助项目管理软件来绘制，可包括项目的全部细节，也可只列出一项或多项概括性活动。项目进度网络图应附有简要文字描述，说明活动排序所使用的基本方法。在文字描述中，还应该对任何异常的活动序列做详细说明。</li>\n<li>项目文件更新\n<ul>\n<li>活动属性</li>\n<li>活动清单</li>\n<li>假设日志</li>\n<li>里程碑清单</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-4-估算活动持续时间\">6.4 估算活动持续时间</h2>\n<p>估算活动持续时间是根据资源估算的结果，估算完成单项活动所需工作时段数的过程。本过程的主要作用是，确定完成每个活动所需花费的时间量。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-11.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-12.png\" alt=\"\"></p>\n<p><strong>估算活动持续时间依据的信息包括：工作范围、所需资源类型与技能水平、估算的资源数量和资源日历，而可能影响持续时间估算的其他因素包括对持续时间受到的约束、相关人力投入、资源类型（如固定持续时间、固定人力投入或工作、固定资源数量）以及所采用的进度网络分析技术</strong>。应该由项目团队中最熟悉具体活动的个人或小组提供持续时间估算所需的各种输入，对持续时间的估算也应该渐进明细，取决于输入数据的数量和质量。</p>\n<p>在本过程中，应该首先估算出完成活动所需的工作量和计划投入该活动的资源数量，然后结合项目日历和资源日历，据此估算出完成活动所需的工作时段数（活动持续时间）。在许多情况下，预计可用的资源数量以及这些资源的技能熟练程度可能会决定活动的持续时间，更改分配到活动的主导性资源通常会影响持续时间，但这不是简单的“直线”或线性关系。有时候，因为工作的特性（即受到持续时间的约束、相关人力投入或资源数量），无论资源分配如何（如 24 小时应力测试），都需要花预定的时间才能完成工作。估算持续时间时需要考虑的其他因素包括：</p>\n<ul>\n<li><strong>收益递减规律</strong>。在保持其他因素不变的情况下，增加一个用于确定单位产出所需投入的因素（如资源）会最终达到一个临界点，在该点之后的产出或输出会随着增加这个因素而递减。</li>\n<li><strong>资源数量</strong>。增加资源数量，使其达到初始数量的两倍不一定能缩短一半的时间，因为这样做可能会因风险而造成持续时间增加；在某些情况下，如果增加太多活动资源，可能会因知识传递、学习曲线、额外合作和其他相关因素而造成持续时间增加。</li>\n<li><strong>技术进步</strong>。在确定持续时间估算时，这个因素也可能发挥重要作用。例如，通过采购最新技术，制造工厂可以提高产量，而这可能会影响持续时间和资源需求。</li>\n<li><strong>员工激励</strong>。项目经理还需要了解“学生综合征”（即拖延症）和帕金森定律，前者指出，人们只有在最后一刻，即快到期限时才会全力以赴；后者指出，只要还有时间，工作就会不断扩展，直到用完所有的时间。<br>\n应该把活动持续时间估算所依据的全部数据与假设都记录在案。</li>\n</ul>\n<h3 id=\"6-4-1-估算活动持续时间：输入\">6.4.1 估算活动持续时间：输入</h3>\n<ul>\n<li>估算活动持续时间的输入包括：项目管理计划\n<ul>\n<li>进度管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>活动属性</li>\n<li>活动清单</li>\n<li>假设日志</li>\n<li>经验教训登记册</li>\n<li>里程碑清单</li>\n<li>项目团队派工单</li>\n<li>资源分解结构</li>\n<li>资源日历</li>\n<li>资源需求</li>\n<li>风险登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>持续时间估算数据库和其他参考数据</li>\n<li>生产率测量指标</li>\n<li>发布的商业信息</li>\n<li>团队成员的所在地</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>关于持续时间的历史信息</li>\n<li>项目日历</li>\n<li>估算政策</li>\n<li>进度规划方法论</li>\n<li>经验教训知识库</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-4-2-估算活动持续时间：工具与技术\">6.4.2 估算活动持续时间：工具与技术</h3>\n<p>估算活动持续时间需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>进度计划的编制、管理和控制</li>\n<li>有关估算的专业知识</li>\n<li>学科或应用知识</li>\n</ul>\n</li>\n<li><strong>类比估算</strong>：类比估算是一种使用相似活动或项目的历史数据，来估算当前活动或项目的持续时间或成本的技术。类比估算以过去类似项目的参数值（如持续时间、预算、规模、重量和复杂性等）为基础，来估算未来项目的同类参数或指标。</li>\n<li><strong>参数估算</strong>：参数估算是一种基于历史数据和项目参数，使用某种算法来计算成本或持续时间的估算技术。它是指利用历史数据之间的统计关系和其他变量（如建筑施工中的平方英尺），来估算诸如成本、预算和持续时间等活动参数。</li>\n<li><strong>三点估算</strong>：通过考虑估算中的不确定性和风险，可以提高持续时间估算的准确性。使用三点估算有助于界定活动持续时间的近似区间：\n<ul>\n<li><strong>最可能时间 ( tM)</strong>。基于最可能获得的资源、最可能取得的资源生产率、对资源可用时间的现实预计、资源对其他参与者的可能依赖关系及可能发生的各种干扰等，所估算的活动持续时间。</li>\n<li><strong>最乐观时间 (tO)</strong>。基于活动的最好情况所估算的活动持续时间。</li>\n<li><strong>最悲观时间 (tP)</strong>。基于活动的最差情况所估算的持续时间。</li>\n<li>基于持续时间在三种估算值区间内的假定分布情况，可计算期望持续时间 tE。一个常用公式为三角分布：tE = (tO + tM + tP) / 3。</li>\n</ul>\n</li>\n<li><strong>自下而上估算</strong>：自下而上估算是一种估算项目持续时间或成本的方法，通过从下到上逐层汇总 WBS 组成部分的估算而得到项目估算。如果无法以合理的可信度对活动持续时间进行估算，则应将活动中的工作进一步细化，然后估算具体的持续时间，接着再汇总这些持续时间估算，得到每个活动的持续时间。活动之间可能存在或不存在会影响资源利用的依赖关系；如果存在，就应该对相应的资源使用方式加以说明，并记录在活动资源需求中。</li>\n<li>数据分析\n<ul>\n<li><strong>备选方案分析</strong>：备选方案分析用于比较不同的资源能力或技能水平、进度压缩技术、不同工具（手动和自动），以及关于资源的创建、租赁或购买决策。这有助于团队权衡资源、成本和持续时间变量，以确定完成项目工作的最佳方式。</li>\n<li><strong>储备分析</strong>：储备分析用于确定项目所需的应急储备量和管理储备。在进行持续时间估算时，需考虑应急储备（有时称为“进度储备”），以应对进度方面的不确定性。应急储备是包含在进度基准中的一段持续时间，用来应对已经接受的已识别风险。应急储备与“已知 — 未知”风险相关，需要加以合理估算，用于完成未知的工作量。应急储备可取活动持续时间估算值的某一百分比或某一固定的时间段，亦可把应急储备从各个活动中剥离出来并汇总。随着项目信息越来越明确，可以动用、减少或取消应急储备，应该在项目进度文件中清楚地列出应急储备。也可以估算项目进度管理所需要的管理储备量。管理储备是为管理控制的目的而特别留出的项目预算，用来应对项目范围中不可预见的工作。管理储备用来应对会影响项目的“未知-未知”风险，它不包括在进度基准中，但属于项目总持续时间的一部分。依据合同条款，使用管理储备可能需要变更进度基准。</li>\n</ul>\n</li>\n<li>决策</li>\n<li>会议</li>\n</ul>\n<h3 id=\"6-4-3-估算活动持续时间：输出\">6.4.3 估算活动持续时间：输出</h3>\n<p>估算活动持续时间的输出包括：</p>\n<ul>\n<li>持续时间估算：持续时间估算是对完成某项活动、阶段或项目所需的工作时段数的定量评估，其中并不包括任何滞后量，但可指出一定的变动区间。</li>\n<li>估算依据：持续时间估算所需的支持信息的数量和种类，因应用领域而异。不论其详细程度如何，支持性文件都应该清晰、完整地说明持续时间估算是如何得出的。\n<ul>\n<li>关于估算依据的文件</li>\n<li>关于全部假设条件的文件</li>\n<li>关于各种已知制约因素的文件</li>\n<li>对估算区间的说明，以指出预期持续时间的所在区间</li>\n<li>对最终估算的置信水平的说明</li>\n<li>有关影响估算的单个项目风险的文件</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>活动属性</li>\n<li>假设日志</li>\n<li>经验教训登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-5-制定进度计划\">6.5 制定进度计划</h2>\n<p>制定进度计划是分析活动顺序、持续时间、资源需求和进度制约因素，创建进度模型，从而落实项目执行和监控的过程。本过程的主要作用是，为完成项目活动而制定具有计划日期的进度模型。本过程需要在整个项目活动期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-13.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-14.png\" alt=\"\"></p>\n<p>制定可行的项目进度计划是一个反复进行的过程。基于获取的最佳信息，使用进度模型来确定各项目活动和里程碑的计划开始日期和计划完成日期。编制进度计划时，需要审查和修正持续时间估算、资源估算和进度储备，以制定项目进度计划，并在经批准后作为基准用于跟踪项目进度。关键步骤包括定义项目里程碑、识别活动并排列活动顺序，以及估算持续时间。一旦活动的开始和完成日期得到确定，通常就需要由分配至各个活动的项目人员审查其被分配的活动。之后，项目人员确认开始和完成日期与资源日历没有冲突，也与其他项目或任务没有冲突，从而确认计划日期的有效性。然后要分析进度计划，确定是否存在逻辑关系冲突，以及在批准进度计划并将其作为基准之前是否需要资源平衡。还需要在整个项目期间不断修订和维护项目进度模型，确保进度计划一直切实可行。</p>\n<h3 id=\"6-5-1-制定进度计划：输入\">6.5.1 制定进度计划：输入</h3>\n<p>制定进度计划的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>进度管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>活动属性</li>\n<li>活动清单</li>\n<li>假设日志</li>\n<li>估算依据</li>\n<li>持续时间估算</li>\n<li>经验教训</li>\n<li>里程碑清单</li>\n<li>项目进度网络图</li>\n<li>项目团队派工单</li>\n<li>资源日历</li>\n<li>资源需求</li>\n<li>风险登记册</li>\n</ul>\n</li>\n<li>协议</li>\n<li>事业环境因素\n<ul>\n<li>政府或行业标准</li>\n<li>沟通渠道</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>进度计划方法论</li>\n<li>项目日历</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-5-2-制定进度计划：工具与技术\">6.5.2 制定进度计划：工具与技术</h3>\n<p>制定进度计划需要的工具与技术包括：</p>\n<ul>\n<li><strong>进度网络分析</strong>：进度网络分析是创建项目进度模型的一种综合技术。</li>\n<li><strong>关键路径法</strong>：关键路径法用于在进度模型中估算项目最短工期，确定逻辑网络路径的进度灵活性大小。这种进度网络分析技术在不考虑任何资源限制的情况下，沿进度网络路径使用顺推与逆推法，计算出所有活动的最早开始、最早结束、最晚开始和最晚法完成日期</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-15.png\" alt=\"\"></p>\n<ul>\n<li>资源优化：资源优化用于调整活动的开始和完成日期，以调整计划使用的资源，使其等于或少于可用的资源。资源优化技术是根据资源供需情况，来调整进度模型的技术。\n<ul>\n<li>资源平衡：为了在资源需求与资源供给之间取得平衡，根据资源制约因素对开始日期和完成日期进行调整的一种技术。</li>\n<li>资源平滑：对进度模型中的活动进行调整，从而使项目资源需求不超过预定的资源限制的一种技术。相对于资源平衡而言，资源平滑不会改变项目关键路径，完工日期也不会延迟。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-16.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>数据分析</p>\n<ul>\n<li>假设情景分析</li>\n<li>模拟：模拟是把单个项目风险和不确定性的其他来源模型化，以评估它们对项目目标的潜在影响。最常见的模拟技术是蒙特卡罗分析，它利用风险和其他不确定性来源计算整个项目可能的进度结果。</li>\n</ul>\n</li>\n<li>\n<p>提前量和滞后量</p>\n</li>\n<li>\n<p>进度压缩</p>\n<ul>\n<li>\n<p>赶工</p>\n</li>\n<li>\n<p>快速跟进</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-17.png\" alt=\"\"></p>\n</li>\n</ul>\n</li>\n<li>\n<p>项目管理信息系统</p>\n</li>\n<li>\n<p>敏捷发布规划：敏捷发布规划基于项目路线图和产品发展愿景，提供了高度概括的发布进度时间轴（通常是 3 到 6个月）。同时，敏捷发布规划还确定了发布的迭代或冲刺次数，使产品负责人和团队能够决定需要开发的内容，并基于业务目标、依赖关系和障碍因素确定达到产品放行所需的时间。</p>\n</li>\n</ul>\n<h3 id=\"6-5-3-制定进度计划：输出\">6.5.3 制定进度计划：输出</h3>\n<p>制定进度计划的输出包括：</p>\n<ul>\n<li><strong>进度基准</strong>：进度基准是经过批准的进度模型，只有通过正式的变更控制程序才能进行变更，用作与实际结果进行比较的依据。经相关方接受和批准，进度基准包含基准开始日期和基准结束日期。在监控过程中，将用实际开始和完成日期与批准的基准日期进行比较，以确定是否存在偏差。进度基准是项目管理计划的组成部分。</li>\n<li><strong>项目进度计划</strong>\n<ul>\n<li>横道图（甘特图）</li>\n<li>里程碑图</li>\n<li>项目进度网络图</li>\n</ul>\n</li>\n<li><strong>进度数据</strong>：项目进度模型中的进度数据是用以描述和控制进度计划的信息集合。进度数据至少包括进度里程碑、进度活动、活动属性，以及已知的全部假设条件与制约因素，而所需的其他数据因应用领域而异。</li>\n<li>项目日历</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>进度管理计划</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>活动属性</li>\n<li>假设日志</li>\n<li>持续时间估算</li>\n<li>经验教训登记册</li>\n<li>资源需求</li>\n<li>风险登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-6-控制进度\">6.6 控制进度</h2>\n<p>控制进度是监督项目状态，以更新项目进度和管理进度基准变更的过程。本过程的主要作用是在整个项目期间保持对进度基准的维护，且需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-18.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-19.png\" alt=\"\"></p>\n<p>控制进度作为实施整体变更控制过程的一部分，关注如下内容：</p>\n<ul>\n<li>判断项目进度的当前状态；</li>\n<li>对引起进度变更的因素施加影响；</li>\n<li>重新考虑必要的进度储备；</li>\n<li>判断项目进度是否已经发生变更；</li>\n<li>在变更实际发生时对其进行管理。</li>\n</ul>\n<p>如果采用敏捷方法，控制进度要关注如下内容：</p>\n<ul>\n<li>通过比较上一个时间周期中已交付并验收的工作总量与已完成的工作估算值，来判断项目进度的当前状态；</li>\n<li>实施回顾性审查（定期审查，记录经验教训），以便纠正与改进过程（如果需要的话）；</li>\n<li>对剩余工作计划（未完项）重新进行优先级排序；</li>\n<li>确定在每段既定的迭代时间（约定的工作周期持续时间，通常是两周或一个月）内可交付成果的生成、核实和验收的速度；</li>\n<li>确定项目进度已经发生变更；</li>\n<li>在变更实际发生时对其进行管理。<br>\n将工作外包时，定期向承包商和供应商了解里程碑的状态更新是确保工作按商定进度计划进行的一种途径，有助于确保进度受控。同时，应执行进度状态评审和巡检，确保承包商报告准确且完整。</li>\n</ul>\n<h3 id=\"6-6-1-控制进度：输入\">6.6.1 控制进度：输入</h3>\n<p>控制进度的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>进度管理计划</li>\n<li>进度基准</li>\n<li>范围基准</li>\n<li>绩效测量基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>项目日历</li>\n<li>项目进度计划</li>\n<li>资源日历</li>\n<li>进度数据</li>\n</ul>\n</li>\n<li>工作绩效数据</li>\n<li>组织过程资产\n<ul>\n<li>现有与进度控制有关的正式和非正式的政策、程序和指南</li>\n<li>进度控制工具</li>\n<li>可用的监督和报告方法</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-6-2-控制进度：工具与技术\">6.6.2 控制进度：工具与技术</h3>\n<p>控制进度需要的工具与技术包括：</p>\n<ul>\n<li>\n<p>数据分析</p>\n<ul>\n<li>挣值分析</li>\n<li>迭代燃尽图：这类图用于追踪迭代未完项中尚待完成的工作。它基于迭代规划中确定的工作，分析与理想燃尽图的偏差。可使用预测趋势线来预测迭代结束时可能出现的偏差，并据此在迭代期间采取合理行动。在燃尽图中，先用对角线表示理想的燃尽情况，再每天画出实际剩余工作，最后基于剩余工作计算出趋势线以预测完成情况。</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174641-20.png\" alt=\"\"></p>\n<ul>\n<li>绩效审查</li>\n<li>趋势分析</li>\n<li>偏差分析</li>\n<li>假设情景分析</li>\n</ul>\n</li>\n<li>\n<p>关键路径法</p>\n</li>\n<li>\n<p>项目管理信息系统</p>\n</li>\n<li>\n<p>资源优化</p>\n</li>\n<li>\n<p>提前量和滞后量</p>\n</li>\n<li>\n<p>进度压缩</p>\n</li>\n</ul>\n<h3 id=\"6-6-3-控制进度：输出\">6.6.3 控制进度：输出</h3>\n<p>控制进度的输出包括：</p>\n<ul>\n<li>工作绩效信息</li>\n<li>进度预测：进度更新即进度预测，指根据已有的信息和知识，对项目未来的情况和事件进行的估算或预计。随着项目执行，应该基于工作绩效信息，更新和重新发布预测。</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>进度管理计划</li>\n<li>进度基准</li>\n<li>成本基准</li>\n<li>绩效测量基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>估算依据</li>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>资源日历</li>\n<li>风险登记册</li>\n<li>进度数据</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"7-项目成本管理\">7.项目成本管理</h2>\n<p>项目成本管理包括为使项目在批准的预算内完成而对成本进行规划、估算、预算、融资、筹资、管理和控制的各个过程，从而确保项目在批准的预算内完工。项目成本管理过程包括：</p>\n<p><strong>7.1 规划成本管理</strong> — 确定如何估算、预算、管理、监督和控制项目成本的过程。</p>\n<p><strong>7.2 估算成本</strong> — 对完成项目活动所需货币资源进行近似估算的过程。</p>\n<p><strong>7.3 制定预算</strong> — 汇总所有单个活动或工作包的估算成本，建立一个经批准的成本基准的过程。</p>\n<p><strong>7.4 控制成本</strong> — 监督项目状态，以更新项目成本和管理成本基准变更的过程。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174804.png\" alt=\"\"></p>\n<p><strong>项目成本管理的核心概念</strong></p>\n<p><strong>项目成本管理重点关注完成项目活动所需资源的成本，但同时也应考虑项目决策对项目产品、服务或成果的使用成本、维护成本和支持成本的影响</strong>。例如，限制设计审查的次数可降低项目成本，但可能增加由此带来的产品运营成本。</p>\n<p>成本管理的另一个方面是认识到不同的相关方会在不同的时间，用不同的方法测算项目成本。例如，对于某采购品，可在做出采购决策、下达订单、实际交货、实际成本发生或进行项目会计记账时，测算其成本。在很多组织中，预测和分析项目产品的财务效益是在项目之外进行的，但对于有些项目，如固定资产投资项目，可在项目成本管理中进行这项预测和分析工作。在这种情况下，项目成本管理还需使用其他过程和许多通用财务管理技术，如投资回报率分析、现金流贴现分析和投资回收期分析等。</p>\n<p><strong>裁剪考虑因素</strong></p>\n<p>由于每个项目都是独特的，项目经理因此可能需要裁剪项目成本管理过程。裁剪时应考虑的因素包括（但不限于）：</p>\n<ul>\n<li><strong>知识管理</strong>。组织是否拥有易于使用的、正式的知识管理体系和财务数据库，并要求项目经理使用</li>\n<li><strong>估算和预算</strong>。组织是否拥有正式或非正式的，与成本估算和预算相关的政策、程序和指南</li>\n<li><strong>挣值管理</strong>。组织是否采用挣值管理来管理项目</li>\n<li><strong>敏捷方法的使用</strong>。组织是否采用敏捷方法管理项目？这对成本估算有什么影响</li>\n<li><strong>治理</strong>。组织是否拥有正式或非正式的审计和治理政策、程序和指南</li>\n</ul>\n<p><strong>关于敏捷/适应型环境的考虑因素</strong></p>\n<p>对易变性高、范围并未完全明确、经常发生变更的项目，详细的成本计算可能没有多大帮助。在这种情况下，可以采用轻量级估算方法快速生成对项目人力成本的高层级预测，在出现变更时容易调整预测；而详细的估算适用于采用准时制的短期规划。</p>\n<p>如果易变的项目也遵循严格的预算，通常需要更频繁地更改范围和进度计划，以始终保持在成本制约因素之内。</p>\n<h2 id=\"7-1-规划成本管理\">7.1 规划成本管理</h2>\n<p>规划成本管理是确定如何估算、预算、管理、监督和控制项目的过程。本过程的主要作用是，在整个项目期间为如何管理项目成本提供指南和方向。本过程仅开展一次或仅在项目的预定义点开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174804-1.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174804-2.png\" alt=\"\"></p>\n<p>应该在项目规划阶段的早期就对成本管理工作进行规划，建立各成本管理过程的基本框架，以确保各过程的有效性和协调性。</p>\n<h3 id=\"7-1-1-规划成本管理：输入\">7.1.1 规划成本管理：输入</h3>\n<p>规划成本管理的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划\n<ul>\n<li>进度管理计划</li>\n<li>风险管理计划</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>能够影响成本管理的组织文化和组织结构</li>\n<li>市场条件，决定着在当地及全球市场上可获取哪些产品、服务和成果</li>\n<li>货币汇率，用于换算发生在多个国家的项目成本</li>\n<li>发布的商业信息</li>\n<li>项目管理信息系统</li>\n<li>不同地区的生产率差异</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>财务控制程序</li>\n<li>历史信息和经验教训知识库</li>\n<li>财务数据库</li>\n<li>现有的正式和非正式的与成本估算和预算有关的政策、程序和指南</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"7-1-2-规划成本管理：工具与技术\">7.1.2 规划成本管理：工具与技术</h3>\n<p>规划成本管理需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>以往类似项目</li>\n<li>来自行业、学科和应用领域的信息</li>\n<li>成本估算和预算</li>\n<li>挣值管理</li>\n</ul>\n</li>\n<li>数据分析</li>\n<li>会议</li>\n</ul>\n<h3 id=\"7-1-3-规划成本管理：输出\">7.1.3 规划成本管理：输出</h3>\n<p>规划成本管理的输出包括：</p>\n<ul>\n<li><strong>成本管理计划</strong>：成本管理计划是项目管理计划的组成部分，描述将如何规划、安排和控制项目成本。成本管理过程及其工具与技术应记录在成本管理计划中。例如，在成本管理计划中规定：\n<ul>\n<li><strong>计量单位</strong>。需要规定每种资源的计量单位，例如用于测量时间的人时数、人天数或周数，用于计量数量的米、升、吨、千米或立方码，或者用货币表示的总价。</li>\n<li><strong>精确度</strong>。根据活动范围和项目规模，设定成本估算向上或向下取整的程度（例如 995.59 美元取整为 1,000 美元）。</li>\n<li><strong>准确度</strong>。为活动成本估算规定一个可接受的区间（如 ±10%），其中可能包括一定数量的应急储备。</li>\n<li><strong>组织程序链接</strong>。工作分解结构（见 5.4 节）为成本管理计划提供了框架，以便据此规范地开展</li>\n<li><strong>成本估算、预算和控制</strong>。在项目成本核算中使用的 WBS 组成部分，称为控制账户（CA），每个控制账户都有唯一的编码或账号，直接与执行组织的会计制度相联系。</li>\n<li><strong>控制临界值</strong>。可能需要规定偏差临界值，用于监督成本绩效。它是在需要采取某种措施前，允许出现的最大差异，通常用偏离基准计划的百分数来表示。</li>\n<li><strong>绩效测量规则</strong>。需要规定用于绩效测量的挣值管理（EVM）规则。例如，成本管理计划应该：\n<ul>\n<li>定义 WBS 中用于绩效测量的控制账户；</li>\n<li>确定拟用的 EVM 技术（如加权里程碑法、固定公式法、完成百分比法等）；</li>\n<li>规定跟踪方法，以及用于计算项目完工估算（EAC）的 EVM 公式，该公式计算出的结果可用于验证通过自下而上方法得出的完工估算。</li>\n</ul>\n</li>\n<li>报告格式。需要规定各种成本报告的格式和编制频率。</li>\n<li>其他细节。关于成本管理活动的其他细节包括（但不限于）：\n<ul>\n<li>对战略筹资方案的说明；</li>\n<li>处理汇率波动的程序；</li>\n<li>记录项目成本的程序。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"7-2-估算成本\">7.2 估算成本</h2>\n<p>估算成本是对完成项目工作所需资源成本进行近似估算的过程。本过程的主要作用是，确定项目所需的资金。本过程应根据需要在整个项目期间定期开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174804-3.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174804-4.png\" alt=\"\"></p>\n<p>成本估算是对完成活动所需资源的可能成本的量化评估，是在某特定时点，根据已知信息所做出的成本预测。在估算成本时，需要识别和分析可用于启动与完成项目的备选成本方案；需要权衡备选成本方案并考虑风险，如比较自制成本与外购成本、购买成本与租赁成本及多种资源共享方案，以优化项目成本。</p>\n<p>通常用某种货币单位（如美元、欧元、日元等）进行成本估算，但有时也可采用其他计量单位，如人时数或人天数，以消除通货膨胀的影响，便于成本比较。</p>\n<h3 id=\"7-2-1-估算成本：输入\">7.2.1 估算成本：输入</h3>\n<p>估算成本的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>成本管理计划</li>\n<li>质量管理计划</li>\n<li>范围基准\n<ul>\n<li>项目范围说明书</li>\n<li>工作分解结构</li>\n<li>WBS词典</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>资源需求</li>\n<li>风险登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>市场条件</li>\n<li>发布的商业信息</li>\n<li>汇率和通货膨胀率</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>成本估算政策</li>\n<li>成本估算模板</li>\n<li>历史信息和经验教训知识库</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"7-2-2-估算成本：工具与技术\">7.2.2 估算成本：工具与技术</h3>\n<p>估算成本需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>以往类似项目</li>\n<li>来自行业、学科和应用领域的信息</li>\n<li>成本估算方法</li>\n</ul>\n</li>\n<li>类比估算</li>\n<li>参数估算</li>\n<li>自下而上估算</li>\n<li>三点估算\n<ul>\n<li><strong>最可能成本（cM）</strong>。对所需进行的工作和相关费用进行比较现实的估算，所得到的活动成本。</li>\n<li><strong>最乐观成本（cO）</strong>。基于活动的最好情况所得到的成本。</li>\n<li><strong>最悲观成本（cP）</strong>。基于活动的最差情况所得到的成本。</li>\n<li><strong>三角分布</strong>。cE = (cO + cM + cP) / 3</li>\n<li><strong>贝塔分布</strong>。cE = (cO + 4cM + cP) / 6</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>备选方案分析</li>\n<li>储备分析：为应对成本的不确定性，成本估算中可以包括应急储备（有时称为“应急费用”）。应急储备是包含在成本基准内的一部分预算，用来应对已识别的风险；应急储备往往被看作预算中用来应对会影响项目的“已 知 — 未知”风险的那一部分。</li>\n<li>质量成本</li>\n</ul>\n</li>\n<li>项目管理信息系统</li>\n<li>决策</li>\n</ul>\n<h3 id=\"7-2-3-估算成本：输出\">7.2.3 估算成本：输出</h3>\n<p>估算成本的输出包括：</p>\n<ul>\n<li>成本估算：成本估算包括对完成项目工作可能需要的成本、应对已识别风险的应急储备，以及应对计划外工作的管理储备的量化估算。</li>\n<li>估算依据\n<ul>\n<li>关于估算依据的文件（如估算是如何编制的）；</li>\n<li>关于全部假设条件的文件；</li>\n<li>关于各种已知制约因素的文件；</li>\n<li>有关已识别的、在估算成本时应考虑的风险的文件；</li>\n<li>对估算区间的说明（如“10,000美元 ±10%”就说明了预期成本的所在区间）；</li>\n<li>对最终估算的置信水平的说明。</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"7-3-制定预算\">7.3 制定预算</h2>\n<p>制定预算是汇总所有单个活动或工作包的估算成本，建立一个经批准的成本基准的过程。本过程的主要作用是，确定可据以监督和控制项目绩效的成本基准。本过程仅开展一次或仅在项目的预定义点开展。</p>\n<p>项目预算包括经批准用于执行项目的全部资金，而成本基准是经过批准且按时间段分配的项目语速那，包括应急储备，但不包括管理储备。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174804-5.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174804-6.png\" alt=\"\"></p>\n<h3 id=\"7-3-1-制定预算：输入\">7.3.1 制定预算：输入</h3>\n<p>制定预算的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>成本管理计划</li>\n<li>资源管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>估算依据</li>\n<li>成本估算</li>\n<li>项目进度计划</li>\n<li>风险登记册</li>\n</ul>\n</li>\n<li>商业文件\n<ul>\n<li>商业论证</li>\n<li>效益管理计划</li>\n</ul>\n</li>\n<li>协议</li>\n<li>事业环境因素</li>\n<li>组织过程资产\n<ul>\n<li>现有的正式和非正式的与成本预算有关的政策、程序和指南</li>\n<li>历史信息和经验教训知识库</li>\n<li>成本预算工具</li>\n<li>报告方法</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"7-3-2-制定预算：工具与技术\">7.3.2 制定预算：工具与技术</h3>\n<p>制定预算需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>以往类似项目</li>\n<li>来自行业、学科和应用领域的信息</li>\n<li>财务原则</li>\n<li>黄金需求和来源</li>\n</ul>\n</li>\n<li>成本汇总</li>\n<li>数据分析</li>\n<li>历史信息审核：审核历史信息有助于进行参数估算或类比估算。历史信息可包括各种项目特征（参数），它们用于建立数学模型预测项目总成本。</li>\n<li>资金限制平衡</li>\n<li>融资</li>\n</ul>\n<h3 id=\"7-3-3-制定预算：输出\">7.3.3 制定预算：输出</h3>\n<p>制定预算的输出包括：</p>\n<ul>\n<li>\n<p>成本基准</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174804-7.png\" alt=\"\"></p>\n</li>\n<li>\n<p>项目资金需求</p>\n</li>\n<li>\n<p>项目文件更新</p>\n<ul>\n<li>成本估算</li>\n<li>项目进度计划</li>\n<li>风险登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"7-4-控制成本\">7.4 控制成本</h2>\n<p>控制成本是监督项目状态，以更新项目成本和管理成本基准变更的过程。本过程的主要作用是，在整个项目期间保持对成本基准的维护。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174804-8.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174804-9.png\" alt=\"\"></p>\n<p>项目成本控制包括：</p>\n<ul>\n<li>对造成成本基准变更的因素施加影响；</li>\n<li>确保所有变更请求都得到及时处理；</li>\n<li>更实际发生时，管理这些变更；</li>\n<li>确保成本支出不超过批准的资金限额，既不超出按时段、按 WBS 组件、按活动分配的限额，也不超出项目总限额；</li>\n<li>监督成本绩效，找出并分析与成本基准间的偏差；</li>\n<li>对照资金支出，监督工作绩效；</li>\n<li>防止在成本或资源使用报告中出现未经批准的变更；</li>\n<li>向相关方报告所有经批准的变更及其相关成本；</li>\n<li>设法把预期的成本超支控制在可接受的范围内。</li>\n</ul>\n<h3 id=\"7-4-1-控制成本：输入\">7.4.1 控制成本：输入</h3>\n<p>控制成本的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>成本管理计划</li>\n<li>成本基准</li>\n<li>绩效测量基准</li>\n</ul>\n</li>\n<li>项目文件</li>\n<li>项目资金需求</li>\n<li>工作绩效数据</li>\n<li>组织过程资产\n<ul>\n<li>现有的正式的和非正式的与成本控制相关的政策、程序和指南</li>\n<li>成本控制工具</li>\n<li>可用的监督和报告方法</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"7-4-2-控制成本：工具与技术\">7.4.2 控制成本：工具与技术</h3>\n<p>控制成本需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>偏差分析</li>\n<li>挣值分析</li>\n<li>预测</li>\n<li>财务分析</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>\n<p>挣值分析</p>\n<ul>\n<li><strong>计划价值</strong>。计划价值（PV）是为计划工作分配的经批准的预算，它是为完成某活动或工作分解结构 (WBS) 组成部分而准备的一份经批准的预算，不包括管理储备。应该把该预算分配至项目生命周期的各个阶段；在某个给定的时间点，计划价值代表着应该已经完成的工作。PV的总和有时被称为绩效测量基准（PMB），项目的总计划价值又被称为完工预算（BAC）。</li>\n<li><strong>挣值</strong>。挣值（EV）是对已完成工作的测量值，用该工作的批准预算来表示，是已完成工作的经批准的预算。EV 的计算应该与 PMB 相对应，且所得的 EV 值不得大于相应组件的 PV 总预算。EV 常用于计算项目的完成百分比，应该为每个 WBS 组件规定进展测量准则，用于考核正在实施的工作。项目经理既要监测 EV 的增量，以判断当前的状态，又要监测 EV 的累计值，以判断长期的绩效趋势。</li>\n<li><strong>实际成</strong>本。实际成本（AC）是在给定时段内，执行某活动而实际发生的成本，是为完成与 EV相对应的工作而发生的总成本。AC 的计算方法必须与 PV 和 EV 的计算方法保持一致（例如，都只计算直接小时数，都只计算直接成本，或都计算包含间接成本在内的全部成本）。AC 没有上限，为实现 EV 所花费的任何成本都要计算进去。</li>\n</ul>\n</li>\n<li>\n<p>偏差分析：在 EVM 中，偏差分析用以解释成本偏差（CV = EV – AC）、进度偏差（SV = EV – PV）和完工偏差（VAC = BAC – EAC）的原因、影响和纠正措施。成本和进度偏差是最需要分析的两种偏差。对于不使用正规挣值分析的项目，可开展类似的偏差分析，通过比较计划成本和实际成本，来识别成本基准与实际项目绩效之间的差异；然后可以实施进一步的分析，以判定偏离进度基准的原因和程度，并决定是否需要采取纠正或预防措施。可通过成本绩效测量来评价偏离原始成本基准的程度。</p>\n<ul>\n<li><strong>进度偏差</strong>。进度偏差（SV）是测量进度绩效的一种指标，表示为挣值与计划价值之差。它是指在某个给定的时点，项目提前或落后的进度，它是测量项目进度绩效的一种指标，等于挣值（EV）减去计划价值（PV）。EVA 进度偏差是一种有用的指标，可表明项目进度是落后还是提前于进度基准。当项目完工时，全部的计划价值都将实现（即成为挣值），所以 EVA 进度偏差最终将等于零。最好把进度偏差与关键路径法 (CPM) 和风险管理一起使用。公式：SV = EV – PV。</li>\n<li><strong>成本偏差</strong>。成本偏差（CV）是在某个给定时点的预算亏空或盈余量，表示为挣值与实际成本之差。它是测量项目成本绩效的一种指标，等于挣值（EV）减去实际成本（AC）。项目结束时的成本偏差，就是完工预算（BAC）与实际成本之间的差值。由于成本偏差指明了实际绩效与成本支出之间的关系，所以非常重要。负的 CV 一般都是难以挽回的。公式：CV = EV – AC。</li>\n<li><strong>进度绩效指数</strong>。进度绩效指数（SPI）是测量进度效率的一种指标，表示为挣值与计划价值之比，反映了项目团队完成工作的效率。有时与成本绩效指数（CPI）一起使用，以预测项目的最终完工估算。当 SPI 小于 1.0 时，说明已完成的工作量未达到计划要求；当 SPI 大于1.0 时，则说明已完成的工作量超过计划。由于 SPI 测量的是项目的总工作量，所以还需要对关键路径上的绩效进行单独分析，以确认项目是否将比计划完成日期提前或推迟完工。SPI等于 EV 与 PV 的比值。公式：SPI = EV/PV。</li>\n<li><strong>成本绩效指数</strong>。成本绩效指数（CPI）是测量预算资源的成本效率的一种指标，表示为挣值与实际成本之比。它是最关键的 EVA 指标，用来测量已完成工作的成本效率。当 CPI 小于 1.0时，说明已完成工作的成本超支；当 CPI 大于 1.0 时，则说明到目前为止成本有结余。CPI 等于 EV 与 AC 的比值。公式：CPI = EV/AC。</li>\n</ul>\n</li>\n<li>\n<p>趋势分析：趋势分析旨在审查项目绩效随时间的变化情况，以判断绩效是正在改善还是正在恶化。图形分析技术有助于了解截至目前的绩效情况，并把发展趋势与未来的绩效目标进行比较，如 BAC 与EAC、预测完工日期与计划完工日期的比较。</p>\n<ul>\n<li><strong>图表</strong>。在挣值分析中，对计划价值、挣值和实际成本这三个参数，既可以分阶段（通常以周或月为单位）进行监督和报告，也可以针对累计值进行监督和报告。</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174804-10.png\" alt=\"\"></p>\n<ul>\n<li><strong>预测</strong>。随着项目进展，项目团队可根据项目绩效，对完工估算（EAC）进行预测，预测的结果可能与完工预算（BAC）存在差异。如果 BAC 已明显不再可行，则项目经理应考虑对EAC进行预测。预测EAC是根据当前掌握的绩效信息和其他知识，预计项目未来的情况和事件。预测要根据项目执行过程中所提供的工作绩效数据（见 4.3.3.2 节）来产生、更新和重新发布。工作绩效信息包含项目过去的绩效，以及可能在未来对项目产生影响的任何信息。在计算 EAC 时，通常用已完成工作的实际成本，加上剩余工作的完工尚需估算（ETC）。项目团队要根据已有的经验，考虑实施 ETC 工作可能遇到的各种情况。把挣值分析与手工预测 EAC 方法联合起来使用，效果会更佳。由项目经理和项目团队手工进行的自下而上汇总方法，就是一种最普通的 EAC 预测方法。项目经理所进行的自下而上的 EAC 估算，就是以已完成工作的实际成本为基础，并根据已积累的经验来为剩余项目工作编制一个新估算。公式：EAC = AC + 自下而上的 ETC。\n<ul>\n<li><strong>假设将按预算单价完成 ETC 工作</strong>。这种方法承认以实际成本表示的累计实际项目绩效（不论好坏），并预计未来的全部 ETC 工作都将按预算单价完成。如果目前的实际绩效不好，则只有在进行项目风险分析并取得有力证据后，才能做出“未来绩效将会改进”的假设。公式：EAC = AC +（BAC – EV）。</li>\n<li><strong>假设以当前 CPI 完成 ETC 工作</strong>。这种方法假设项目将按截至目前的情况继续进行，即 ETC工作将按项目截至目前的累计成本绩效指数（CPI）实施。公式：EAC = BAC/CPI。</li>\n<li><strong>假设 SPI 与 CPI 将同时影响 ETC 工作</strong>。在这种预测中，需要计算一个由成本绩效指数与进度绩效指数综合决定的效率指标，并假设 ETC 工作将按该效率指标完成。如果项目进度对 ETC 有重要影响，这种方法最有效。使用这种方法时，还可以根据项目经理的判断，分别给 CPI 和 SPI 赋予不同的权重，如 80/20、50/50 或其他比率。公式：EAC =AC +［（BAC – EV）/（CPI x SPI）］。</li>\n</ul>\n</li>\n<li>储备分析：在控制成本过程中，可以采用储备分析来监督项目中应急储备和管理储备的使用情况，从而判断是否还需要这些储备，或者是否需要增加额外的储备。随着项目工作的进展，这些储备可能已按计划用于支付风险或其他应急情况的成本；反之，如果抓住机会节约了成本，节约下来的资金可能会增加到应急储备中，或作为盈利（利润）从项目中剥离。</li>\n</ul>\n</li>\n<li>\n<p>项目管理信息系统</p>\n</li>\n<li>\n<p>完工尚需绩效指数</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>完工尚需绩效指数(TCPI)</strong> 是一种为了实现特定的管理目标，剩余资源的使用必须达到的成本绩效指标，是完成剩余工作所需的成本与剩余预算之比。TCPI 是指为了实现具体的管理目标（如BAC 或 EAC），剩余工作的实施必须达到的成本绩效指标。如果 BAC 已明显不再可行，则项目经理应考虑使用预测的 EAC。经过批准后，就用 EAC 取代 BAC。基于 BAC 的 TCPI 公式：TCPI =（BAC –EV）/（BAC – AC）。</p>\n<p>TCPI 的概念可用图 7-13 表示。其计算公式在图的左下角，用剩余工作（BAC 减去 EV）除以剩余资金（可以是 BAC 减去 AC，或 EAC 减去 AC）。</p>\n<p>如果累计 CPI 低于基准（如图 7-13 所示），那么项目的全部剩余工作都应立即按TCPI（BAC）（图7-13 中最高的那条线）执行，才能确保实际总成本不超过批准的 BAC。至于所要求的这种绩效水平是否可行，就需要综合考虑多种因素（包括风险、项目剩余时间和技术绩效）后才能判断；如果不可行，就需要把项目未来所需的绩效水平调整为如 TCPI（EAC）线所示。基于 EAC 的 TCPI 公式：TCPI =（BAC – EV）/（EAC – AC）。表 7-1 列出了 EVM 的计算公式。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174804-11.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417174804-12.png\" alt=\"\"></p>\n<h3 id=\"7-4-3-控制成本：输出\">7.4.3 控制成本：输出</h3>\n<p>控制成本的输出包括：</p>\n<ul>\n<li>工作绩效信息</li>\n<li>成本预测</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>成本管理计划</li>\n<li>成本基准</li>\n<li>绩效测量基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>估算依据</li>\n<li>成本估算</li>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"8-项目质量管理\">8.项目质量管理</h2>\n<p>项目质量管理包括把组织的质量政策应用于规划、管理、控制项目和产品质量要求，以满足相关方目标的各个过程。此外，项目质量管理以执行组织的名义支持过程的持续改进。</p>\n<p>项目质量管理过程包括：</p>\n<p><strong>8.1 规划质量管理</strong> — 识别项目及其可交付成果的质量要求和/或标准，并书面描述项目将如何证明符合质量要求和/或标准的过程。</p>\n<p><strong>8.2 管理质量</strong> — 把组织的质量政策应用于项目，并将质量管理计划转化为可执行的质量活动的过程。</p>\n<p><strong>8.3 控制质量</strong> — 为了评估绩效，确保项目输出完整、正确，并满足客户期望，而监督和记录质量管理活动执行结果的过程。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417175001.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417175001-1.png\" alt=\"\"></p>\n<p><strong>项目质量管理的核心概念</strong></p>\n<p>项目质量管理需要兼顾项目管理和项目可交付成果两个方面，它适用于所有项目，无论项目的可交付成果具有何种特性。质量的测量方法和技术则需专门针对项目所产生的可交付成果类型而定。</p>\n<p>“质量”和“等级”不是相同的概念。质量作为实现的性能或成果，是“一系列内在特性满足要求的程度”。等级作为设计意图，是对用途相同但技术特性不同的交付成果的级别分类。质量水平未达到质量要求肯定是个问题，而低等级产品不一定是个问题。</p>\n<p>预防胜于检查。最好将质量设计到可交付成果中，而不是在检查时发现质量问题。预防错误的成本通常远低于在检查或使用中发现并纠正错误的成本。</p>\n<p>按有效性递增排列的五种质量管理水平如下：</p>\n<ul>\n<li>通常，代价最大的方法是让客户发现缺陷。这种方法可能会导致担保问题、召回、商誉受损和返工成本。</li>\n<li>控制质量过程包括先检测和纠正缺陷，再将可交付成果发送给客户。该过程会带来相关成本，主要是评估成本和内部失败成本。</li>\n<li>通过质量保证检查并纠正过程本身，而不仅仅是特殊缺陷。</li>\n<li>将质量融入项目和产品的规划和设计中。</li>\n<li>在整个组织内创建一种关注并致力于实现过程和产品质量的文化。</li>\n</ul>\n<p><strong>项目质量管理的趋势和新兴实践</strong></p>\n<p>现代质量管理方法力求缩小偏差，交付满足既定相关方要求的成果。项目质量管理的趋势包括（但不限于）：</p>\n<ul>\n<li><strong>客户满意</strong>。了解、评估、定义和管理要求，以便满足客户的期望。这就需要把“符合要求”（确保项目产出预定的成果）和“适合使用”（产品或服务必须满足实际需求）结合起来。在敏捷环境中，应该让相关方参与团队工作，确保在整个项目期间始终做到客户满意。</li>\n<li><strong>持续改进</strong>。由休哈特提出并经戴明完善的“计划 — 实施 — 检查 — 行动 (PDCA)”循环是质量改进的基础。另外，诸如全面质量管理（TQM）、六西格玛和精益六西格玛等质量改进举措也可以提高项目管理的质量以及最终产品、服务或成果的质量。</li>\n<li><strong>管理层的责任</strong>。项目的成功需要项目团队全体成员的参与。管理层在其质量职责内，肩负着为项目提供具有足够能力的资源的相应责任。</li>\n<li><strong>与供应商的互利合作关系</strong>。组织与其供应商相互依赖。相对传统的供应商管理而言，与供应商建立合作伙伴关系对组织和供应商都更加有益。组织应着眼于长期关系而不是短期利益。互利合作关系增强了组织和供应商互相为对方创造价值的能力，推动他们共同实现客户的需求和期望，并优化成本和资源。</li>\n</ul>\n<p><strong>裁剪考虑因素</strong></p>\n<ul>\n<li>政策合规与审计</li>\n<li>标准与法规合规性</li>\n<li>持续改进</li>\n<li>相关方参与</li>\n</ul>\n<p><strong>在敏捷或适应性环境中需要考虑的因素</strong></p>\n<p>为引导变更，敏捷方法要求在整个项目期间频繁开展质量与审核步骤，而不是在面临项目结束时才执行。</p>\n<p>循环回顾，定期检查质量过程的效果；寻找问题的根本原因，然后建议实施新的质量改进方法；后续回顾会议评估试验过程，确定新方法是否可行，是否应继续使用，是否应该调整，或者直接弃用。</p>\n<p>为促进频繁的増量交付，敏捷方法关注于小批量工作，纳入尽可能多的项目可交付成果的要素。小批量系统的目的是在项目生命周期早期（整体变更成本较低）发现不一致和质量问题。</p>\n<h2 id=\"8-1-规划质量管理\">8.1 规划质量管理</h2>\n<p>规划质量管理是识别项目及其可交付成果的质量要求和（或）标准，并书面描述项目将如何证明符合质量要求或标准的过程。本过程的主要作用是，为在整个项目期间如何管理和核实质量提供指南和方向。本过程仅开展一次或仅在项目的预定义点开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417175001-2.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417175001-3.png\" alt=\"\"></p>\n<p>质量规划应与其他规划过程并行开展。例如，为满足既定的质量标准而对可交付成果提出变更，可能需要调整成本或进度计划，并就该变更对相关计划的影响进行详细风险分析。</p>\n<h3 id=\"8-1-1-规划质量管理：输入\">8.1.1 规划质量管理：输入</h3>\n<p>规划质量管理的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划\n<ul>\n<li>需求管理计划</li>\n<li>风险管理计划</li>\n<li>相关方参与计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>政府法规</li>\n<li>特定应用领域的相关规则、标准和指南</li>\n<li>地理分布</li>\n<li>组织结构</li>\n<li>市场条件</li>\n<li>项目或可交付成果的工作条件或运行条件</li>\n<li>文化观念</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>组织的质量管理体系，包括政策、程序及指南</li>\n<li>质量模板，例如核查表、跟踪矩阵及其他</li>\n<li>历史数据库和经验教训知识库</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"8-1-2-规划质量管理：工具与技术\">8.1.2 规划质量管理：工具与技术</h3>\n<p>规划质量管理需要的工具与技术包括：</p>\n<ul>\n<li>\n<p>专家判断</p>\n<ul>\n<li>质量保证</li>\n<li>质量控制</li>\n<li>质量测量结果</li>\n<li>质量改进</li>\n<li>质量体系</li>\n</ul>\n</li>\n<li>\n<p>数据收集</p>\n<ul>\n<li><strong>标杆对照</strong>：标杆对照是将实际或计划的项目实践或项目的质量标准与可比项目的实践或标准进行比较，以便识别最佳实践，形成改进意见，并为绩效考核提供依据。作为标杆的项目可以来自执行组织内部或外部，或者来自同一应用领域或其他应用领域。标杆对照也允许用不同应用领域或行业的项目做类比。</li>\n<li>头脑风暴</li>\n<li>访谈</li>\n</ul>\n</li>\n<li>\n<p>数据分析</p>\n<ul>\n<li><strong>成本效益分析</strong>：成本效益分析是用来估算备选方案优势和劣势的财务分析工具，以确定可以创造最佳效益的备选方案。成本效益分析可帮助项目经理确定规划的质量活动是否具有成本有效性。达到质量要求的主要效益包括减少返工、提高生产率、降低成本、提升相关方满意度及提升赢利能力。对每个质量活动进行成本效益分析，就是要比较其可能成本与预期效益。</li>\n<li><strong>质量成本</strong>\n<ul>\n<li><strong>预防成本</strong>：预防特定项目的产品、可交付成果或服务质量低劣所带来的相关成本；</li>\n<li><strong>评估成本</strong>：评估、测量、审计和测试特定项目的产品、可交付成果和服务所带来的相关成本；</li>\n<li><strong>失败成本（内部/外部）</strong>：因产品、可交付成果或服务与相关方需求或期望不一致而导致的相关成本。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417175001-4.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>决策</p>\n</li>\n<li>\n<p>数据表现</p>\n<ul>\n<li>\n<p>流程图</p>\n</li>\n<li>\n<p>逻辑数据模型</p>\n</li>\n<li>\n<p>矩阵图</p>\n</li>\n<li>\n<p>思维导图</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417175001-5.png\" alt=\"\"></p>\n</li>\n</ul>\n</li>\n<li>\n<p>测试与检查规划</p>\n</li>\n<li>\n<p>会议</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"8-1-3-规划质量管理：输出\">8.1.3 规划质量管理：输出</h3>\n<ul>\n<li>规划质量管理的输出包括：质量管理计划：质量管理计划是项目管理计划的组成部分，描述如何实施适用的政策、程序和指南以实现质量目标。它描述了项目管理团队为实现一系列项目质量管理目标所需的活动和资源。质量管理计划可以是正式或非正式的，非常详细或高度概括的，其风格与详细程度取决于项目的具体需要。应该在项目早期就对质量管理计划进行评审，以确保决策是基于准确信息的。这样做的好处是，更加关注项目的价值定位，降低因返工而造成的成本超支金额和进度延误次数。\n<ul>\n<li>项目将采用的质量标准</li>\n<li>项目的质量目标</li>\n<li>质量角色与职责</li>\n<li>需要质量审查的项目可交付成果和过程</li>\n<li>为项目规划的质量控制和质量管理活动</li>\n<li>项目将使用的质量工具</li>\n<li>与项目有关的主要程序，例如处理不合符要求的情况、纠正措施程序，以及持续改进程序。</li>\n</ul>\n</li>\n<li>质量测量指标：质量测量指标专用于描述项目或产品属性，以及控制质量过程将如何验证质量符合测量指标程度。质量测量指标的例子包括按时完成的任务的百分比、以 CPI 测量的成本绩效、故障率、天发现的缺陷数量、每月总停机时间、每个代码行的错误、客户满意度分数，以及测试计划所涵盖的需求的百分比（即测试覆盖度）。</li>\n<li>项目管理计划更新\n<ul>\n<li>风险管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>经验教训登记册</li>\n<li>需求跟踪矩阵</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"8-2-管理质量\">8.2 管理质量</h2>\n<p>管理质量是把组织的质量政策用于项目，并将质量管理计划转化为可执行的质量活动的过程。本过程的主要作用是，提高实现质量目标的可能性，以及识别无效过程和导致质量低劣的原因。管理质量使用控制质量过程的数据和结果向相关方展示项目的总体质量状态。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417175001-6.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417175001-7.png\" alt=\"\"></p>\n<p>管理质量过程执行在项目质量管理计划中所定义的一系列有计划、有系统的行动和过程，有助于：</p>\n<ul>\n<li>通过执行有关产品特定方面的设计准则，设计出最优的成熟产品；</li>\n<li>建立信心，相信通过质量保证工具和技术（如质量审计和故障分析）可以使未来输出在完工时满足特定的需求和期望；</li>\n<li>确保使用质量过程并确保其使用能够满足项目的质量目标；</li>\n<li>提高过程和活动的效率与效果，以获得更好的成果和绩效并提高相关方的满意程度。</li>\n</ul>\n<p>项目经理和项目团队可以通过组织的质量保证部门或其他组织职能执行某些管理质量活动，例如故障分析、实验设计和质量改进。质量保证部门在质量工具和技术的使用方面通常拥有跨组织经验，是良好的项目资源。管理质量被认为是所有人的共同职责，包括项目经理、项目团队、项目发起人、执行组织的管理层，甚至是客户。</p>\n<h3 id=\"8-2-1-管理质量：输入\">8.2.1 管理质量：输入</h3>\n<p>管理质量的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>质量控制测量结果</li>\n<li>质量测量指标</li>\n<li>风险报告</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>包括政策、程序及指南的组织质量管理体系</li>\n<li>质量模板，例如核查表、跟踪矩阵、测试计划、测试文件及其他模板</li>\n<li>以往审计的结果</li>\n<li>包含类似项目信息的经验教训知识库</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"8-2-2-管理质量：工具与技术\">8.2.2 管理质量：工具与技术</h3>\n<p>管理质量需要的工具与技术包括：</p>\n<ul>\n<li>数据收集\n<ul>\n<li>核对单</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>备选方案分析</li>\n<li>文件分析</li>\n<li>过程分析</li>\n<li>根本原因分析（RCA）</li>\n</ul>\n</li>\n<li>决策</li>\n<li>数据表现\n<ul>\n<li>亲和图</li>\n<li>因果图</li>\n<li>流程图</li>\n<li>直方图</li>\n<li>矩阵图</li>\n<li>散点图</li>\n</ul>\n</li>\n<li><strong>审计</strong>：审计是用于确定项目活动是否遵循了组织和项目的政策、过程与程序的一种结构化且独立的过程。质量审计通常由项目外部的团队开展，如组织内部审计部门、项目管理办公室 (PMO) 或组织外部的审计师。质量审计目标可能包括（但不限于）：\n<ul>\n<li>识别全部正在实施的良好及最佳实践；</li>\n<li>识别所有违规做法、差距及不足；</li>\n<li>分享所在组织和/或行业中类似项目的良好实践；</li>\n<li>积极、主动地提供协助，以改进过程的执行，从而帮助团队提高生产效率；</li>\n<li>强调每次审计都应对组织经验教训知识库的积累做出贡献。</li>\n</ul>\n</li>\n<li>面向X的设计：面向 X 的设计 (DfX) 是产品设计期间可采用的一系列技术指南，旨在优化设计的特定方面，可以控制或提高产品最终特性。DfX 中的“X”可以是产品开发的不同方面，例如可靠性、调配、装配、制造、成本、服务、可用性、安全性和质量。使用 DfX 可以降低成本、改进质量、提高绩效和客户满意度。</li>\n<li>问题解决：问题解决是指找到解决问题或应对挑战的解决方案。它包括收集其他信息、具有批判性思维的、创造性的、量化的和/或逻辑性的解决方法。</li>\n<li>质量改进方法：质量改进的开展，可基于质量控制过程的发现和建议、质量审计的发现，或管理质量过程的问题解决。计划 — 实施 — 检查 — 行动和六西格玛是最常用于分析和评估改进机会的两种质量改进工具。</li>\n</ul>\n<h3 id=\"8-2-3-管理质量：输出\">8.2.3 管理质量：输出</h3>\n<p>管理质量的输出包括：</p>\n<ul>\n<li>质量报告：质量报告可能是图形、数据或定性文件，其中包含的信息可帮助其他过程和部门采取纠正措施，以实现项目质量期望。质量报告的信息可以包含团队上报的全部质量管理问题，针对过程、项目和产品的改善建议，纠正措施建议（包括返工、缺陷/漏洞补救、100% 检查等），以及在控制质量过程中发现的情况的概述。</li>\n<li>测试与评估文件</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>质量管理计划</li>\n<li>范围基准</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"8-3-控制质量\">8.3 控制质量</h2>\n<p>控制质量是为了评估绩效，确保项目输出完整、正确且满足客户期望，而监督和记录质量管理活动执行结果的过程。本过程的主要作用是，核实项目可交付成果和工作已经达到主要相关方的质量要求，可供最终验收。控制质量过程确定项目输出是否达到预期目的，这些输出需要满足所有适用标准、要求、法规和规范。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417175001-8.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417175001-9.png\" alt=\"\"></p>\n<p>控制质量过程的目的是在用户验收和最终交付之前测量产品或服务的完整性、合规性和适用性。本过程通过测量所有步骤、属性和变量，来核实与规划阶段所描述规范的一致性和合规性。</p>\n<h3 id=\"8-3-1-控制质量：输入\">8.3.1 控制质量：输入</h3>\n<p>控制质量的输出包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>质量测量指标</li>\n<li>测试与评估文件</li>\n</ul>\n</li>\n<li>批准的变更请求</li>\n<li>可交付成果</li>\n<li>工作绩效数据</li>\n<li>事业环境因素\n<ul>\n<li>项目管理信息系统</li>\n<li>政府法规</li>\n<li>特定应用领域的相关规则、标准和指南</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>质量标准和政策</li>\n<li>质量模板，例如核查表和核对单等</li>\n<li>问题与缺陷报告程序及沟通政策</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"8-3-2-控制质量：工具与技术\">8.3.2 控制质量：工具与技术</h3>\n<p>控制质量需要的工具与技术包括：</p>\n<ul>\n<li>数据收集\n<ul>\n<li>核对单</li>\n<li>核查表：核查表，又称计数表，用于合理排列各种事项，以便有效地收集关于潜在质量问题的有用数据。在开展检查以识别缺陷时，用核查表收集属性数据就特别方便，例如关于缺陷数量或后果的数据。</li>\n<li>统计抽样</li>\n<li>问卷调查</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>绩效审查</li>\n<li>根本原因分析（RCA）</li>\n</ul>\n</li>\n<li>检查</li>\n<li>测试/产品评估：测试是一种有组织的、结构化的调查，旨在根据项目需求提供有关被测产品或服务质量的客观信息。测试的目的是找出产品或服务中存在的错误、缺陷、漏洞或其他不合规问题。用于评估各项需求的测试的类型、数量和程度是项目质量计划的一部分，具体取决于项目的性质、时间、预算或其他制约因素。测试可以贯穿于整个项目，可以随着项目的不同组成部分变得可用时进行，也可以在项目结束（即交付最终可交付成果）时进行。早期测试有助于识别不合规问题，帮助减少修补不合规组件的成本。</li>\n<li>数据表现\n<ul>\n<li>因果图</li>\n<li>控制图</li>\n<li>直方图</li>\n<li>散点图</li>\n</ul>\n</li>\n<li>会议\n<ul>\n<li>审查已批准的变更请求</li>\n<li>回顾/经验教训</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"8-3-3-控制质量：输出\">8.3.3 控制质量：输出</h3>\n<p>控制质量的输出包括：</p>\n<ul>\n<li>质量控制测量结果</li>\n<li>核实的可交付成果</li>\n<li>工作绩效信息</li>\n<li>变更请求</li>\n<li>项目管理计划更新</li>\n<li>项目文件更新\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n<li>测试与评估文件</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"9-项目资源管理\">9.项目资源管理</h2>\n<p>项目资源管理包括识别、获取和管理所需资源以成功完成项目的各个过程，这些过程有助于确保项目经理和项目团队在正确的时间和地点使用正确的资源。</p>\n<p>项目资源管理过程包括：</p>\n<p><strong>9.1 规划资源管理</strong> — 定义如何估算、获取、管理和利用实物以及团队项目资源的过程。</p>\n<p><strong>9.2 估算活动资源</strong> — 估算执行项目所需的团队资源，以及材料、设备和用品的类型和数量的过程。</p>\n<p><strong>9.3 获取资源</strong> — 获取项目所需的团队成员、设施、设备、材料、用品和其他资源的过程。</p>\n<p><strong>9.4 建设团队</strong> — 提高工作能力，促进团队成员互动，改善团队整体氛围，以提高项目绩效的过程。</p>\n<p><strong>9.5 管理团队</strong> — 跟踪团队成员工作表现，提供反馈，解决问题并管理团队变更，以优化项目绩效的过程。</p>\n<p><strong>9.6 控制资源</strong> — 确保按计划为项目分配实物资源，以及根据资源使用计划监督资源实际使用情况，并采取必要纠正措施的过程。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181456.png\" alt=\"\"></p>\n<p><strong>项目资源管理的核心概念</strong></p>\n<p>团队资源管理相对于实物资源管理，对项目经理提出了不同的技能和能力要求。实物资源包括设备、材料、设施和基础设施，而团队资源或人员指的是人力资源。项目团队成员可能具备不同的技能，可能是全职或兼职的，可能随项目进展而增加或减少。</p>\n<p>项目团队由承担特定角色和职责的个人组成，他们为实现项目目标而共同努力。项目经理因此应在获取、管理、激励和增强项目团队方面投入适当的努力。尽管项目团队成员被分派了特定的角色和职责，但让他们全员参与项目规划和决策仍是有益的。团队成员参与规划阶段，既可使他们对项目规划工作贡献专业技能，又可以增强他们对项目的责任感。</p>\n<p>作为领导者，项目经理还负责积极培养团队技能和能力，同时提高并保持团队的满意度和积极性，项目经理还应了解并支持符合职业与道德要求的行为，确保所有团队成员都按这些要求行动。</p>\n<p>实物资源管理着眼于以有效和高效的方式，分配和使用成功完成项目所需的实物资源，如材料、设备和用品。为此，组织应当拥有如下数据：（当前和合理的未来的）资源需求、（可以满足这些需求的）资源配置，以及资源供应。</p>\n<p><strong>项目资源管理的趋势和新兴实践</strong></p>\n<p>项目管理风格正在从管理项目的命令和控制结构，转向更加协作和支持性的管理方法，通过将决策权分配给团队成员来提高团队能力。</p>\n<ul>\n<li>资源管理方法（精益管理、准时制（JIT生产）、Kaizen（持续改善）、全面生产维护（TPM）、约束理论等）</li>\n<li>情商EI</li>\n<li>自组织团队</li>\n<li>虚拟团队/分布式团队</li>\n</ul>\n<p><strong>裁剪需要考虑的因素</strong></p>\n<ul>\n<li>多元化</li>\n<li>物理位置</li>\n<li>行业特定资源</li>\n<li>团队成员的获得</li>\n<li>团队管理</li>\n<li>生命周期方法</li>\n</ul>\n<p><strong>在敏捷或适应型环境中需要考虑的因素</strong></p>\n<p>易变性高的项目得益于最大限度地集中和协作的团队结构，例如拥有通才的自组织团队。</p>\n<p>协作旨在提高生产率和促进创新的问题解决方式。协作型团队可以促进不同工作活动的加速整合、改善沟通、增加知识分享，以及提供工作分配的灵活性和其他优势。</p>\n<h2 id=\"9-1-规划资源管理\">9.1 规划资源管理</h2>\n<p>规划资源管理是定义如何估算、获取、管理和利用团队以及实物资源的过程。本过程的主要作用是，根据项目类型和复杂程度确定适用于项目资源的管理方法和管理程度。本过程仅开展一次或仅在项目的预定义点开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181456-1.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181456-2.png\" alt=\"\"></p>\n<p>资源规划用于确定和识别一种方法，以确保项目的成功完成有足够的可用资源。项目资源可能</p>\n<p>包括团队成员、用品、材料、设备、服务和设施。有效的资源规划需要考虑稀缺资源的可用性和竞争，并编制相应的计划。</p>\n<h3 id=\"9-1-1-规划资源管理：输入\">9.1.1 规划资源管理：输入</h3>\n<p>规划资源管理的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划\n<ul>\n<li>质量管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>项目进度计划</li>\n<li>需求文件</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织文化和结构</li>\n<li>设施和资源的地理分布</li>\n<li>现有资源的能力和可用性</li>\n<li>市场条件</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>人力资源政策和程序；</li>\n<li>实物资源管理政策和程序；</li>\n<li>安全政策；</li>\n<li>安保政策；</li>\n<li>资源管理计划模板；</li>\n<li>类似项目的历史信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"9-1-2-规划资源管理：工具与技术\">9.1.2 规划资源管理：工具与技术</h3>\n<p>规划资源管理需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>协调组织内部的最佳资源；</li>\n<li>人才管理和员工发展；</li>\n<li>确定为实现项目目标所需的初步投入水平；</li>\n<li>根据组织文化确定报告要求；</li>\n<li>根据经验教训和市场条件，评估获取资源所需的提前量；</li>\n<li>识别与资源获取、留用和遣散计划有关的风险；</li>\n<li>遵循适用的政府和工会法规；</li>\n<li>管理卖方和物流工作，确保在需要时能够提供材料和用品。</li>\n</ul>\n</li>\n<li>数据表现\n<ul>\n<li>层级型\n<ul>\n<li>工作分解结构WBS</li>\n<li>组织分解结构DBS</li>\n<li>资源分解结构</li>\n</ul>\n</li>\n<li>责任分配矩阵</li>\n<li>文本型</li>\n</ul>\n</li>\n<li>组织理论</li>\n<li>会议</li>\n</ul>\n<h3 id=\"9-1-3-规划资源管理：输出\">9.1.3 规划资源管理：输出</h3>\n<p>规划资源管理的输出包括：</p>\n<ul>\n<li>资源管理计划\n<ul>\n<li>识别资源</li>\n<li>获取资源</li>\n<li>角色与职责\n<ul>\n<li>角色</li>\n<li>职权</li>\n<li>职责</li>\n<li>能力</li>\n</ul>\n</li>\n<li>项目组织图</li>\n<li>项目团队资源管理</li>\n<li>培训</li>\n<li>团队建设</li>\n<li>资源控制</li>\n<li>认可计划</li>\n</ul>\n</li>\n<li>团队章程\n<ul>\n<li>团队价值观；</li>\n<li>沟通指南；</li>\n<li>决策标准和过程；</li>\n<li>冲突处理过程；</li>\n<li>会议指南；</li>\n<li>团队共识。</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>风险登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"9-2-估算活动资源\">9.2 估算活动资源</h2>\n<p>估算活动资源是估算执行项目所需的团队资源，以及材料、设备和用品的类型和数量的过程。本过程的主要作用是，明确完成项目所需的资源种类、数量和特性。本过程应根据需要在整个项目期间定期开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181456-3.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181456-4.png\" alt=\"\"></p>\n<h3 id=\"9-2-1-估算活动资源：输入\">9.2.1 估算活动资源：输入</h3>\n<p>估算活动资源的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>资源管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>活动属性</li>\n<li>活动清单</li>\n<li>假设日志</li>\n<li>成本估算</li>\n<li>资源日历</li>\n<li>风险登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>资源的位置；</li>\n<li>资源可用性；</li>\n<li>团队资源的技能；</li>\n<li>组织文化；</li>\n<li>发布的估算数据；</li>\n<li>市场条件。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>关于人员配备的政策和程序；</li>\n<li>关于用品和设备的政策与程序；</li>\n<li>关于以往项目中类似工作所使用的资源类型的历史信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"9-2-2-估算活动资源：工具与技术\">9.2.2 估算活动资源：工具与技术</h3>\n<p>估算活动资源需要的工具与技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>自下而上估算</li>\n<li>类比估算</li>\n<li>参数估算</li>\n<li>数据分析</li>\n<li>项目管理信息系统</li>\n<li>会议</li>\n</ul>\n<h3 id=\"9-2-3-估算活动资源：输出\">9.2.3 估算活动资源：输出</h3>\n<p>估算活动资源的输出包括：</p>\n<ul>\n<li>资源需求</li>\n<li>估算依据\n<ul>\n<li>估算方法；</li>\n<li>用于估算的资源，如以往类似项目的信息；</li>\n<li>与估算有关的假设条件；</li>\n<li>已知的制约因素；</li>\n<li>估算范围；</li>\n<li>估算的置信水平；</li>\n<li>有关影响估算的已识别风险的文件。</li>\n</ul>\n</li>\n<li>资源分解结构</li>\n<li>项目文件更新\n<ul>\n<li>活动属性</li>\n<li>假设日志</li>\n<li>经验教训登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"9-3-获取资源\">9.3 获取资源</h2>\n<p>获取资源是获取项目所需的团队成员、设施、设备、材料、用品和其他资源的过程。本过程的主要作用是，概述和指导资源的选择，并将其分配给相应的活动。本过程应根据需要在整个项目期间定期开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181456-5.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181456-6.png\" alt=\"\"></p>\n<h3 id=\"9-3-1-获取资源：输入\">9.3.1 获取资源：输入</h3>\n<p>获取资源的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>资源管理计划</li>\n<li>采购管理计划</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>项目进度计划</li>\n<li>资源日历</li>\n<li>资源需求</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>现有组织资源信息，包括可用性、能力水平、以及有关团队资源和资源成本的以往经验</li>\n<li>市场条件</li>\n<li>组织结构</li>\n<li>地理位置</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>有关项目资源的获取、配给和分配的政策和程序</li>\n<li>历史信息和经验教训知识库</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"9-3-2-获取资源：工具与技术\">9.3.2 获取资源：工具与技术</h3>\n<p>获取资源需要的工具与技术包括：</p>\n<ul>\n<li>决策\n<ul>\n<li>可用性</li>\n<li>成本</li>\n<li>能力</li>\n<li>经验</li>\n<li>知识</li>\n<li>技能</li>\n<li>态度</li>\n<li>国际因素</li>\n</ul>\n</li>\n<li>人际关系与团队技能\n<ul>\n<li>职能经理</li>\n<li>执行组织中的其他项目管理团队</li>\n<li>外部组织和供应商</li>\n</ul>\n</li>\n<li>预分派</li>\n<li>虚拟团队：具有共同目标、在完成角色任务的过程中很少或没有时间面对面工作的一群人</li>\n</ul>\n<h3 id=\"9-3-3-获取资源：输出\">9.3.3 获取资源：输出</h3>\n<p>获取资源的输出包括：</p>\n<ul>\n<li>实物资源分配单</li>\n<li>项目团队派工单</li>\n<li>资源日历</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>资源管理计划</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>资源分解结构</li>\n<li>资源需求</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织内资源的可用性</li>\n<li>组织已使用的消耗资源的数量</li>\n</ul>\n</li>\n<li>组织过程资产</li>\n</ul>\n<h2 id=\"9-4-建设团队\">9.4 建设团队</h2>\n<p>建设团队是提高工作能力，促进团队成员互动，改善团队整体氛围，以提高项目绩效的过程。本过程的主要作用是，改进团队协作、增强人际关系技能和胜任力、激励员工、减少摩擦以及提升整体项目绩效。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181456-7.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181456-8.png\" alt=\"\"></p>\n<p>通过以下行为可以实现团队的高效运行：</p>\n<ul>\n<li>使用开放与有效的沟通；</li>\n<li>创造团队建设机遇；</li>\n<li>建立团队成员间的信任；</li>\n<li>以建设性方式管理冲突；</li>\n<li>鼓励合作型的问题解决方法；</li>\n<li>鼓励合作型的决策方法。</li>\n</ul>\n<p>建设项目团队的目标包括（但不限于）：</p>\n<ul>\n<li>提高团队成员的知识和技能，以提高他们完成项目可交付成果的能力，并降低成本、缩短工期和提高质量；</li>\n<li>提高团队成员之间的信任和认同感，以提高士气、减少冲突和增进团队协作；</li>\n<li>创建富有生气、凝聚力和协作性的团队文化，从而：（1）提高个人和团队生产率，振奋团队精神，促进团队合作；（2）促进团队成员之间的交叉培训和辅导，以分享知识和经验；</li>\n<li>提高团队参与决策的能力，使他们承担起对解决方案的责任，从而提高团队的生产效率，获得更有效和高效的成果。</li>\n</ul>\n<p><strong>塔克曼阶梯理论：</strong></p>\n<ul>\n<li><strong>形成阶段</strong>。在本阶段，团队成员相互认识，并了解项目情况及他们在项目中的正式角色与职责。在这一阶段，团队成员倾向于相互独立，不会开诚布公。</li>\n<li><strong>震荡阶段</strong>。在本阶段，团队开始从事项目工作、制定技术决策和讨论项目管理方法。如果团队成员不能用合作和开放的态度对待不同观点和意见，团队环境可能变得事与愿违。</li>\n<li><strong>规范阶段</strong>。在规范阶段，团队成员开始协同工作，并调整各自的工作习惯和行为来支持团队，团队成员会学习相互信任。</li>\n<li><strong>成熟阶段</strong>。进入这一阶段后，团队就像一个组织有序的单位那样工作，团队成员之间相互依靠，平稳高效地解决问题。</li>\n<li><strong>解散阶段</strong>。在解散阶段，团队完成所有工作，团队成员离开项目。通常在项目可交付成果完成之后，或者，在结束项目或阶段过程中，释放人员，解散团队。</li>\n</ul>\n<h3 id=\"9-4-1-建设团队：输入\">9.4.1 建设团队：输入</h3>\n<p>建设团队的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>项目团队派工单</li>\n<li>资源日历</li>\n<li>团队章程</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>有关雇用和解雇、员工绩效审查、员工发展与培训记录，以及认可与奖励的人力资源管理政策；</li>\n<li>团队成员的技能、能力和专业知识；</li>\n<li>团队成员的地理分布。</li>\n</ul>\n</li>\n<li>组织过程资产</li>\n</ul>\n<h3 id=\"9-4-2-建设团队：工具与技术\">9.4.2 建设团队：工具与技术</h3>\n<p>建设团队需要的工具与技术包括：</p>\n<ul>\n<li>集中办公</li>\n<li>虚拟团队</li>\n<li>沟通技术</li>\n<li>人际关系与团队技能\n<ul>\n<li>冲突管理</li>\n<li>影响力</li>\n<li>激励</li>\n<li>谈判</li>\n<li>团队建设</li>\n</ul>\n</li>\n<li>认可与奖励</li>\n<li>培训</li>\n<li>个人和团队评估</li>\n<li>会议</li>\n</ul>\n<h3 id=\"9-4-3-建设团队：输出\">9.4.3 建设团队：输出</h3>\n<p>建设团队的输出包括：</p>\n<ul>\n<li>团队绩效评价</li>\n<li>变更请求</li>\n<li>项目管理计划更新</li>\n<li>项目文件更新\n<ul>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>项目团队派工单</li>\n<li>资源日历</li>\n<li>团队章程</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>员工发展计划的记录</li>\n<li>技能评估</li>\n</ul>\n</li>\n<li>组织过程资产更新\n<ul>\n<li>培训需求</li>\n<li>人事评测</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"9-5-管理团队\">9.5 管理团队</h2>\n<p>管理团队是跟踪团队成员工作表现，提供反馈，解决问题并管理团队变更，以优化项目绩效的过程。本过程的主要作用是，影响团队行为、管理冲突以解决问题。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181456-9.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181456-10.png\" alt=\"\"></p>\n<h3 id=\"9-5-1-管理团队：输入\">9.5.1 管理团队：输入</h3>\n<p>管理团队的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>项目团队派工单</li>\n</ul>\n</li>\n<li>团队章程</li>\n<li>工作绩效报告</li>\n<li>团队绩效报告</li>\n<li>事业环境因素</li>\n<li>组织过程资产\n<ul>\n<li>嘉奖证书</li>\n<li>公司制服</li>\n<li>组织中其他的额外待遇</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"9-5-2-管理团队：工具与技术\">9.5.2 管理团队：工具与技术</h3>\n<p>管理团队需要的工具与技术包括：</p>\n<ul>\n<li><strong>人际关系与团队技能</strong>\n<ul>\n<li><strong>冲突管理</strong>\n<ul>\n<li><strong>撤退/回避</strong>。从实际或潜在冲突中退出，将问题推迟到准备充分的时候，或者将问题推给其他人员解决。</li>\n<li><strong>缓和/包容</strong>。强调一致而非差异；为维持和谐与关系而退让一步，考虑其他方的需要。</li>\n<li><strong>妥协/调解</strong>。为了暂时或部分解决冲突，寻找能让各方都在一定程度上满意的方案，但这种方法有时会导致“双输”局面。</li>\n<li><strong>强迫/命令</strong>。以牺牲其他方为代价，推行某一方的观点；只提供赢 — 输方案。通常是利用权力来强行解决紧急问题，这种方法通常会导致“赢输”局面。</li>\n<li><strong>合作/解决问题</strong>。综合考虑不同的观点和意见，采用合作的态度和开放式对话引导各方达成共识和承诺，这种方法可以带来双赢局面。</li>\n</ul>\n</li>\n<li>制定决策\n<ul>\n<li>着眼于所要达到的目标；</li>\n<li>遵循决策流程；</li>\n<li>研究环境因素；</li>\n<li>分析可用信息；</li>\n<li>激发团队创造力；</li>\n<li>考虑风险。</li>\n</ul>\n</li>\n<li>情商</li>\n<li>影响力</li>\n<li>领导力</li>\n</ul>\n</li>\n<li>项目管理信息系统</li>\n</ul>\n<h3 id=\"9-5-3-管理团队：输出\">9.5.3 管理团队：输出</h3>\n<p>管理团队的输出包括：</p>\n<ul>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>资源管理计划</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>项目团队派工单</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>对组织绩效评价的输入</li>\n<li>个人技能</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"9-6-控制资源\">9.6 控制资源</h2>\n<p>控制资源是确保按计划为项目分配实物资源，以及根据资源使用计划监督资源实际使用情况，并采取必要纠正措施的过程。本过程的主要作用是，确保所分配的资源适时适地可用于项目，且在不再需要时被释放。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181456-11.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181456-12.png\" alt=\"\"></p>\n<p>控制资源过程关注：</p>\n<ul>\n<li>监督资源支出；</li>\n<li>及时识别和处理资源缺乏/剩余情况；</li>\n<li>确保根据计划和项目需求使用和释放资源；</li>\n<li>在出现资源相关问题时通知相应的相关方；</li>\n<li>影响会导致资源使用变更的因素；</li>\n<li>在变更实际发生时对其进行管理。<br>\n进度基准或成本基准的任何变更，都必须经过实施整体变更控制过程的审批。</li>\n</ul>\n<h3 id=\"9-6-1-控制资源：输入\">9.6.1 控制资源：输入</h3>\n<p>控制资源的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>实物资源分配单</li>\n<li>项目进度计划</li>\n<li>资源分解结构</li>\n<li>资源需求</li>\n<li>风险登记册</li>\n</ul>\n</li>\n<li>工作绩效数据</li>\n<li>协议</li>\n<li>组织过程资产\n<ul>\n<li>有关资源控制和分配的政策；</li>\n<li>执行组织内用于解决问题的上报程序；</li>\n<li>经验教训知识库，其中包含以往类似项目的信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"9-6-2-控制资源：工具与技术\">9.6.2 控制资源：工具与技术</h3>\n<p>控制资源需要的工具与技术包括：</p>\n<ul>\n<li>数据分析\n<ul>\n<li>备选方案分析</li>\n<li>成本效益分析</li>\n<li>绩效审查</li>\n<li>趋势分析</li>\n</ul>\n</li>\n<li><strong>问题解决</strong>\n<ul>\n<li><strong>识别问题</strong>。明确问题。</li>\n<li><strong>定义问题</strong>。将问题分解为可管理的小问题。</li>\n<li><strong>调查</strong>。收集数据。</li>\n<li><strong>分析</strong>。找出问题的根本原因。</li>\n<li><strong>解决</strong>。从众多解决方案中选择最合适的一个。</li>\n<li><strong>检查解决方案</strong>。确认是否已解决问题。</li>\n</ul>\n</li>\n<li>人际关系与团队技能\n<ul>\n<li>谈判</li>\n<li>影响力</li>\n</ul>\n</li>\n<li>项目管理信息系统</li>\n</ul>\n<h3 id=\"9-6-3-控制资源：输出\">9.6.3 控制资源：输出</h3>\n<p>控制资源的输出包括：</p>\n<ul>\n<li>工作绩效信息</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>资源管理计划</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>实物资源分配单</li>\n<li>资源分解结构</li>\n<li>风险登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-项目沟通管理\">10.项目沟通管理</h2>\n<p>项目沟通管理包括通过开发工件，以及执行用于有效交换信息的各种活动，来确保项目及其相关方的信息需求得以满足的各个过程。项目沟通管理由两个部分组成：第一部分是制定策略，确保沟通对相关方行之有效；第二部分是执行必要活动，以落实沟通策略。</p>\n<p><strong>项目沟通管理的过程包括：</strong></p>\n<ul>\n<li>10.1 规划沟通管理 — 基于每个相关方或相关方群体的信息需求、可用的组织资产，以及具体项目的需求，为项目沟通活动制定恰当的方法和计划的过程。</li>\n<li>10.2 管理沟通 — 确保项目信息及时且恰当地收集、生成、发布、存储、检索、管理、监督和最终处置的过程。</li>\n<li>10.3 监督沟通 — 确保满足项目及其相关方的信息需求的过程。</li>\n</ul>\n<p>图 10-1 概括了项目沟通管理的各个过程。虽然在本《PMBOK® 指南》中，各项目沟通管理过程</p>\n<p>以界限分明和相互独立的形式出现，但在实践中它们会以本指南无法全面详述的方式相互交叠和相互作用。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181554.png\" alt=\"\"></p>\n<p>图 10-1项目沟通管理概述</p>\n<p>项目沟通管理的核心概念沟通是指有意或无意的信息交换。交换的信息可以是想法、指示或情绪。信息交换的方法包括：</p>\n<ul>\n<li>书面形式。实物或电子形式。</li>\n<li>口头形式。面对面或远程形式。</li>\n<li>正式或非正式形式（用正式纸质或社交媒体）。</li>\n<li>手势动作。语调和面部表情。</li>\n<li>媒体形式。图片、行动，甚至只是遣词造句。</li>\n<li>遣词造句。表达一种想法的词语往往不止一个，且各词语的含义会存在细微差异。</li>\n<li>沟通是指用各种可能的方式来发送或接收信息，或者通过沟通活动（如会议和演讲），或者以工件的方式（如电子邮件、社交媒体、项目报告或项目文档）。</li>\n</ul>\n<p>项目经理的大多数时间用于与团队成员和其他项目相关方沟通，包括来自组织内部（组织的各个层级）和组织外部的人员。不同相关方可能有不同的文化和组织背景，以及不同的专业水平、观点和兴趣，而有效的沟通能够在他们之间架起一座桥梁。</p>\n<p>沟通活动可按多种维度进行分类，包括（但不限于）：</p>\n<ul>\n<li>内部。针对项目内部或组织内部的相关方。</li>\n<li>外部。针对外部相关方，如客户、供应商、其他项目、组织、政府，公众和环保倡导者。</li>\n<li>正式。报告、正式会议（定期及临时）、会议议程和记录、相关方简报和演示。</li>\n<li>非正式。采用电子邮件、社交媒体、网站，以及非正式临时讨论的一般沟通活动。</li>\n<li>层级沟通。相关方或相关方群体相对于项目团队的位置将会以如下方式影响信息传递的形式和内容：</li>\n<li>向上沟通。针对高层相关方。</li>\n<li>向下沟通。针对承担项目工作的团队和其他人员。</li>\n<li>横向沟通。针对项目经理或团队的同级人员。</li>\n<li>官方沟通。年报，呈交监管机构或政府部门的报告。</li>\n<li>非官方沟通。采用灵活（往往为非正式）的手段，来建立和维护项目团队及其相关方对项目情况的了解和认可，并在他们之间建立强有力的关系。</li>\n<li>书面与口头沟通。口头（用词和音调变化）及非口头（肢体语言和行为），社交媒体和网站、媒体发布。</li>\n</ul>\n<p>沟通可以为成功完成项目与项目集建立必要的关系。用于开展沟通的活动和工件多种多样，从电子邮件和非正式对话，到正式会议和定期项目报告。通过言语、面部表情、手势动作和其他行动有意或无意地发送和接收信息。为了成功管理与相关方的项目关系，沟通既包括制定策略和计划，以便创建合适的沟通工件和开展合适的沟通活动，也包括运用相关技能来提升计划和即兴的沟通的效果。</p>\n<p>成功的沟通包括两个部分。第一部分是根据项目及其相关方的需求而制定适当的沟通策略。从该策略出发，制定沟通管理计划，来确保用各种形式和手段把恰当的信息传递给相关方。这些信息构成项目沟通-成功沟通的第二部分。项目沟通是规划过程的产物，在沟通管理计划中有相关规定。</p>\n<p>沟通管理计划定义了信息的收集、生成、发布、储存、检索、管理、追踪和处置。最终，沟通策略和沟通管理计划将成为监督沟通效果的依据。</p>\n<p>在项目沟通中，需要尽力预防理解错误和沟通错误，并从规划过程所规定的各种方法、发送方、接收方和信息中作出谨慎选择。</p>\n<p>在编制传统（非社交媒体）的书面或口头信息的时候，应用书面沟通的 5C 原则，可以减轻但无法消除理解错误：</p>\n<ul>\n<li>正确的语法和拼写。语法不当或拼写错误会分散注意力，还有可能扭曲信息含义，降低可信度。</li>\n<li>简洁的表述和无多余字。简洁且精心组织的信息能降低误解信息意图的可能性。</li>\n<li>清晰的目的和表述（适合读者的需要）。确保在信息中包含能满足受众需求与激发其兴趣的内容。</li>\n<li>连贯的思维逻辑。写作思路连贯，以及在整个书面文件中使用诸如“引言”和“小结”的小标题。</li>\n<li>受控的语句和想法承接。可能需要使用图表或小结来控制语句和想法的承接。</li>\n</ul>\n<p>书面沟通的 5C原则需要用下列沟通技巧来配合：</p>\n<ul>\n<li>积极倾听。与说话人保持互动，并总结对话内容，以确保有效的信息交换。</li>\n<li>理解文化和个人差异。提升团队对文化及个人差异的认知，以减少误解并提升沟通能力。</li>\n<li>识别、设定并管理相关方期望。与相关方磋商，减少相关方社区中的自相矛盾的期望。</li>\n<li>强化技能。强化所有团队成员开展以下活动的技能：</li>\n<li>说服个人、团队或组织采取行动；</li>\n<li>激励和鼓励人们，或帮助人们重塑自信；</li>\n<li>指导人们改进绩效和取得期望结果；</li>\n<li>通过磋商达成共识以及减轻审批或决策延误；</li>\n<li>解决冲突，防止破坏性影响。</li>\n</ul>\n<p>有效的沟通活动和工件创建具有如下基本属性：</p>\n<ul>\n<li>沟通目的明确；</li>\n<li>尽量了解沟通接收方，满足其需求及偏好；</li>\n<li>监督并衡量沟通的效果。</li>\n</ul>\n<p>项目沟通管理的发展趋势和新兴实践在关注相关方，以及认可相关方的有效参与对项目及组织的价值的同时，也要认识到制定和落实适当的沟通策略，对维系与相关方的有效关系是至关重要的。项目沟通管理的发展趋势和新兴实践包括（但不限于）：</p>\n<ul>\n<li>将相关方纳入项目评审范围。每个项目的相关方社区中都包括被项目团队确定为对成功达成项目目标和组织成果不可或缺的个人、群体和组织。有效的沟通策略要求定期且及时地评审相关方社区，以管理成员及其态度的变化。</li>\n<li>让相关方参加项目会议。项目会议应邀请项目外部甚至组织外部（若适当）的相关方参与。敏捷方法中的一些做法适用于任何类型的项目，例如，简短的每日站会。在每日站会上，项目团队和主要相关方就前一天的成绩和问题以及当天的工作计划展开讨论。</li>\n<li>社交工具的使用日益增多。以硬件平台、社交媒体服务和个人便携设备为代表的社交工具已经改变组织及其人员的沟通和业务方式。在公共 IT 基础设施的支持下，社交工具将不同的协作方式融合在一起。网络社交是指用户建立关系网络，与他人共同拓展兴趣和活动。社交媒体工具不仅能支持信息交换，而且也有助于建立更深层次的信任和社群关系。</li>\n<li>多面性沟通方法。制定项目相关方沟通策略时，通常应考虑所有可用技术，并从中作出选择；</li>\n<li>同时也应尊重因文化、实践和个人背景而产生的对沟通语言、媒介、内容和方式的偏好。可以根据需要采用社交媒体和其他先进的电脑技术。多面性方法能够提高与不同年代和文化背景的相关方沟通的效果。</li>\n</ul>\n<p>裁剪时需要考虑的因素因为每个项目都是独特的，所以项目团队需要裁剪项目沟通管理过程。裁剪时应考虑的因素包括（但不限于）：</p>\n<ul>\n<li>相关方。相关方是属于组织内部或外部，或者二者都是？</li>\n<li>物理地点。团队成员身处何地？团队是否集中办公？团队是否位于相同地理区域？团队是否分散于多个时区？</li>\n<li>沟通技术。哪项技术可用于创建、记录、传输、检索、追踪和储存沟通工件？哪些技术最适用于与相关方沟通且成本效益最高？</li>\n<li>语言。语言是沟通活动中要考虑的主要因素。使用的是一种语言，还是多种语言？是否已为适应多语种团队的复杂情况安排了资金？</li>\n<li>知识管理。组织是否有正式的知识管理库？是否采用管理库？</li>\n</ul>\n<p>在敏捷或适应型环境中需要考虑的因素在模糊不定的项目环境中，必然需要对不断演变和出现的细节情况，进行更频繁和快速的沟通。</p>\n<p>因此，应该尽量简化团队成员获取信息的通道，频繁进行团队检查，并让团队成员集中办公。</p>\n<p>此外，为了促进与高级管理层和相关方的沟通，还需要以透明的方式发布项目工件，并定期邀请相关方评审项目工件。</p>\n<h2 id=\"10-1-规划沟通管理\">10.1 规划沟通管理</h2>\n<p>规划沟通管理是基于每个相关方或相关方群体的信息需求、可用的组织资产，以及具体项目的需求，为项目沟通活动制定恰当的方法和计划的过程。本过程的主要作用是，为及时向相关方提供相关信息，引导相关方有效参与项目，而编制书面沟通计划。本过程应根据需要在整个项目期间定期开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181554-1.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181554-2.png\" alt=\"\"></p>\n<h3 id=\"10-1-1-规划沟通管理：输入\">10.1.1 规划沟通管理：输入</h3>\n<p>规划沟通管理的输入包括：</p>\n<ul>\n<li>项目章程‘’</li>\n<li>项目管理计划\n<ul>\n<li>资源管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>需求文件</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织文化、政治氛围和治理框架；</li>\n<li>人事管理政策；</li>\n<li>相关方风险临界值；</li>\n<li>已确立的沟通渠道、工具和系统；</li>\n<li>全球、区域或当地的趋势、实践或习俗；</li>\n<li>设施和资源的地理分布。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>组织的社交媒体、道德和安全政策及程序；</li>\n<li>组织的问题、风险、变更和数据管理政策及程序；</li>\n<li>组织对沟通的要求；</li>\n<li>制作、交换、储存和检索信息的标准化指南；</li>\n<li>历史信息和经验教训知识库；</li>\n<li>以往项目的相关方及沟通数据和信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"10-1-2-规划沟通管理：工具与技术\">10.1.2 规划沟通管理：工具与技术</h3>\n<p>规划沟通管理需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>组织内的政治和权力结构；</li>\n<li>组织及其他客户组织的环境和文化；</li>\n<li>组织变革管理方法和实践；</li>\n<li>项目可交付成果所属的行业或类型；</li>\n<li>组织沟通技术；</li>\n<li>关于遵守与企业沟通有关的法律要求的组织政策与程序；</li>\n<li>与安全有关的组织政策与程序；</li>\n<li>相关方，包括客户或发起人。</li>\n</ul>\n</li>\n<li>沟通需求分析\n<ul>\n<li>相关方登记册及相关方参与计划中的相关信息和沟通需求；</li>\n<li>潜在沟通渠道或途径数量，包括一对一、一对多和多对多沟通；</li>\n<li>组织结构图；</li>\n<li>项目组织与相关方的职责、关系及相互依赖；</li>\n<li>开发方法；</li>\n<li>项目所涉及的学科、部门和专业；</li>\n<li>有多少人在什么地点参与项目；</li>\n<li>内部信息需要（如何时在组织内部沟通）；</li>\n<li>外部信息需要（如何时与媒体、公众或承包商沟通）；</li>\n<li>法律要求。</li>\n</ul>\n</li>\n<li>沟通技术（信息交换和协作的常见方法包括对话、会议、书面文件、数据库、社交媒体和网站。）</li>\n<li>沟通模型。沟通模型可以是最基本的线性（发送方和接收方）沟通过程，也可以是增加了反馈元素（发送方、接收方和反馈）、更具互动性的沟通形式，甚至可以是融合了发送方或接收方的人性因素、试图考虑沟通复杂性的更加复杂的沟通模型。\n<ul>\n<li>基本的发送方和接收方沟通模型示例。此模型将沟通描述为一个过程，并由发送方和接收方两方参与；其关注的是确保信息送达，而非信息理解。基本沟通模型中的步骤顺序为：\n<ul>\n<li>编码。把信息编码为各种符号，如文本、声音或其他可供传递（发送）的形式。</li>\n<li>传递信息。通过沟通渠道发送信息。信息传递可能受各种物理因素的不利影响，如不熟悉的技术，或不完备的基础设施。可能存在噪音和其他因素，导致信息传递和（或）接收过程中的信息损耗。</li>\n<li>解码。接收方将收到的数据还原为对自己有用的形式。</li>\n</ul>\n</li>\n<li>互动沟通模型示例。此模型也将沟通描述为由发送方与接收方参与的沟通过程，但它还强调确保信息理解的必要性。此模型包括任何可能干扰或阻碍信息理解的噪音，如接收方注意力分散、接收方的认知差异，或缺少适当的知识或兴趣。互动沟通模型中的新增步骤有：\n<ul>\n<li>确认已收到。收到信息时，接收方需告知对方已收到信息（确认已收到）。这并不一定意味着同意或理解信息的内容，仅表示已收到信息。</li>\n<li>反馈/响应。对收到的信息进行解码并理解之后，接收方把还原出来的思想或观点编码成信息，再传递给最初的发送方。如果发送方认为反馈与原来的信息相符，代表沟通已成功完成。</li>\n</ul>\n</li>\n<li>沟通方法\n<ul>\n<li>互动沟通。在两方或多方之间进行的实时多向信息交换。它使用诸如会议、电话、即时信息、社交媒体和视频会议等沟通工件。</li>\n<li>推式沟通。向需要接收信息的特定接收方发送或发布信息。这种方法可以确保信息的发送，但不能确保信息送达目标受众或被目标受众理解。在推式沟通中，可以采用的沟通工件包括信件、备忘录、报告、电子邮件、传真、语音邮件、博客、新闻稿。</li>\n<li>拉式沟通。适用于大量复杂信息或大量信息受众的情况。它要求接收方在遵守有关安全规定的前提之下自行访问相关内容。这种方法包括门户网站、企业内网、电子在线课程、经验教训数据库或知识库。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>人际关系与团队技能</li>\n<li>数据表现</li>\n<li>会议</li>\n</ul>\n<h3 id=\"10-1-3-规划沟通管理：输出\">10.1.3 规划沟通管理：输出</h3>\n<p>规划沟通管理的输出包括：</p>\n<ul>\n<li>沟通管理计划</li>\n<li>相关方的沟通需求；\n<ul>\n<li>需沟通的信息，包括语言、形式、内容和详细程度；</li>\n<li>上报步骤；</li>\n<li>发布信息的原因；</li>\n<li>发布所需信息、确认已收到，或作出回应（若适用）的时限和频率；</li>\n<li>负责沟通相关信息的人员；</li>\n<li>负责授权保密信息发布的人员；</li>\n<li>接收信息的人员或群体，包括他们的需要、需求和期望；</li>\n<li>用于传递信息的方法或技术，如备忘录、电子邮件、新闻稿，或社交媒体；</li>\n<li>为沟通活动分配的资源，包括时间和预算；</li>\n<li>随着项目进展，如项目不同阶段相关方社区的变化，而更新与优化沟通管理计划的方法；</li>\n<li>通用术语表；</li>\n<li>项目信息流向图、工作流程（可能包含审批程序）、报告清单和会议计划等；</li>\n<li>来自法律法规、技术、组织政策等的制约因素。</li>\n</ul>\n</li>\n<li>项目管理计划更新</li>\n<li>项目文件更新\n<ul>\n<li>项目进度计划</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-2-管理沟通\">10.2 管理沟通</h2>\n<p>管理沟通是确保项目信息及时且恰当地收集、生成、发布、存储、检索、管理、监督和最终处置的过程。本过程的主要作用是，促成项目团队与相关方之间的有效信息流动。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181554-3.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181554-4.png\" alt=\"\"></p>\n<p>本过程不局限于发布相关信息，它还设法确保信息以适当的格式正确生成和送达目标受众。本过程也为相关方提供机会，允许他们请求更多信息、澄清和讨论。有效的沟通管理需要借助相关技术并考虑相关事宜，包括（但不限于）：</p>\n<ul>\n<li>发送方 - 接收方模型。运用反馈循环，为互动和参与提供机会，并清除妨碍有效沟通的障碍。</li>\n<li>媒介选择。为满足特定的项目需求而使用合理的沟通工件，例如，何时进行书面沟通或口头沟通、何时准备非正式备忘录或正式报告、何时使用推式或拉式沟通，以及该选择何种沟通技术。</li>\n<li>写作风格。合理使用主动或被动语态、句子结构，以及合理选择词汇。</li>\n<li>会议管理。准备议程，邀请重要参会者并确保他们出席；处理会议现场发生的冲突，或因对会议纪要和后续行动跟进不力而导致的冲突，或因不当人员与会而导致的冲突。</li>\n<li>演示。了解肢体语言和视觉辅助设计的作用。</li>\n<li>引导。达成共识、克服障碍（如小组缺乏活力），以及维持小组成员的兴趣和热情。</li>\n<li>积极倾听。积极倾听包括告知已收到、澄清与确认信息、理解，以及消除妨碍理解的障碍。</li>\n</ul>\n<h3 id=\"10-2-1-管理沟通：输入\">10.2.1 管理沟通：输入</h3>\n<p>管理沟通的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>资源管理计划</li>\n<li>沟通管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>变更日志</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>质量报告</li>\n<li>风险报告</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>工作绩效报告</li>\n<li>事业环境因素\n<ul>\n<li>组织文化、政治氛围和治理框架；</li>\n<li>人事管理政策；</li>\n<li>相关方风险临界值；</li>\n<li>已确立的沟通渠道、工具和系统；</li>\n<li>全球、区域或当地的趋势、实践或习俗；</li>\n<li>设施和资源的地理分布。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>企业的社交媒体、道德和安全政策及程序；</li>\n<li>企业的问题、风险、变更和数据管理政策及程序；</li>\n<li>组织对沟通的要求；</li>\n<li>制作、交换、储存和检索信息的标准化指南；</li>\n<li>以往项目的历史信息，包括经验教训知识库。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"10-2-2-管理沟通：工具与技术\">10.2.2 管理沟通：工具与技术</h3>\n<p>管理沟通需要的工具与技术包括：</p>\n<ul>\n<li>\n<p>沟通技术</p>\n</li>\n<li>\n<p>沟通方法</p>\n</li>\n<li>\n<p>沟通技能</p>\n<ul>\n<li>沟通胜任力。经过裁剪的沟通技能的组合，有助于明确关键信息的目的、建立有效关系、实现信息共享和采取领导行为。</li>\n<li>反馈。反馈是关于沟通、可交付成果或情况的反应信息。反馈支持项目经理和团队及所有其他项目相关方之间的互动沟通。例如，指导、辅导和磋商。</li>\n<li>非口头技能。例如，通过示意、语调和面部表情等适当的肢体语言来表达意思。镜像模仿和眼神交流也是重要的技能。团队成员应该知道如何通过说什么和不说什么来表达自己的想法。</li>\n<li>演示。演示是信息和/或文档的正式交付。向项目相关方明确有效地演示项目信息可包括（但不限于）：\n<ul>\n<li>向相关方报告项目进度和信息更新；</li>\n<li>提供背景信息以支持决策制定；</li>\n<li>提供关于项目及其目标的通用信息，以提升项目工作和项目团队的形象；</li>\n<li>提供具体信息，以提升对项目工作和目标的理解和支持力度。</li>\n</ul>\n</li>\n</ul>\n<p>为获得演示成功，应该从内容和形式上考虑以下因素：</p>\n<ul>\n<li>受众及其期望和需求；</li>\n<li>项目和项目团队的需求及目标。</li>\n</ul>\n</li>\n<li>\n<p>项目管理信息系统</p>\n<ul>\n<li>电子项目管理工具</li>\n<li>电子沟通管理</li>\n<li>社交媒体管理</li>\n</ul>\n</li>\n<li>\n<p>项目报告发布</p>\n<ul>\n<li>项目报告发布是收集和发布项目信息的行为。项目信息应发布给众多相关方群体。应针对每种相关方来调整项目信息发布的适当层次、形式和细节。从简单的沟通到详尽的定制报告和演示，报告的形式各不相同。可以定期准备信息或基于例外情况准备。</li>\n</ul>\n</li>\n<li>\n<p>人际关系与团队技能</p>\n<ul>\n<li>积极倾听</li>\n<li>冲突管理</li>\n<li>文化意识</li>\n<li>会议管理</li>\n<li>人际交往</li>\n<li>政治意识</li>\n<li>会议</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"10-2-3-管理沟通：输出\">10.2.3 管理沟通：输出</h3>\n<p>管理沟通的输出包括：</p>\n<ul>\n<li>项目沟通记录\n<ul>\n<li>项目沟通工件可包括（但不限于）：绩效报告、可交付成果的状态、进度进展、产生的成本、演示，以及相关方需要的其他信息。</li>\n</ul>\n</li>\n<li>项目管理计划更新\n<ul>\n<li>沟通管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>组织过程资产更新\n<ul>\n<li>项目记录，例如往来函件、备忘录、会议记录及项目中使用的其他文档；</li>\n<li>计划内的和临时的项目报告和演示。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-3-监督沟通\">10.3 监督沟通</h2>\n<p>监督沟通是确保满足项目及其相关方的信息需求的过程。本过程的主要作用是，按沟通管理计划和相关方参与计划的要求优化信息传递流程。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181554-5.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417181554-6.png\" alt=\"\"></p>\n<h3 id=\"10-3-1-监督沟通：输入\">10.3.1 监督沟通：输入</h3>\n<p>监督沟通的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>资源管理计划</li>\n<li>沟通管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>项目沟通记录</li>\n<li>工作绩效数据</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织文化、政治氛围和治理框架；</li>\n<li>已确立的沟通渠道、工具和系统；</li>\n<li>全球、区域或当地的趋势、实践或习俗；</li>\n<li>设施和资源的地理分布。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>企业的社交媒体、道德和安全政策及程序；</li>\n<li>组织对沟通的要求；</li>\n<li>制作、交换、储存和检索信息的标准化指南；</li>\n<li>以往项目的历史信息和经验教训知识库；</li>\n<li>以往项目的相关方及沟通数据和信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"10-3-2-监督沟通：工具与技术\">10.3.2 监督沟通：工具与技术</h3>\n<p>监督沟通需要的工具与技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>项目管理信息系统</li>\n<li>数据表现</li>\n<li>人际关系与团队技能</li>\n<li>会议</li>\n</ul>\n<h3 id=\"10-3-3-监督沟通：输出\">10.3.3 监督沟通：输出</h3>\n<p>监督沟通的输出包括：</p>\n<ul>\n<li>工作绩效信息</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>沟通管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-项目风险管理\">11.项目风险管理</h2>\n<p>项目风险管理包括规划风险管理、识别风险、开展风险分析、规划风险应对、实施风险应对和监督风险的各个过程。项目风险管理的目标在于提高正面风险的概率或影响，降低负面风险的概率或影响，从而提高项目成功的可能性。</p>\n<p>项目风险管理的过程是：</p>\n<p><strong>11.1 规划风险管理</strong> — 定义如何实施项目风险管理活动的过程。</p>\n<p><strong>11.2 识别风险</strong> — 识别单个项目风险，以及整体项目风险的来源，并记录风险特征的过程。</p>\n<p><strong>11.3 实施定性风险分析</strong> — 通过评估单个项目风险发生的概率和影响以及其他特征，对风险进行优先级排序，从而为后续分析或行动提供基础的过程。</p>\n<p><strong>11.4 实施定量风险分析</strong> — 就已识别的单个项目风险和其他不确定性的来源对整体项目目标的综合影响进行定量分析的过程。</p>\n<p><strong>11.5 规划风险应对</strong> — 为处理整体项目风险敞口，以及应对单个项目风险，而制定可选方案、选择应对策略并商定应对行动的过程。</p>\n<p><strong>11.6 实施风险应对</strong> — 执行商定的风险应对计划的过程。</p>\n<p><strong>11.7 监督风险</strong> — 在整个项目期间，监督商定的风险应对计划的实施、跟踪已识别风险、识别和分析新风险，以及评估风险管理有效性的过程。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182700.png\" alt=\"\"></p>\n<p>项目风险管理的核心概念</p>\n<p>项目风险管理旨在识别和管理未被其他项目管理过程所管理的风险。如果不妥善管理，这些风险有可能导致项目偏离计划，无法达成既定的项目目标。因此，项目风险管理的有效性直接关乎项目成功与否。</p>\n<p>每个项目都在两个层面上存在风险。每个项目都有会影响项目达成目标的单个风险，以及由单个项目风险和不确定性的其他来源联合导致的整体项目风险。考虑整体项目风险，也非常重要。项目风险管理过程同时兼顾这两个层面的风险。它们的定义如下：</p>\n<ul>\n<li>单个项目风险是一旦发生，会对一个或多个项目目标产生正面或负面影响的不确定事件或条件。</li>\n<li>整体项目风险是不确定性对项目整体的影响，是相关方面临的项目结果正面和负面变异区间。它源于包括单个风险在内的所有不确定性。</li>\n</ul>\n<p><strong>项目风险管理的发展趋势和新兴实践</strong></p>\n<ul>\n<li>非事件类风险。大多数项目只关注作为可能发生或不发生的不确定性未来事件的风险。\n<ul>\n<li>变异性风险。已规划事件、活动或决策的某些关键方面存在不确定性，就导致变异性风险。</li>\n<li>模糊性风险。对未来可能发生什么，存在不确定性。</li>\n</ul>\n</li>\n<li>项目韧性。随着对所谓“未知-未知”因素的意识的增强，人们也越来越明确地知道确实存在突发性风险。这种风险只有在发生后才能被发现。可以通过加强项目韧性来应对突发性风险。这就要求每个项目：\n<ul>\n<li>除了为已知风险列出具体风险预算，还要为突发性风险预留合理的应急预算和时间；</li>\n<li>采用灵活的项目过程，包括强有力的变更管理，以便在保持朝项目目标推进的正确方向的同时，应对突发性风险；</li>\n<li>授权目标明确且值得信赖的项目团队在商定限制范围内完成工作；</li>\n<li>经常留意早期预警信号，以尽早识别突发性风险；</li>\n<li>明确征求相关方的意见，以明确为应对突发性风险而可以调整项目范围或策略的领域。</li>\n</ul>\n</li>\n<li>整合式风险管理。项目存在于组织背景中，可能是项目集或项目组合的一部分。在项目、项目集、项目组合和组织这些层面上，都存在风险。</li>\n</ul>\n<p><strong>裁剪时需要考虑的因素</strong></p>\n<ul>\n<li>项目规模</li>\n<li>项目复杂性</li>\n<li>项目重要性</li>\n<li>开发方法</li>\n</ul>\n<h2 id=\"11-1-规划风险管理\">11.1 规划风险管理</h2>\n<p>规划风险管理是定义如何实施项目风险管理活动的过程。本过程的主要作用是，确保风险管理的水平、方法和可见度与项目风险程度，以及项目对组织和其他相关方的重要程度相匹配。本过程仅开展一次或仅在项目的预定义点开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182700-1.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182700-2.png\" alt=\"\"></p>\n<h3 id=\"11-1-1-规划风险管理：输入\">11.1.1 规划风险管理：输入</h3>\n<p>规划风险管理的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划</li>\n<li>项目文件</li>\n<li>事业环境因素</li>\n<li>组织过程资产</li>\n<li>组织的风险政策；\n<ul>\n<li>风险类别，可能用风险分解结构来表示；</li>\n<li>风险概念和术语的通用定义；</li>\n<li>风险描述的格式；</li>\n<li>风险管理计划、风险登记册和风险报告的模板；</li>\n<li>角色与职责；</li>\n<li>决策所需的职权级别；</li>\n<li>经验教训知识库，其中包含以往类似项目的信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"11-1-2-规划风险管理：工具与技术\">11.1.2 规划风险管理：工具与技术</h3>\n<p>规划风险管理需要的工具与技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>数据分析</li>\n<li>会议</li>\n</ul>\n<h3 id=\"11-1-3-规划风险管理：输出\">11.1.3 规划风险管理：输出</h3>\n<p>规划风险管理的输出包括：</p>\n<ul>\n<li>风险管理计划\n<ul>\n<li>风险管理战略</li>\n<li>方法论</li>\n<li>角色与职责</li>\n<li>资金</li>\n<li>时间安排</li>\n<li>风险类别</li>\n<li>相关方风险偏好</li>\n<li>风险概率和影响定义</li>\n<li>概率和影响矩阵</li>\n<li>报告格式</li>\n<li>跟踪</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182700-3.png\" alt=\"\"></p>\n<h2 id=\"11-2-识别风险\">11.2 识别风险</h2>\n<p>识别风险是识别单个项目风险以及整体项目风险的来源，并记录风险特征的过程。本过程的主要作用是，记录现有的单个项目风险，以及整体项目风险的来源；同时，汇集相关信息，以便项目团队能够恰当应对已识别的风险。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182700-4.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182700-5.png\" alt=\"\"></p>\n<h3 id=\"11-2-1-识别风险：输入\">11.2.1 识别风险：输入</h3>\n<p>识别风险的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>需求管理计划</li>\n<li>进度管理计划</li>\n<li>成本管理计划</li>\n<li>质量管理计划</li>\n<li>资源管理计划</li>\n<li>风险管理计划</li>\n<li>范围基准</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>成本估算</li>\n<li>持续时间估算</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>需求文件</li>\n<li>资源需求</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>协议</li>\n<li>采购文档</li>\n<li>事业环境因素\n<ul>\n<li>已发布的材料，包括商业风险数据库或核对单；</li>\n<li>学术研究资料；</li>\n<li>标杆对照成果；</li>\n<li>类似项目的行业研究资料。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>项目文档，包括实际数据；</li>\n<li>组织和项目的过程控制资料；</li>\n<li>风险描述的格式；</li>\n<li>以往类似项目的核对单。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"11-2-2-识别风险：工具与技术\">11.2.2 识别风险：工具与技术</h3>\n<p>识别风险的工具与技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>数据收集\n<ul>\n<li>头脑风暴</li>\n<li>核对单</li>\n<li>访谈</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>根本原因分析</li>\n<li>假设条件和制约因素分析</li>\n<li>SWOT 分析</li>\n<li>文件分析</li>\n</ul>\n</li>\n<li>人际关系与团队技能</li>\n<li>提示清单</li>\n<li>会议</li>\n</ul>\n<h3 id=\"11-2-3-识别风险：输出\">11.2.3 识别风险：输出</h3>\n<p>识别风险的输出包括：</p>\n<ul>\n<li>风险登记册\n<ul>\n<li>已识别风险的清单。在风险登记册中，每项单个项目风险都被赋予一个独特的标识号。要以所需的详细程度对已识别风险进行描述，确保明确理解。可以使用结构化的风险描述，来把风险本身与风险原因及风险影响区分开来。</li>\n<li>潜在风险责任人。如果已在识别风险过程中识别出潜在的风险责任人，就要把该责任人记录到风险登记册中。随后将由实施定性风险分析过程进行确认。</li>\n<li>潜在风险应对措施清单。如果已在识别风险过程中识别出某种潜在的风险应对措施，就要把它记录到风险登记册中。随后将由规划风险应对过程进行确认。</li>\n</ul>\n</li>\n<li>风险报告\n<ul>\n<li>整体项目风险的来源。说明哪些是整体项目风险敞口的最重要驱动因素。</li>\n<li>关于已识别单个项目风险的概述信息。例如，已识别的威胁与机会的数量、风险在风险类别中的分布情况、测量指标和发展趋势。</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-3-实施定性风险分析\">11.3 实施定性风险分析</h2>\n<p>实施定性风险分析是通过评估单个项目风险发生的概率和影响以及其他特征，对风险进行优先级排序，从而为后续分析或行动提供基础的过程。本过程的主要作用是重点关注高优先级的风险。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182700-6.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182700-7.png\" alt=\"\"></p>\n<h3 id=\"11-3-1-实施定性风险分析：输入\">11.3.1 实施定性风险分析：输入</h3>\n<p>实施定性风险分析的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>类似项目的行业研究资料</li>\n<li>已发布的材料，包括商业风险数据库或核对单</li>\n</ul>\n</li>\n<li>组织过程资产</li>\n</ul>\n<h3 id=\"11-3-2-实施定性风险分析：工具与技术\">11.3.2 实施定性风险分析：工具与技术</h3>\n<p>实施定性风险分析需要的工具与技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>数据收集</li>\n<li>数据分析\n<ul>\n<li>风险数据质量评估。风险数据是开展定性风险分析的基础。风险数据质量评估旨在评价关于单个项目风险的数据的准确性和可靠性。使用低质量的风险数据，可能导致定性风险分析对项目来说基本没用。如果数据质量不可接受，就可能需要收集更好的数据。可以开展问卷调查，了解项目相关方对数据质量各方面的评价，包括数据的完整性、客观性、相关性和及时性，进而对风险数据的质量进行综合评估。可以计算这些方面的加权平均数，将其作为数据质量的总体分数。</li>\n<li>风险概率和影响评估。风险概率评估考虑的是特定风险发生的可能性，而风险影响评估考虑的是风险对一项或多项项目目标的潜在影响，如进度、成本、质量或绩效。威胁将产生负面的影响，机会将产生正面的影响。要对每个已识别的单个项目风险进行概率和影响评估。风险评估可以采用访谈或会议的形式，参加者将依照他们对风险登记册中所记录的风险类型的熟悉程度而定。项目团队成员和项目外部资深人员应该参加访谈或会议。在访谈或会议期间，评估每个风险的概率水平及其对每项目标的影响级别。如果相关方对概率水平和影响级别的感知存在差异，则应对差异进行探讨。此外，还应记录相应的说明性细节。</li>\n<li>其他风险参数评估。\n<ul>\n<li>紧迫性。为有效应对风险而必须采取应对措施的时间段。时间短就说明紧迫性高。</li>\n<li>邻近性。风险在多长时间后会影响一项或多项项目目标。时间短就说明邻近性高。</li>\n<li>潜伏期。从风险发生到影响显现之间可能的时间段。时间短就说明潜伏期短。</li>\n<li>可管理性。风险责任人（或责任组织）管理风险发生或影响的容易程度。如果容易管理，可管理性就高。</li>\n<li>可控性。风险责任人（或责任组织）能够控制风险后果的程度。如果后果很容易控制，可控性就高。</li>\n<li>可监测性。对风险发生或即将发生进行监测的容易程度。如果风险发生很容易监测，可监测性就高。</li>\n<li>连通性。风险与其他单个项目风险存在关联的程度大小。如果风险与多个其他风险存在关联，连通性就高。</li>\n<li>战略影响力。风险对组织战略目标潜在的正面或负面影响。如果风险对战略目标有重大影响，战略影响力就大。</li>\n<li>密切度。风险被一名或多名相关方认为要紧的程度。被认为很要紧的风险，密切度就高。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>人际关系与团队技能</li>\n<li>风险分类</li>\n<li>数据表现\n<ul>\n<li>概率和影响矩阵：概率和影响矩阵是把每个风险发生的概率和一旦发生对项目目标的影响映射起来的表格。此矩阵对概率和影响进行组合，以便于把单个项目风险划分成不同的优先级组别</li>\n<li>层级图</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"11-3-3-实施定性风险分析：输出\">11.3.3 实施定性风险分析：输出</h3>\n<p>实施定性风险分析的输出包括：</p>\n<ul>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>问题日志</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-4-实施定量风险分析\">11.4 实施定量风险分析</h2>\n<p>实施定量风险分析是就已识别的单个项目风险和不确定性的其他来源对整体项目目标的影响进行定量分析的过程。本过程的主要作用是，量化整体项目风险敞口，并提供额外的定量风险信息，以支持风险应对规划。本过程并非每个项目必需，但如果采用，它会在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182700-8.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182700-9.png\" alt=\"\"></p>\n<p>项目风险管理计划会规定是否需要使用定量风险分析，定量分析最可能适用于大型或复杂的项目、具有战略重要性的项目、合同要求进行定量分析的项目，或主要相关方要求进行定量分析的项目。通过评估所有单个项目风险和其他不确定性来源对项目结果的综合影响，定量风险分析就成为评估整体项目风险的唯一可靠的方法。</p>\n<h3 id=\"11-4-1-实施定量风险分析：输入\">11.4.1 实施定量风险分析：输入</h3>\n<p>实施定量风险分析的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>风险管理计划</li>\n<li>范围基准</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>估算依据</li>\n<li>成本估算</li>\n<li>成本预测</li>\n<li>持续时间估算</li>\n<li>里程碑清单</li>\n<li>资源需求</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n<li>进度预测</li>\n</ul>\n</li>\n<li>事业环境因素</li>\n<li>组织过程资产</li>\n</ul>\n<h3 id=\"11-4-2-实施定量风险分析：工具与技术\">11.4.2 实施定量风险分析：工具与技术</h3>\n<p>实施定量风险分析需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>将单个项目风险和其他不确定性来源的信息转化成用于定量风险分析模型的数值输入；</li>\n<li>选择最适当的方式表示不确定性，以便为特定风险或其他不确定性来源建立模型；</li>\n<li>用适合项目环境的技术建立模型；</li>\n<li>识别最适用于所选建模技术的工具；</li>\n<li>解释定量风险分析的输出。</li>\n</ul>\n</li>\n<li>数据收集</li>\n<li>人际关系与团队技能</li>\n<li>不确定性表现方式</li>\n<li>数据分析\n<ul>\n<li>模拟</li>\n<li>敏感性分析</li>\n<li>决策树分析</li>\n<li>影响图</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"11-4-3-实施定量风险分析：输出\">11.4.3 实施定量风险分析：输出</h3>\n<p>实施定量风险分析的输出包括：</p>\n<ul>\n<li>项目文件更新\n<ul>\n<li>对整体项目风险敞口的评估结果\n<ul>\n<li>项目成功的可能性。基于已识别的单个项目风险和其他不确定性来源，项目实现其主要目标（例如，既定的结束日期或中间里程碑、既定的成本目标）的概率。</li>\n<li>项目固有的变异性。在开展定量分析之时，可能的项目结果的分布区间。</li>\n</ul>\n</li>\n<li>项目详细概率分析的结果。列出定量风险分析的重要输出，如 S 曲线、龙卷风图和关键性指标，以及对它们的叙述性解释。定量风险分析的详细结果可能包括：\n<ul>\n<li>所需的应急储备，以达到实现目标的特定置信水平；</li>\n<li>对项目关键路径有最大影响的单个项目风险或其他不确定性来源的清单；</li>\n<li>整体项目风险的主要驱动因素，即：对项目结果的不确定性有最大影响的因素。</li>\n</ul>\n</li>\n<li>单个项目风险优先级清单。根据敏感性分析的结果，列出对项目造成最大威胁或产生最大机会的单个项目风险。</li>\n<li>定量风险分析结果的趋势。随着在项目生命周期的不同时间重复开展定量风险分析，风险的发展趋势可能逐渐清晰。发展趋势会影响对风险应对措施的规划。</li>\n<li>风险应对建议。风险报告可能根据定量风险分析的结果，针对整体项目风险敞口或关键单个项目风险提出应对建议。这些建议将成为规划风险应对过程的输入。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-5-规划风险应对\">11.5 规划风险应对</h2>\n<p>规划风险应对是为处理整体项目风险敞口，以及应对单个项目风险，而制定可选方案、选择应对策略并商定应对行动的过程。本过程的主要作用是，制定应对整体项目风险和单个项目风险的适当方法；本过程还将分配资源，并根据需要将相关活动添加进项目文件和项目管理计划。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182700-10.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182700-11.png\" alt=\"\"></p>\n<h3 id=\"11-5-1-规划风险应对：输入\">11.5.1 规划风险应对：输入</h3>\n<p>规划风险应对的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>资源管理计划</li>\n<li>风险管理计划</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>项目团队派工单</li>\n<li>资源日历</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素</li>\n<li>组织过程资产\n<ul>\n<li>风险管理计划、风险登记册和风险报告的模板；</li>\n<li>历史数据库；</li>\n<li>类似项目的经验教训知识库。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"11-5-2-规划风险应对：工具与技术\">11.5.2 规划风险应对：工具与技术</h3>\n<p>规划风险应对需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>威胁应对策略；</li>\n<li>机会应对策略；</li>\n<li>应急应对策略；</li>\n<li>整体项目风险应对策略。</li>\n</ul>\n</li>\n<li>数据收集</li>\n<li>人际关系与团队技能</li>\n<li>威胁应对策略\n<ul>\n<li>上报</li>\n<li>规避</li>\n<li>转移</li>\n<li>减轻</li>\n<li>接受</li>\n</ul>\n</li>\n<li>机会应对策略\n<ul>\n<li>上报</li>\n<li>开拓</li>\n<li>分享</li>\n<li>提高</li>\n<li>接受</li>\n</ul>\n</li>\n<li>应急应对策略</li>\n<li>整体项目风险应对策略\n<ul>\n<li>规避</li>\n<li>开拓</li>\n<li>转移或分享</li>\n<li>减轻或提高</li>\n<li>接受</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>备选方案分析</li>\n<li>成本收益分析</li>\n</ul>\n</li>\n<li>决策</li>\n</ul>\n<h3 id=\"11-5-3-规划风险应对：输出\">11.5.3 规划风险应对：输出</h3>\n<p>规划风险应对的输出包括：</p>\n<ul>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>进度管理计划</li>\n<li>成本管理计划</li>\n<li>质量管理计划</li>\n<li>资源管理计划</li>\n<li>采购管理计划</li>\n<li>范围基准</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>成本预测</li>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>项目团队派工单</li>\n<li>风险登记册\n<ul>\n<li>商定的应对策略；</li>\n<li>实施所选应对策略所需要的具体行动；</li>\n<li>风险发生的触发条件、征兆和预警信号；</li>\n<li>实施所选应对策略所需要的预算和进度活动；</li>\n<li>应急计划，以及启动该计划所需的风险触发条件；</li>\n<li>弹回计划，供风险发生且主要应对措施不足以应对时使用；</li>\n<li>在采取预定应对措施之后仍然存在的残余风险，以及被有意接受的风险；</li>\n<li>由实施风险应对措施而直接导致的次生风险。</li>\n</ul>\n</li>\n<li>风险报告</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-6-实施风险应对\">11.6 实施风险应对</h2>\n<p>实施风险应对是执行商定的风险应对计划的过程。本过程的主要作用是，确保按计划执行商定的风险应对措施，来管理整体项目风险敞口、最小化单个项目威胁，以及最大化单个项目机会。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182700-12.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182700-13.png\" alt=\"\"></p>\n<h3 id=\"11-6-1-实施风险应对：输入\">11.6.1 实施风险应对：输入</h3>\n<p>实施风险应对的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n</ul>\n</li>\n<li>组织过程资产</li>\n</ul>\n<h3 id=\"11-6-2-实施风险应对：工具与技术\">11.6.2 实施风险应对：工具与技术</h3>\n<p>实施风险应对需要的工具与技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>人际关系与团队技能</li>\n<li>项目管理信息系统</li>\n</ul>\n<h3 id=\"11-6-3-实施风险应对：输出\">11.6.3 实施风险应对：输出</h3>\n<p>实施风险应对的输出包括：</p>\n<ul>\n<li>变更请求</li>\n<li>项目文件更新\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>项目团队派工单</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-7-监督风险\">11.7 监督风险</h2>\n<p>监督风险是在整个项目期间，监督商定的风险应对计划的实施、跟踪已识别风险、识别和分析新风险，以及评估风险管理有效性的过程。本过程的主要作用是，使项目决策都基于关于整体项目风险敞口和单个项目风险的当前信息。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182700-14.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182700-15.png\" alt=\"\"></p>\n<p>为了确保项目团队和关键相关方了解当前的风险敞口级别，应该通过监督风险过程对项目工作进行持续监督，来发现新出现、正变化和已过时的单个项目风险。监督风险过程采用项目执行期间生成的绩效信息，以确定：</p>\n<ul>\n<li>实施的风险应对是否有效；</li>\n<li>整体项目风险级别是否已改变；</li>\n<li>已识别单个项目风险的状态是否已改变；</li>\n<li>是否出现新的单个项目风险；</li>\n<li>风险管理方法是否依然适用；</li>\n<li>项目假设条件是否仍然成立；</li>\n<li>风险管理政策和程序是否已得到遵守；</li>\n<li>成本或进度应急储备是否需要修改；</li>\n<li>项目策略是否仍然有效。</li>\n</ul>\n<h3 id=\"11-7-1-监督风险：输入\">11.7.1 监督风险：输入</h3>\n<p>监督风险的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n</ul>\n</li>\n<li>工作绩效数据</li>\n<li>工作绩效报告</li>\n</ul>\n<h3 id=\"11-7-2-监督风险：工具与技术\">11.7.2 监督风险：工具与技术</h3>\n<p>监督风险需要的工具与技术包括：</p>\n<ul>\n<li>数据分析\n<ul>\n<li>技术绩效分析</li>\n<li>储备分析</li>\n</ul>\n</li>\n<li>审计</li>\n<li>会议</li>\n</ul>\n<h3 id=\"11-7-3-监督风险：输出\">11.7.3 监督风险：输出</h3>\n<p>监督风险的输出包括：</p>\n<ul>\n<li>工作绩效信息</li>\n<li>变更请求</li>\n<li>项目管理计划更新</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n</ul>\n</li>\n<li>组织过程资产更新\n<ul>\n<li>风险管理计划、风险登记册和风险报告的模板</li>\n<li>风险分解结构</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"12-项目采购管理\">12.项目采购管理</h2>\n<p>项目采购管理包括从项目团队外部采购或获取所需产品、服务或成果的各个过程。项目采购管理包括编制和管理协议所需的管理和控制过程，例如：合同、订购单、协议备忘录（MOA），或服务水平协议（SLA）。被授权采购项目所需货物和（或）服务的人员可以是项目团队、管理层或组织采购部的成员。</p>\n<p><strong>项目采购管理过程包括：</strong></p>\n<p><strong>12.1 规划采购管理</strong> — 记录项目采购决策、明确采购方法，及识别潜在卖方的过程。</p>\n<p><strong>12.2 实施采购</strong> — 获取卖方应答、选择卖方并授予合同的过程。</p>\n<p><strong>12.3 控制采购</strong> — 管理采购关系、监督合同绩效、实施必要的变更和纠偏，以及关闭合同的过程。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182755.png\" alt=\"\"></p>\n<p><strong>项目采购管理的核心概念</strong></p>\n<p>项目采购管理过程涉及到用协议来描述买卖双方之间的关系。协议可以很简单，如以特定人工单价购买所需的工时，也可以很复杂，如多年的国际施工合同。合同签署的方法和合同本身应体现可交付成果或所需人力投入的简单性或复杂性，其书写形式也应符合当地、所在国或国际法中关于合同签署的规定。</p>\n<p>合同应明确说明预期的可交付成果和结果，包括从卖方到买方的任何知识转移。合同中未规定的任何事项则不具法律强制力。开展国际合作的项目经理应牢记，无论合同规定如何详尽，文化和当地法律对合同及其可执行性均有影响。采购合同中包括条款和条件，也可包括买方就卖方应实施工作或应交付产品的其他规定。</p>\n<p>中标人可将所承揽的工作当作一个项目加以管理。在这种情况下：</p>\n<ul>\n<li>买方就变成了承包商、供应商及服务提供商的客户，因此也就是卖方的关键项目相关方。</li>\n<li>卖方的项目管理团队就需要关注工作执行或服务提供所涉及的所有过程。</li>\n<li>对于卖方来说，合同条款和条件以及采购工作说明书 (SOW) 都是其许多管理过程的重要输入。在合同中，可实际列出各种输入（如，主要可交付成果、关键里程碑、成本目标），或者可限制项目团队的选择余地（如，在 IT 整合项目中，关于人员配备的决定往往要征得买方的批准）。另外，采购工作说明书可能使用其他名称，如技术工作说明书。</li>\n<li>卖方本身也可能成为更低层级的产品、服务和材料分包商及供应商的买方。</li>\n</ul>\n<p><strong>采购管理的发展趋势和新兴实践</strong></p>\n<ul>\n<li>工具的改进</li>\n<li>更先进的风险管理</li>\n<li>变化中的合同签署实践</li>\n<li>物流和供应链管理</li>\n<li>技术和相关方关系</li>\n<li>试用采购</li>\n</ul>\n<p><strong>裁剪时需要考虑的因素</strong></p>\n<ul>\n<li>采购的复杂性</li>\n<li>物理地点</li>\n<li>治理和法规环境</li>\n<li>承包商的可用性</li>\n</ul>\n<h2 id=\"12-1-规划采购管理\">12.1 规划采购管理</h2>\n<p>规划采购管理是记录项目采购决策、明确采购方法，及识别潜在卖方的过程。本过程的主要作用是，确定是否从项目外部获取货物和服务，如果是，则还要确定将在什么时间、以什么方式获取什么货物和服务。货物和服务可从执行组织的其他部门采购，或者从外部渠道采购。本过程仅开展一次或在项目的预定义点开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182755-1.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182755-2.png\" alt=\"\"></p>\n<p><strong>典型的步骤可能有：</strong></p>\n<ul>\n<li>准备采购工作说明书 (SOW) 或工作大纲 (TOR)；</li>\n<li>准备高层级的成本估算，制定预算；</li>\n<li>发布招标广告；</li>\n<li>确定合格卖方的短名单；</li>\n<li>准备并发布招标文件；</li>\n<li>由卖方准备并提交建议书；</li>\n<li>对建议书开展技术（包括质量）评估；</li>\n<li>对建议书开展成本评估；</li>\n<li>准备最终的综合评估报告（包括质量及成本），选出中标建议书；</li>\n<li>结束谈判，买方和卖方签署合同。<br>\n项目进度计划对规划采购管理过程中的采购策略制定有重要影响。在制定采购管理计划时所做出的决定也会影响项目进度计划。在开展制定进度计划过程、估算活动资源过程以及自制或外购决策制定时，都需要考虑这些决定。</li>\n</ul>\n<h3 id=\"12-1-1-规划采购管理：输入\">12.1.1 规划采购管理：输入</h3>\n<p>规划采购管理的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>商业文件\n<ul>\n<li>商业论证</li>\n<li>收益管理计划</li>\n</ul>\n</li>\n<li>项目管理计划\n<ul>\n<li>范围管理计划</li>\n<li>质量管理计划</li>\n<li>资源管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>里程碑清单</li>\n<li>项目团队派工单</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n<li>资源需求</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>市场条件；</li>\n<li>可从市场获得的产品、服务和成果；</li>\n<li>卖方，包括其以往绩效或声誉；</li>\n<li>关于产品、服务和成果的典型条款和条件，或适用于特定行业的典型条款和条件；</li>\n<li>特殊的当地要求，例如关于雇用当地员工或卖方的法规要求；</li>\n<li>关于采购的法律建议；</li>\n<li>合同管理系统，包括合同变更控制程序；</li>\n<li>已有的多层级供应商系统，其中列出了基于以往经验而预审合格的卖方；</li>\n<li>财务会计和合同支付系统。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>预先批准的卖方清单</li>\n<li>正式的采购政策、程序和指南</li>\n<li>合同类型\n<ul>\n<li>总价合同：此类合同为既定产品、服务或成果的采购设定一个总价。这种合同应在已明确定义需求，且不会出现重大范围变更的情况下使用。</li>\n<li>成本补偿合同：此类合同向卖方支付为完成工作而发生的全部合法实际成本（可报销成本），外加一笔费用作为卖方的利润。这种合同适用于：工作范围预计会在合同执行期间发生重大变更。</li>\n<li>工料合同（T&amp;M）：工料合同（又称时间和手段合同），是兼具成本补偿合同和总价合同特点的混合型合同。这种合同往往适用于：在无法快速编制出准确的工作说明书的情况下扩充人员、聘用专家或寻求外部支持。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"12-1-2-规划采购管理：工具与技术\">12.1.2 规划采购管理：工具与技术</h3>\n<p>规划采购管理需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>采购与购买；</li>\n<li>合同类型和合同文件；</li>\n<li>法规及合规性。</li>\n</ul>\n</li>\n<li>数据收集</li>\n<li>数据分析</li>\n<li>供方选择分析\n<ul>\n<li>最低成本</li>\n<li>仅凭资质</li>\n<li>基于质量或技术方案得分</li>\n<li>基于质量和成本</li>\n<li>独有来源</li>\n<li>固定预算</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"12-1-3-规划采购管理：输出\">12.1.3 规划采购管理：输出</h3>\n<p>规划采购管理的输出包括：</p>\n<ul>\n<li>采购管理计划\n<ul>\n<li>如何协调采购与项目的其他工作，例如，项目进度计划制定和控制；</li>\n<li>开展重要采购活动的时间表；</li>\n<li>用于管理合同的采购测量指标；</li>\n<li>与采购有关的相关方角色和职责；如果执行组织有采购部，项目团队拥有的职权和受到的限制；</li>\n<li>可能影响采购工作的制约因素和假设条件；</li>\n<li>司法管辖权和付款货币；</li>\n<li>是否需要编制独立估算，以及是否应将其作为评价标准；</li>\n<li>风险管理事项，包括对履约保函或保险合同的要求，以减轻某些项目风险；</li>\n<li>拟使用的预审合格的卖方（如果有）。</li>\n</ul>\n</li>\n<li>采购策略\n<ul>\n<li>交付方法。对专业服务项目和建筑施工项目，应该采用不同的交付方法。\n<ul>\n<li>专业服务项目的交付方法包括：买方或服务提供方不得分包、买方或服务提供方可以分包、买方和服务提供方设立合资企业、买方或服务提供方仅充当代表。</li>\n<li>而工业或商业施工项目的交付方法包括（但不限于）：交钥匙式、设计-建造 (DB)、设计-招标-建造 (DBB)、设计-建造-运营 (DBO)、建造-拥有-运营-转让 (BOOT)，及其他。</li>\n</ul>\n</li>\n<li>合同支付类型。合同支付类型与项目交付方法无关，需要与采购组织的内部财务系统相协调。它们包括（但不限于）以下合同类型及其变种：总价、固定总价、成本加奖励费用、成本加激励费用、工料、目标成本及其他。\n<ul>\n<li>总价合同适用于工作类型可预知、需求能清晰定义且不太可能变更的情况；</li>\n<li>成本补偿合同适用于工作不断演进、很可能变更或未明确定义的情况；</li>\n<li>激励和奖励费用可用于协调买方和卖方的目标。</li>\n</ul>\n</li>\n<li>采购阶段。采购策略也可以包括与采购阶段有关的信息，这种信息可能包括：\n<ul>\n<li>采购工作的顺序安排或阶段划分，每个阶段的描述，以及每个阶段的具体目标；</li>\n<li>用于监督的采购绩效指标和里程碑；</li>\n<li>从一个阶段过渡到下一个阶段的标准；</li>\n<li>用于追踪采购进展的监督和评估计划；</li>\n<li>向后续阶段转移知识的过程。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>招标文件\n<ul>\n<li>信息邀请书 (RFI)。如果需要卖方提供关于拟采购货物和服务的更多信息，就使用信息邀请书。随后一般还会使用报价邀请书或建议邀请书。</li>\n<li>报价邀请书 (RFQ)。如果需要供应商提供关于将如何满足需求和（或）将需要多少成本的更多信息，就使用报价邀请书。</li>\n<li>建议邀请书 (RFP)。如果项目中出现问题且解决办法难以确定，就使用建议邀请书。这是最正式的“邀请书”文件，需要遵守与内容、时间表，以及卖方应答有关的严格的采购规则。</li>\n</ul>\n</li>\n<li>采购工作说明书\n<ul>\n<li>承包商需要执行的任务，以及所需的协调工作；</li>\n<li>承包商必须达到的适用标准；</li>\n<li>需要提交批准的数据；</li>\n<li>由买方提供给承包商的，将用于合同履行的全部数据和服务的详细清单（若适用）；</li>\n<li>关于初始成果提交和审查（或审批）的进度计划。</li>\n</ul>\n</li>\n<li>供方选择标准\n<ul>\n<li>能力和潜能；</li>\n<li>产品成本和生命周期成本；</li>\n<li>交付日期；</li>\n<li>技术专长和方法；</li>\n<li>具体的相关经验；</li>\n<li>用于响应工作说明书的工作方法和工作计划；</li>\n<li>关键员工的资质、可用性和胜任力；</li>\n<li>公司的财务稳定性；</li>\n<li>管理经验；</li>\n<li>知识转移计划，包括培训计划。</li>\n</ul>\n</li>\n<li>自制或外购决策</li>\n<li>独立成本估算</li>\n<li>变更请求</li>\n<li>项目文件更新\n<ul>\n<li>经验教训登记册</li>\n<li>里程碑清单</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>组织过程资产更新</li>\n</ul>\n<h2 id=\"12-2-实施采购\">12.2 实施采购</h2>\n<p>实施采购是获取卖方应答、选择卖方并授予合同的过程。本过程的主要作用是，选定合格卖方并签署关于货物或服务交付的法律协议。本过程的最后成果是签订的协议，包括正式合同。本过程应根据需要在整个项目期间定期开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182755-3.png\" alt=\"\"></p>\n<p><img src=\"https://www.zabbx.cn/upload/2020/07/7-0077ebfce04745929c953bd559d7d7f3.png\" alt=\"\"></p>\n<h3 id=\"12-2-1-实施采购：输入\">12.2.1 实施采购：输入</h3>\n<p>实施采购的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>范围管理计划</li>\n<li>需求管理计划</li>\n<li>沟通管理计划</li>\n<li>风险管理计划</li>\n<li>采购管理计划</li>\n<li>配置管理计划</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>需求文件</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>采购文档\n<ul>\n<li>招标文件</li>\n<li>采购工作说明书</li>\n<li>独立成本估算</li>\n<li>供方选择标准</li>\n<li>卖方建议书</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>关于采购的当地法律和法规；</li>\n<li>确保主要采购涉及当地卖方的当地法律和法规；</li>\n<li>制约采购过程的外部经济环境；</li>\n<li>市场条件；</li>\n<li>以往与卖方合作的相关经验，包括正反两方面；</li>\n<li>之前使用的协议；</li>\n<li>合同管理系统。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>预审合格的优先卖方清单；</li>\n<li>会影响卖方选择的组织政策；</li>\n<li>组织中关于协议起草及签订的具体模板或指南；</li>\n<li>关于付款申请和支付过程的财务政策和程序。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"12-2-2-实施采购：工具与技术\">12.2.2 实施采购：工具与技术</h3>\n<p>实施采购需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>建议书评估；</li>\n<li>技术或相关主题事宜；</li>\n<li>相关的职能领域，如财务、工程、设计、开发、供应链管理等；</li>\n<li>行业监管环境；</li>\n<li>法律法规和合规性要求；</li>\n<li>谈判。</li>\n</ul>\n</li>\n<li>广告</li>\n<li>投标人会议</li>\n<li>数据分析</li>\n<li>人际关系与团队技能</li>\n</ul>\n<h3 id=\"12-2-3-实施采购：输出\">12.2.3 实施采购：输出</h3>\n<p>实施采购的输出包括：</p>\n<ul>\n<li>选定的卖方</li>\n<li>协议\n<ul>\n<li>采购工作说明书或主要的可交付成果；</li>\n<li>进度计划、里程碑，或进度计划中规定的日期；</li>\n<li>绩效报告；</li>\n<li>定价和支付条款；</li>\n<li>检查、质量和验收标准；</li>\n<li>担保和后续产品支持；</li>\n<li>激励和惩罚；</li>\n<li>保险和履约保函；</li>\n<li>下属分包商批准；</li>\n<li>一般条款和条件；</li>\n<li>变更请求处理；</li>\n<li>终止条款和替代争议解决方法。</li>\n</ul>\n</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>需求管理计划</li>\n<li>质量管理计划</li>\n<li>沟通管理计划</li>\n<li>风险管理计划</li>\n<li>采购管理计划</li>\n<li>范围基准</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>经验教训登记册</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n<li>资源日历</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>组织过程资产更新\n<ul>\n<li>潜在和预审合格的卖方清单；</li>\n<li>与卖方合作的相关经验，包括正反两方面。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"12-3-控制采购\">12.3 控制采购</h2>\n<p>控制采购是管理采购关系，监督合同绩效，实施必要的变更和纠偏，以及关闭合同的过程。本过程的主要作用是，确保买卖双方履行法律协议，满足项目需求。本过程应根据需要在整个项目期间开展。</p>\n<p><img src=\"https://www.zabbx.cn/upload/2020/07/8-7272801c1a4d4d5089a632739bbd8ced.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182755-4.png\" alt=\"\"></p>\n<p>合同管理活动可能包括：</p>\n<ul>\n<li>收集数据和管理项目记录，包括维护对实体和财务绩效的详细记录，以及建立可测量的采购绩效指标；</li>\n<li>完善采购计划和进度计划；</li>\n<li>建立与采购相关的项目数据的收集、分析和报告机制，并为组织编制定期报告；</li>\n<li>监督采购环境，以便引导或调整实施；</li>\n<li>向卖方付款。</li>\n</ul>\n<h3 id=\"12-3-1-控制采购：输入\">12.3.1 控制采购：输入</h3>\n<p>控制采购的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>需求管理计划</li>\n<li>风险管理计划</li>\n<li>采购管理计划</li>\n<li>变更管理计划</li>\n<li>进度基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>经验教训登记册</li>\n<li>里程碑清单</li>\n<li>质量报告</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>协议</li>\n<li>采购文档</li>\n<li>批准的变更请求</li>\n<li>工作绩效数据</li>\n<li>事业环境因素\n<ul>\n<li>合同变更控制系统；</li>\n<li>市场条件；</li>\n<li>财务管理和应付账款系统；</li>\n<li>采购组织的道德规范。</li>\n</ul>\n</li>\n<li>组织过程资产</li>\n</ul>\n<h3 id=\"12-3-2-控制采购：工具与技术\">12.3.2 控制采购：工具与技术</h3>\n<p>控制采购需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>相关的职能领域，如财务、工程、设计、开发、供应链管理等；</li>\n<li>法律法规和合规性要求；</li>\n<li>索赔管理。</li>\n</ul>\n</li>\n<li>索赔管理</li>\n<li>数据分析\n<ul>\n<li>绩效审查</li>\n<li>挣值分析（EVA）</li>\n<li>趋势分析</li>\n</ul>\n</li>\n<li>检查</li>\n<li>审计</li>\n</ul>\n<h3 id=\"12-3-3-控制采购：输出\">12.3.3 控制采购：输出</h3>\n<p>控制采购的输出包括：</p>\n<ul>\n<li>采购关闭</li>\n<li>工作绩效信息</li>\n<li>采购文档更新</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>风险管理计划</li>\n<li>采购管理计划</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>经验教训登记册</li>\n<li>资源需求</li>\n<li>需求跟踪矩阵</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>组织过程资产更新\n<ul>\n<li>支付计划和请求</li>\n<li>卖方绩效评估文件</li>\n<li>预审合格卖方清单更新</li>\n<li>经验教训登记册</li>\n<li>采购档案</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"13-项目相关方管理\">13.项目相关方管理</h2>\n<p>项目相关方管理包括用于开展下列工作的各个过程：识别能够影响项目或会受项目影响的人员、团体或组织，分析相关方对项目的期望和影响，制定合适的管理策略来有效调动相关方参与项目决策和执行。用这些过程分析相关方期望，评估他们对项目或受项目影响的程度，以及制定策略来有效引导相关方支持项目决策、规划和执行。</p>\n<p><strong>项目相关方管理的过程是：</strong></p>\n<p><strong>13.1 识别相关方</strong> — 识别相关方是定期识别项目相关方，分析和记录他们的利益、参与度、相互依赖性、影响力和对项目成功的潜在影响的过程。</p>\n<p><strong>13.2 规划相关方参与</strong> — 规划相关方参与是根据相关方的需求、期望、利益和对项目的潜在影响，制定项目相关方参与项目的方法的过程。</p>\n<p><strong>13.3 管理相关方参与</strong> — 管理相关方参与是与相关方进行沟通和协作，以满足其需求与期望，处理问题，并促进相关方合理参与的过程。</p>\n<p><strong>13.4 监督相关方参与</strong> — 监督项目相关方关系，并通过修订参与策略和计划来引导相关方合理参与项目的过程。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182902.png\" alt=\"\"></p>\n<p><strong>项目相关方管理的核心概念</strong></p>\n<p>相关方满意度应作为项目目标加以识别和管理。有效引导相关方参与的关键是重视与所有相关方保持持续沟通（包括团队成员），以理解他们的需求和期望、处理所发生的问题、管理利益冲突，并促进相关方参与项目决策和活动。</p>\n<p>至少要在以下时点开展这些活动：</p>\n<ul>\n<li>项目进入其生命周期的不同阶段；</li>\n<li>当前相关方不再与项目工作有关，或者在项目的相关方社区中出现了新的相关方成员；</li>\n<li>组织内部或更大区域的相关方社区发生重大变化。</li>\n</ul>\n<p><strong>项目相关方管理的发展趋势和新兴实践</strong></p>\n<ul>\n<li>识别所有相关方，而非在限定范围内；</li>\n<li>确保所有团队成员都涉及引导相关方参与的活动；</li>\n<li>定期审查相关方社区，往往与单个项目风险的审查并行开展；</li>\n<li>应用“共创”概念，咨询最受项目工作或成果影响的相关方。该概念的重点是，将团队内受影响的相关方视为合作伙伴。</li>\n<li>关注与相关方有效参与程度有关的正面及负面价值。正面价值是相关方（尤其是强大相关方）对项目的更积极支持所带来的效益；负面价值是因相关方未有效参与而造成的真实成本，包括产品召回、组织信誉损失或项目信誉损失。</li>\n</ul>\n<p>裁剪时需要考虑的因素</p>\n<ul>\n<li>相关方多样性</li>\n<li>相关方关系的复杂性</li>\n<li>沟通技术</li>\n</ul>\n<h2 id=\"13-1-识别相关方\">13.1 识别相关方</h2>\n<p>识别相关方是定期识别项目相关方，分析和记录他们的利益、参与度、相互依赖性、影响力和对项目成功的潜在影响的过程。本过程的主要作用是，使项目团队能够建立对每个相关方或相关方群体的适度关注。本过程应根据需要在整个项目期间定期开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182902-1.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182902-2.png\" alt=\"\"></p>\n<p>本过程通常在编制和批准项目章程之前或同时首次开展。本过程需在必要时重复开展，至少应在每个阶段开始时，以及项目或组织出现重大变化时重复开展。每次重复开展本过程，都应通过查阅项目管理计划组件及项目文件，来识别有关的项目相关方。</p>\n<h3 id=\"13-1-1-识别相关方：输入\">13.1.1 识别相关方：输入</h3>\n<p>识别相关方的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>商业文件\n<ul>\n<li>商业论证</li>\n<li>收益管理计划</li>\n</ul>\n</li>\n<li>项目管理计划\n<ul>\n<li>沟通管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>变更日志</li>\n<li>问题日志</li>\n<li>需求文件</li>\n</ul>\n</li>\n<li>协议</li>\n<li>事业环境因素\n<ul>\n<li>组织文化、政治氛围，以及治理框架；</li>\n<li>政府或行业标准（法规、产品标准和行为规范）；</li>\n<li>全球、区域或当地的趋势、实践或习惯；</li>\n<li>设施和资源的地理分布。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>相关方登记册模板和说明；</li>\n<li>以往项目的相关方登记册；</li>\n<li>经验教训知识库，包括与相关方偏好、行动和参与有关的信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"13-1-2-识别相关方：工具与技术\">13.1.2 识别相关方：工具与技术</h3>\n<p>识别相关方需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>理解组织内的政治和权力结构；</li>\n<li>了解所在组织和其他受影响组织（包括客户及其他组织）的环境和文化；</li>\n<li>了解项目所在行业或项目可交付成果类型；</li>\n<li>了解个体团队成员的贡献和专长。</li>\n</ul>\n</li>\n<li>数据收集\n<ul>\n<li>问卷和调查</li>\n<li>头脑风暴</li>\n</ul>\n</li>\n<li>数据分析数据表现\n<ul>\n<li>相关方分析\n<ul>\n<li>兴趣</li>\n<li>权利</li>\n<li>所有权</li>\n<li>知识</li>\n<li>贡献</li>\n</ul>\n</li>\n<li>文件分析</li>\n</ul>\n</li>\n<li>数据表现\n<ul>\n<li>权力利益方格、权力影响方格，或作用影响方格</li>\n<li>相关方立方体</li>\n<li>凸显模型</li>\n<li>影响方向</li>\n<li>优先级排序</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"13-1-3-识别相关方：输出\">13.1.3 识别相关方：输出</h3>\n<p>识别相关方的输出包括：</p>\n<ul>\n<li>相关方登记册\n<ul>\n<li>身份信息</li>\n<li>评估信息</li>\n<li>相关方分类</li>\n</ul>\n</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>需求管理计划</li>\n<li>沟通管理计划</li>\n<li>风险管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>问题日志</li>\n<li>风险登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"13-2-规划相关方参与\">13.2 规划相关方参与</h2>\n<p>规划相关方参与是根据相关方的需求、期望、利益和对项目的潜在影响，制定项目相关方参与项目的方法的过程。本过程的主要作用是，提供与相关方进行有效互动的可行计划。本过程应根据需要在整个项目期间定期开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182902-3.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182902-4.png\" alt=\"\"></p>\n<p>会触发该计划更新的典型情况包括（但不限于）：</p>\n<ul>\n<li>项目新阶段开始；</li>\n<li>组织结构或行业内部发生变化；</li>\n<li>新的个人或群体成为相关方，现有相关方不再是相关方社区的成员，或特定相关方对项目成功的重要性发生变化；</li>\n<li>当其他项目过程（如变更管理、风险管理或问题管理）的输出导致需要重新审查相关方参与策略。<br>\n这些情况都可能导致已识别相关方的相对重要性发生变化。</li>\n</ul>\n<h3 id=\"13-2-1-规划相关方参与：输入\">13.2.1 规划相关方参与：输入</h3>\n<p>规划相关方参与的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划\n<ul>\n<li>资源管理计划</li>\n<li>沟通管理计划</li>\n<li>风险管理计划</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>变更日志</li>\n<li>问题日志</li>\n<li>项目进度计划</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>协议</li>\n<li>事业环境因素\n<ul>\n<li>组织文化、政治氛围，以及治理框架；</li>\n<li>人事管理政策；</li>\n<li>相关方风险偏好；</li>\n<li>已确立的沟通渠道；</li>\n<li>全球、区域或当地的趋势、实践或习惯；</li>\n<li>设施和资源的地理分布。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>企业的社交媒体、道德和安全政策及程序；</li>\n<li>企业的问题、风险、变更和数据管理政策及程序；</li>\n<li>组织对沟通的要求；</li>\n<li>制作、交换、储存和检索信息的标准化指南；</li>\n<li>经验教训知识库，包括与相关方偏好、行动和参与有关的信息；</li>\n<li>支持有效相关方参与所需的软件工具。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"13-2-2-规划相关方参与：工具与技术\">13.2.2 规划相关方参与：工具与技术</h3>\n<p>规划相关方参与需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>组织内部及外部的政治和权力结构；</li>\n<li>组织及组织外部的环境和文化；</li>\n<li>相关方参与过程使用的分析和评估技术；</li>\n<li>沟通手段和策略；</li>\n<li>来自以往项目的关于相关方、相关方群体及相关方组织（他们可能参与过以往的类似项目）的特征的知识。</li>\n</ul>\n</li>\n<li>数据收集</li>\n<li>数据分析\n<ul>\n<li>假设条件和制约因素分析</li>\n<li>根本原因分析</li>\n</ul>\n</li>\n<li>决策</li>\n<li>数据表现\n<ul>\n<li>思维导图</li>\n<li>相关方参与度评估矩阵\n<ul>\n<li>不了解型</li>\n<li>抵制型</li>\n<li>中立型</li>\n<li>支持型</li>\n<li>领导型</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"13-2-3-规划相关方参与：输出\">13.2.3 规划相关方参与：输出</h3>\n<p>规划相关方参与的输出包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>相关方参与计划</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"13-3-管理相关方参与\">13.3 管理相关方参与</h2>\n<p>管理相关方参与是与相关方进行沟通和协作以满足其需求与期望、处理问题，并促进相关方合理参与的过程。本过程的主要作用是，让项目经理能够提高相关方的支持，并尽可能降低相关方的抵制。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182902-5.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182902-6.png\" alt=\"\"></p>\n<p>在管理相关方参与过程中，需要开展多项活动，例如：</p>\n<ul>\n<li>在适当的项目阶段引导相关方参与，以便获取、确认或维持他们对项目成功的持续承诺；</li>\n<li>通过谈判和沟通管理相关方期望；</li>\n<li>处理与相关方管理有关的任何风险或潜在关注点，预测相关方可能在未来引发的问题；</li>\n<li>澄清和解决已识别的问题。<br>\n管理相关方参与有助于确保相关方明确了解项目目的、目标、收益和风险，以及他们的贡献将如何促进项目成功。</li>\n</ul>\n<h3 id=\"13-3-1-管理相关方参与：输入\">13.3.1 管理相关方参与：输入</h3>\n<p>管理相关方参与的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>沟通管理计划</li>\n<li>风险管理计划</li>\n<li>相关方参与计划</li>\n<li>变更管理计划</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>变更日志</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织文化、政治氛围，以及组织的治理结构；</li>\n<li>人事管理政策；</li>\n<li>相关方风险临界值；</li>\n<li>已确立的沟通渠道；</li>\n<li>全球、区域或当地的趋势、实践或习惯；</li>\n<li>设施和资源的地理分布。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>企业的社交媒体、道德和安全政策及程序；</li>\n<li>企业的问题、风险、变更和数据管理政策及程序；</li>\n<li>组织对沟通的要求；</li>\n<li>制作、交换、储存和检索信息的标准化指南；</li>\n<li>以往类似项目的历史信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"13-3-2-管理相关方参与：工具与技术\">13.3.2 管理相关方参与：工具与技术</h3>\n<p>管理相关方参与需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>组织内部及外部的政治和权力结构；</li>\n<li>组织及组织外部的环境和文化；</li>\n<li>相关方参与过程使用的分析和评估技术；</li>\n<li>沟通方法和策略；</li>\n<li>可能参与过以往类似项目的相关方、相关方群体及相关方组织的特征。</li>\n<li>需求管理、供应商管理和变更管理。</li>\n</ul>\n</li>\n<li>沟通技能\n<ul>\n<li>正式与非正式对话；</li>\n<li>问题识别和讨论；</li>\n<li>会议；</li>\n<li>进展报告；</li>\n<li>调查。</li>\n</ul>\n</li>\n<li>人际关系与团队技能\n<ul>\n<li>冲突管理</li>\n<li>文化意识</li>\n<li>谈判</li>\n<li>观察和交谈</li>\n<li>政治意识</li>\n</ul>\n</li>\n<li>基本规则</li>\n<li>会议\n<ul>\n<li>决策；</li>\n<li>问题解决；</li>\n<li>经验教训和回顾总结；</li>\n<li>项目开工；</li>\n<li>迭代规划；</li>\n<li>状态更新。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"13-3-3-管理相关方参与：输出\">13.3.3 管理相关方参与：输出</h3>\n<p>管理相关方参与的输出包括：</p>\n<ul>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>沟通管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>变更日志</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"13-4-监督相关方参与\">13.4 监督相关方参与</h2>\n<p>监督相关方参与是监督项目项目相关方关系，并通过修订参与策略和计划来引导相关方合理参与项目的过程。本过程的主要作用是，随着项目进展和环境变化，维持或提升相关方参与活动的效率和效果。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182902-7.png\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1720220417182902-8.png\" alt=\"\"></p>\n<h3 id=\"13-4-1-监督相关方参与：输入\">13.4.1 监督相关方参与：输入</h3>\n<p>监督相关方参与的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>资源管理计划</li>\n<li>沟通管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>项目沟通记录</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>工作绩效数据</li>\n<li>事业环境因素\n<ul>\n<li>组织文化、政治氛围，以及治理框架；</li>\n<li>人事管理政策；</li>\n<li>相关方风险临界值；</li>\n<li>已确立的沟通渠道；</li>\n<li>全球、区域或当地的趋势、实践或习惯；</li>\n<li>设施和资源的地理分布。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>企业的社交媒体、道德和安全政策及程序；</li>\n<li>企业的问题、风险、变更和数据管理政策及程序；</li>\n<li>组织对沟通的要求；</li>\n<li>制作、交换、储存和检索信息的标准化指南；</li>\n<li>以往项目的历史信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"13-4-2-监督相关方参与：工具与技术\">13.4.2 监督相关方参与：工具与技术</h3>\n<p>监督相关方参与需要的工具与技术包括：</p>\n<ul>\n<li>数据分析\n<ul>\n<li>备选方案分析</li>\n<li>根本原因分析</li>\n<li>相关方分析</li>\n</ul>\n</li>\n<li>决策\n<ul>\n<li>多标准决策分析</li>\n<li>投票</li>\n</ul>\n</li>\n<li>数据表现</li>\n<li>沟通技能\n<ul>\n<li>反馈</li>\n<li>演示</li>\n</ul>\n</li>\n<li>人际关系与团队技能\n<ul>\n<li>积极倾听</li>\n<li>文化意识</li>\n<li>领导力</li>\n<li>人际交往</li>\n<li>政治意识</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"13-4-3-监督相关方参与：输出\">13.4.3 监督相关方参与：输出</h3>\n<p>监督相关方参与的输出包括：</p>\n<ul>\n<li>工作绩效数据</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>资源管理计划</li>\n<li>沟通管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n</ul>\n<p>项目管理过程组与知识领域总表</p>\n<ul>\n<li>\n<table>\n<thead>\n<tr>\n<th>知识领域</th>\n<th>启动过程组</th>\n<th>规划过程组</th>\n<th>执行过程组</th>\n<th>监控过程组</th>\n<th>收尾过程组</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>项目整合管理</strong></td>\n<td>4.1 制定项目章程</td>\n<td>4.2 制定项目管理计划 4.4 管理项目知识</td>\n<td>4.3 指导与管理项目工作</td>\n<td>4.5 监控项目工作4.6实施整体变更控制</td>\n<td>4.7 结束项目或阶段</td>\n</tr>\n<tr>\n<td><strong>项目范围管理</strong></td>\n<td></td>\n<td>5.1规划范围管理5.2 手机需求5.3 定义范围5.4 创建WBS</td>\n<td></td>\n<td>5.5 确认范围5.6 控制范围</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>项目进度管理</strong></td>\n<td></td>\n<td>6.1 规划进度管理6.2 定义活动6.3 排序活动顺序6.4 估算活动持续时间6.5 制定进度计划</td>\n<td></td>\n<td>6.6 控制进度</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>项目成本管理</strong></td>\n<td></td>\n<td>7.1 规划成本管理7.2 估算成本7.3 制定预算</td>\n<td></td>\n<td>7.4 控制成本</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>项目质量管理</strong></td>\n<td></td>\n<td>8.1 规划质量管理</td>\n<td>8.2 管理质量</td>\n<td>8.3 控制质量</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>项目资源管理</strong></td>\n<td></td>\n<td>9.1 规划资源管理9.2 估算活动资源</td>\n<td>9.3 获取资源9.4 建设团队9.5 管理团队</td>\n<td>9.6 控制资源</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>项目沟通管理</strong></td>\n<td></td>\n<td>10.1 规划沟通管理</td>\n<td>10.2 管理沟通</td>\n<td>10.3 监督沟通</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>项目风险管理</strong></td>\n<td></td>\n<td>11.1 规划风险管理11.2 识别风险11.3 实施定性风险分析11.4 实施定量风险分析11.5 规划风险应对</td>\n<td>11.6 实施风险应对</td>\n<td>11.7 监督风险</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>项目采购管理</strong></td>\n<td></td>\n<td>12.1 规划采购管理</td>\n<td>12.2 实施采购</td>\n<td>12.3 控制采购</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>项目相关方管理</strong></td>\n<td>13.1 识别相关方</td>\n<td>13.2 规划相关方参与</td>\n<td>13.3 管理相关方参与</td>\n<td>13.4 监督相关方参与</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<p>编辑整理 <a target=\"_blank\" rel=\"noopener\" href=\"https://www.zabbx.cn/archives/pmbok%E6%8C%87%E5%8D%97%E7%AC%AC6%E7%89%88-1%E5%BC%95%E8%AE%BA\">zabbx</a></p>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "pmbok",
                "管理",
                "ipd",
                "绩效"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/39563241/",
            "url": "https://blog.17lai.site/posts/39563241/",
            "title": "三万字无坑搭建基于Docker+K8S+GitLab/SVN+Jenkins+Harbor持续集成交付环境",
            "date_published": "2022-04-16T10:49:57.000Z",
            "content_html": "<blockquote>\n<p>最近在 K8S 1.18.2 版本的集群上搭建DevOps环境，期间遇到了各种坑。目前，搭建环境的过程中出现的各种坑均已被填平，特此记录，并分享给大家！</p>\n<p>文章和搭建环境所需要的yml文件已收录到：<a target=\"_blank\" rel=\"noopener\" href=\"https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fsunshinelyz%2Ftechnology-binghe\">https://github.com/sunshinelyz/technology-binghe</a> 和 <a target=\"_blank\" rel=\"noopener\" href=\"https://links.jianshu.com/go?to=https%3A%2F%2Fgitee.com%2Fbinghe001%2Ftechnology-binghe\">https://gitee.com/binghe001/technology-binghe</a> 。如果文件对你有点帮助，别忘记给个Star哦！</p>\n</blockquote>\n<h2 id=\"服务器规划\">服务器规划</h2>\n<table>\n<thead>\n<tr>\n<th>IP</th>\n<th>主机名</th>\n<th>节点</th>\n<th>操作系统</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>192.168.175.101</td>\n<td>binghe101</td>\n<td>K8S Master</td>\n<td>CentOS 8.0.1905</td>\n</tr>\n<tr>\n<td>192.168.175.102</td>\n<td>binghe102</td>\n<td>K8S Worker</td>\n<td>CentOS 8.0.1905</td>\n</tr>\n<tr>\n<td>192.168.175.103</td>\n<td>binghe103</td>\n<td>K8S Worker</td>\n<td>CentOS 8.0.1905</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"安装环境版本\">安装环境版本</h2>\n<table>\n<thead>\n<tr>\n<th>软件名称</th>\n<th>软件版本</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Docker</td>\n<td>19.03.8</td>\n<td>提供容器环境</td>\n</tr>\n<tr>\n<td>docker-compose</td>\n<td>1.25.5</td>\n<td>定义和运行由多个容器组成的应用</td>\n</tr>\n<tr>\n<td>K8S</td>\n<td>1.8.12</td>\n<td>是一个开源的，用于管理云平台中多个主机上的容器化的应用，Kubernetes的目标是让部署容器化的应用简单并且高效（powerful）,Kubernetes提供了应用部署，规划，更新，维护的一种机制。</td>\n</tr>\n<tr>\n<td>GitLab</td>\n<td>12.1.6</td>\n<td>代码仓库（与SVN安装一个即可）</td>\n</tr>\n<tr>\n<td>Harbor</td>\n<td>1.10.2</td>\n<td>私有镜像仓库</td>\n</tr>\n<tr>\n<td>Jenkins</td>\n<td>2.89.3</td>\n<td>持续集成交付</td>\n</tr>\n<tr>\n<td>SVN</td>\n<td>1.10.2</td>\n<td>代码仓库（与GitLab安装一个即可）</td>\n</tr>\n<tr>\n<td>JDK</td>\n<td>1.8.0_202</td>\n<td>Java运行基础环境</td>\n</tr>\n<tr>\n<td>maven</td>\n<td>3.6.3</td>\n<td>构建项目的基础插件</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"服务器免密码登录\">服务器免密码登录</h2>\n<p>在各服务器执行如下命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen -t rsa\n<span class=\"token function\">cat</span> ~/.ssh/id_rsa.pub <span class=\"token operator\">&gt;&gt;</span> ~/.ssh/authorized_keys \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>将binghe102和binghe103服务器上的id_rsa.pub文件复制到binghe101服务器。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe102 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># scp .ssh/id_rsa.pub binghe101:/root/.ssh/102</span>\n<span class=\"token punctuation\">[</span>root@binghe103 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># scp .ssh/id_rsa.pub binghe101:/root/.ssh/103</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>在binghe101服务器上执行如下命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> ~/.ssh/102 <span class=\"token operator\">&gt;&gt;</span> ~/.ssh/authorized_keys\n<span class=\"token function\">cat</span> ~/.ssh/103 <span class=\"token operator\">&gt;&gt;</span> ~/.ssh/authorized_keys\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>然后将authorized_keys文件分别复制到binghe102、binghe103服务器。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># scp .ssh/authorized_keys binghe102:/root/.ssh/authorized_keys</span>\n<span class=\"token punctuation\">[</span>root@binghe101 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># scp .ssh/authorized_keys binghe103:/root/.ssh/authorized_keys</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>删除binghe101节点上~/.ssh下的102和103文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> ~/.ssh/102\n<span class=\"token function\">rm</span> ~/.ssh/103\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"安装JDK\">安装JDK</h2>\n<p>需要在每台服务器上安装JDK环境。到Oracle官方下载JDK，我这里下的JDK版本为1.8.0_202，下载后解压并配置系统环境变量。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> -zxvf jdk1.8.0_212.tar.gz\n<span class=\"token function\">mv</span> jdk1.8.0_212 /usr/local\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>接下来，配置系统环境变量。</p>\n<p>配置项内容如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span>/usr/local/jdk1.8.0_212\n<span class=\"token assign-left variable\">CLASS_PATH</span><span class=\"token operator\">=</span>.:<span class=\"token variable\">$JAVA_HOME</span>/lib\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token variable\">$JAVA_HOME</span>/bin:<span class=\"token environment constant\">$PATH</span>\n<span class=\"token builtin class-name\">export</span> JAVA_HOME CLASS_PATH <span class=\"token environment constant\">PATH</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来执行如下命令使系统环境变量生效。</p>\n<h2 id=\"安装Maven\">安装Maven</h2>\n<p>到Apache官方下载Maven，我这里下载的Maven版本为3.6.3。下载后直接解压并配置系统环境变量。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> -zxvf apache-maven-3.6.3-bin.tar.gz\n<span class=\"token function\">mv</span> apache-maven-3.6.3-bin /usr/local\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>接下来，就是配置系统环境变量。</p>\n<p>配置项内容如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span>/usr/local/jdk1.8.0_212\n<span class=\"token assign-left variable\">MAVEN_HOME</span><span class=\"token operator\">=</span>/usr/local/apache-maven-3.6.3-bin\n<span class=\"token assign-left variable\">CLASS_PATH</span><span class=\"token operator\">=</span>.:<span class=\"token variable\">$JAVA_HOME</span>/lib\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token variable\">$MAVEN_HOME</span>/bin:<span class=\"token variable\">$JAVA_HOME</span>/bin:<span class=\"token environment constant\">$PATH</span>\n<span class=\"token builtin class-name\">export</span> JAVA_HOME CLASS_PATH MAVEN_HOME <span class=\"token environment constant\">PATH</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来执行如下命令使系统环境变量生效。</p>\n<p>接下来，修改Maven的配置文件，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>localRepository<span class=\"token operator\">&gt;</span>/home/repository<span class=\"token operator\">&lt;</span>/localRepository<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>将Maven下载的Jar包存储到/home/repository目录下。</p>\n<h2 id=\"安装Docker环境\">安装Docker环境</h2>\n<p><strong>本文档基于Docker 19.03.8 版本搭建Docker环境。</strong></p>\n<p>在所有服务器上创建install_docker.sh脚本，脚本内容如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">REGISTRY_MIRROR</span><span class=\"token operator\">=</span>https://registry.cn-hangzhou.aliyuncs.com\ndnf <span class=\"token function\">install</span> yum*\nyum <span class=\"token function\">install</span> -y yum-utils device-mapper-persistent-data lvm2\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\ndnf <span class=\"token function\">install</span> https://mirrors.aliyun.com/docker-ce/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.13-3.1.el7.x86_64.rpm\nyum <span class=\"token function\">install</span> -y docker-ce-19.03.8 docker-ce-cli-19.03.8\nsystemctl <span class=\"token builtin class-name\">enable</span> docker.service\nsystemctl start docker.service\n<span class=\"token function\">docker</span> version\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在每台服务器上为install_docker.sh脚本赋予可执行权限，并执行脚本即可。</p>\n<h2 id=\"安装docker-compose\">安装docker-compose</h2>\n<p><strong>注意：在每台服务器上安装docker-compose</strong></p>\n<p><strong>1.下载docker-compose文件</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -L https://github.com/docker/compose/releases/download/1.25.5/docker-compose-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -s<span class=\"token variable\">`</span></span>-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -m<span class=\"token variable\">`</span></span> -o /usr/local/bin/docker-compose \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"2-为docker-compose文件赋予可执行权限\">2.为docker-compose文件赋予可执行权限</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> a+x /usr/local/bin/docker-compose\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"3-查看docker-compose版本\">3.查看docker-compose版本</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker-compose version</span>\n<span class=\"token function\">docker-compose</span> version <span class=\"token number\">1.25</span>.5, build 8a1c60f6\ndocker-py version: <span class=\"token number\">4.1</span>.0\nCPython version: <span class=\"token number\">3.7</span>.5\nOpenSSL version: OpenSSL <span class=\"token number\">1.1</span>.0l  <span class=\"token number\">10</span> Sep <span class=\"token number\">2019</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"安装K8S集群环境\">安装K8S集群环境</h2>\n<p><strong>本文档基于K8S 1.8.12版本来搭建K8S集群</strong></p>\n<h3 id=\"安装K8S基础环境\">安装K8S基础环境</h3>\n<p>在所有服务器上创建install_k8s.sh脚本文件，脚本文件的内容如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#配置阿里云镜像加速器</span>\n<span class=\"token function\">mkdir</span> -p /etc/docker\n<span class=\"token function\">tee</span> /etc/docker/daemon.json <span class=\"token operator\">&lt;&lt;-</span><span class=\"token string\">'EOF'\n{\n  \"registry-mirrors\": [\"https://zz3sblpi.mirror.aliyuncs.com\"]\n}\nEOF</span>\nsystemctl daemon-reload\nsystemctl restart <span class=\"token function\">docker</span>\n\n<span class=\"token comment\">#安装nfs-utils</span>\nyum <span class=\"token function\">install</span> -y nfs-utils\nyum <span class=\"token function\">install</span> -y <span class=\"token function\">wget</span>\n\n<span class=\"token comment\">#启动nfs-server</span>\nsystemctl start nfs-server\nsystemctl <span class=\"token builtin class-name\">enable</span> nfs-server\n\n<span class=\"token comment\">#关闭防火墙</span>\nsystemctl stop firewalld\nsystemctl disable firewalld\n\n<span class=\"token comment\">#关闭SeLinux</span>\nsetenforce <span class=\"token number\">0</span>\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s/SELINUX=enforcing/SELINUX=disabled/g\"</span> /etc/selinux/config\n\n<span class=\"token comment\"># 关闭 swap</span>\nswapoff -a\n<span class=\"token function\">yes</span> <span class=\"token operator\">|</span> <span class=\"token function\">cp</span> /etc/fstab /etc/fstab_bak\n<span class=\"token function\">cat</span> /etc/fstab_bak <span class=\"token operator\">|</span><span class=\"token function\">grep</span> -v swap <span class=\"token operator\">&gt;</span> /etc/fstab\n\n<span class=\"token comment\">#修改 /etc/sysctl.conf</span>\n<span class=\"token comment\"># 如果有配置，则修改</span>\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s#^net.ipv4.ip_forward.*#net.ipv4.ip_forward=1#g\"</span>  /etc/sysctl.conf\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s#^net.bridge.bridge-nf-call-ip6tables.*#net.bridge.bridge-nf-call-ip6tables=1#g\"</span>  /etc/sysctl.conf\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s#^net.bridge.bridge-nf-call-iptables.*#net.bridge.bridge-nf-call-iptables=1#g\"</span>  /etc/sysctl.conf\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s#^net.ipv6.conf.all.disable_ipv6.*#net.ipv6.conf.all.disable_ipv6=1#g\"</span>  /etc/sysctl.conf\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s#^net.ipv6.conf.default.disable_ipv6.*#net.ipv6.conf.default.disable_ipv6=1#g\"</span>  /etc/sysctl.conf\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s#^net.ipv6.conf.lo.disable_ipv6.*#net.ipv6.conf.lo.disable_ipv6=1#g\"</span>  /etc/sysctl.conf\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s#^net.ipv6.conf.all.forwarding.*#net.ipv6.conf.all.forwarding=1#g\"</span>  /etc/sysctl.conf\n<span class=\"token comment\"># 可能没有，追加</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"net.ipv4.ip_forward = 1\"</span> <span class=\"token operator\">&gt;&gt;</span> /etc/sysctl.conf\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"net.bridge.bridge-nf-call-ip6tables = 1\"</span> <span class=\"token operator\">&gt;&gt;</span> /etc/sysctl.conf\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"net.bridge.bridge-nf-call-iptables = 1\"</span> <span class=\"token operator\">&gt;&gt;</span> /etc/sysctl.conf\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"net.ipv6.conf.all.disable_ipv6 = 1\"</span> <span class=\"token operator\">&gt;&gt;</span> /etc/sysctl.conf\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"net.ipv6.conf.default.disable_ipv6 = 1\"</span> <span class=\"token operator\">&gt;&gt;</span> /etc/sysctl.conf\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"net.ipv6.conf.lo.disable_ipv6 = 1\"</span> <span class=\"token operator\">&gt;&gt;</span> /etc/sysctl.conf\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"net.ipv6.conf.all.forwarding = 1\"</span>  <span class=\"token operator\">&gt;&gt;</span> /etc/sysctl.conf\n<span class=\"token comment\"># 执行命令以应用</span>\nsysctl -p\n\n<span class=\"token comment\"># 配置K8S的yum源</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">&gt;</span> /etc/yum.repos.d/kubernetes.repo</span>\n[kubernetes]\nname=Kubernetes\nbaseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\n       http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF</span>\n\n<span class=\"token comment\"># 卸载旧版本K8S</span>\nyum remove -y kubelet kubeadm kubectl\n\n<span class=\"token comment\"># 安装kubelet、kubeadm、kubectl，这里我安装的是1.18.2版本，你也可以安装1.17.2版本</span>\nyum <span class=\"token function\">install</span> -y kubelet-1.18.2 kubeadm-1.18.2 kubectl-1.18.2\n\n<span class=\"token comment\"># 修改docker Cgroup Driver为systemd</span>\n<span class=\"token comment\"># # 将/usr/lib/systemd/system/docker.service文件中的这一行 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span>\n<span class=\"token comment\"># # 修改为 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd</span>\n<span class=\"token comment\"># 如果不修改，在添加 worker 节点时可能会碰到如下错误</span>\n<span class=\"token comment\"># [WARNING IsDockerSystemdCheck]: detected \"cgroupfs\" as the Docker cgroup driver. The recommended driver is \"systemd\". </span>\n<span class=\"token comment\"># Please follow the guide at https://kubernetes.io/docs/setup/cri/</span>\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s#^ExecStart=/usr/bin/dockerd.*#ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd#g\"</span> /usr/lib/systemd/system/docker.service\n\n<span class=\"token comment\"># 设置 docker 镜像，提高 docker 镜像下载速度和稳定性</span>\n<span class=\"token comment\"># 如果访问 https://hub.docker.io 速度非常稳定，亦可以跳过这个步骤</span>\n<span class=\"token comment\"># curl -sSL https://kuboard.cn/install-script/set_mirror.sh | sh -s ${REGISTRY_MIRROR}</span>\n\n<span class=\"token comment\"># 重启 docker，并启动 kubelet</span>\nsystemctl daemon-reload\nsystemctl restart <span class=\"token function\">docker</span>\nsystemctl <span class=\"token builtin class-name\">enable</span> kubelet <span class=\"token operator\">&amp;&amp;</span> systemctl start kubelet\n\n<span class=\"token function\">docker</span> version\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在每台服务器上为install_k8s.sh脚本赋予可执行权限，并执行脚本即可。</p>\n<h3 id=\"初始化Master节点\">初始化Master节点</h3>\n<p><strong>只在binghe101服务器上执行的操作。</strong></p>\n<p><strong>1.初始化Master节点的网络环境</strong></p>\n<p>注意：下面的命令需要在命令行手动执行。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 只在 master 节点执行</span>\n<span class=\"token comment\"># export 命令只在当前 shell 会话中有效，开启新的 shell 窗口后，如果要继续安装过程，请重新执行此处的 export 命令</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">MASTER_IP</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.175.101\n<span class=\"token comment\"># 替换 k8s.master 为 您想要的 dnsName</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">APISERVER_NAME</span><span class=\"token operator\">=</span>k8s.master\n<span class=\"token comment\"># Kubernetes 容器组所在的网段，该网段安装完成后，由 kubernetes 创建，事先并不存在于物理网络中</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">POD_SUBNET</span><span class=\"token operator\">=</span><span class=\"token number\">172.18</span>.0.1/16\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${MASTER_IP}</span>    <span class=\"token variable\">${APISERVER_NAME}</span>\"</span> <span class=\"token operator\">&gt;&gt;</span> /etc/hosts\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>2.初始化Master节点</strong></p>\n<p>在binghe101服务器上创建init_master.sh脚本文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token comment\"># 脚本出错时终止执行</span>\n<span class=\"token builtin class-name\">set</span> -e\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">${<span class=\"token operator\">#</span>POD_SUBNET}</span> -eq <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">${<span class=\"token operator\">#</span>APISERVER_NAME}</span> -eq <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[31;1m请确保您已经设置了环境变量 POD_SUBNET 和 APISERVER_NAME <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n  <span class=\"token builtin class-name\">echo</span> 当前POD_SUBNET<span class=\"token operator\">=</span><span class=\"token variable\">$POD_SUBNET</span>\n  <span class=\"token builtin class-name\">echo</span> 当前APISERVER_NAME<span class=\"token operator\">=</span><span class=\"token variable\">$APISERVER_NAME</span>\n  <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n\n\n<span class=\"token comment\"># 查看完整配置选项 https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta2</span>\n<span class=\"token function\">rm</span> -f ./kubeadm-config.yaml\n<span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">&gt;</span> ./kubeadm-config.yaml</span>\napiVersion: kubeadm.k8s.io/v1beta2\nkind: ClusterConfiguration\nkubernetesVersion: v1.18.2\nimageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers\ncontrolPlaneEndpoint: \"<span class=\"token variable\">${APISERVER_NAME}</span>:6443\"\nnetworking:\n  serviceSubnet: \"10.96.0.0/16\"\n  podSubnet: \"<span class=\"token variable\">${POD_SUBNET}</span>\"\n  dnsDomain: \"cluster.local\"\nEOF</span>\n\n<span class=\"token comment\"># kubeadm init</span>\n<span class=\"token comment\"># 根据服务器网速的情况，您需要等候 3 - 10 分钟</span>\nkubeadm init --config<span class=\"token operator\">=</span>kubeadm-config.yaml --upload-certs\n\n<span class=\"token comment\"># 配置 kubectl</span>\n<span class=\"token function\">rm</span> -rf /root/.kube/\n<span class=\"token function\">mkdir</span> /root/.kube/\n<span class=\"token function\">cp</span> -i /etc/kubernetes/admin.conf /root/.kube/config\n\n<span class=\"token comment\"># 安装 calico 网络插件</span>\n<span class=\"token comment\"># 参考文档 https://docs.projectcalico.org/v3.13/getting-started/kubernetes/self-managed-onprem/onpremises</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"安装calico-3.13.1\"</span>\n<span class=\"token function\">rm</span> -f calico-3.13.1.yaml\n<span class=\"token function\">wget</span> https://kuboard.cn/install-script/calico/calico-3.13.1.yaml\nkubectl apply -f calico-3.13.1.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>赋予init_master.sh脚本文件可执行权限并执行脚本。</p>\n<p><strong>3.查看Master节点的初始化结果</strong></p>\n<p><strong>（1）确保所有容器组处于Running状态</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 执行如下命令，等待 3-10 分钟，直到所有的容器组处于 Running 状态</span>\n<span class=\"token function\">watch</span> kubectl get pod -n kube-system -o wide\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>具体执行如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># watch kubectl get pod -n kube-system -o wide</span>\nEvery <span class=\"token number\">2</span>.0s: kubectl get pod -n kube-system -o wide                                                                                                                          binghe101: Sun May <span class=\"token number\">10</span> <span class=\"token number\">11</span>:01:32 <span class=\"token number\">2020</span>\n\nNAME                                       READY   STATUS    RESTARTS   AGE    IP                NODE        NOMINATED NODE   READINESS GATES          \ncalico-kube-controllers-5b8b769fcd-5dtlp   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          118s   <span class=\"token number\">172.18</span>.203.66     binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>          \ncalico-node-fnv8g                          <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          118s   <span class=\"token number\">192.168</span>.175.101   binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>          \ncoredns-546565776c-27t7h                   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          2m1s   <span class=\"token number\">172.18</span>.203.67     binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>          \ncoredns-546565776c-hjb8z                   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          2m1s   <span class=\"token number\">172.18</span>.203.65     binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>          \netcd-binghe101                             <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          2m7s   <span class=\"token number\">192.168</span>.175.101   binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>          \nkube-apiserver-binghe101                   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          2m7s   <span class=\"token number\">192.168</span>.175.101   binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>          \nkube-controller-manager-binghe101          <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          2m7s   <span class=\"token number\">192.168</span>.175.101   binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>          \nkube-proxy-dvgsr                           <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          2m1s   <span class=\"token number\">192.168</span>.175.101   binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>          \nkube-scheduler-binghe101                   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          2m7s   <span class=\"token number\">192.168</span>.175.101   binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>（2） 查看 Master 节点初始化结果</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get nodes -o wide\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>具体执行如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubectl get nodes -o wide</span>\nNAME        STATUS   ROLES    AGE     VERSION   INTERNAL-IP       EXTERNAL-IP   OS-IMAGE                KERNEL-VERSION         CONTAINER-RUNTIME\nbinghe101   Ready    master   3m28s   v1.18.2   <span class=\"token number\">192.168</span>.175.101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>        CentOS Linux <span class=\"token number\">8</span> <span class=\"token punctuation\">(</span>Core<span class=\"token punctuation\">)</span>   <span class=\"token number\">4.18</span>.0-80.el8.x86_64   docker://19.3.8\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"初始化Worker节点\">初始化Worker节点</h3>\n<p><strong>1.获取join命令参数</strong></p>\n<p>在Master节点（binghe101服务器）上执行如下命令获取join命令参数。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubeadm token create --print-join-command\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>具体执行如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubeadm token create --print-join-command</span>\nW0510 <span class=\"token number\">11</span>:04:34.828126   <span class=\"token number\">56132</span> configset.go:202<span class=\"token punctuation\">]</span> WARNING: kubeadm cannot validate component configs <span class=\"token keyword\">for</span> API <span class=\"token function\">groups</span> <span class=\"token punctuation\">[</span>kubelet.config.k8s.io kubeproxy.config.k8s.io<span class=\"token punctuation\">]</span>\nkubeadm <span class=\"token function\">join</span> k8s.master:6443 --token 8nblts.62xytoqufwsqzko2     --discovery-token-ca-cert-hash sha256:1717cc3e34f6a56b642b5751796530e367aa73f4113d09994ac3455e33047c0d \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>其中，有如下一行输出。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubeadm <span class=\"token function\">join</span> k8s.master:6443 --token 8nblts.62xytoqufwsqzko2     --discovery-token-ca-cert-hash sha256:1717cc3e34f6a56b642b5751796530e367aa73f4113d09994ac3455e33047c0d \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这行代码就是获取到的join命令。</p>\n<blockquote>\n<p>注意：join命令中的token的有效时间为 2 个小时，2小时内，可以使用此 token 初始化任意数量的 worker 节点。</p>\n</blockquote>\n<p><strong>2.初始化Worker节点</strong></p>\n<p>针对所有的 worker 节点执行，在这里，就是在binghe102服务器和binghe103服务器上执行。</p>\n<p>在命令分别手动执行如下命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 只在 worker 节点执行</span>\n<span class=\"token comment\"># 192.168.175.101 为 master 节点的内网 IP</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">MASTER_IP</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.175.101\n<span class=\"token comment\"># 替换 k8s.master 为初始化 master 节点时所使用的 APISERVER_NAME</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">APISERVER_NAME</span><span class=\"token operator\">=</span>k8s.master\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${MASTER_IP}</span>    <span class=\"token variable\">${APISERVER_NAME}</span>\"</span> <span class=\"token operator\">&gt;&gt;</span> /etc/hosts\n\n<span class=\"token comment\"># 替换为 master 节点上 kubeadm token create 命令输出的join</span>\nkubeadm <span class=\"token function\">join</span> k8s.master:6443 --token 8nblts.62xytoqufwsqzko2     --discovery-token-ca-cert-hash sha256:1717cc3e34f6a56b642b5751796530e367aa73f4113d09994ac3455e33047c0d \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>具体执行如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe102 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># export MASTER_IP=192.168.175.101</span>\n<span class=\"token punctuation\">[</span>root@binghe102 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># export APISERVER_NAME=k8s.master</span>\n<span class=\"token punctuation\">[</span>root@binghe102 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo \"${MASTER_IP}    ${APISERVER_NAME}\" &gt;&gt; /etc/hosts</span>\n<span class=\"token punctuation\">[</span>root@binghe102 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubeadm join k8s.master:6443 --token 8nblts.62xytoqufwsqzko2     --discovery-token-ca-cert-hash sha256:1717cc3e34f6a56b642b5751796530e367aa73f4113d09994ac3455e33047c0d </span>\nW0510 <span class=\"token number\">11</span>:08:27.709263   <span class=\"token number\">42795</span> join.go:346<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>preflight<span class=\"token punctuation\">]</span> WARNING: JoinControlPane.controlPlane settings will be ignored when control-plane flag is not set.\n<span class=\"token punctuation\">[</span>preflight<span class=\"token punctuation\">]</span> Running pre-flight checks\n        <span class=\"token punctuation\">[</span>WARNING FileExisting-tc<span class=\"token punctuation\">]</span>: tc not found <span class=\"token keyword\">in</span> system path\n<span class=\"token punctuation\">[</span>preflight<span class=\"token punctuation\">]</span> Reading configuration from the cluster<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">[</span>preflight<span class=\"token punctuation\">]</span> FYI: You can <span class=\"token function\">look</span> at this config <span class=\"token function\">file</span> with <span class=\"token string\">'kubectl -n kube-system get cm kubeadm-config -oyaml'</span>\n<span class=\"token punctuation\">[</span>kubelet-start<span class=\"token punctuation\">]</span> Downloading configuration <span class=\"token keyword\">for</span> the kubelet from the <span class=\"token string\">\"kubelet-config-1.18\"</span> ConfigMap <span class=\"token keyword\">in</span> the kube-system namespace\n<span class=\"token punctuation\">[</span>kubelet-start<span class=\"token punctuation\">]</span> Writing kubelet configuration to <span class=\"token function\">file</span> <span class=\"token string\">\"/var/lib/kubelet/config.yaml\"</span>\n<span class=\"token punctuation\">[</span>kubelet-start<span class=\"token punctuation\">]</span> Writing kubelet environment <span class=\"token function\">file</span> with flags to <span class=\"token function\">file</span> <span class=\"token string\">\"/var/lib/kubelet/kubeadm-flags.env\"</span>\n<span class=\"token punctuation\">[</span>kubelet-start<span class=\"token punctuation\">]</span> Starting the kubelet\n<span class=\"token punctuation\">[</span>kubelet-start<span class=\"token punctuation\">]</span> Waiting <span class=\"token keyword\">for</span> the kubelet to perform the TLS Bootstrap<span class=\"token punctuation\">..</span>.\n\nThis <span class=\"token function\">node</span> has joined the cluster:\n* Certificate signing request was sent to apiserver and a response was received.\n* The Kubelet was informed of the new secure connection details.\n\nRun <span class=\"token string\">'kubectl get nodes'</span> on the control-plane to see this <span class=\"token function\">node</span> <span class=\"token function\">join</span> the cluster.\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>根据输出结果可以看出，Worker节点加入了K8S集群。</p>\n<blockquote>\n<p>注意：kubeadm join…就是master 节点上 kubeadm token create 命令输出的join。</p>\n</blockquote>\n<p><strong>3.查看初始化结果</strong></p>\n<p>在Master节点（binghe101服务器）执行如下命令查看初始化结果。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get nodes -o wide\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>具体执行如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubectl get nodes</span>\nNAME        STATUS   ROLES    AGE     VERSION\nbinghe101   Ready    master   20m     v1.18.2\nbinghe102   Ready    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>   2m46s   v1.18.2\nbinghe103   Ready    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>   2m46s   v1.18.2\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>注意：kubectl get nodes命令后面加上-o wide参数可以输出更多的信息。</p>\n</blockquote>\n<h2 id=\"重启K8S集群引起的问题\">重启K8S集群引起的问题</h2>\n<h3 id=\"1-Worker节点故障不能启动\">1.Worker节点故障不能启动</h3>\n<p>Master 节点的 IP 地址发生变化，导致 worker 节点不能启动。需要重新安装K8S集群，并确保所有节点都有固定的内网 IP 地址。</p>\n<h3 id=\"2-Pod崩溃或不能正常访问\">2.Pod崩溃或不能正常访问</h3>\n<p>重启服务器后使用如下命令查看Pod的运行状态。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get pods --all-namespaces\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>发现很多 Pod 不在 Running 状态，此时，需要使用如下命令删除运行不正常的Pod。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl delete pod <span class=\"token operator\">&lt;</span>pod-name<span class=\"token operator\">&gt;</span> -n <span class=\"token operator\">&lt;</span>pod-namespece<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>注意：如果Pod 是使用 Deployment、StatefulSet 等控制器创建的，K8S 将创建新的 Pod 作为替代，重新启动的 Pod 通常能够正常工作。</p>\n</blockquote>\n<h2 id=\"K8S安装ingress-nginx\">K8S安装ingress-nginx</h2>\n<p><strong>注意：在Master节点（binghe101服务器上执行）</strong></p>\n<h3 id=\"1-创建ingress-nginx命名空间\">1.创建ingress-nginx命名空间</h3>\n<p>创建ingress-nginx-namespace.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Namespace\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行如下命令创建ingress-nginx命名空间。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f ingress-nginx-namespace.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"2-安装ingress-controller\">2.安装ingress controller</h3>\n<p>创建ingress-nginx-mandatory.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Namespace\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n\n<span class=\"token punctuation\">---</span>\n\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n      <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n        <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">terminationGracePeriodSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">60</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n          \n          \n          \n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> registry.cn<span class=\"token punctuation\">-</span>qingdao.aliyuncs.com/kubernetes_xingej/defaultbackend<span class=\"token punctuation\">-</span>amd64<span class=\"token punctuation\">:</span><span class=\"token number\">1.5</span>\n          <span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /healthz\n              <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n              <span class=\"token key atrule\">scheme</span><span class=\"token punctuation\">:</span> HTTP\n            <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30</span>\n            <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n          <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">limits</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 10m\n              <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 20Mi\n            <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 10m\n              <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 20Mi\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n\n<span class=\"token punctuation\">---</span>\n\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ConfigMap\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>configuration\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n\n<span class=\"token punctuation\">---</span>\n\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ConfigMap\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> tcp<span class=\"token punctuation\">-</span>services\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n\n<span class=\"token punctuation\">---</span>\n\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ConfigMap\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> udp<span class=\"token punctuation\">-</span>services\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n\n<span class=\"token punctuation\">---</span>\n\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ServiceAccount\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>serviceaccount\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ClusterRole\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>clusterrole\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> configmaps\n      <span class=\"token punctuation\">-</span> endpoints\n      <span class=\"token punctuation\">-</span> nodes\n      <span class=\"token punctuation\">-</span> pods\n      <span class=\"token punctuation\">-</span> secrets\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> list\n      <span class=\"token punctuation\">-</span> watch\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> nodes\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> get\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> services\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> get\n      <span class=\"token punctuation\">-</span> list\n      <span class=\"token punctuation\">-</span> watch\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"extensions\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ingresses\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> get\n      <span class=\"token punctuation\">-</span> list\n      <span class=\"token punctuation\">-</span> watch\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> events\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> create\n      <span class=\"token punctuation\">-</span> patch\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"extensions\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ingresses/status\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> update\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Role\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>role\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> configmaps\n      <span class=\"token punctuation\">-</span> pods\n      <span class=\"token punctuation\">-</span> secrets\n      <span class=\"token punctuation\">-</span> namespaces\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> get\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> configmaps\n    <span class=\"token key atrule\">resourceNames</span><span class=\"token punctuation\">:</span>\n      \n      \n      \n      \n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"ingress-controller-leader-nginx\"</span>\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> get\n      <span class=\"token punctuation\">-</span> update\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> configmaps\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> create\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> endpoints\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> get\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> RoleBinding\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>role<span class=\"token punctuation\">-</span>nisa<span class=\"token punctuation\">-</span>binding\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">roleRef</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">apiGroup</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io\n  <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Role\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>role\n<span class=\"token key atrule\">subjects</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ServiceAccount\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>serviceaccount\n    <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ClusterRoleBinding\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>clusterrole<span class=\"token punctuation\">-</span>nisa<span class=\"token punctuation\">-</span>binding\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">roleRef</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">apiGroup</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io\n  <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ClusterRole\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>clusterrole\n<span class=\"token key atrule\">subjects</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ServiceAccount\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>serviceaccount\n    <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n\n<span class=\"token punctuation\">---</span>\n\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>controller\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n      <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n        <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n      <span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">prometheus.io/port</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"10254\"</span>\n        <span class=\"token key atrule\">prometheus.io/scrape</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"true\"</span>\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">serviceAccountName</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>serviceaccount\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>controller\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> registry.cn<span class=\"token punctuation\">-</span>qingdao.aliyuncs.com/kubernetes_xingej/nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>controller<span class=\"token punctuation\">:</span>0.20.0\n          <span class=\"token key atrule\">args</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> /nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>controller\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>default<span class=\"token punctuation\">-</span>backend<span class=\"token punctuation\">-</span>service=$(POD_NAMESPACE)/default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>configmap=$(POD_NAMESPACE)/nginx<span class=\"token punctuation\">-</span>configuration\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>tcp<span class=\"token punctuation\">-</span>services<span class=\"token punctuation\">-</span>configmap=$(POD_NAMESPACE)/tcp<span class=\"token punctuation\">-</span>services\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>udp<span class=\"token punctuation\">-</span>services<span class=\"token punctuation\">-</span>configmap=$(POD_NAMESPACE)/udp<span class=\"token punctuation\">-</span>services\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>publish<span class=\"token punctuation\">-</span>service=$(POD_NAMESPACE)/ingress<span class=\"token punctuation\">-</span>nginx\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>annotations<span class=\"token punctuation\">-</span>prefix=nginx.ingress.kubernetes.io\n          <span class=\"token key atrule\">securityContext</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">capabilities</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">drop</span><span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">-</span> ALL\n              <span class=\"token key atrule\">add</span><span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">-</span> NET_BIND_SERVICE\n            \n            <span class=\"token key atrule\">runAsUser</span><span class=\"token punctuation\">:</span> <span class=\"token number\">33</span>\n          <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> POD_NAME\n              <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">fieldRef</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">fieldPath</span><span class=\"token punctuation\">:</span> metadata.name\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> POD_NAMESPACE\n              <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">fieldRef</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">fieldPath</span><span class=\"token punctuation\">:</span> metadata.namespace\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n              <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> https\n              <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">443</span>\n          <span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">failureThreshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n            <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /healthz\n              <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10254</span>\n              <span class=\"token key atrule\">scheme</span><span class=\"token punctuation\">:</span> HTTP\n            <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n            <span class=\"token key atrule\">periodSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n            <span class=\"token key atrule\">successThreshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n            <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n          <span class=\"token key atrule\">readinessProbe</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">failureThreshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n            <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /healthz\n              <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10254</span>\n              <span class=\"token key atrule\">scheme</span><span class=\"token punctuation\">:</span> HTTP\n            <span class=\"token key atrule\">periodSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n            <span class=\"token key atrule\">successThreshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n            <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n\n<span class=\"token punctuation\">---</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行如下命令安装ingress controller。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f ingress-nginx-mandatory.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"3-安装K8S-SVC：ingress-nginx\">3.安装K8S SVC：ingress-nginx</h3>\n<p>主要是用来用于暴露pod：nginx-ingress-controller。</p>\n<p>创建service-nodeport.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30080</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> https\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">443</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">443</span>\n      <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30443</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行如下命令安装。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f service-nodeport.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"4-访问K8S-SVC：ingress-nginx\">4.访问K8S SVC：ingress-nginx</h3>\n<p>查看ingress-nginx命名空间的部署情况，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubectl get pod -n ingress-nginx</span>\nNAME                                        READY   STATUS    RESTARTS   AGE\ndefault-http-backend-796ddcd9b-vfmgn        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">1</span>          10h\nnginx-ingress-controller-58985cc996-87754   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">2</span>          10h\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在命令行服务器命令行输入如下命令查看ingress-nginx的端口映射情况。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get svc -n ingress-nginx \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>具体如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubectl get svc -n ingress-nginx </span>\nNAME                   TYPE        CLUSTER-IP    EXTERNAL-IP   PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>                      AGE\ndefault-http-backend   ClusterIP   <span class=\"token number\">10.96</span>.247.2   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>        <span class=\"token number\">80</span>/TCP                       7m3s\ningress-nginx          NodePort    <span class=\"token number\">10.96</span>.40.6    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>        <span class=\"token number\">80</span>:30080/TCP,443:30443/TCP   4m35s\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>所以，可以通过Master节点（binghe101服务器）的IP地址和30080端口号来访问ingress-nginx，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl 192.168.175.101:30080       </span>\ndefault backend - <span class=\"token number\">404</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>也可以在浏览器打开http://192.168.175.101:30080 来访问ingress-nginx，如下所示。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231.jpg\" alt=\"\"></p>\n<h2 id=\"K8S安装gitlab代码仓库\">K8S安装gitlab代码仓库</h2>\n<p><strong>注意：在Master节点（binghe101服务器上执行）</strong></p>\n<h3 id=\"1-创建k8s-ops命名空间\">1.创建k8s-ops命名空间</h3>\n<p>创建k8s-ops-namespace.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Namespace\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行如下命令创建命名空间。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f k8s-ops-namespace.yaml \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"2-安装gitlab-redis\">2.安装gitlab-redis</h3>\n<p>创建gitlab-redis.yaml文件，文件的内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> sameersbn/redis\n        <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n          <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6379</span>\n        <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /var/lib/redis\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data\n        <span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> redis<span class=\"token punctuation\">-</span>cli\n            <span class=\"token punctuation\">-</span> ping\n          <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30</span>\n          <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n        <span class=\"token key atrule\">readinessProbe</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> redis<span class=\"token punctuation\">-</span>cli\n            <span class=\"token punctuation\">-</span> ping\n          <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n          <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data\n        <span class=\"token key atrule\">hostPath</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /data1/docker/xinsrv/redis\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6379</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> redis\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>首先，在命令行执行如下命令创建/data1/docker/xinsrv/redis目录。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p /data1/docker/xinsrv/redis\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行如下命令安装gitlab-redis。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f gitlab-redis.yaml \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"3-安装gitlab-postgresql\">3.安装gitlab-postgresql</h3>\n<p>创建gitlab-postgresql.yaml，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> sameersbn/postgresql\n        <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_USER\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> gitlab\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_PASS\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> passw0rd\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_NAME\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> gitlab_production\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_EXTENSION\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> pg_trgm\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgres\n          <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5432</span>\n        <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /var/lib/postgresql\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data\n        <span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> pg_isready\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span>h\n            <span class=\"token punctuation\">-</span> localhost\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span>U\n            <span class=\"token punctuation\">-</span> postgres\n          <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30</span>\n          <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n        <span class=\"token key atrule\">readinessProbe</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> pg_isready\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span>h\n            <span class=\"token punctuation\">-</span> localhost\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span>U\n            <span class=\"token punctuation\">-</span> postgres\n          <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n          <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data\n        <span class=\"token key atrule\">hostPath</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /data1/docker/xinsrv/postgresql\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgres\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5432</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> postgres\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>首先，执行如下命令创建/data1/docker/xinsrv/postgresql目录。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p /data1/docker/xinsrv/postgresql\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来，安装gitlab-postgresql，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f gitlab-postgresql.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"4-安装gitlab\">4.安装gitlab</h3>\n<p><strong>（1）配置用户名和密码</strong></p>\n<p>首先，在命令行使用base64编码为用户名和密码进行转码，本示例中，使用的用户名为admin，密码为admin.1231</p>\n<p>转码情况如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo -n 'admin' | base64 </span>\n<span class=\"token assign-left variable\">YWRtaW4</span><span class=\"token operator\">=</span>\n<span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo -n 'admin.1231' | base64 </span>\n<span class=\"token assign-left variable\">YWRtaW4uMTIzMQ</span><span class=\"token operator\">==</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>转码后的用户名为：YWRtaW4= 密码为：YWRtaW4uMTIzMQ==</p>\n<p>也可以对base64编码后的字符串解码，例如，对密码字符串解码，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo 'YWRtaW4uMTIzMQ==' | base64 --decode </span>\nadmin.1231\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>接下来，创建secret-gitlab.yaml文件，主要是用户来配置GitLab的用户名和密码，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Secret\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> git<span class=\"token punctuation\">-</span>user<span class=\"token punctuation\">-</span>pass\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> Opaque\n<span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> YWRtaW4=\n  <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> YWRtaW4uMTIzMQ==\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行配置文件的内容，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl create -f ./secret-gitlab.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>（2）安装GitLab</strong></p>\n<p>创建gitlab.yaml文件，文件的内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> sameersbn/gitlab<span class=\"token punctuation\">:</span>12.1.6\n        <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> TZ\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> Asia/Shanghai\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_TIMEZONE\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> Beijing\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_SECRETS_DB_KEY_BASE\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> long<span class=\"token punctuation\">-</span>and<span class=\"token punctuation\">-</span>random<span class=\"token punctuation\">-</span>alpha<span class=\"token punctuation\">-</span>numeric<span class=\"token punctuation\">-</span>string\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_SECRETS_SECRET_KEY_BASE\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> long<span class=\"token punctuation\">-</span>and<span class=\"token punctuation\">-</span>random<span class=\"token punctuation\">-</span>alpha<span class=\"token punctuation\">-</span>numeric<span class=\"token punctuation\">-</span>string\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_SECRETS_OTP_KEY_BASE\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> long<span class=\"token punctuation\">-</span>and<span class=\"token punctuation\">-</span>random<span class=\"token punctuation\">-</span>alpha<span class=\"token punctuation\">-</span>numeric<span class=\"token punctuation\">-</span>string\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_ROOT_PASSWORD\n          <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">secretKeyRef</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> git<span class=\"token punctuation\">-</span>user<span class=\"token punctuation\">-</span>pass\n              <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> password\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_ROOT_EMAIL\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> 12345678@qq.com\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_HOST\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> gitlab.binghe.com\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_PORT\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"80\"</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_SSH_PORT\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"30022\"</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_NOTIFY_ON_BROKEN_BUILDS\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"true\"</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_NOTIFY_PUSHER\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"false\"</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_BACKUP_SCHEDULE\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> daily\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_BACKUP_TIME\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">01:00</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_TYPE\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> postgres\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_HOST\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> postgresql\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_PORT\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"5432\"</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_USER\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> gitlab\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_PASS\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> passw0rd\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_NAME\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> gitlab_production\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> REDIS_HOST\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> redis\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> REDIS_PORT\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"6379\"</span>\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n          <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ssh\n          <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">22</span>\n        <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /home/git/data\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data\n        <span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /\n            <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n          <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">180</span>\n          <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n        <span class=\"token key atrule\">readinessProbe</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /\n            <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n          <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n          <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data\n        <span class=\"token key atrule\">hostPath</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /data1/docker/xinsrv/gitlab\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30088</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ssh\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">22</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> ssh\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30022</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> extensions/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Ingress\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">kubernetes.io/ingress.class</span><span class=\"token punctuation\">:</span> traefik\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> gitlab.binghe.com\n    <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">backend</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">serviceName</span><span class=\"token punctuation\">:</span> gitlab\n          <span class=\"token key atrule\">servicePort</span><span class=\"token punctuation\">:</span> http\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>注意：在配置GitLab时，监听主机时，不能使用IP地址，需要使用主机名或者域名，上述配置中，我使用的是gitlab.binghe.com主机名。</strong></p>\n<p>在命令行执行如下命令创建/data1/docker/xinsrv/gitlab目录。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p /data1/docker/xinsrv/gitlab\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>安装GitLab，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f gitlab.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"5-安装完成\">5.安装完成</h3>\n<p>查看k8s-ops命名空间部署情况，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubectl get pod -n k8s-ops</span>\nNAME                          READY   STATUS    RESTARTS   AGE\ngitlab-7b459db47c-5vk6t       <span class=\"token number\">0</span>/1     Running   <span class=\"token number\">0</span>          11s\npostgresql-79567459d7-x52vx   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          30m\nredis-67f4cdc96c-h5ckz        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">1</span>          10h\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>也可以使用如下命令查看。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubectl get pod --namespace=k8s-ops</span>\nNAME                          READY   STATUS    RESTARTS   AGE\ngitlab-7b459db47c-5vk6t       <span class=\"token number\">0</span>/1     Running   <span class=\"token number\">0</span>          36s\npostgresql-79567459d7-x52vx   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          30m\nredis-67f4cdc96c-h5ckz        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">1</span>          10h\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>二者效果一样。</p>\n<p>接下来，查看GitLab的端口映射，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubectl get svc -n k8s-ops</span>\nNAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>                     AGE\ngitlab       NodePort    <span class=\"token number\">10.96</span>.153.100   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>        <span class=\"token number\">80</span>:30088/TCP,22:30022/TCP   2m42s\npostgresql   ClusterIP   <span class=\"token number\">10.96</span>.203.119   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>        <span class=\"token number\">5432</span>/TCP                    32m\nredis        ClusterIP   <span class=\"token number\">10.96</span>.107.150   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>        <span class=\"token number\">6379</span>/TCP                    10h\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时，可以看到，可以通过Master节点（binghe101）的主机名gitlab.binghe.com和端口30088就能够访问GitLab。由于我这里使用的是虚拟机来搭建相关的环境，在本机访问虚拟机映射的gitlab.binghe.com时，需要配置本机的hosts文件，在本机的hosts文件中加入如下配置项。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">192.168.175.101 gitlab.binghe.com\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>注意：在Windows操作系统中，hosts文件所在的目录如下。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">C:\\Windows\\System32\\drivers\\etc\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来，就可以在浏览器中通过链接：<a target=\"_blank\" rel=\"noopener\" href=\"https://links.jianshu.com/go?to=http%3A%2F%2Fgitlab.binghe.com%3A30088\">http://gitlab.binghe.com:30088</a> 来访问GitLab了，如下所示。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-1.jpg\" alt=\"\"></p>\n<p>此时，可以通过用户名root和密码admin.1231来登录GitLab了。</p>\n<p><strong>注意：这里的用户名是root而不是admin，因为root是GitLab默认的超级用户。</strong></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-2.jpg\" alt=\"\"></p>\n<p>登录后的界面如下所示。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-3.jpg\" alt=\"\"></p>\n<p>到此，K8S安装gitlab完成。</p>\n<h2 id=\"安装Harbor私有仓库\">安装Harbor私有仓库</h2>\n<p><strong>注意：这里将Harbor私有仓库安装在Master节点（binghe101服务器）上，实际生产环境中建议安装在其他服务器。</strong></p>\n<h3 id=\"1-下载Harbor的离线安装版本\">1.下载Harbor的离线安装版本</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://github.com/goharbor/harbor/releases/download/v1.10.2/harbor-offline-installer-v1.10.2.tgz\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"2-解压Harbor的安装包\">2.解压Harbor的安装包</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> -zxvf harbor-offline-installer-v1.10.2.tgz\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>解压成功后，会在服务器当前目录生成一个harbor目录。</p>\n<h3 id=\"3-配置Harbor\">3.配置Harbor</h3>\n<p><strong>注意：这里，我将Harbor的端口修改成了1180，如果不修改Harbor的端口，默认的端口是80。</strong></p>\n<p><strong>（1）修改harbor.yml文件</strong></p>\n<p>修改的配置项如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> 192.168.175.101\n<span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1180</span>\n<span class=\"token key atrule\">harbor_admin_password</span><span class=\"token punctuation\">:</span> binghe123\n<span class=\"token comment\">###并把https注释掉，不然在安装的时候会报错：ERROR:root:Error: The protocol is https but attribute ssl_cert is not set</span>\n<span class=\"token comment\">#https:</span>\n  <span class=\"token comment\">#port: 443</span>\n  <span class=\"token comment\">#certificate: /your/certificate/path</span>\n  <span class=\"token comment\">#private_key: /your/private/key/path</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>（2）修改daemon.json文件</strong></p>\n<p>修改/etc/docker/daemon.json文件，没有的话就创建，在/etc/docker/daemon.json文件中添加如下内容。</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>root@binghe~<span class=\"token punctuation\">]</span># cat /etc/docker/daemon.json\n<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"registry-mirrors\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://zz3sblpi.mirror.aliyuncs.com\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"insecure-registries\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"192.168.175.101:1180\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>也可以在服务器上使用 <strong>ip addr</strong> 命令查看本机所有的IP地址段，将其配置到/etc/docker/daemon.json文件中。这里，我配置后的文件内容如下所示。</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"registry-mirrors\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://zz3sblpi.mirror.aliyuncs.com\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"insecure-registries\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"192.168.175.0/16\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"172.17.0.0/16\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"172.18.0.0/16\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"172.16.29.0/16\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"192.168.175.101:1180\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"4-安装并启动harbor\">4.安装并启动harbor</h3>\n<p>配置完成后，输入如下命令即可安装并启动Harbor</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe harbor<span class=\"token punctuation\">]</span><span class=\"token comment\"># ./install.sh </span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"5-登录Harbor并添加账户\">5.登录Harbor并添加账户</h3>\n<p>安装成功后，在浏览器地址栏输入http://192.168.175.101:1180打开链接，如下图所示。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-4.jpg\" alt=\"\"></p>\n<p>输入用户名admin和密码binghe123，登录系统，如下图所示</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-5.jpg\" alt=\"\"></p>\n<p>接下来，我们选择用户管理，添加一个管理员账户，为后续打包Docker镜像和上传Docker镜像做准备。添加账户的步骤如下所示。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-6.jpg\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-7.jpg\" alt=\"\"></p>\n<p>此处填写的密码为Binghe123。</p>\n<p>点击确定后，如下所示。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-8.jpg\" alt=\"\"></p>\n<p>此时，账户binghe还不是管理员，此时选中binghe账户，点击“设置为管理员”。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-9.jpg\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-10.jpg\" alt=\"\"></p>\n<p>此时，binghe账户就被设置为管理员了。到此，Harbor的安装就完成了。</p>\n<h3 id=\"6-修改Harbor端口\">6.修改Harbor端口</h3>\n<p><strong>如果安装Harbor后，大家需要修改Harbor的端口，可以按照如下步骤修改Harbor的端口，这里，我以将80端口修改为1180端口为例</strong></p>\n<p><strong>（1）修改harbor.yml文件</strong></p>\n<p>修改的配置项如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> 192.168.175.101\n<span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1180</span>\n<span class=\"token key atrule\">harbor_admin_password</span><span class=\"token punctuation\">:</span> binghe123\n<span class=\"token comment\">###并把https注释掉，不然在安装的时候会报错：ERROR:root:Error: The protocol is https but attribute ssl_cert is not set</span>\n<span class=\"token comment\">#https:</span>\n  <span class=\"token comment\">#port: 443</span>\n  <span class=\"token comment\">#certificate: /your/certificate/path</span>\n  <span class=\"token comment\">#private_key: /your/private/key/path</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>（2）修改docker-compose.yml文件</strong></p>\n<p>修改的配置项如下所示。</p>\n<p><strong>（3）修改config.yml文件</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> common/config/registry\n<span class=\"token function\">vim</span> config.yml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>修改的配置项如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">realm: http://192.168.175.101:1180/service/token\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>（4）重启Docker</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl daemon-reload\nsystemctl restart docker.service\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>（5）重启Harbor</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe harbor<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker-compose down</span>\nStopping harbor-log <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving nginx             <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving harbor-portal     <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving harbor-jobservice <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving harbor-core       <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving redis             <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving registry          <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving registryctl       <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving harbor-db         <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving harbor-log        <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving network harbor_harbor\n \n<span class=\"token punctuation\">[</span>root@binghe harbor<span class=\"token punctuation\">]</span><span class=\"token comment\"># ./prepare</span>\nprepare base <span class=\"token function\">dir</span> is <span class=\"token builtin class-name\">set</span> to /mnt/harbor\nClearing the configuration file: /config/log/logrotate.conf\nClearing the configuration file: /config/nginx/nginx.conf\nClearing the configuration file: /config/core/env\nClearing the configuration file: /config/core/app.conf\nClearing the configuration file: /config/registry/root.crt\nClearing the configuration file: /config/registry/config.yml\nClearing the configuration file: /config/registryctl/env\nClearing the configuration file: /config/registryctl/config.yml\nClearing the configuration file: /config/db/env\nClearing the configuration file: /config/jobservice/env\nClearing the configuration file: /config/jobservice/config.yml\nGenerated configuration file: /config/log/logrotate.conf\nGenerated configuration file: /config/nginx/nginx.conf\nGenerated configuration file: /config/core/env\nGenerated configuration file: /config/core/app.conf\nGenerated configuration file: /config/registry/config.yml\nGenerated configuration file: /config/registryctl/env\nGenerated configuration file: /config/db/env\nGenerated configuration file: /config/jobservice/env\nGenerated configuration file: /config/jobservice/config.yml\nloaded secret from file: /secret/keys/secretkey\nGenerated configuration file: /compose_location/docker-compose.yml\nClean up the input <span class=\"token function\">dir</span>\n \n<span class=\"token punctuation\">[</span>root@binghe harbor<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker-compose up -d</span>\nCreating network <span class=\"token string\">\"harbor_harbor\"</span> with the default driver\nCreating harbor-log <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nCreating harbor-db   <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nCreating redis       <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nCreating registry    <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nCreating registryctl <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nCreating harbor-core <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nCreating harbor-jobservice <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nCreating harbor-portal     <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nCreating nginx             <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\n \n<span class=\"token punctuation\">[</span>root@binghe harbor<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker ps -a</span>\nCONTAINER ID        IMAGE                                               COMMAND                  CREATED             STATUS                             PORTS\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"安装Jenkins（一般的做法）\">安装Jenkins（一般的做法）</h2>\n<h3 id=\"1-安装nfs（之前安装过的话，可以省略此步）\">1.安装nfs（之前安装过的话，可以省略此步）</h3>\n<p>使用 nfs 最大的问题就是写权限，可以使用 kubernetes 的 securityContext/runAsUser 指定 jenkins 容器中运行 jenkins 的用户 uid，以此来指定 nfs 目录的权限，让 jenkins 容器可写；也可以不限制，让所有用户都可以写。这里为了简单，就让所有用户可写了。</p>\n<p>如果之前已经安装过nfs，则这一步可以省略。找一台主机，安装 nfs，这里，我以在Master节点（binghe101服务器）上安装nfs为例。</p>\n<p>在命令行输入如下命令安装并启动nfs。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> nfs-utils -y\nsystemctl start nfs-server\nsystemctl <span class=\"token builtin class-name\">enable</span> nfs-server\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-创建nfs共享目录\">2.创建nfs共享目录</h3>\n<p>在Master节点（binghe101服务器）上创建 <code>/opt/nfs/jenkins-data</code>目录作为nfs的共享目录，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p /opt/nfs/jenkins-data\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来，编辑/etc/exports文件，如下所示。</p>\n<p>在/etc/exports文件文件中添加如下一行配置。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">/opt/nfs/jenkins-data 192.168.175.0/24(rw,all_squash)\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这里的 ip 使用 kubernetes node 节点的 ip 范围，后面的 <code>all_squash</code> 选项会将所有访问的用户都映射成 nfsnobody 用户，不管你是什么用户访问，最终都会压缩成 nfsnobody，所以只要将 <code>/opt/nfs/jenkins-data</code> 的属主改为 nfsnobody，那么无论什么用户来访问都具有写权限。</p>\n<p>这个选项在很多机器上由于用户 uid 不规范导致启动进程的用户不同，但是同时要对一个共享目录具有写权限时很有效。</p>\n<p>接下来，为 <code>/opt/nfs/jenkins-data</code>目录授权，并重新加载nfs，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chown</span> -R <span class=\"token number\">1000</span> /opt/nfs/jenkins-data/\nsystemctl reload nfs-server\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>在K8S集群中任意一个节点上使用如下命令进行验证：</p>\n<p>如果能够看到 /opt/nfs/jenkins-data 就表示 ok 了。</p>\n<p>具体如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># showmount -e 192.168.175.101</span>\nExport list <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.175.101:\n/opt/nfs/jenkins-data <span class=\"token number\">192.168</span>.175.0/24\n\n<span class=\"token punctuation\">[</span>root@binghe102 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># showmount -e 192.168.175.101</span>\nExport list <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.175.101:\n/opt/nfs/jenkins-data <span class=\"token number\">192.168</span>.175.0/24\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3-创建PV\">3.创建PV</h3>\n<p>Jenkins 其实只要加载对应的目录就可以读取之前的数据，但是由于 deployment 无法定义存储卷，因此我们只能使用 StatefulSet。</p>\n<p>首先创建 pv，pv 是给 StatefulSet 使用的，每次 StatefulSet 启动都会通过 volumeClaimTemplates 这个模板去创建 pvc，因此必须得有 pv，才能供 pvc 绑定。</p>\n<p>创建jenkins-pv.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> PersistentVolume\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nfs</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /opt/nfs/jenkins<span class=\"token punctuation\">-</span>data\n    <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span> 192.168.175.101\n  <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ReadWriteOnce\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">capacity</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 1Ti\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我这里给了 1T存储空间，可以根据实际配置。</p>\n<p>执行如下命令创建pv。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f jenkins-pv.yaml \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"4-创建serviceAccount\">4.创建serviceAccount</h3>\n<p>创建service account，因为 jenkins 后面需要能够动态创建 slave，因此它必须具备一些权限。</p>\n<p>创建jenkins-service-account.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ServiceAccount\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Role\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io/v1beta1\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n<span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"pods\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"create\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"delete\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"list\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"patch\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"update\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"watch\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"pods/exec\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"create\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"delete\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"list\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"patch\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"update\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"watch\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"pods/log\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"list\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"watch\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"secrets\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"get\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> RoleBinding\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n<span class=\"token key atrule\">roleRef</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">apiGroup</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io\n  <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Role\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n<span class=\"token key atrule\">subjects</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ServiceAccount\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上述配置中，创建了一个 RoleBinding 和一个 ServiceAccount，并且将 RoleBinding 的权限绑定到这个用户上。所以，jenkins 容器必须使用这个 ServiceAccount 运行才行，不然 RoleBinding 的权限它将不具备。</p>\n<p>RoleBinding 的权限很容易就看懂了，因为 jenkins 需要创建和删除 slave，所以才需要上面这些权限。至于 secrets 权限，则是 https 证书。</p>\n<p>执行如下命令创建serviceAccount。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f jenkins-service-account.yaml \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"5-安装Jenkins\">5.安装Jenkins</h3>\n<p>创建jenkins-statefulset.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> StatefulSet\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n  <span class=\"token key atrule\">serviceName</span><span class=\"token punctuation\">:</span> jenkins\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">updateStrategy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> RollingUpdate\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">terminationGracePeriodSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n      <span class=\"token key atrule\">serviceAccountName</span><span class=\"token punctuation\">:</span> jenkins\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> docker.io/jenkins/jenkins<span class=\"token punctuation\">:</span>lts\n          <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">32100</span>\n          <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">limits</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span>\n              <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 4Gi\n            <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span>\n              <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 4Gi\n          <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> LIMITS_MEMORY\n              <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">resourceFieldRef</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">resource</span><span class=\"token punctuation\">:</span> limits.memory\n                  <span class=\"token key atrule\">divisor</span><span class=\"token punctuation\">:</span> 1Mi\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> JAVA_OPTS\n              \n              <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">-</span>Xmx$(LIMITS_MEMORY)m <span class=\"token punctuation\">-</span>XshowSettings<span class=\"token punctuation\">:</span>vm <span class=\"token punctuation\">-</span>Dhudson.slaves.NodeProvisioner.initialDelay=0 <span class=\"token punctuation\">-</span>Dhudson.slaves.NodeProvisioner.MARGIN=50 <span class=\"token punctuation\">-</span>Dhudson.slaves.NodeProvisioner.MARGIN0=0.85\n          <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins<span class=\"token punctuation\">-</span>home\n              <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /var/jenkins_home\n          <span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /login\n              <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n            <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">60</span>\n            <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n            <span class=\"token key atrule\">failureThreshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span> \n          <span class=\"token key atrule\">readinessProbe</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /login\n              <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n            <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">60</span>\n            <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n            <span class=\"token key atrule\">failureThreshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span> \n  \n  <span class=\"token key atrule\">volumeClaimTemplates</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins<span class=\"token punctuation\">-</span>home\n      <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ReadWriteOnce\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 1Ti\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>jenkins 部署时需要注意它的副本数，你的副本数有多少就要有多少个 pv，同样，存储会有多倍消耗。这里我只使用了一个副本，因此前面也只创建了一个 pv。</p>\n<p>使用如下命令安装Jenkins。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f jenkins-statefulset.yaml \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"6-创建Service\">6.创建Service</h3>\n<p>创建jenkins-service.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  \n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n  \n  \n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">31888</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n      <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins<span class=\"token punctuation\">-</span>agent\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">32100</span>\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">32100</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">32100</span>\n      <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>使用如下命令安装Service。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f jenkins-service.yaml \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"7-安装-ingress\">7.安装 ingress</h3>\n<p>jenkins 的 web 界面需要从集群外访问，这里我们选择的是使用 ingress。创建jenkins-ingress.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> extensions/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Ingress\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /\n            <span class=\"token key atrule\">backend</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">serviceName</span><span class=\"token punctuation\">:</span> jenkins\n              <span class=\"token key atrule\">servicePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">31888</span>\n      <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> jekins.binghe.com\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>这里，需要注意的是host必须配置为域名或者主机名，否则会报错，如下所示。</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">The Ingress <span class=\"token string\">\"jenkins\"</span> is invalid: spec.rules<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>.host: Invalid value: <span class=\"token string\">\"192.168.175.101\"</span><span class=\"token builtin class-name\">:</span> must be a DNS name, not an IP address\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>使用如下命令安装ingress。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f jenkins-ingress.yaml \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>最后，由于我这里使用的是虚拟机来搭建相关的环境，在本机访问虚拟机映射的jekins.binghe.com时，需要配置本机的hosts文件，在本机的hosts文件中加入如下配置项。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">192.168.175.101 jekins.binghe.com\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>注意：在Windows操作系统中，hosts文件所在的目录如下。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">C:\\Windows\\System32\\drivers\\etc\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来，就可以在浏览器中通过链接：<a target=\"_blank\" rel=\"noopener\" href=\"https://links.jianshu.com/go?to=http%3A%2F%2Fjekins.binghe.com%3A31888\">http://jekins.binghe.com:31888</a> 来访问Jekins了。</p>\n<h2 id=\"物理机安装SVN\">物理机安装SVN</h2>\n<p>这里，以在Master节点（binghe101服务器）上安装SVN为例。</p>\n<h3 id=\"1-使用yum安装SVN\">1.使用yum安装SVN</h3>\n<p>在命令行执行如下命令安装SVN。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum -y <span class=\"token function\">install</span> subversion \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"2-创建SVN库\">2.创建SVN库</h3>\n<p>依次执行如下命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#创建/data/svn</span>\n<span class=\"token function\">mkdir</span> -p /data/svn \n<span class=\"token comment\">#初始化svn</span>\nsvnserve -d -r /data/svn\n<span class=\"token comment\">#创建代码仓库</span>\nsvnadmin create /data/svn/test\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3-配置SVN\">3.配置SVN</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> /data/svn/conf\n<span class=\"token function\">cp</span> /data/svn/test/conf/* /data/svn/conf/\n<span class=\"token builtin class-name\">cd</span> /data/svn/conf/\n<span class=\"token punctuation\">[</span>root@binghe101 conf<span class=\"token punctuation\">]</span><span class=\"token comment\"># ll</span>\n总用量 <span class=\"token number\">20</span>\n-rw-r--r-- <span class=\"token number\">1</span> root root <span class=\"token number\">1080</span> <span class=\"token number\">5</span>月  <span class=\"token number\">12</span> 02:17 authz\n-rw-r--r-- <span class=\"token number\">1</span> root root  <span class=\"token number\">885</span> <span class=\"token number\">5</span>月  <span class=\"token number\">12</span> 02:17 hooks-env.tmpl\n-rw-r--r-- <span class=\"token number\">1</span> root root  <span class=\"token number\">309</span> <span class=\"token number\">5</span>月  <span class=\"token number\">12</span> 02:17 <span class=\"token function\">passwd</span>\n-rw-r--r-- <span class=\"token number\">1</span> root root <span class=\"token number\">4375</span> <span class=\"token number\">5</span>月  <span class=\"token number\">12</span> 02:17 svnserve.conf\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>配置authz文件，</li>\n</ul>\n<p>配置后的内容如下所示。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">aliases</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token comment\"># joe = /C=XZ/ST=Dessert/L=Snake City/O=Snake Oil, Ltd./OU=Research Institute/CN=Joe Average</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">groups</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token comment\"># harry_and_sally = harry,sally</span>\n<span class=\"token comment\"># harry_sally_and_joe = harry,sally,&amp;joe</span>\n<span class=\"token key attr-name\">SuperAdmin</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">admin</span>\n<span class=\"token key attr-name\">binghe</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">admin,binghe</span>\n\n<span class=\"token comment\"># [/foo/bar]</span>\n<span class=\"token comment\"># harry = rw</span>\n<span class=\"token comment\"># &amp;joe = r</span>\n<span class=\"token comment\"># * =</span>\n\n<span class=\"token comment\"># [repository:/baz/fuz]</span>\n<span class=\"token comment\"># @harry_and_sally = rw</span>\n<span class=\"token comment\"># * = r</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">test:/</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">@SuperAdmin</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">rw</span>\n<span class=\"token key attr-name\">@binghe</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">rw</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>配置passwd文件</li>\n</ul>\n<p>配置后的内容如下所示。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">users</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token comment\"># harry = harryssecret</span>\n<span class=\"token comment\"># sally = sallyssecret</span>\n<span class=\"token key attr-name\">admin</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">admin123</span>\n<span class=\"token key attr-name\">binghe</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">binghe123</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>配置 svnserve.conf</li>\n</ul>\n<p>配置后的文件如下所示。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token comment\">### This file controls the configuration of the svnserve daemon, if you</span>\n<span class=\"token comment\">### use it to allow access to this repository.  (If you only allow</span>\n<span class=\"token comment\">### access through http: and/or file: URLs, then this file is</span>\n<span class=\"token comment\">### irrelevant.)</span>\n\n<span class=\"token comment\">### Visit http://subversion.apache.org/ for more information.</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">general</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token comment\">### The anon-access and auth-access options control access to the</span>\n<span class=\"token comment\">### repository for unauthenticated (a.k.a. anonymous) users and</span>\n<span class=\"token comment\">### authenticated users, respectively.</span>\n<span class=\"token comment\">### Valid values are \"write\", \"read\", and \"none\".</span>\n<span class=\"token comment\">### Setting the value to \"none\" prohibits both reading and writing;</span>\n<span class=\"token comment\">### \"read\" allows read-only access, and \"write\" allows complete </span>\n<span class=\"token comment\">### read/write access to the repository.</span>\n<span class=\"token comment\">### The sample settings below are the defaults and specify that anonymous</span>\n<span class=\"token comment\">### users have read-only access to the repository, while authenticated</span>\n<span class=\"token comment\">### users have read and write access to the repository.</span>\n<span class=\"token key attr-name\">anon-access</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">none</span>\n<span class=\"token key attr-name\">auth-access</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">write</span>\n<span class=\"token comment\">### The password-db option controls the location of the password</span>\n<span class=\"token comment\">### database file.  Unless you specify a path starting with a /,</span>\n<span class=\"token comment\">### the file's location is relative to the directory containing</span>\n<span class=\"token comment\">### this configuration file.</span>\n<span class=\"token comment\">### If SASL is enabled (see below), this file will NOT be used.</span>\n<span class=\"token comment\">### Uncomment the line below to use the default password file.</span>\n<span class=\"token key attr-name\">password-db</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">/data/svn/conf/passwd</span>\n<span class=\"token comment\">### The authz-db option controls the location of the authorization</span>\n<span class=\"token comment\">### rules for path-based access control.  Unless you specify a path</span>\n<span class=\"token comment\">### starting with a /, the file's location is relative to the</span>\n<span class=\"token comment\">### directory containing this file.  The specified path may be a</span>\n<span class=\"token comment\">### repository relative URL (^/) or an absolute file:// URL to a text</span>\n<span class=\"token comment\">### file in a Subversion repository.  If you don't specify an authz-db,</span>\n<span class=\"token comment\">### no path-based access control is done.</span>\n<span class=\"token comment\">### Uncomment the line below to use the default authorization file.</span>\n<span class=\"token key attr-name\">authz-db</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">/data/svn/conf/authz</span>\n<span class=\"token comment\">### The groups-db option controls the location of the file with the</span>\n<span class=\"token comment\">### group definitions and allows maintaining groups separately from the</span>\n<span class=\"token comment\">### authorization rules.  The groups-db file is of the same format as the</span>\n<span class=\"token comment\">### authz-db file and should contain a single [groups] section with the</span>\n<span class=\"token comment\">### group definitions.  If the option is enabled, the authz-db file cannot</span>\n<span class=\"token comment\">### contain a [groups] section.  Unless you specify a path starting with</span>\n<span class=\"token comment\">### a /, the file's location is relative to the directory containing this</span>\n<span class=\"token comment\">### file.  The specified path may be a repository relative URL (^/) or an</span>\n<span class=\"token comment\">### absolute file:// URL to a text file in a Subversion repository.</span>\n<span class=\"token comment\">### This option is not being used by default.</span>\n<span class=\"token comment\"># groups-db = groups</span>\n<span class=\"token comment\">### This option specifies the authentication realm of the repository.</span>\n<span class=\"token comment\">### If two repositories have the same authentication realm, they should</span>\n<span class=\"token comment\">### have the same password database, and vice versa.  The default realm</span>\n<span class=\"token comment\">### is repository's uuid.</span>\n<span class=\"token key attr-name\">realm</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">svn</span>\n<span class=\"token comment\">### The force-username-case option causes svnserve to case-normalize</span>\n<span class=\"token comment\">### usernames before comparing them against the authorization rules in the</span>\n<span class=\"token comment\">### authz-db file configured above.  Valid values are \"upper\" (to upper-</span>\n<span class=\"token comment\">### case the usernames), \"lower\" (to lowercase the usernames), and</span>\n<span class=\"token comment\">### \"none\" (to compare usernames as-is without case conversion, which</span>\n<span class=\"token comment\">### is the default behavior).</span>\n<span class=\"token comment\"># force-username-case = none</span>\n<span class=\"token comment\">### The hooks-env options specifies a path to the hook script environment </span>\n<span class=\"token comment\">### configuration file. This option overrides the per-repository default</span>\n<span class=\"token comment\">### and can be used to configure the hook script environment for multiple </span>\n<span class=\"token comment\">### repositories in a single file, if an absolute path is specified.</span>\n<span class=\"token comment\">### Unless you specify an absolute path, the file's location is relative</span>\n<span class=\"token comment\">### to the directory containing this file.</span>\n<span class=\"token comment\"># hooks-env = hooks-env</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">sasl</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token comment\">### This option specifies whether you want to use the Cyrus SASL</span>\n<span class=\"token comment\">### library for authentication. Default is false.</span>\n<span class=\"token comment\">### Enabling this option requires svnserve to have been built with Cyrus</span>\n<span class=\"token comment\">### SASL support; to check, run 'svnserve --version' and look for a line</span>\n<span class=\"token comment\">### reading 'Cyrus SASL authentication is available.'</span>\n<span class=\"token comment\"># use-sasl = true</span>\n<span class=\"token comment\">### These options specify the desired strength of the security layer</span>\n<span class=\"token comment\">### that you want SASL to provide. 0 means no encryption, 1 means</span>\n<span class=\"token comment\">### integrity-checking only, values larger than 1 are correlated</span>\n<span class=\"token comment\">### to the effective key length for encryption (e.g. 128 means 128-bit</span>\n<span class=\"token comment\">### encryption). The values below are the defaults.</span>\n<span class=\"token comment\"># min-encryption = 0</span>\n<span class=\"token comment\"># max-encryption = 256</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来，将/data/svn/conf目录下的svnserve.conf文件复制到/data/svn/test/conf/目录下。如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 conf<span class=\"token punctuation\">]</span><span class=\"token comment\"># cp /data/svn/conf/svnserve.conf /data/svn/test/conf/</span>\ncp：是否覆盖<span class=\"token string\">'/data/svn/test/conf/svnserve.conf'</span>？ y\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"4-启动SVN服务\">4.启动SVN服务</h3>\n<p><strong>（1）创建svnserve.service服务</strong></p>\n<p>创建svnserve.service文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /usr/lib/systemd/system/svnserve.service\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>文件的内容如下所示。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Unit</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">Description</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">Subversion protocol daemon</span>\n<span class=\"token key attr-name\">After</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">syslog.target network.target</span>\n<span class=\"token key attr-name\">Documentation</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">man:svnserve(8)</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Service</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">Type</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">forking</span>\n<span class=\"token key attr-name\">EnvironmentFile</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">/etc/sysconfig/svnserve</span>\n<span class=\"token comment\">#ExecStart=/usr/bin/svnserve --daemon --pid-file=/run/svnserve/svnserve.pid $OPTIONS</span>\n<span class=\"token key attr-name\">ExecStart</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">/usr/bin/svnserve --daemon $OPTIONS</span>\n<span class=\"token key attr-name\">PrivateTmp</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">yes</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Install</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">WantedBy</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">multi-user.target</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来执行如下命令使配置生效。</p>\n<p>命令执行成功后，修改 /etc/sysconfig/svnserve 文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/sysconfig/svnserve \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>修改后的文件内容如下所示。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token comment\"># OPTIONS is used to pass command-line arguments to svnserve.</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># Specify the repository location in -r parameter:</span>\n<span class=\"token key attr-name\">OPTIONS</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"<span class=\"token inner-value\">-r /data/svn</span>\"</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>（2）启动SVN</strong></p>\n<p>首先查看SVN状态，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@itence10 conf<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl status svnserve.service</span>\n● svnserve.service - Subversion protocol daemon\n   Loaded: loaded <span class=\"token punctuation\">(</span>/usr/lib/systemd/system/svnserve.service<span class=\"token punctuation\">;</span> disabled<span class=\"token punctuation\">;</span> vendor preset: disabled<span class=\"token punctuation\">)</span>\n   Active: inactive <span class=\"token punctuation\">(</span>dead<span class=\"token punctuation\">)</span>\n     Docs: man:svnserve<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以看到，此时SVN并没有启动，接下来，需要启动SVN。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl start svnserve.service\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>设置SVN服务开机自启动。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl <span class=\"token builtin class-name\">enable</span> svnserve.service\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来，就可以下载安装TortoiseSVN，输入链接<a target=\"_blank\" rel=\"noopener\" href=\"https://links.jianshu.com/go?to=svn%3A%2F%2F192.168.0.10%2Ftest\">svn://192.168.0.10/test</a> 并输入用户名binghe，密码binghe123来连接SVN了。</p>\n<h2 id=\"物理机安装Jenkins\">物理机安装Jenkins</h2>\n<p><strong>注意：安装Jenkins之前需要安装JDK和Maven，我这里同样将Jenkins安装在Master节点（binghe101服务器）。</strong></p>\n<h3 id=\"1-启用Jenkins库\">1.启用Jenkins库</h3>\n<p>运行以下命令以下载repo文件并导入GPG密钥：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo\n<span class=\"token function\">rpm</span> --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"2-安装Jenkins\">2.安装Jenkins</h3>\n<p>执行如下命令安装Jenkis。</p>\n<p>接下来，修改Jenkins默认端口，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/sysconfig/jenkins\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>修改后的两项配置如下所示。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token key attr-name\">JENKINS_JAVA_CMD</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"<span class=\"token inner-value\">/usr/local/jdk1.8.0_212/bin/java</span>\"</span>\n<span class=\"token key attr-name\">JENKINS_PORT</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"<span class=\"token inner-value\">18080</span>\"</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>此时，已经将Jenkins的端口由8080修改为18080</p>\n<h3 id=\"3-启动Jenkins\">3.启动Jenkins</h3>\n<p>在命令行输入如下命令启动Jenkins。</p>\n<p>配置Jenkins开机自启动。</p>\n<p>查看Jenkins的运行状态。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@itence10 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl status jenkins</span>\n● jenkins.service - LSB: Jenkins Automation Server\n   Loaded: loaded <span class=\"token punctuation\">(</span>/etc/rc.d/init.d/jenkins<span class=\"token punctuation\">;</span> generated<span class=\"token punctuation\">)</span>\n   Active: active <span class=\"token punctuation\">(</span>running<span class=\"token punctuation\">)</span> since Tue <span class=\"token number\">2020</span>-05-12 04:33:40 EDT<span class=\"token punctuation\">;</span> 28s ago\n     Docs: man:systemd-sysv-generator<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n    Tasks: <span class=\"token number\">71</span> <span class=\"token punctuation\">(</span>limit: <span class=\"token number\">26213</span><span class=\"token punctuation\">)</span>\n   Memory: <span class=\"token number\">550</span>.8M\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>说明，Jenkins启动成功。</p>\n<h2 id=\"配置Jenkins运行环境\">配置Jenkins运行环境</h2>\n<h3 id=\"1-登录Jenkins\">1.登录Jenkins</h3>\n<p>首次安装后，需要配置Jenkins的运行环境。首先，在浏览器地址栏访问链接http://192.168.0.10:18080，打开Jenkins界面。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-11.jpg\" alt=\"\"></p>\n<p>根据提示使用如下命令到服务器上找密码值，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /var/lib/jenkins/secrets/initialAdminPassword</span>\n71af861c2ab948a1b6efc9f7dde90776\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>将密码71af861c2ab948a1b6efc9f7dde90776复制到文本框，点击继续。会跳转到自定义Jenkins页面，如下所示。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-12.jpg\" alt=\"\"></p>\n<p>这里，可以直接选择“安装推荐的插件”。之后会跳转到一个安装插件的页面，如下所示。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-13.jpg\" alt=\"\"></p>\n<p>此步骤可能有下载失败的情况，可直接忽略。</p>\n<h3 id=\"2-安装插件\">2.安装插件</h3>\n<p>需要安装的插件</p>\n<ul>\n<li>\n<p>Kubernetes Cli Plugin：该插件可直接在Jenkins中使用kubernetes命令行进行操作。</p>\n</li>\n<li>\n<p>Kubernetes plugin： 使用kubernetes则需要安装该插件</p>\n</li>\n<li>\n<p>Kubernetes Continuous Deploy Plugin：kubernetes部署插件，可根据需要使用</p>\n</li>\n</ul>\n<p>还有更多的插件可供选择，可点击 系统管理-&gt;管理插件进行管理和添加，安装相应的Docker插件、SSH插件、Maven插件。其他的插件可以根据需要进行安装。如下图所示。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-14.jpg\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-15.jpg\" alt=\"\"></p>\n<h3 id=\"3-配置Jenkins\">3.配置Jenkins</h3>\n<p><strong>（1）配置JDK和Maven</strong></p>\n<p>在Global Tool Configuration中配置JDK和Maven，如下所示，打开Global Tool Configuration界面。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-16.jpg\" alt=\"\"></p>\n<p>接下来就开始配置JDK和Maven了。</p>\n<p>由于我在服务器上将Maven安装在/usr/local/maven-3.6.3目录下，所以，需要在“Maven 配置”中进行配置，如下图所示。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-17.jpg\" alt=\"\"></p>\n<p>接下来，配置JDK，如下所示。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-18.jpg\" alt=\"\"></p>\n<p><strong>注意：不要勾选“Install automatically”</strong></p>\n<p>接下来，配置Maven，如下所示。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-19.jpg\" alt=\"\"></p>\n<p><strong>注意：不要勾选“Install automatically”</strong></p>\n<p><strong>（2）配置SSH</strong></p>\n<p>进入Jenkins的Configure System界面配置SSH，如下所示。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-20.jpg\" alt=\"\"></p>\n<p>找到 SSH remote hosts 进行配置。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-21.jpg\" alt=\"\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-22.jpg\" alt=\"\"></p>\n<p>配置完成后，点击Check connection按钮，会显示 Successfull connection。如下所示。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1620220416011231-23.jpg\" alt=\"\"></p>\n<p>至此，Jenkins的基本配置就完成了。</p>\n<h2 id=\"Jenkins发布Docker项目到K8s集群\">Jenkins发布Docker项目到K8s集群</h2>\n<h3 id=\"1-调整SpringBoot项目的配置\">1.调整SpringBoot项目的配置</h3>\n<p>实现，SpringBoot项目中启动类所在的模块的pom.xml需要引入打包成Docker镜像的配置，如下所示。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>docker.repostory</span><span class=\"token punctuation\">&gt;</span></span>192.168.0.10:1180<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>docker.repostory</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>docker.registry.name</span><span class=\"token punctuation\">&gt;</span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>docker.registry.name</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>docker.image.tag</span><span class=\"token punctuation\">&gt;</span></span>1.0.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>docker.image.tag</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>docker.maven.plugin.version</span><span class=\"token punctuation\">&gt;</span></span>1.4.10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>docker.maven.plugin.version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>build</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>finalName</span><span class=\"token punctuation\">&gt;</span></span>test-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>finalName</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugins</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-boot-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">&gt;</span></span>\n            \n            \n            \n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>com.spotify<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>dockerfile-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>${docker.maven.plugin.version}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>executions</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>execution</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">&gt;</span></span>default<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goals</span><span class=\"token punctuation\">&gt;</span></span>\n                        \n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goal</span><span class=\"token punctuation\">&gt;</span></span>build<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goal</span><span class=\"token punctuation\">&gt;</span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goal</span><span class=\"token punctuation\">&gt;</span></span>push<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goal</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goals</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>execution</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>executions</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>contextDirectory</span><span class=\"token punctuation\">&gt;</span></span>${project.basedir}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>contextDirectory</span><span class=\"token punctuation\">&gt;</span></span>\n                    \n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>useMavenSettingsForAuth</span><span class=\"token punctuation\">&gt;</span></span>useMavenSettingsForAuth&gt;true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>useMavenSettingsForAuth</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>repository</span><span class=\"token punctuation\">&gt;</span></span>${docker.repostory}/${docker.registry.name}/${project.artifactId}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>repository</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tag</span><span class=\"token punctuation\">&gt;</span></span>${docker.image.tag}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tag</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>buildArgs</span><span class=\"token punctuation\">&gt;</span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>JAR_FILE</span><span class=\"token punctuation\">&gt;</span></span>target/${project.build.finalName}.jar<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>JAR_FILE</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>buildArgs</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">&gt;</span></span>\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugins</span><span class=\"token punctuation\">&gt;</span></span>\n        \n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resources</span><span class=\"token punctuation\">&gt;</span></span>\n            \n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resource</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>directory</span><span class=\"token punctuation\">&gt;</span></span>src/main/resources<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>directory</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>targetPath</span><span class=\"token punctuation\">&gt;</span></span>${project.build.directory}/classes<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>targetPath</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>includes</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span><span class=\"token punctuation\">&gt;</span></span>**/*<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>include</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>includes</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filtering</span><span class=\"token punctuation\">&gt;</span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filtering</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resource</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resources</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>build</span><span class=\"token punctuation\">&gt;</span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来，在SpringBoot启动类所在模块的根目录创建Dockerfile，内容示例如下所示。</p>\n<pre class=\"line-numbers language-docker\" data-language=\"docker\"><code class=\"language-docker\"><span class=\"token comment\">#添加依赖环境，前提是将Java8的Docker镜像从官方镜像仓库pull下来，然后上传到自己的Harbor私有仓库中</span>\n<span class=\"token instruction\"><span class=\"token keyword\">FROM</span> 192.168.0.10:1180/library/java:8</span>\n<span class=\"token comment\">#指定镜像制作作者</span>\n<span class=\"token instruction\"><span class=\"token keyword\">MAINTAINER</span> binghe</span>\n<span class=\"token comment\">#运行目录</span>\n<span class=\"token instruction\"><span class=\"token keyword\">VOLUME</span> /tmp</span>\n<span class=\"token comment\">#将本地的文件拷贝到容器</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ADD</span> target/*jar app.jar</span>\n<span class=\"token comment\">#启动容器后自动执行的命令</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ENTRYPOINT</span> [ <span class=\"token string\">\"java\"</span>, <span class=\"token string\">\"-Djava.security.egd=file:/dev/./urandom\"</span>, <span class=\"token string\">\"-jar\"</span>, <span class=\"token string\">\"/app.jar\"</span> ]</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>根据实际情况，自行修改。</p>\n<p><strong>注意：FROM 192.168.0.10:1180/library/java:8的前提是执行如下命令。</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> pull java:8\n<span class=\"token function\">docker</span> tag java:8 <span class=\"token number\">192.168</span>.0.10:1180/library/java:8\n<span class=\"token function\">docker</span> login <span class=\"token number\">192.168</span>.0.10:1180\n<span class=\"token function\">docker</span> push <span class=\"token number\">192.168</span>.0.10:1180/library/java:8\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在SpringBoot启动类所在模块的根目录创建yaml文件，录入叫做test.yaml文件，内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>starter\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>starter\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>starter\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>starter\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>starter\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> 192.168.0.10<span class=\"token punctuation\">:</span>1180/test/test<span class=\"token punctuation\">-</span>starter<span class=\"token punctuation\">:</span>1.0.0\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8088</span>\n      <span class=\"token key atrule\">nodeSelector</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">clustertype</span><span class=\"token punctuation\">:</span> node12\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>starter\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>starter\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8088</span>\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30001</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>starter\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-Jenkins配置发布项目\">2.Jenkins配置发布项目</h3>\n<p>将项目上传到SVN代码库，例如地址为<a target=\"_blank\" rel=\"noopener\" href=\"https://links.jianshu.com/go?to=svn%3A%2F%2F192.168.0.10%2Ftest\">svn://192.168.0.10/test</a></p>\n<p>接下来，在Jenkins中配置自动发布。步骤如下所示。</p>\n<p>点击新建Item。</p>\n<p>在描述文本框中输入描述信息，如下所示。</p>\n<p>接下来，配置SVN信息。</p>\n<p><strong>注意：配置GitLab的步骤与SVN相同，不再赘述。</strong></p>\n<p>定位到Jenkins的“构建模块”，使用Execute Shell来构建发布项目到K8S集群。</p>\n<p>执行的命令依次如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#删除本地原有的镜像,不会影响Harbor仓库中的镜像</span>\n<span class=\"token function\">docker</span> rmi <span class=\"token number\">192.168</span>.0.10:1180/test/test-starter:1.0.0\n<span class=\"token comment\">#使用Maven编译、构建Docker镜像，执行完成后本地Docker容器中会重新构建镜像文件</span>\n/usr/local/maven-3.6.3/bin/mvn -f ./pom.xml clean <span class=\"token function\">install</span> -Dmaven.test.skip<span class=\"token operator\">=</span>true\n<span class=\"token comment\">#登录 Harbor仓库</span>\n<span class=\"token function\">docker</span> login <span class=\"token number\">192.168</span>.0.10:1180 -u binghe -p Binghe123\n<span class=\"token comment\">#上传镜像到Harbor仓库</span>\n<span class=\"token function\">docker</span> push <span class=\"token number\">192.168</span>.0.10:1180/test/test-starter:1.0.0\n<span class=\"token comment\">#停止并删除K8S集群中运行的</span>\n/usr/bin/kubectl delete -f test.yaml\n<span class=\"token comment\">#将Docker镜像重新发布到K8S集群</span>\n/usr/bin/kubectl apply -f test.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>编辑整理 <a target=\"_blank\" rel=\"noopener\" href=\"https://www.jianshu.com/u/b1e8818c1241\">冰河团队</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://www.jianshu.com/p/86d288ea64c4\">From</a></p>\n<h2 id=\"系列教程-14\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Devops系列</strong> <a href=\"https://blog.17lai.site/categories/devops/atom.xml\"><strong>Devops 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/ab63eb8f/\">自建全套开源Devops开发系统</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d32a07a7/\">Git介绍以及分支模型图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/39563241/\">三万字无坑搭建基于Docker+K8S+GitLab/SVN+Jenkins+Harbor持续集成交付环境</a></li>\n<li><a href=\"https://blog.17lai.site/posts/3437994a/\">DevOps系列---【Jenkinsfile+Dockerfile+nginx+vue】</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f4c3ad41/\">项目开发管理工具推荐</a></li>\n<li><a href=\"https://blog.17lai.site/posts/acc13b70/\">Gitlab的安装及使用教程完全版</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d08eb7b/\">Gitlab的安装及使用</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "gitlab",
                "docker",
                "k8s",
                "harbor"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/3437994a/",
            "url": "https://blog.17lai.site/posts/3437994a/",
            "title": "DevOps系列---【Jenkinsfile+Dockerfile+nginx+vue】",
            "date_published": "2022-04-15T10:49:37.000Z",
            "content_html": "<h2 id=\"1-前提：一台装好的jenkins\">1.前提：一台装好的jenkins</h2>\n<p>参考:https://www.cnblogs.com/hujunwei/p/13176994.html</p>\n<h2 id=\"2-编写Dockerfile，放在项目根目录下\">2.编写Dockerfile，放在项目根目录下</h2>\n<pre class=\"line-numbers language-docker\" data-language=\"docker\"><code class=\"language-docker\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> nginx</span>\n<span class=\"token comment\">#修改名字、版本、作者</span>\n<span class=\"token instruction\"><span class=\"token keyword\">LABEL</span> name=<span class=\"token string\">\"home-finance-web-dev\"</span> version=<span class=\"token string\">\"1.0.0\"</span> author=<span class=\"token string\">\"hjw\"</span></span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> dist/ /usr/share/nginx/html/</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> nginx/nginx-dev.conf /etc/nginx/nginx.conf</span>\n<span class=\"token instruction\"><span class=\"token keyword\">EXPOSE</span> 80</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"3-编写Jenkinsfile，放在项目根目录下\">3.编写Jenkinsfile，放在项目根目录下</h2>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">//流水线脚本\npipeline <span class=\"token punctuation\">{</span>\n    agent any\n    environment <span class=\"token punctuation\">{</span>\n        WS = \"$<span class=\"token punctuation\">{</span>WORKSPACE<span class=\"token punctuation\">}</span>\"\n        TOPIC = \"测试\"\n        TITLE = \"标题\"\n        CONTENT = \"具体内容\"\n    <span class=\"token punctuation\">}</span>\n\n    //定义流水线的加工流程\n    stages <span class=\"token punctuation\">{</span>\n        stage('环境检查') <span class=\"token punctuation\">{</span>\n            steps<span class=\"token punctuation\">{</span>\n                sh 'printenv'\n                echo \"正在检测基本信息\"\n                sh 'git <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>version'\n                sh 'docker version'\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        stage('编译') <span class=\"token punctuation\">{</span>\n            //jenkins不配置任何环境的情况下可以兼容任何场景\n            agent <span class=\"token punctuation\">{</span>\n                docker <span class=\"token punctuation\">{</span> image 'node<span class=\"token punctuation\">:</span>14.17.6<span class=\"token punctuation\">-</span>alpine3.13' <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            steps<span class=\"token punctuation\">{</span>\n                sh 'node <span class=\"token punctuation\">-</span>v'\n                sh 'npm <span class=\"token punctuation\">-</span>v'\n                sh 'pwd <span class=\"token important\">&amp;&amp;</span> ls <span class=\"token punctuation\">-</span>alh'\n                sh 'echo \"默认的项目目录<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>WS<span class=\"token punctuation\">}</span>\"'\n                //注意<span class=\"token punctuation\">:</span>cd $<span class=\"token punctuation\">{</span>WS<span class=\"token punctuation\">}</span> <span class=\"token important\">&amp;&amp;</span> npm不能分开写，也不能直接用$<span class=\"token punctuation\">{</span>WORKSPACE<span class=\"token punctuation\">}</span>\n                sh 'cd $<span class=\"token punctuation\">{</span>WS<span class=\"token punctuation\">}</span>/fast<span class=\"token punctuation\">-</span>ui <span class=\"token important\">&amp;&amp;</span> npm config set registry=https<span class=\"token punctuation\">:</span>//registry.npm.taobao.org <span class=\"token important\">&amp;&amp;</span> npm install <span class=\"token punctuation\">-</span>g cnpm <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>registry=https<span class=\"token punctuation\">:</span>//registry.npm.taobao.org <span class=\"token important\">&amp;&amp;</span> cnpm install <span class=\"token important\">&amp;&amp;</span> cnpm run build'\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        stage('生成镜像') <span class=\"token punctuation\">{</span>\n            steps<span class=\"token punctuation\">{</span>\n                sh 'pwd <span class=\"token important\">&amp;&amp;</span> ls <span class=\"token punctuation\">-</span>alh'\n                echo '生成镜像'\n                sh 'docker version'\n                sh \"echo 默认的项目目录<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>WS<span class=\"token punctuation\">}</span>\"\n                sh 'cd $<span class=\"token punctuation\">{</span>WS<span class=\"token punctuation\">}</span>/fast<span class=\"token punctuation\">-</span>ui <span class=\"token important\">&amp;&amp;</span> docker build <span class=\"token punctuation\">-</span>t home<span class=\"token punctuation\">-</span>finance<span class=\"token punctuation\">-</span>web .'\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        stage('部署') <span class=\"token punctuation\">{</span>\n            steps<span class=\"token punctuation\">{</span>\n                echo '部署<span class=\"token punctuation\">...</span>.'\n                sh 'pwd <span class=\"token important\">&amp;&amp;</span> ls <span class=\"token punctuation\">-</span>alh'\n                sh 'pwd <span class=\"token important\">&amp;&amp;</span> ls <span class=\"token punctuation\">-</span>alh'\n                sh 'docker rm <span class=\"token punctuation\">-</span>f home<span class=\"token punctuation\">-</span>finance<span class=\"token punctuation\">-</span>web'\n                sh 'docker run <span class=\"token punctuation\">-</span>d <span class=\"token punctuation\">-</span>p 8081<span class=\"token punctuation\">:</span>80 <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>restart=always <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>name home<span class=\"token punctuation\">-</span>finance<span class=\"token punctuation\">-</span>web home<span class=\"token punctuation\">-</span>finance<span class=\"token punctuation\">-</span>web'\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"4-编写nginx-dev-conf-放在项目根目录下的nginx目录下\">4.编写nginx-dev.conf,放在项目根目录下的nginx目录下</h2>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token directive\"><span class=\"token keyword\">user</span>  nginx</span><span class=\"token punctuation\">;</span>\n<span class=\"token directive\"><span class=\"token keyword\">worker_processes</span>  <span class=\"token number\">1</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token directive\"><span class=\"token keyword\">error_log</span>  /var/log/nginx/error.log warn</span><span class=\"token punctuation\">;</span>\n<span class=\"token directive\"><span class=\"token keyword\">pid</span>        /var/run/nginx.pid</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token directive\"><span class=\"token keyword\">events</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token directive\"><span class=\"token keyword\">worker_connections</span>  <span class=\"token number\">1024</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token directive\"><span class=\"token keyword\">http</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token directive\"><span class=\"token keyword\">include</span>       /etc/nginx/mime.types</span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">default_type</span>  application/octet-stream</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token directive\"><span class=\"token keyword\">log_format</span>  main  <span class=\"token string\">'<span class=\"token variable\">$remote_addr</span> - <span class=\"token variable\">$remote_user</span> [<span class=\"token variable\">$time_local]</span> \"<span class=\"token variable\">$request</span>\" '</span>\n                      <span class=\"token string\">'<span class=\"token variable\">$status</span> <span class=\"token variable\">$body_bytes_sent</span> \"<span class=\"token variable\">$http_referer</span>\" '</span>\n                      <span class=\"token string\">'\"<span class=\"token variable\">$http_user_agent</span>\" \"<span class=\"token variable\">$http_x_forwarded_for</span>\"'</span></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token directive\"><span class=\"token keyword\">access_log</span>  /var/log/nginx/access.log  main</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token directive\"><span class=\"token keyword\">sendfile</span>        <span class=\"token boolean\">on</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">#tcp_nopush     on;</span>\n\n    <span class=\"token directive\"><span class=\"token keyword\">keepalive_timeout</span>  <span class=\"token number\">65</span></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">#gzip  on;</span>\n\n    <span class=\"token comment\"># include /etc/nginx/conf.d/*.conf;</span>\n\n    <span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token directive\"><span class=\"token keyword\">listen</span>       <span class=\"token number\">80</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">server_name</span>  101.43.159.8</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># 服务器地址或绑定域名</span>\n\n        <span class=\"token comment\">#charset koi8-r;</span>\n        <span class=\"token comment\">#access_log  /var/log/nginx/host.access.log  main;</span>\n\n        <span class=\"token comment\"># =========================================================</span>\n        <span class=\"token comment\"># ================== ↓↓↓↓↓↓ start ↓↓↓↓↓↓ ==================</span>\n        <span class=\"token comment\"># =========================================================</span>\n\n        <span class=\"token directive\"><span class=\"token keyword\">location</span> /</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token directive\"><span class=\"token keyword\">root</span>   /usr/share/nginx/html</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">#try_files $uri $uri/ @router;</span>\n            <span class=\"token directive\"><span class=\"token keyword\">index</span>  index.html index.htm</span><span class=\"token punctuation\">;</span>\n            <span class=\"token directive\"><span class=\"token keyword\">try_files</span> <span class=\"token variable\">$uri</span> <span class=\"token variable\">$uri</span>/ /index.html</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># 解决页面刷新 404 问题</span>\n            <span class=\"token comment\">#proxy_pass http://zhengqingya.gitee.io; # 代理的ip地址和端口号</span>\n            <span class=\"token comment\">#proxy_connect_timeout 600; #代理的连接超时时间（单位：毫秒）</span>\n            <span class=\"token comment\">#proxy_read_timeout 600; #代理的读取资源超时时间（单位：毫秒）</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\"># =========================================================</span>\n        <span class=\"token comment\"># ================== ↑↑↑↑↑↑ end ↑↑↑↑↑↑ ==================</span>\n        <span class=\"token comment\"># =========================================================</span>\n\n        <span class=\"token comment\">#error_page  404              /404.html;</span>\n\n        <span class=\"token comment\"># redirect server error pages to the static page /50x.html</span>\n        <span class=\"token comment\">#</span>\n        <span class=\"token directive\"><span class=\"token keyword\">error_page</span>   <span class=\"token number\">500</span> <span class=\"token number\">502</span> <span class=\"token number\">503</span> <span class=\"token number\">504</span>  /50x.html</span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">location</span> = /50x.html</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token directive\"><span class=\"token keyword\">root</span>   /usr/share/nginx/html</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>编辑整理 <a target=\"_blank\" rel=\"noopener\" href=\"https://www.cnblogs.com/hujunwei/p/15957956.html\">hujunwei</a></p>\n<h2 id=\"系列教程-12\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Devops系列</strong> <a href=\"https://blog.17lai.site/categories/devops/atom.xml\"><strong>Devops 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/ab63eb8f/\">自建全套开源Devops开发系统</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d32a07a7/\">Git介绍以及分支模型图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/39563241/\">三万字无坑搭建基于Docker+K8S+GitLab/SVN+Jenkins+Harbor持续集成交付环境</a></li>\n<li><a href=\"https://blog.17lai.site/posts/3437994a/\">DevOps系列---【Jenkinsfile+Dockerfile+nginx+vue】</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f4c3ad41/\">项目开发管理工具推荐</a></li>\n<li><a href=\"https://blog.17lai.site/posts/acc13b70/\">Gitlab的安装及使用教程完全版</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d08eb7b/\">Gitlab的安装及使用</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "nginx",
                "jenkins",
                "devops"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/f4c3ad41/",
            "url": "https://blog.17lai.site/posts/f4c3ad41/",
            "title": "项目开发管理工具推荐",
            "date_published": "2022-04-15T10:48:59.000Z",
            "content_html": "<blockquote>\n<p>软件开发是复杂的创造性的劳动，需要依赖大量工具才能完成，因此想要提高软件开发的效率和质量，离不开强大、高效、易用、维护成本低的工具，下面我根据自己的经验，推荐一些好用的工具。</p>\n</blockquote>\n<h2 id=\"即时通讯\">即时通讯</h2>\n<blockquote>\n<p>更推荐自建开源替代。</p>\n</blockquote>\n<p>即时通讯和会议系统是项目开发过程中必不可少的，尤其是远程办公时，会议系统更是不可或缺。企业微信拥有和微信一致的沟通体验，简单易用。企业微信可随时随地发起和参与音视频会议，支持300人同时参会，并为主持人提供了管理功能。发言时还可演示文档或电脑屏幕，支持实时标注演示内容。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1520220415205156.png\" alt=\"gitea\"></p>\n<p>官方网站：https://work.weixin.qq.com/</p>\n<h2 id=\"项目管理\">项目管理</h2>\n<p>目前主流的项目管理通常采用敏捷开发的模式，因此项目管理工具也要选择支持敏捷开发模式的工具，不建议使用禅道这样的重流程的工具，不适合敏捷团队，这里我推荐Taiga，它设计简洁，操作简单，充分体现了敏捷开发的理念。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1520220415211820.png\" alt=\"gitea\"></p>\n<p>官方网站：<a target=\"_blank\" rel=\"noopener\" href=\"https://taiga.io/\">https://taiga.io</a></p>\n<p>在线体验：<a target=\"_blank\" rel=\"noopener\" href=\"https://tree.taiga.io/\">https://tree.taiga.io</a></p>\n<p>体验版服务器在国外，访问可能会有点慢。</p>\n<h2 id=\"代码托管\">代码托管</h2>\n<p>前几年使用的比较多是SVN，近几年基本都使用GIT了，开源项目大都使用Github，虽然免费，但国内访问不稳定，速度慢，因此国内的公司基本都会自己搭建，我先后为公司搭建过两个托管平台，一个是Gitlab，一个是Gitea，Gitlab功能比较全面，但对硬件资源要求比较高，而且性能一般。所以推荐使用另一个开源的git托管平台——Gitea。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1520220415212537.png\" alt=\"gitea\"></p>\n<p>官方网站：<a target=\"_blank\" rel=\"noopener\" href=\"https://gitea.io/\">https://gitea.io</a></p>\n<p>在线体验：<a target=\"_blank\" rel=\"noopener\" href=\"https://gitea.com/\">https://gitea.com</a></p>\n<h2 id=\"持续交付\">持续交付</h2>\n<p>最知名、使用最广泛的开源的持续集成、交付平台当属Jenkins，主要的优势在于有大量免费的插件可以使用，但实际使用发现，很多插件质量很差，配置项很多，真正想要落地，其实需要自己编写shell脚本。这里我推荐基于docker技术的一款现代化的持续交付平台DroneCI，它使用简单，可以和主流的Git代码托管平台无缝对接，并且不需要编写代码就可以满足大多数持续构建、交付的需求。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1520220415212440.png\" alt=\"gitea\"></p>\n<p>官方网站：<a target=\"_blank\" rel=\"noopener\" href=\"https://drone.io/\">https://drone.io</a></p>\n<p>在线体验：<a target=\"_blank\" rel=\"noopener\" href=\"https://cloud.drone.io/\">https://cloud.drone.io</a></p>\n<p>体验版服务器在国外，访问可能会有点慢。</p>\n<h2 id=\"制品库-本地仓库\">制品库(本地仓库)</h2>\n<p>Maven 仓库是项目中依赖的第三方库，这个库所在的位置叫做仓库。Maven 仓库能帮助我们管理构件（主要是JAR），它就是放置所有JAR文件（WAR，ZIP，POM等等）的地方。</p>\n<p>后来，除了Maven仓库，还有npm、nuget、pypi、docker等仓库也需要本地仓库。</p>\n<p>市面上可选的通用的本地仓库有：nexus、ARTIFACTORY，ARTIFACTORY是收费的，nexus是免费的，同时nexus以其易用性和可靠性，成为目前市场上最主流的本地仓库。</p>\n<p>官方网站：https://www.sonatype.com/product-nexus-repository</p>\n<h2 id=\"文件存储\">文件存储</h2>\n<p>在公司中，文件分享是一个很常用的功能，不同于云盘，他对性能和安全性没有那么高的要求，简单易用才是大家最关心的，这里推荐chfs，chfs是一个免费的、HTTP协议的文件共享服务器，使用浏览器可以快速访问。与其他常用文件共享方式（如FTP，飞秋，网盘，自己建站）相比，具有使用简单，适用场景更多的优点，在个人使用以及共享给他人的场景中非常方便快捷。</p>\n<p>官方网站：http://iscute.cn/chfs</p>\n<h2 id=\"绘图-流程图、UML、思维导图\">绘图(流程图、UML、思维导图)</h2>\n<p>draw.io 是一个强大简洁的在线的绘图网站，支持流程图，UML图，架构图，原型图等。支持Github，Google Drive, One drive等网盘同步，并且永久免费。如果觉得使用Web版不方便，draw.io 也提供了多平台的离线桌面版可供下载。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1520220415205300.png\" alt=\"img\"></p>\n<p>在线版：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.draw.io/\">https://www.draw.io</a></p>\n<p>本地部署版：https://github.com/jgraph/drawio/releases/latest</p>\n<p>PC 安装版：https://github.com/jgraph/drawio-desktop/releases/latest</p>\n<h2 id=\"接口管理\">接口管理</h2>\n<p>维护不同工具之间数据一致性非常困难、低效。并且这里不仅仅是工作量的问题，更大的问题是多个系统之间数据不一致，导致协作低效、频繁出问题，开发测试人员痛苦不堪。</p>\n<p>Apifox 是接口管理、开发、测试全流程集成工具，定位 Postman + Swagger + Mock + JMeter。通过一套系统、一份数据，解决多个系统之间的数据同步问题。只要定义好接口文档，接口调试、数据 Mock、接口测试就可以直接使用，无需再次定义；接口文档和接口开发调试使用同一个工具，接口调试完成后即可保证和接口文档定义完全一致。高效、及时、准确！</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1520220415205213.svg+xml\" alt=\"gitea\"></p>\n<p>官方网站：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.apifox.cn/\">https://www.apifox.cn</a></p>\n<h2 id=\"安全测试\">安全测试</h2>\n<p>在今天，网站的安全是容易被忽视的，黑客具备广泛的攻击手段，例如SQL注入，XSS，文件包含，目录遍历，参数篡改，认证攻击等，虽然你配置了正确的防火墙和WAF，但是这些安全防御软件仍然存在策略性的绕过。因此，需要您定期的扫描你的web应用，但是手动检测你所有的web应用是否存在安全漏洞比较复杂和费时，所以您需要一款自动化的web漏洞扫描工具来检测您的web应用是否存在安全漏洞。</p>\n<p>Acunetix Web Vulnerability Scanner（简称AWVS）是一款知名的Web网络漏洞扫描工具，它通过网络爬虫测试你的网站安全，检测流行安全漏洞。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1520220415205220.svg+xml\" alt=\"awvs\"></p>\n<p>官方网站：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.acunetix.com/\">https://www.acunetix.com</a></p>\n<h2 id=\"性能测试\">性能测试</h2>\n<p>Locust是一个用于可扩展的，分布式的，性能测试的，开源的，用Python编写框架/工具，它非常容易使用，也非常好学。</p>\n<p>它的主要思想就是模拟一群用户将访问你的网站。每个用户的行为由你编写的python代码定义，同时可以从Web界面中实时观察到用户的行为。</p>\n<p>Locust完全是事件驱动的，因此在单台机器上能够支持几千并发用户访问。</p>\n<p>与其它许多基于事件的应用相比，Locust并不使用回调，而是使用gevent，而gevent是基于协程的，可以用同步的方式来编写异步执行的代码。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1520220415205227.png\" alt=\"awvs\"></p>\n<p>官方网站：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.locust.io/\">https://www.locust.io</a></p>\n<h2 id=\"代码静态分析平台\">代码静态分析平台</h2>\n<p>SonarQube 是一款用于代码质量管理的开源工具，它主要用于管理源代码的质量。 通过插件形式，可以支持众多计算机语言，比如 java, C#, go，C/C++, PL/SQL, Cobol, JavaScrip, Groovy 等。sonar可以通过PMD,CheckStyle,Findbugs等等代码规则检测工具来检测你的代码，帮助你发现代码的漏洞，Bug，异味等信息。</p>\n<p>Sonar 不仅提供了对 IDE 的支持，可以在 Eclipse和 IntelliJ IDEA 这些工具里联机查看结果；同时 Sonar 还对大量的持续集成工具提供了接口支持，可以很方便地在持续集成中使用 Sonar</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/1520220415205228.svg\" alt=\"awvs\"></p>\n<p>官方网站：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.sonarqube.org/\">https://www.sonarqube.org</a></p>\n<h2 id=\"系列教程-13\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Devops系列</strong> <a href=\"https://blog.17lai.site/categories/devops/atom.xml\"><strong>Devops 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/ab63eb8f/\">自建全套开源Devops开发系统</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d32a07a7/\">Git介绍以及分支模型图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/39563241/\">三万字无坑搭建基于Docker+K8S+GitLab/SVN+Jenkins+Harbor持续集成交付环境</a></li>\n<li><a href=\"https://blog.17lai.site/posts/3437994a/\">DevOps系列---【Jenkinsfile+Dockerfile+nginx+vue】</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f4c3ad41/\">项目开发管理工具推荐</a></li>\n<li><a href=\"https://blog.17lai.site/posts/acc13b70/\">Gitlab的安装及使用教程完全版</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d08eb7b/\">Gitlab的安装及使用</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "ci/cd",
                "devops"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/4159851c/",
            "url": "https://blog.17lai.site/posts/4159851c/",
            "title": "健身从基础常识到实践指导！",
            "date_published": "2022-04-06T10:46:40.000Z",
            "content_html": "<blockquote>\n<p>有哪些相见恨晚的运动常识？接下来将从分别从基础概念、减肥、腹肌，训练，实操几个方面去分享。</p>\n<p>本文修订增补中！</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"基本概念\">基本概念</h2>\n<h3 id=\"01-RM\">01. <strong>RM</strong></h3>\n<p>RM是英文\"repetition maximum\"的缩写，中文意义是\"最大重复值\"。以8RM为例，意思是，某个重量你最多完成8次。一般而言1～6RM侧重锻炼力量，8～12RM侧重锻炼肌肉围度，15RM以上侧重锻炼肌肉耐力。</p>\n<h3 id=\"02-升糖指数\"><strong>02 升糖指数</strong></h3>\n<p>升糖指数全称为“血糖生成指数”，简称，它反映了某种食物与葡萄糖相比升高血糖的速度和能力。是反映通过进食引起人体血糖升高程度的指标，高gi为70以上，中gi为55～70，低gi为55以下。</p>\n<h3 id=\"03-马甲线、人鱼线和腹肌\"><strong>03 马甲线、人鱼线和腹肌</strong></h3>\n<p>图一是人鱼线，是在髋关节上侧，图二是马甲线，通常是腹直肌两侧两到往下的线，图三是常说的腹肌，其实只是腹直肌，是肚脐眼两侧的腹部肌肉。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/0620220406190013.png\" alt=\"img\"></p>\n<h3 id=\"04-BMI\"><strong>04 BMI</strong></h3>\n<p>身体质量指数 (Body Mass Index, 简称BMI), 亦叫做克托莱指数, 是目前国际上常用的衡量人体胖瘦程度以及是否健康的一个标准。计算公式为：BMI=体重（千克）除以身高（米）的平方。</p>\n<h3 id=\"05-心率\"><strong>05 心率</strong></h3>\n<p>心率是指正常人安静状态下每分钟心跳的次数，也叫安静心率，一般为60～100次/分，最大心率通常用220-年龄来计算率。运动时心率达到90%～95%的最大心率，此时供能物质主要为糖原，而心率大致在45%～60%的最大心率，此时供能物质主要是脂肪和糖原。而我们常说的减脂心率为65%～80%的最大心率。</p>\n<h3 id=\"06-有氧运动和无氧运动的区别\"><strong>06 有氧运动和无氧运动的区别</strong></h3>\n<p>一张图给你解释清楚</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/0620220406190006.jpeg\" alt=\"img\"></p>\n<h3 id=\"07-减肥\"><strong>07 减肥</strong></h3>\n<p>减肥字面上的意思是减去肥肉，也就是脂肪，看的是体脂率，而不是体重，体重包括了肌肉、肥肉、水。因此体重下降不等于减肥成功。</p>\n<h3 id=\"08-蛋白粉\"><strong>08 蛋白粉</strong></h3>\n<p>蛋白粉不是药，不是谁吃了都能变成施瓦辛格，蛋白粉也没什么神奇配方，基本上可以理解为瘦肉粉加水面粉，而且普通人不需要蛋白粉，蛋白粉是用于日常营养摄入不足才补充的。</p>\n<h3 id=\"09-减肥原理\"><strong>09 减肥原理</strong></h3>\n<p>减肥的原理是实现热量差，摄入的要低于消耗的，不管你是什么方式减肥，脱离了这个原则，都不要相信，因此在别人给你介绍减肥方法的时候，先想清楚，这个方法是怎样增加热量消耗或者减少热量摄入的。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/0620220406190013-1.png\" alt=\"img\"></p>\n<h3 id=\"10-增肌\"><strong>10 增肌</strong></h3>\n<p>增肌需要三个方面，首先是需要不断给肌肉新的刺激，也就是“渐进超负荷原则”，在训练完后则需要高蛋白高碳水的饮食和48～72小时的恢复时间让肌肉实现超量恢复。训练、饮食、休息，三者缺一不可。</p>\n<h3 id=\"11-三大供能系统\"><strong>11 三大供能系统</strong></h3>\n<p>第一个是磷酸原系统，主要在运动开始后6秒内进行供能，在短时间高强度运动中，磷酸原系统是主要的供能系统。</p>\n<p>第二是糖酵解系统，主要在运动开始后6秒～2分钟内为身体供能，在中高强度的运动中主要由糖酵解系统参与。而糖酵解系统分为快速糖酵解和慢速糖酵解。</p>\n<p>第三是有氧氧化系统，主要在运动开始后2分钟内由糖、碳水化合物、脂肪和蛋白质氧化为身体进行供能，它需要大量的氧气参与。有氧系统的强度最低。</p>\n<p>当然需要注意的是，这三者运动开始都会工作，区别是供能比例不同。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/0620220406185951.jpeg\" alt=\"img\"></p>\n<h3 id=\"12-基础代谢\"><strong>12 基础代谢</strong></h3>\n<p>减脂的人都会经常听到基础代谢这个词，基础代谢是指人体维持生命的所有器官所需要的最低能量需要，也就是你啥也不干，都得消耗的热量。测定方法是在人体在清醒而又极端安静的状态下，不受肌肉活动、环境温度、食物及精神紧张等影响时的能量代谢率。</p>\n<p>代谢指数和年龄相关，要健身，需要增加代谢指数。</p>\n<h3 id=\"13-超级组\"><strong>13 超级组</strong></h3>\n<p>超级组训练是指练完一组训练动作后尽可能没有休息地做另外一组主动肌与前一组训练的主动肌相反方向用力的训练。这种训练方式可以在最短时间内刺激更多肌肉群，强度非常大。</p>\n<h3 id=\"14-金字塔训练\"><strong>14 金字塔训练</strong></h3>\n<p>做某一个动作时，逐渐增加或减少每组的重量，相应减少或增加每组的重复次数，直到重量加到预先安排训练目标，比如15 RM、12 RM、10 RM、 8RM。</p>\n<p>再比如徒手耐力训练，以做俯卧撑最高次数组为10，那么第1组1个，第2组2个，直到第10组10个，11组9个，12组8个，倒回去做到第19组1个完成训练，总计100个。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/0620220406190013-2.png\" alt=\"img\"></p>\n<h3 id=\"15-HIIT\"><strong>15 HIIT</strong></h3>\n<p>高强度间歇性训练（HIIT)，是一种让你在短时间内进行全力、快速、爆发式锻炼的一种训练方式。这种技术让你在短期内心率提高并且燃烧更多热量。运动时，心率要控制在最大心率的84%以上，中间间歇时心率不要低于70%。这就使得HIIT不适合没训练经验的人，毕竟强度太大，跟不上。</p>\n<h3 id=\"16-开窗理论\"><strong>16 开窗理论</strong></h3>\n<p>开窗理论指的是大强度运动时，淋巴细胞浓度降低，增值分化及活动降低，免疫球蛋白含量及功能也受到影响，出现免疫低下期。据研究，受一次性急性运动的影响，免疫地下其可持续3～7小时不等。在这一免疫低下期，各种细菌、病毒等病原体极易入侵人体，最常见的就是高强度训练后出现感冒。</p>\n<h3 id=\"17-核心力量\"><strong>17 核心力量</strong></h3>\n<p>目前主流的观点认为，核心指的是腰椎到骨盆这个整体，核心也分为内核心和外核心。而核心力量最重要的作用就是稳定，我们的日常活动都需要核心力量。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/0620220406185945.jpeg\" alt=\"img\"></p>\n<h2 id=\"减肥篇\">减肥篇</h2>\n<h3 id=\"01-流汗多不等于减肥\"><strong>01 流汗多不等于减肥</strong></h3>\n<p>运动时你流汗多和减肥没有直接关系，减肥减的是脂肪，流汗虽然有助于排除废物，但终归是水，只要你正常饮水，体重就会回去的。</p>\n<p>因此，所谓的爆汗服或者在身上裹上保鲜膜减肥，都是在骗自己。</p>\n<h3 id=\"02-青汁不是用来减肥的\"><strong>02 青汁不是用来减肥的</strong></h3>\n<p>从青汁的配料来看，它其实就是一堆草叶子，或者蔬菜叶子，磨成粉，再泡水喝。而且青汁本身是给日本人喝的，毕竟他们那里蔬菜水果缺乏还特别贵，日常生活缺乏维生素和膳食纤维，说白了青汁就是给日常蔬菜摄入不足的日本人补充膳食纤维平衡一下营养。</p>\n<p>至于那些所谓的减肥功效什么的，或者其他类似的产品，基本都是商家的过度营销宣传。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/0620220406190013-3.png\" alt=\"img\"></p>\n<h3 id=\"03-新手尽量不要空腹做有氧运动\"><strong>03 新手尽量不要空腹做有氧运动</strong></h3>\n<p>虽然说空腹有氧对于脂肪消耗的有利的，尤其是空腹晨跑，但是，在空腹状态下身体中的血糖水平会比较低，就有可能出现低血糖，这可是很危险的。新手的话建议在训练前半小时左右适当吃一些全麦面包等低GI碳水，防止训练中的低血糖。</p>\n<h3 id=\"04-变肥不是因为吃肉\"><strong>04 变肥不是因为吃肉</strong></h3>\n<p>就我们中国人的饮食习惯来说，其实大部分是主食吃多的，比如米饭，馒头，面条这些，热量高，饱腹感低。而肉类，只要不是肥肉，减脂期间吃了不仅能帮助身体维持基础代谢，而且肉类的饱腹感比主食还高。</p>\n<h3 id=\"05-低gi饮食更减顽固脂肪\"><strong>05 低gi饮食更减顽固脂肪</strong></h3>\n<p>常见的顽固脂肪有肚子，大腿，臀部，这些部位的肥肉受胰岛素影响大，而血糖升高又会导致胰岛素分泌增加，而碳水化合物的升糖指数通常比较高。因此想减少顽固脂肪，主食还需要多吃低升糖指数（gi）的五谷杂粮。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/0620220406190013-4.png\" alt=\"img\"></p>\n<h3 id=\"06-只要你运动就在消耗脂肪\"><strong>06 只要你运动就在消耗脂肪</strong></h3>\n<p>不要认为只有有氧运动才能减肥，只要你在运动，脂肪和糖都在消耗，区别只是比例不同，因此你即使是力量训练，脂肪也在燃烧。</p>\n<h3 id=\"07-先力量训练后有氧减肥效率更高\"><strong>07 先力量训练后有氧减肥效率更高</strong></h3>\n<p>力量训练主要消耗糖，而有氧系统包括糖，脂肪，蛋白质，先用力量训练消耗掉糖，再用有氧消耗脂肪，这样有氧效率就会得到提高。</p>\n<h3 id=\"08-没有局部减脂\"><strong>08 没有局部减脂</strong></h3>\n<p>运动时全身的脂肪是同步分解的，不存在局部脂肪分解给局部肌肉供能的情况。这就好比，你能只抽空泳池一个角的水吗？因此如果你见到网上教你某个动作瘦小腿，某个动作瘦肚子，你可以直接不理他。</p>\n<h3 id=\"09-没有负热量食物\"><strong>09 没有负热量食物</strong></h3>\n<p>食物吃进去都有食物热效应，也就是进去的时候，消化食物你需要消耗的能量，那如果你摄入的热量还没有消化食物用得多，那人岂不是越吃越瘦，吃到最后身体都没能量日常活动了。而吃东西最起码的需要满足活下去这个要求，既然热量都负了，那人咋活下来的？</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/0620220406190013-5.png\" alt=\"img\"></p>\n<h2 id=\"腹肌篇\">腹肌篇</h2>\n<h3 id=\"01-胖子的胸肌和瘦子的腹肌一样毫无意义\"><strong>01 胖子的胸肌和瘦子的腹肌一样毫无意义</strong></h3>\n<p>虽然说体脂率是腹肌的关键因素，但是如果你从来没练过腹肌，即使你再瘦，腹肌也不可能变得饱满，结实。而胖子的胸都是脂肪，并不是肌肉，光是好吃懒做就能有的。</p>\n<h3 id=\"02-光练腹肌也是不行的\"><strong>02 光练腹肌也是不行的</strong></h3>\n<p>结合上一条，腹肌要明显的两大因素，体脂率和腹肌围度，也就是说减脂和训练都需要，你光练也不行，就拿健美选手来说，腹肌围度够大了吧，非赛季一样看不到腹肌。</p>\n<h3 id=\"03-仰卧起坐练不出腹肌\"><strong>03 仰卧起坐练不出腹肌</strong></h3>\n<p>虽然体育老师都说，仰卧起坐是练腹肌的，但实际上这是错误的，标准仰卧起坐腰背部是挺直的，腹肌长度没有变化，仰卧起坐主要在做屈髋，而不是卷曲腰部，因此仰卧起坐是练核心和屈髋肌肉的。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/0620220406190013-6.png\" alt=\"img\"></p>\n<h3 id=\"04-腹肌不代表核心力量强\"><strong>04 腹肌不代表核心力量强</strong></h3>\n<p>前面提到了，腹肌明不明显主要和腹肌训练以及体脂率有关，比如大力士选手的核心力量，足够强悍了吧，但是他们也看不到腹肌，核心力量包括腰腹部、髋关节这一个整体的，腹肌只是属于核心肌肉的一部分。</p>\n<h3 id=\"05-腹肌是天生的\"><strong>05 腹肌是天生的</strong></h3>\n<p>腹肌是否对称是肌划决定的，而肌划是由基因决定的，也就是你出生是几块就是几块，出生不对称，那么这辈子都不对称。任何说帮你矫正不对称腹肌的都是骗子。</p>\n<p>腹肌是否显现，最重要的是体脂率，体脂率低于一定数值，就可以看到一些腹肌。腹肌不需要专门锻炼，在其它锻炼过程中掺杂锻炼就够了！</p>\n<h2 id=\"训练篇\">训练篇</h2>\n<h3 id=\"01-健身不需要天天练\"><strong>01 健身不需要天天练</strong></h3>\n<p>许多人认为多练就一定是好的，不能休息，但实际上，不管是肌肉力量，还是肌肉围度，都是需要休息的，正常来说，我们运动后身体的力量水平会下降，然后在休息的时候慢慢恢复，如果休息和营养补充得好，就会超量恢复，超过之前的水平，短期恢复需要24～72小时。</p>\n<p>正常来说，一周起码给自己休息一天。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/0620220406190013-7.png\" alt=\"img\"></p>\n<h3 id=\"02-热身不限于跑步\"><strong>02 热身不限于跑步</strong></h3>\n<p>虽然说跑步是最简单的热身方式，但跑跑步，压压腿是远远不够的，正常来说，热身需要分为三部分，首先是关节热身，然后是动态热身体（开合跳，跑步这类），然后则是针对训练内容的热身，比如要练卧推，可以先做做空杠卧推，俯卧撑之类的。</p>\n<h3 id=\"03-不要盲目追求大重量\"><strong>03 不要盲目追求大重量</strong></h3>\n<p>虽然说重量越大，训练的刺激越大，但是对于身体来说，受伤风险也越大，新手最好还是把训练的重点放在学会动作，把动作做标准。</p>\n<h3 id=\"06-跑步不会腿粗\"><strong>06 跑步不会腿粗</strong></h3>\n<p>一些女生在跑完步后，感觉腿部比之前更粗了，那是因为你本身训练少，而且此时肌肉充血，只需要多拉伸放松即可，慢跑是不会让腿变粗的，反而你看马拉松运动员，腿个个都很细。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/0620220406190013-8.png\" alt=\"img\"></p>\n<h3 id=\"05-训练不要追求酸痛\"><strong>05 训练不要追求酸痛</strong></h3>\n<p>训练过后的酸痛越明显说明练得越到位，这是典型的误区，如果你只是第二天的酸痛还是正常的，如果是训练后隔天才开始酸痛，那很可能就是延迟性酸痛，这会导致身体抵抗力的下降，容易生病。而且正常的力量训练只要强度不是非常高也可以不酸痛。</p>\n<h3 id=\"06-女生练肌肉不会变成金刚芭比\"><strong>06 女生练肌肉不会变成金刚芭比</strong></h3>\n<p>如果有关注一些健身女网红你就会发现，其实好多人练了5年，6年，其实也没有多少围度，体重也是100来斤，而且长肌肉需要雄性激素，而女性的雄性激素很低，即使是正常男性，练个三四年也不一定能练成健美选手。</p>\n<p>对于女生而言，肌肉训练更多的是塑形。</p>\n<blockquote>\n<p>很多人怕练畸形了，但事实是，没有大重量锻炼几年，休想练畸形！一些无量教练以此威胁不买课的！</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/0620220406190013-9.png\" alt=\"img\"></p>\n<h3 id=\"07-脂肪不能转化成肌肉\"><strong>07 脂肪不能转化成肌肉</strong></h3>\n<p>肌肉和脂肪是不会相互转化的，它们原本就是两种不同的组织，肌肉是人生下来就有的，有些小伙伴摸着自己肉肉的，觉得全身肥肉，事实上是那是因为你脂肪太多，遮住肌肉了。肌肉长期不锻炼，是会退化松弛的，而不是直接转化为脂肪。</p>\n<p>也就是说，一些认为的瘦子想长肉，就得先吃胖，再练，其实是错误的，健身并不能把肥肉变成肌肉。</p>\n<h3 id=\"08-深蹲膝盖可以超脚尖\"><strong>08 深蹲膝盖可以超脚尖</strong></h3>\n<p>深蹲膝盖不是绝对不能超过脚尖的，这和每个人的身体结构相关，练臀基本都会刺激到腿的，绝对不粗腿的臀部训练是基本做不到。</p>\n<h3 id=\"09-健身不会吸引女孩子\"><strong>09 健身不会吸引女孩子</strong></h3>\n<p>当你练 得越久，你会发现，你身边的肌肉男越来越多，女的越来越少。</p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/04/0620220406190013-10.png\" alt=\"img\"></p>\n<blockquote>\n<p>但是，有人把男人健身和女性美甲类比，这就过分了。健身要看到效果，至少不要3个月集中锻炼，每周3次以上，每次至少一个小时，科学的吃，锻炼，休息，健身房投入几百个小时，几个W的金钱才能看到效果。而美甲，2个小时，几百块就够了！</p>\n</blockquote>\n<h2 id=\"实操篇\">实操篇</h2>\n<blockquote>\n<p>健身是需要持续投入，长期坚持，自我折磨的。没有坚强的意志力根本坚持不下来，说白了，就是自虐！还要，长期的、有计划的，持续性的自虐，才能有效果！这是意志，与体力，与耐力的抗争。</p>\n<p>有不少健身<code>App</code>，可以跟着学，比大多数私教专业。</p>\n</blockquote>\n<h3 id=\"1-逆呼吸法\">1 逆呼吸法</h3>\n<p>所谓顺腹式<em>呼吸法</em>是指吸气时让腹部凸起，吐气时压缩腹部使之凹入的<em>呼吸法</em>。</p>\n<p>而逆腹式<em>呼吸方法</em>则相反：吸气时腹部凹进，而呼气时腹部突出。</p>\n<p>健身大多采用逆呼吸法。</p>\n<h3 id=\"2-发力技巧\">2 发力技巧</h3>\n<p>健身大多采用逆呼吸法。配合发力技巧，一般肢体远离躯干时，吐气，发力，肢体靠近驱赶时，吸气，不主动发力（被动发力）。</p>\n<h3 id=\"3-肌肉充血\">3 肌肉充血</h3>\n<p>健身要想有效果，要集中锻炼某一个部位，达到感觉肌肉明显充血，发烫的感觉！</p>\n<p>一般来说，一个部位至少锻炼4组，每组12个，增肌是大重量rm递减。减肥是小重量，rm 15以上。</p>\n<h3 id=\"4-锻炼，营养，和休息\">4 锻炼，营养，和休息</h3>\n<p>三分练，七分吃。健身营养一定要补充好。</p>\n<p>6：2：2 碳水，蛋白质，脂肪。</p>\n<p>两分锻炼，三分营养，五分休息！要想看到锻炼效果，营养和休息非常重要！</p>\n<p>没有三个月集中锻炼，你几乎看不到效果，但有三个月大强度锻炼之后，旁边人能明显感觉你的不同！健身没法速成！</p>\n<p>补剂：</p>\n<ul>\n<li>谷氨酸：可以帮助恢复肌肉酸痛。</li>\n<li>蛋白粉：补充蛋白质，大多数人日常饮食蛋白质摄入量不足以满足健身要求！</li>\n</ul>\n<h3 id=\"5-穷文富武\">5 穷文富武</h3>\n<p>没钱没闲没法健身！真的！</p>\n<p>每周三次2小时空闲锻炼时间，大量补充蛋白质，充足的睡眠时间。普通人真的很难负担得起。</p>\n<h3 id=\"6-日常锻炼\">6 日常锻炼</h3>\n<p>专门锻炼难以抽取时间，但是日常办公的椅子上，就可以做不少锻炼动作的。工作空闲时间，可以稍加锻炼，比完全不做锻炼，素质要强上百倍！</p>\n<h3 id=\"7-简单训练计划\">7 简单训练计划</h3>\n<p>一个简单的每周5次健身计划，如下：</p>\n<ul>\n<li>肱二头肌，背</li>\n<li>胸，腿</li>\n<li>背，肱二头肌</li>\n<li>腿，肩</li>\n<li>胸，肱三头肌</li>\n</ul>\n<p>每个部位至少4组，增肌每组12个，减少到8个，力竭为止。减肥15个以上，小重量。</p>\n<p>每次健身力量锻炼越45分钟到一小时，前后5到10分钟跑步，热身和放松。</p>\n<p>锻炼完，肌肉拉伸放松，帮助恢复疲劳！</p>\n<p>锻炼中可以补充水分和蛋白质，带上蛋白粉饮品。少量，多次，不要一次大量喝水！</p>\n<blockquote>\n<p>练腿非常重要，特别是对于增肌来说。可以促睾，提高体内睾酮激素水平。对于想增肌来说，是必不可少的。</p>\n</blockquote>\n<h3 id=\"8-心率-控制\">8 心率 控制</h3>\n<p>健康且体质较好的，心跳可以控制在120~180次/每分钟。</p>\n<p>中老年或慢性病人群，心跳可以控制在（170 - 年龄）~（180 - 年龄）之间。</p>\n<p>最大心率 = 220 - 实际年龄。</p>\n<p>燃脂区： 慢跑时，控制心率在最大心率的60%~ 70%。</p>\n<p>健身要有效果，需要三个基本指标：</p>\n<ul>\n<li>持续20分钟以上</li>\n<li>心率120次/分钟以上（青年）</li>\n<li>频率一周3~4次</li>\n</ul>\n<h3 id=\"9-代谢指数控制\">9 代谢指数控制</h3>\n<p>代谢指数和体重和肌肉含量高相关，还和年龄有关，减肥就是要增加代谢指数，有氧运动最有效。</p>\n<h3 id=\"10-理论指导\">10 理论指导</h3>\n<p>不管实际锻炼，丰富你的理论知识，同样非常重要！可以达到事半功倍的效果，没有理论指导，就事倍功半了！</p>\n<blockquote>\n<p>大量健身教练非常不专业，都是业余的。可能还没你看几篇文章理论知识丰富。</p>\n</blockquote>\n<h3 id=\"11-健身装备\">11 健身装备</h3>\n<p>运动手套，健身服，吸汗毛巾，水杯等等。一些必要的投入是必须的。</p>\n<h3 id=\"12-关于做C\">12 关于做C</h3>\n<p>这是个专业用语，指打激素等药物，打了药物之后还要加强锻炼，才能看到明显效果。</p>\n<p>这个效果非常显著！正常锻炼几年的效果，药物几个月半年就可以达到。但是对身体伤害非常大！每年你都能在新闻上看到好几个用药的突然死亡的新闻！</p>\n<blockquote>\n<p>普通人不要做！</p>\n</blockquote>\n<h2 id=\"常见误区\">常见误区</h2>\n<ul>\n<li>1.仰卧起坐练不了腹肌，和腹肌完全没关系，还伤身，尤其抱头，杀伤性无极大。从小学体育课就这么错误的教，健身界和别的国家早都知道的并淘汰的一个错误的动作，中国用了这么多年，直到今年部队大纲才发现并取消。只能呵呵了。</li>\n<li>2.引体向上不是练胳膊的，是练背。俯卧<br>\n撑练的是胸</li>\n<li>3.节食不能减肥，只会越来越胖，吃的多才能减脂</li>\n<li>4.睡觉也能减肥</li>\n<li>5.只跑步不做力量训练，永远也跑不出有肌肉的好身材</li>\n<li>6.女性跑步跑死腿也跑不粗，跑完变粗那是充血发涨的。</li>\n<li>7.局部减肥是伪科学，没有局部减肥，不要再问我某个部位肉多怎么减，也不要再信什么局部减肥的广告了，那都是骗人的，全球现在也没研究出局部减肥的办法，不知道为什么有那么多人还信。</li>\n<li>8.想永远保持好身材必须要有肌肉，有肌肉才会瘦，运动以外任何方法减脂都是暂时的。</li>\n<li>9.女性只要你不注射药物，永远也练不成肌肉男，只会前凸后翘</li>\n<li>10.没有减肥这个词，只有减脂，只有体型变瘦体重不变才是正确的，很多人却只看体重，请看体型不要看体重。</li>\n<li>11.体重快速下降那减少的是你身体里的水，不是肉。</li>\n<li>12.腹肌有个屁用，体脂率低都会显现，大小不一而已，但你可以练的更大，但必须体脂率低，胖人你就不要练腹肌了，没用，先减脂再说。</li>\n<li>13.跑步减脂请看时间不要看距离，跑步前期消耗的是身体里的糖，不是脂肪，请至少20分钟以上</li>\n<li>14.力量训练胖人减脂轻重量多组数，瘦人增肌大重量少次数。</li>\n<li>15.腿也要练，练下半身才能促睾，睾酮才能帮助你全身的肌肉锻炼，女性没有睾丸，睾酮低的可怜，所以练不出肌肉。</li>\n<li>16.一周5天不锻炼，只集中一两天猛练反而对身体有害，不如别练</li>\n<li>17.肌肉就是肌肉，脂肪就是脂肪，没有不锻炼肌肉就变脂肪的说法，不锻炼肌肉只会松弛变软，也还是瘦肉，再接着锻炼很快就能恢复。</li>\n<li>18.平板支撑练不出腹肌，练的是核心稳定性</li>\n<li>19.出汗多少和训练量和减脂没半毛钱关系，那是体质问题。</li>\n<li>20.夏天晚上尽量不要夜跑，太危险，出门到处都是烧烤摊，一吃一晚上。</li>\n</ul>\n<h2 id=\"健身漫画\">健身漫画</h2>\n<p>这里推荐一部漫画： <a target=\"_blank\" rel=\"noopener\" href=\"http://manhua.dmzj.com/jiroushaonvyalingnengjuduoshaogongjin/\"><strong>肌肉少女：哑铃，能举多少公斤？</strong></a></p>\n<p>青春美少女健身漫画，介绍了很多基础常识！想健身的可以去看看，非常有趣的漫画，让你在娱乐中学会很多健身知识。这个番动画化了，2019年7月出的，大家可以搜索去看。</p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"http://www.bimiacg4.net/bangumi/bi/1824/\"><img src=\"https://cimg1.17lai.site/data/2022/04/0620220406215934.jpeg\" alt=\"肌肉少女动画\"></a></p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"http://manhua.dmzj.com/jiroushaonvyalingnengjuduoshaogongjin/\"><img src=\"https://cimg1.17lai.site/data/2022/04/0620220406191054.png\" alt=\"漫画肌肉少女\"></a></p>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "fitness",
                "健身",
                "运动"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/84b4059a/",
            "url": "https://blog.17lai.site/posts/84b4059a/",
            "title": "基于Hexo的matery主题搭建博客常见问题篇6",
            "date_published": "2022-03-27T07:28:46.000Z",
            "content_html": "<p><strong>Hexo系列</strong>  <a href=\"https://blog.17lai.site/categories/hexo/atom.xml\"><strong>HexoRSS分类订阅</strong></a></p>\n<p>[三万字教程]基于Hexo的matery主题搭建博客并深度优化完全一站式教程</p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/40300608/\">Hexo Docker环境与Hexo基础配置篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4d8a0b22/\">hexo博客自定义修改篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/9b056c86/\">hexo博客网络优化篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/5311b619/\">hexo博客增强部署篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4a2050e2/\">hexo博客个性定制篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/84b4059a/\">hexo博客常见问题篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/cf0f47fd/\">Hexo Markdown以及各种插件功能测试</a></p>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>markdown 各种其它语法插件</li>\n<li>latex公式支持</li>\n<li>mermaid图表</li>\n<li>plant uml图表</li>\n<li>URL卡片</li>\n<li>bilibili卡片</li>\n<li>github卡片</li>\n<li>豆瓣卡片</li>\n<li>插入音乐和视频</li>\n<li>插入脑图</li>\n</ul>\n</blockquote>\n<h2 id=\"出错了，怎么办？\">出错了，怎么办？</h2>\n<blockquote>\n<p>首先，学会搜索，最好实用Google，准确率比X毒高几个数量级。你遇到过的问题，90%以上其他人也遇到过，网上能找到现成的解决方案。</p>\n<ul>\n<li>个人独立博客文章质量最高，<a target=\"_blank\" rel=\"noopener\" href=\"https://stackoverflow.com\">stackoverflow</a>质量也很非常高，CSDN基本就是垃圾场，普通搜索文章能有50%准确率就非常不错了，独立博客和stackoverflow之类的80%以上的准确率！</li>\n</ul>\n</blockquote>\n<h2 id=\"如何调试博客\">如何调试博客</h2>\n<blockquote>\n<p>需要一定的web开发知识才能做。</p>\n<p>学会一些简单调试及基本html语言很容易，网上教程很多。</p>\n<p>按<code>F12</code>进入调试模式，元素，网络，控制台，是常用的页面。</p>\n</blockquote>\n<p><img src=\"https://cimg1.17lai.site/data/2022/03/2620220326142924.png\" alt=\"web debug\"></p>\n<p><img src=\"https://cimg1.17lai.site/data/2022/03/2620220326142626.png\" alt=\"如何网页调试\"></p>\n<h2 id=\"通过hexo-g-d部署时报Error-Spawn-failed错误\">通过<code>hexo g -d</code>部署时报<code>Error: Spawn failed</code>错误:</h2>\n<blockquote>\n<p>这是由于 git 本地记录的提交版本号与 github 上不一致导致的，通过<code>git reset --hard commitCode</code>即可解决。</p>\n</blockquote>\n<ul>\n<li>检查本地最近提交记录，获取最后一次提交记录的更新时间及标识，如<code>280a7fdd46fcfd7d34e652aec15523dcd247fac8</code></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> .deploy_git\n<span class=\"token function\">cat</span> .git/logs/HEAD<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ul>\n<li>获取 github pages 服务所关联分支的最近一次提交记录，获取更新时间及标识。地址一般为：<code>https://github.com/用户名/仓库名/commits/分支名</code>，如<code>https://github.com/lxl80/blog/commits/gh-pages</code></li>\n<li>如果发现提交最新的提交时间/标识不一致，通过以下命令即可解决:</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> reset --hard f085038efdf79546c09641d37b2a2429c1ae8e60 <span class=\"token comment\">#github上最新的提交标识</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"hexo-docker-本地访问内容没有更新\">hexo docker 本地访问内容没有更新</h2>\n<p>可能是node内部PM2模块的缓存机制导致的。pm2模块重启一下就可以了。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pm2 restart /hexo_run.js<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cimg1.17lai.site/data/2022/03/2520220325143634.png\" alt=\"image-20220325143625352\"></p>\n<h2 id=\"fsevents报错\">fsevents报错</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> code EBADPLATFORM <span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> notsup Unsupported platform <span class=\"token keyword\">for</span>\nfsevents@2.3.2: wanted <span class=\"token punctuation\">{</span><span class=\"token string\">\"os\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"darwin\"</span>,<span class=\"token string\">\"arch\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"any\"</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">(</span>current:\n<span class=\"token punctuation\">{</span><span class=\"token string\">\"os\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"win32\"</span>,<span class=\"token string\">\"arch\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"x64\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> notsup Valid OS:    darwin <span class=\"token function\">npm</span>\nERR<span class=\"token operator\">!</span> notsup Valid Arch:  any <span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> notsup Actual OS:   win32 <span class=\"token function\">npm</span>\nERR<span class=\"token operator\">!</span> notsup Actual Arch: x64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>解决方法：修改package.json</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token string-property property\">\"optionalDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"fsevents\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.3.2\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"关于百度无法爬取GitHub内容解决方案\">关于百度无法爬取GitHub内容解决方案</h2>\n<blockquote>\n<ul>\n<li>使用coding搭建一个可以被百度爬取到的代码托管平台</li>\n<li>使用vps搭建一个hexo 镜像访问，专门针对搜索引擎。</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>Tips: 博主用了第二种方法，2个域名，前端域名用dnspod，采用cloudflare parter cname接入。dnspos有选路选择，针对搜索引擎进入vps搭建的blog，对于其它线路到cloudflare parter 加速过的github pages  cname。后端域名用cloudflare parter 以及免费版cloudflare管理。</p>\n</blockquote>\n<p>既然百度无法爬取GitHub，那么我们只需要找个可以被百度爬取到的代码托管平台即可（并且还提供pages服务），基本只有国内的平台了：<code>Gitee</code>和<code>Coding</code>！Gitee自定义域名要花钱（九十多，都可以买服务器了），而Coding是可以免费自定义域名的。这里推介大家使用企业版的Coding，因为企业版的Coding仓库服务器是在香港的，而普通版的服务器是在新加坡。地理原因，理论上企业版的更快一些！</p>\n<ol>\n<li>\n<p>将博客同时部署到两个仓库：GitHub和Coding</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> git@github.com<span class=\"token punctuation\">:</span>xxx/xxx.github.io.git\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master\n\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> git@e.coding.net<span class=\"token punctuation\">:</span>xxx/xxx.git\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>在域名那里，配置两个解析</p>\n<blockquote>\n<p>线路类型作用：如果该值填“国内”，国内的IP就会去访问此项对应的<code>记录值地址</code></p>\n<p>同理，如果该值填写“国外”，国外的IP就会去访问“国外”对应的<code>记录值地址</code></p>\n</blockquote>\n<ol>\n<li><code>线路类型</code>为<code>百度</code>或者<code>国内</code>，记录值为<code>Coding仓库的地址</code></li>\n<li><code>线路类型</code>为<code>默认</code>或者<code>国外</code>，记录值为<code>GitHub仓库地址</code></li>\n</ol>\n<p><img src=\"https://cimg1.17lai.site/data/2021/09/1120210911170615.png\" alt=\"\"></p>\n</li>\n<li>\n<p>这样来自<code>百度的spider</code>就会去爬<code>国内Coding</code>的地址，而两个仓库的内容又都是一样的，如果请求IP来自国外，它又会去访问<code>国外的GitHub</code>，这样还有利于外国华侨和那些科学上网的用户访问，一石二鸟！（我真他妈天才！）</p>\n</li>\n<li>\n<p>如果你只用Coding仓库，那就不需要这么麻烦了</p>\n</li>\n<li>\n<p>测试百度Spider能不能爬你的域名</p>\n<ol>\n<li>\n<p>在任意目录下执行以下命令（将“你的域名”换成你的域名）</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">curl -A \"Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)\" -o example.html 你的域名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>执行完命令，在该目录下会生成一个文件：<code>example.html</code>，打开它，如果显示</p>\n<ul>\n<li>\n<p><code>Moved Permanently</code>，说明301，被重定向了</p>\n</li>\n<li>\n<p><code>Found</code>，也就是爬到了</p>\n</li>\n<li>\n<p>如果打开是你的首页，说明爬取到的内容就是你的首页HTML内容。</p>\n</li>\n<li>\n<p>如果显示：</p>\n<p><img src=\"https://cimg1.17lai.site/data/2021/09/1120210911170621.png\" alt=\"\"></p>\n<p>说明域名是解析到GitHub的，403Forbidden访问禁止。</p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"busuanzi不蒜子计数显示异常，一闪就没\">busuanzi不蒜子计数显示异常，一闪就没</h2>\n<blockquote>\n<ol>\n<li>\n<p>原因可能有两种live2d看板娘和busuanzi不蒜子计数冲突</p>\n</li>\n<li>\n<p>busuanzi不蒜子网络访问异常。</p>\n</li>\n</ol>\n<blockquote>\n<ol>\n<li>\n<p>不在leancloud安全名单</p>\n</li>\n<li>\n<p>不是正常域名访问</p>\n</li>\n<li>\n<p>各种网络访问错误等等</p>\n</li>\n</ol>\n</blockquote>\n</blockquote>\n<p>近日安装了live2d看板娘插件，<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/EYHN/hexo-helper-live2d\">github项目地址</a>，安装后却意外发现busuanzi不蒜子计数失效了,在页面中不显示，但强制刷新后出现，再刷新又消失。经排查，未发现问题，但事实是网站源码出现了变化。</p>\n<blockquote>\n<p><em>正常时</em></p>\n</blockquote>\n<pre class=\"line-numbers language-HTML\" data-language=\"HTML\"><code class=\"language-HTML\">&lt;div id=\"busuanzi_container_page_pv\" class=\"info-break-policy\" style=\"display: inline;\"&gt;\n    &lt;i class=\"far fa-eye fa-fw\"&gt;&lt;/i&gt;阅读次数:&amp;nbsp;&amp;nbsp;\n    &lt;span id=\"busuanzi_value_page_pv\"&gt;433&lt;/span&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p><em>异常时</em></p>\n</blockquote>\n<pre class=\"line-numbers language-HTML\" data-language=\"HTML\"><code class=\"language-HTML\">&lt;div id=\"busuanzi_container_page_pv\" class=\"info-break-policy\" style=\"display: none;\"&gt;\n    &lt;i class=\"far fa-eye fa-fw\"&gt;&lt;/i&gt;阅读次数:&amp;nbsp;&amp;nbsp;\n    &lt;span id=\"busuanzi_value_page_pv\"&gt;434&lt;/span&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>对比发现出现了多余的<code>style=\"display: none;</code>。<br>\n经过搜索主题源码，发现这个文件<code>themes\\matery\\source\\libs\\others\\busuanzi.pure.mini.js</code>控制显示。</p>\n<p>可以直接下载下面这个地址的js替换，来自个人blog的js   <a href=\"https://blog.17lai.site/libs/others/busuanzi.pure.mini.js\">busuanzi.pure.mini.js</a>，直接下载这个js替换即可。下面源码经过了展开美化，原始文件是压缩去空格版本的。<br>\n<strong>注意</strong>： 这是一种破坏性修复，没有解决根本问题，临时修复方案。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> bszCaller<span class=\"token punctuation\">,</span> bszTag<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">!</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function-variable function\">ready</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">c</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> a <span class=\"token operator\">||</span> <span class=\"token string\">\"interactive\"</span> <span class=\"token operator\">===</span> document<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">||</span> <span class=\"token string\">\"complete\"</span> <span class=\"token operator\">===</span> document<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">?</span> <span class=\"token function\">c</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span>\n            b<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">c</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">d</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> c <span class=\"token operator\">&gt;</span> a<span class=\"token punctuation\">;</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">e</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        a <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">d</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span>removeEventListener <span class=\"token operator\">?</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string\">\"DOMContentLoaded\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span>attachEvent <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">detachEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onreadystatechange\"</span><span class=\"token punctuation\">,</span>\n            e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> window <span class=\"token operator\">==</span> window<span class=\"token punctuation\">.</span>top <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span>addEventListener <span class=\"token operator\">?</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DOMContentLoaded\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span>attachEvent <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n        document<span class=\"token punctuation\">.</span><span class=\"token function\">attachEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onreadystatechange\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">loaded|complete</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>readyState<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> window <span class=\"token operator\">==</span> window<span class=\"token punctuation\">.</span>top <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                a <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span><span class=\"token function\">doScroll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"left\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bszCaller <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">fetch</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token string\">\"BusuanziCallback_\"</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token number\">1099511627776</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        window<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">evalCall</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=BusuanziCallback\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"=\"</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> scriptTag <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string\">\"SCRIPT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> scriptTag<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"text/javascript\"</span><span class=\"token punctuation\">,</span> scriptTag<span class=\"token punctuation\">.</span>defer <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> scriptTag<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> a<span class=\"token punctuation\">,</span>\n            document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HEAD\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>scriptTag<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">evalCall</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> scriptTag<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>scriptTag<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    bszTag<span class=\"token punctuation\">.</span><span class=\"token function\">hides</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> bszCaller<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"//busuanzi.ibruce.info/busuanzi?jsonpCallback=BusuanziCallback\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    bszTag<span class=\"token punctuation\">.</span><span class=\"token function\">texts</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bszTag<span class=\"token punctuation\">.</span><span class=\"token function\">shows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bszTag <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">bszs</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"site_pv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"page_pv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"site_uv\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">texts</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bszs<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"busuanzi_value_\"</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            c <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">hides</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bszs<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"busuanzi_container_\"</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            b <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">shows</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bszs<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"busuanzi_container_\"</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            b <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"inline\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>替换的人请操作其实就是把其中的<code>b.style.display=\"none\"</code>中<code>none</code>去掉。</p>\n<h2 id=\"不蒜子-busuanzi-文章计数出错问题\">不蒜子 (busuanzi) 文章计数出错问题</h2>\n<p>出现这个原因，和 Chrome 85 版本 Referrer Policy 更改有关。什么是 Referrer，简单理解，就是请求 Web 服务器时，可以在 HTTP Request 的请求头 (header) 中加上当前页面的 URL，例如我们在浏览某个博客页面，需要加载一些图片，从服务器请求这些图片时，referrer 就是当前的博客页面 URL。从这里也可以看出，referrer 可能会暴露请求来源的某些信息或者隐私，有一定的隐私或安全风险。之前版本的 Chrome 浏览器，如果网站没有指定自己的 Referrer Policy，那么 Chrome 默认 policy 是 no-referrer-when-downgrade，在 Chrome 85 版本中，为了保护用户的隐私，默认的 Referrer Policy 则变成了 strict-origin-when-cross-origin。</p>\n<ul>\n<li>no-referrer-when-downgrade: 当两个网站的 http 协议安全等级相当，或者目的网站安全协议等级高于当前网站(HTTP –&gt; HTTP, HTTPS –&gt; HTTPS, HTTP –&gt; HTTPS)， referer 将会包含源网站的域名，路径，查询字符串；如果目的网站安全协议等级低于源网站 (HTTPS –&gt; HTTP)，将不会发送这些信息。</li>\n<li>strict-origin-when-cross-origin： 只有当做同一域名请求时 (源网址和目标网址是同一域名），才发送域名，路径和请求字符串，当两个网站安全协议相当时，发送源网站的域名(没有具体路径信息和查询字符串)，如果目标网站安全协议等级低于源网站，不发送 header 信息。</li>\n</ul>\n<p>不蒜子统计博客文章访问量就是通过 referer 来计算的，通过上面的分析，如果 Referrer Policy 是 strict-origin-when-cross-origin，不蒜子接收到的只有博客的域名，没有文章的具体路径，所以具体某个文章的 PV 统计会出现错误。</p>\n<p>修复方法：</p>\n<p>在主题文件夹下/layout/_partial/head.ejs中添加</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>referrer<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>no-referrer-when-downgrade<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"如何多个域名映射同一个github-pages\">如何多个域名映射同一个github pages</h2>\n<p>可能由于某种原因，换了一个域名，之前又有一些被搜索引擎收录，但是又不想让原来的链接失效，就需要让两个域名都映射到github pages中。本文介绍几种当前可能的方法。欢迎提出更多有效方法。</p>\n<h4 id=\"直接映射有什么问题？\">直接映射有什么问题？</h4>\n<p>你可能会想，两个域名都映射到github pages不就可以了？然而事实并非如此。首先当前github 的CNAME中只支持一个域名。因此CNAME文件中只能有一个域名，而如果在域名映射中将两个域名都映射到username.github.io，那么其中有一个会出现404错误。</p>\n<h4 id=\"前提\">前提</h4>\n<p>以下方法的前提是你已经明白如何为自己的github pages添加自定义域名。</p>\n<h4 id=\"需要注意什么？\">需要注意什么？</h4>\n<ul>\n<li>需要给各大网站提交新的域名网址，重新被收录</li>\n<li>域名变换前面网站的内容结构不能变，否则重定向也没有意义</li>\n<li>当前单纯的域名没有办法进行备案</li>\n<li>注意修改配置文件里的主域名为新的域名</li>\n<li>由于更换了新的域名，导致原来leancloud统计的访问数据需要重新计算，也就是网站访问量被清零了，leancloud也需要更新域名</li>\n<li>新的com域名可申请免费的SSL证书，保证https可访问，而不会提示不安全</li>\n<li>301重定向会将旧地址的权重转义到新地址上</li>\n<li>百度收录速度较慢</li>\n</ul>\n<h4 id=\"方法一：域名托管平台重定向\">方法一：域名托管平台重定向</h4>\n<p>有的域名服务商提供重定向功能，以阿里云为例，在域名映射添加记录的时候，可以选择显性URL或隐性URL。但是自己在尝试这种方法的时候，会提示我URL备案异常。可能是由于这个时候已经用新的域名映射了博客地址，但是新的域名实际上是没有备案的。更无奈的是，目前貌似没有办法单独对域名进行备案。因此本人放弃了该方法。</p>\n<p>如果你的博客也是部署在github上的，那么这种方法就不用尝试了，如果你的博客是部署在自己的服务器上的，那么网上都很多方法，这里就不介绍了。</p>\n<h4 id=\"方法二：部署两个仓库\">方法二：部署两个仓库</h4>\n<p>我们注意到，除了github pages，还有coding.net可用。它与github类似。原来的域名映射到这个地址就可以了。而在部署hexo的时候，是可以添加两个仓库地址的：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> git@github.com<span class=\"token punctuation\">:</span>username/username.github.io.git\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> git@git.coding.net<span class=\"token punctuation\">:</span>username/username.git\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> coding<span class=\"token punctuation\">-</span>pages<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这两个仓库内容唯一的差别就是域名不一样，即CNAME中的记录值不一样。这样当访问两个不同的域名的时候，是访问不同的两个平台仓库。但是原来域名的权重不会转到新的域名中去。</p>\n<h4 id=\"方法三：新增项目重定向\">方法三：新增项目重定向</h4>\n<p>假如你已经有username.github.io项目，新建一个名为blog(名字自定义)的项目，在项目的setting中，开启github pages服务，并且将旧的域名映射到username.github.io。</p>\n<p>实际上，github pages并不是只能有一个，例如，你新创建的仓库访问地址为：username.github.io/blog。<br>\n由于旧的域名映射会导致404错误，那么在我们的新项目中增加一个404.html，在页面中进行跳转即可：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">language</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">var</span> domain <span class=\"token operator\">=</span> <span class=\"token string\">\"换成你自己的新域名\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> src <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> prtc <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> target <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> prtc <span class=\"token operator\">+</span> <span class=\"token string\">\"://\"</span> <span class=\"token operator\">+</span> domain <span class=\"token operator\">+</span> target<span class=\"token punctuation\">;</span>\nlocation<span class=\"token punctuation\">.</span>href<span class=\"token operator\">=</span>prtc <span class=\"token operator\">+</span> <span class=\"token string\">\"://\"</span> <span class=\"token operator\">+</span> domain <span class=\"token operator\">+</span> target<span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>另外，需要利用google的地址更改功能，使得旧网址的权重往新网址转移。<br>\n找到search console中的地址更改工具（设置按钮中找到）。</p>\n<p>除了增加404页面外，还需要增加CNAME文件，里面的内容是你原先的域名。</p>\n<h2 id=\"参照\">参照</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.lixl.cn/2019/092856736.html\">基于Hexo的matery主题搭建博客并深度优化-悟尘记</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hexo.io/zh-cn/docs/\">hexo 官方文档</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/\">闪烁之狐</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md\">hexo-theme-matery</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.sky03.cn/posts/42790.html#toc-heading-1\">Hexo 进阶之各种优化</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.cnblogs.com/Timesi/p/9556236.html\">Leancloud+Valine打造Hexo个人博客极简评论系统</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.sky03.cn/posts/42790.html\">Hexo进阶之各种优化</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://sitoi.cn/posts/15908.html\">自动部署篇</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.cnblogs.com/luoshuitianyi/p/10333928.html\">Hexo搭建(VPS)</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://boyinthesun.cn/post/error-live2d-busuanzi/\">解决live2d看板娘和busuanzi不蒜子计数冲突</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.yanbinghu.com/2019/03/29/25951.html\">多个域名映射同一个github pages</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://segmentfault.com/a/1190000016286007\">hexo博客简单支持PWA</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.imlete.cn/article/hexo-seo-autopush.html\">Hexo 每天自动提交网站url到搜索引擎</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://yafine-blog.cn/posts/ebb2.html\">Hexo 博客订阅文章通知功能</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://yafine-blog.cn/posts/3b98.html\">修改 matery 原有主题相册</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://small-rose.github.io/posts/a53a9069.html\">Matery主题新手常见问题</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hunterx.xyz/hexo-gitlab-cicd-conf.html\">hexo-gitlab-cicd-conf</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://jxyblog.top/article/2da64065.html\">更改hexo的主题为Matery,并进行初步的优化</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"http://luckyzmj.cn/posts/17fd92ae.html\">Hexo之渲染绕过</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://wiki.jikexueyuan.com/project/gulp-book/chapter4.html\">使用 gulp 压缩图片</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://sunhwee.com/posts/6e8839eb.html\">Hexo+Github博客搭建完全教程</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/shw2018/hexo-blog-fly\">博客开源</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://segmentfault.com/a/1190000021474516\">Hexo主题使用Valine-Admin管理评论和评论提醒</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://m3df.xyz/2021/06/20/edd7462d/\">Hexo博客进阶：图片懒加载与代码压缩</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://qvchuang.top/archives/d3c10307.html\">matery主题个性化定制</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://crystalblog.xyz/\">crystalblog三部曲</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://crystalblog.xyz/2021082944649.html\">1</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://crystalblog.xyz/2021082917116.html\">2</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://crystalblog.xyz/2021082965135.html\">3</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"http://www.luckyzmj.cn/posts/e3e08109.html\">个人博客搭建</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/LuckyZmj/LuckyBlog\">博客开源</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://tellyouwhat.cn/p/pwa-your-blog-can-also-be-accessed-offline/\">PWA踩坑记-从零到一让你的博客也能离线访问</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.islu.cn/posts/21369.html#\">Matery主题添加暗色模式</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://dreamruins.gitee.io/tutorials/1121281946.html\">黑夜模式</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/ialoe/hexo-themes-matery-pro\">开源代码hexo-themes-matery-pro</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.islu.cn/posts/2687.html\">加载动画(吃豆豆)</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://dreamruins.gitee.io/tutorials/1793947201.html\">加载动画旋转方块</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.voidking.com/dev-hexo-gulp/\">优化<code>search.xml</code>大小</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://akilar.top/posts/5b8f515f/\">更好的Live2d Widget</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://easyhexo.com/\">easyhexo</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://guanqr.com/tech/website/introduction-and-basic-setting-of-waline/\">Waline 评论系统的介绍与基础配置</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.zywvvd.com/notes/hexo/theme/fluid/fluid-github-login/fluid-github-login/\">Waline 添加 GitHub 社交登录</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.zywvvd.com/notes/hexo/theme/fluid/fluid-update/fluid-update/\">随机视频背景切换</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://www.zywvvd.com/notes/hexo/theme/fluid/fluid-video-bg-fixed/fluid-video-bg-fixed/\">视频背景</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/zywvvd/hexo-theme-fluid\">hexo-theme-fluid</a></li>\n</ul>\n<h2 id=\"系列教程-37\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Hexo系列</strong>  <a href=\"https://blog.17lai.site/categories/hexo/atom.xml\"><strong>HexoRSS分类订阅</strong></a></p>\n<p>[三万字教程]基于Hexo的matery主题搭建博客并深度优化完全一站式教程</p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/40300608/\">Hexo Docker环境与Hexo基础配置篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4d8a0b22/\">hexo博客自定义修改篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/9b056c86/\">hexo博客网络优化篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/5311b619/\">hexo博客增强部署篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4a2050e2/\">hexo博客个性定制篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/84b4059a/\">hexo博客常见问题篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/cf0f47fd/\">Hexo Markdown以及各种插件功能测试</a></p>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>markdown 各种其它语法插件</li>\n<li>latex公式支持</li>\n<li>mermaid图表</li>\n<li>plant uml图表</li>\n<li>URL卡片</li>\n<li>bilibili卡片</li>\n<li>github卡片</li>\n<li>豆瓣卡片</li>\n<li>插入音乐和视频</li>\n<li>插入脑图</li>\n</ul>\n</blockquote>\n<p><strong>笔记系列</strong>  <a href=\"https://blog.17lai.site/categories/note/atom.xml\"><strong>Note分类RSS订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/a8535f26/\">完美笔记进化论</a></li>\n</ul>\n<blockquote>\n<p>经历了很长时间，使用了各种各样的方案，最终选择了一种相对完美的方式。docker私有部署运行的joplin，使用markdown语法，github作为图床，picgo作为图像自动上传后端，pypora作为MD编辑器，Snipaste作为截图工具。后备gitlab ee selfhost备份，自建图床VPS多线负载均衡。cloudflare partner cdn加速，jsdelivr加速。</p>\n<ul>\n<li>pigo图床搭建与配置</li>\n<li>Joplin教程</li>\n<li>Snipaste截图工具</li>\n<li>Typora 作为Markdown编辑器最强</li>\n</ul>\n</blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.17lai.fun/posts/e6086437/\">Joplin入门指南&amp;实践方案</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin和使用</li>\n<li>Joplin同步与备份</li>\n<li>Joplin导入与导出</li>\n</ul>\n</blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.17lai.fun/posts/45f878cd/\">替代Evernote免费开源笔记Joplin-网盘同步笔记历史版本Markdown可视化</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin安装使用，调用外部编辑器，网盘同步等等</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/92d347d6/\">Joplin 插件以及其Markdown语法。All in One!</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin简明教程</li>\n<li>markdown语法简明教程</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/e3ee7f8b/\">Joplin 插件使用推荐</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>教你用各种插件打造一个强大的笔记工具。</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/1802a8a7/\">为知笔记私有化Docker部署</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>如何部署自己私有的为知笔记。</li>\n<li>其实博主更推荐私有部署joplin</li>\n</ul>\n</blockquote>\n<p><strong>Gitbook使用系列</strong> <a href=\"https://blog.17lai.site/categories/gitbook/atom.xml\">Gitbook分类RSS订阅</a></p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/7fe86002/\">GitBook+GitLab撰写发布技术文档-Part1:GitBook篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/7790e989/\">GitBook+GitLab撰写发布技术文档-Part2:GitLab篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/d6bad1e5/\">自己动手制作电子书的最佳方式（支持PDF、ePub、mobi等格式）</a></p>\n</li>\n</ul>\n<p><strong>Gitlab 使用系列</strong>  <a href=\"https://blog.17lai.site/categories/gitlab/atom.xml\"><strong>Gitlab RSS 分类订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/acc13b70/\"><strong>Gitlab的安装及使用教程完全版</strong></a></li>\n<li><a href=\"https://blog.17lai.site/posts/29a820b3/\">破解Gitlab EE</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d08eb7b/\">Gitlab的安装及使用</a></li>\n<li><a href=\"https://blog.17lai.site/posts/1879721e/\">CI/CD与Git Flow与GitLab</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "github",
                "hexo",
                "matery",
                "cdn",
                "seo"
            ]
        }
    ]
}