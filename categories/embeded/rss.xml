<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>夜法之书 • Posts by &#34;embeded&#34; category</title>
        <link>https://blog.17lai.site</link>
        <description>~软件驱动世界~个人独立技术博客，关于Linux,开源，Nas，Docker，嵌入式，理财，健身等主题！</description>
        <language>zh-CN</language>
        <pubDate>Thu, 24 Mar 2022 21:13:38 +0800</pubDate>
        <lastBuildDate>Thu, 24 Mar 2022 21:13:38 +0800</lastBuildDate>
        <category>hexo</category>
        <category>blog</category>
        <category>vercel</category>
        <category>web</category>
        <category>http</category>
        <category>github</category>
        <category>jekyll</category>
        <category>gitlab</category>
        <category>git</category>
        <category>crack</category>
        <category>markdown</category>
        <category>picgo</category>
        <category>wiz</category>
        <category>joplin</category>
        <category>typora</category>
        <category>linux</category>
        <category>hardlink</category>
        <category>bt</category>
        <category>pt</category>
        <category>qnap</category>
        <category>硬盘</category>
        <category>nas</category>
        <category>embeded</category>
        <category>3G</category>
        <category>4G</category>
        <category>3531a</category>
        <category>移植</category>
        <category>嵌入式</category>
        <category>hisilicon</category>
        <category>driver</category>
        <category>3798m</category>
        <category>mpp</category>
        <category>unf</category>
        <category>kernel</category>
        <category>docker</category>
        <category>lamp</category>
        <category>php</category>
        <category>mysql</category>
        <category>tomcat</category>
        <category>宝塔</category>
        <category>vps</category>
        <category>建站</category>
        <category>nginx</category>
        <category>apache</category>
        <category>registry</category>
        <category>教程</category>
        <category>email</category>
        <category>https</category>
        <category>ssl</category>
        <category>debian</category>
        <category>laptop</category>
        <category>ed2k</category>
        <category>ati</category>
        <category>ssd</category>
        <category>hdd</category>
        <category>pdca</category>
        <category>5w2h</category>
        <category>smart</category>
        <category>swot</category>
        <category>grow</category>
        <category>okr</category>
        <category>wbs</category>
        <category>qbittorrent</category>
        <category>transmission</category>
        <category>启动</category>
        <category>emby</category>
        <category>sonarr</category>
        <category>jeckett</category>
        <category>portainer</category>
        <category>优化</category>
        <category>tls</category>
        <category>隐私</category>
        <category>安全</category>
        <category>gitbook</category>
        <category>mariadb</category>
        <category>note</category>
        <category>mermaid</category>
        <category>webdav</category>
        <category>matery</category>
        <category>npm</category>
        <category>css</category>
        <category>js</category>
        <category>3a</category>
        <category>ae</category>
        <category>image</category>
        <category>ai</category>
        <category>face</category>
        <category>ccs</category>
        <category>vim</category>
        <category>ide</category>
        <category>music</category>
        <category>韩红</category>
        <category>thinkpad</category>
        <category>sound</category>
        <category>speaker</category>
        <category>刮削</category>
        <category>musicbrainz</category>
        <category>mp3tag</category>
        <category>ipv6</category>
        <category>tmm</category>
        <category>字幕</category>
        <category>plex</category>
        <category>traefik</category>
        <category>proxy</category>
        <category>swarm</category>
        <category>ubuntu</category>
        <category>cmake</category>
        <category>develop</category>
        <category>vscode</category>
        <category>插件</category>
        <category>编码</category>
        <category>plantuml</category>
        <category>mathjax</category>
        <category>earthly</category>
        <category>ci/cd</category>
        <category>mstream</category>
        <category>selfhost</category>
        <category>中岛美嘉</category>
        <category>node</category>
        <category>jenkins</category>
        <category>tools</category>
        <category>winrar</category>
        <category>emoji</category>
        <category>isp</category>
        <category>awb</category>
        <category>mywork</category>
        <category>shell</category>
        <category>cdn</category>
        <category>seo</category>
        <category>fitness</category>
        <category>健身</category>
        <category>运动</category>
        <category>devops</category>
        <category>k8s</category>
        <category>harbor</category>
        <category>man</category>
        <category>drowio</category>
        <category>pmbok</category>
        <category>管理</category>
        <category>ipd</category>
        <category>绩效</category>
        <category>框架</category>
        <category>图解</category>
        <category>doxygen</category>
        <category>bash</category>
        <category>中医</category>
        <category>西医</category>
        <category>社会观察</category>
        <category>竞品分析</category>
        <category>rss</category>
        <category>rsshub</category>
        <category>知识</category>
        <category>智慧</category>
        <category>os</category>
        <category>自制</category>
        <category>编译器</category>
        <category>C</category>
        <category>compiler</category>
        <category>故事</category>
        <category>驱动</category>
        <category>sensor</category>
        <category>nodeppt</category>
        <category>echarts</category>
        <category>action</category>
        <category>workflow</category>
        <category>potplayer</category>
        <category>概率</category>
        <category>普朗克</category>
        <category>投资</category>
        <category>理财</category>
        <category>金融</category>
        <category>写作</category>
        <category>chatgpt</category>
        <category>openai</category>
        <category>yandex</category>
        <category>source</category>
        <category>hack</category>
        <category>download</category>
        <category>calibre</category>
        <category>douban</category>
        <category>book</category>
        <category>waline</category>
        <category>不可能三角</category>
        <item>
            <guid isPermalink="true">https://blog.17lai.site/posts/798e6e62/</guid>
            <title>ISP 数字图像处理 算法概述、工作原理、架构、处理流程</title>
            <link>https://blog.17lai.site/posts/798e6e62/</link>
            <category>isp</category>
            <category>awb</category>
            <category>mywork</category>
            <pubDate>Thu, 24 Mar 2022 21:13:38 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;抱歉, 这个密码看着不太对, 请再试试.&#34; data-whm=&#34;抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;61d1d017e6b75eb7bf520ca381155a23648e2d047c7003d1c2b831a5ef09b93a&#34;&gt;9e6b07150603c85d3bb35cb0d64d79617e68d964baae8aadccd5ce24944ece16751226c0ae8a15932a2477b9b09b6049d435ed170c206f013270e66dfc478fc0effe73af1a6bebd4395b6b542fb87d18b3f5665babb73c45ed2071cf204d0204f6617b3607a70b43fc1258e562d0907c6ea9741b7e71c5f088a552f13a33033facd7b6f8e0dadd9f2546615901372164eebeb16428879ea0ae68e3afd8096d4668fc38ab582d3611fbe641ddd8b8a9f79c61d7e3ef101472af842ada00b88722147155ef7e6db37f92dcf03447555e540fd85487e9cc16df1cb778faf55b6caea8030dd0ef6197e2a727b528225e26913c8013ff491665f9c90b278fbcd5f1b8f8eade03d1c2a592195c71ef8de1b5422389be05d065ac8f1f991044858b67e759cce87938276b311bd3faf2f9e46f71e48fcab76676d0bd90302de30a729e6b409b2cdc93b29f9af5c4d3451240b080f0b69756f7260e247043f57f95fa31f22abbb8f83c6bb600a3ea6e64a37c0ba90f73e6b829e8912aa0e46c7d1aab0f565f5b9e26086927a51c00a88187c2b922fd8c8b86c1c98a64943e68df30b5c6baf106afbf3b36e97891c26bc7add864e0f545651c7e21b7f564834d22d1bc6d50c126dfe8548c79e4e9fbb077682281c84c6173ee0795f3b7647af7e9166cb278e7189efb740fc4f6057b688e62ac03a60767ea72353ee4f223aef3d97de0d5f9d9fb7c484238a38afb4a4465e194c8c37ad68ec1f79c727a9c86ac83728d6bf48f67ef62762f45d86e04b825cf6a039af5fb260b0b7f61c2b70f967bca619d13de4bd3ca991d98aafa849c2a8427c46be46da9866c6b4b7ecab0a33ffecfa5a16a0fb5ce2857c9fc50cc9c65f572f973b9a13e85d6523f946d80de0b2d61fb28cd2e4f7e4bb6ab1ccc473adc25da3dc128efb033c06dcf4867f83ff66b9524858f15c5a53887c97c77d1876045a625024dfb237de071c5584366951d9a08cd1d22bb52ea1d39e863a1f73dd90c9d129bae176081f43686f8acc38a71b7813f1e9802f7332eaea691ccf531910723163bdccf4b2962e330b7c1215dc2898dfd1c829703ef2890609611abf92be9c7fa16fd95531ee812fd2b863a65938e245193570b6c05ef0ef02f3d2c8fa1a8b80d6cf6bbe461a14f5aac9bd4f0e0cf52e587e654b4d60e039deabe263d1d7eebd774a8681550b5d24a047aed1a7bda6ca3b4ff31ed838fab3f206a4f989c99ad23dc51b0ad47bde49fa048514897f7f310c8a361c2e0915c9879ce4af9fc1fcea5c67e7a2c242feaede1cd2fa8db3803658570ed8444eba49cdd65b4be1c0be919bbfe0297a9edf227cc81bd778c45d40d5fe9b7a99d34f9a32958b71314fd1a4d0f0d4a26a0bc637edf836d7743cf80808532c0267b3c0b2e038d1b19d2899bd1a927e6deb41d2d846cb97d59489dbe12fa0e2fcff5ea80c43629635b21355e97219c22b0f3200f3260638ea575fce18430a11272ec5c1f21a8bca369b24d577aed61fd707c52ffb2953e5940f6cbb3da8e9074687b3e70e9da90f2f8a3eb439419c6a3f5ce0f8fafb487c1bd25e268109e1028fd97828b090577eebc8475598ddfb4e5d852dc5e07010a4cb7ebdf3030c6343c2ab1897b01eef386dc62281c0a7a1f6d4075e134a5eabd635769583e423417de5ca81efd1d4cd765a5357e6bd8627e35a72a1f34ed511f4a471f94e4f409b2c89097fc5d6b895d7de18d83501b009620d3ac0284f7c50e8be5d387ba88a376d09ac7a301fd85fc90fb7a3bd127eb46446e24ab2e74701be1609b731287af446b21238537ad6dbd1c2845853a19ef0a287d1ab90d36a003095a32f0f320b5f7b8073dbe39eaecaa436a2bbe68116b11100ed16095e4bea086d2e76ae9195d8b058add6f215b722826c17d9f101e74fc090d0b84229095192feb4bc8f774260e57713fdaa9fa49f96fd3250deb4c883801da12a5c2a5243c912f23f696a0ff7401e0f18ae09a435cfc223281d4e3e1a1a19bd1269c8d19c1835922b5ca71fbdd91da4fdb2e663145bad5b460569615522b47093d3180d4ec45ab6f1a4de091da5c0eff27ea699a3fb2107d77b278a41f3e77b2e6ddd225f48f44f5ee464557a9a92e64fece0b7acc6c3a341434f7de9f0a86508b9a938a964af6620a5fcdf3d70285ea0664dabc8cce0e2be91497f1227b31dc9245b80c80b4bb3006f91dd03cab096708b406f723cf67b71f643fce52a2addf882be9840a3f33a3347f35aa71cf9957ef3ed8b01e8fa7051b1f4d29b0ec5459165ac7f8b6691f09b0c8854683a837c71c4cf1d260b6039d48100621a9e669fc68abad9ef6ee50f087578a4445469184da7e4c35a5a43bb0f97ef0e2fbff1773cf224ab8c6e3d367c0942d8620b0f1a578ed0cbb930391d1799f75afbfe32fadca29ca01922886d1db0b883ac0a724f39c36ff2bb155d298cd4eb9d4b45736b101864b24ea2ea95e89903b47967e1ad5140863c3247ec7b6824ca2dcc3888c73ef392c1823492abedf4727403debb5ddd91d85744f87274576fd03e43c3e0a0e4ec4dcc85e2c3b853b254a8df7898fe6398831e096527184e1a363bedc9ff5becfd83e12abe546c5ef2753a860de4214d9a874ea61bf00c2d3f15de17711c6461d58d2356f0cbef5cf2197c95b7716b1aa770035abcde2f66168dd1c6017136d8ce63926edea95a5db16c8977ee49ad3ca958556d26363c5b976b43dd4955e3358fa11a0ad64647077f88e83b2fe8bb7022f85545d658efe0b91f12e32ca7bd98498ea836980818c1e775813b418925d9cf76e92294221052282309d0eb51001a5ec6fd7cf2542d88f847789368022889f8b939e9585f40316fe143a8524c98f6317b1a064345a55e262fb5c846a1e563d27897d316243e95e62c4bfdcbaeadbf60cde91cd6e31be9b4e8799573658e7b113cf16496acc1bc3dd3f7195046b3b63092c1117963a87897c235373b4ed4fa239436ecf3a6386153090237d49e863fa618658afa92c609123ba4baaa160d66f1eb18bd84b528cda3f9af392f9a37d17dc26819b6d4763b64e5b06286a7fdda5597a37a5170659510871b1f48409bcbf4c8b442f718b8f6150b1a96e9d3cc773721c8a54e16d776475e2b6de108b9cc305dbac7ad0ff4cbd31bfa45148ccf9eaae4f09db5b62f9bd2aa2e1fea2ef33033650e10ef63a62fe5c68bad93bbbe6801753475b4f54548857051fcdf40e4bfc8a9d9b67eca955eb22c06d26876c33ce83b2e3763a42bb34a885051cde9e878f0f3ed8066e451b6b7212c29d7b29c36889e6a50f068388a05c8cd27a3f959defd0aefeae885e79933f54493f45f46170029207e0489b55ef86725283399f1f82f69fc1513ddccb813a69b98d0b6441f91f3786283030c801f2f2b06f1ed14a0c50085f407cc4f611b895816ee8b639ca449dcbd189911523338e457c43a0b2e05f84ac415c403ee6742d6c1a3bd21f33602bbb38588679373ef9306f4ebc7b2aefa43a5618fdf0936d60a57f762b9fe78c058ef1232521d59149205dc7d227723ab95541ccf64e2db679aa8d86b75743618706388c2a942e346eb9ffd660770e0aafa142a6c81d3669d5432367c39c13b9fa90498e457fe084e1f4d432fc80b4855f43eee656b979d61dbc6e2ad632df282cc954e7550d1208b5653bb62e3e03b61a1cd333e322dc234cdc83df14a2e366a7fae5c6df1e3c5e80bded13cf4ce846bac65a7b74efe2479a3a8d3e25364daaa253471d1c054ca9b3ed7784baefef49c22f845f9a9253a8abfcbea843f9109af1aef85e1011f52a9c58891f6e06768959549f9401eee4c46d4da3d8f56191d84f52b023a3eff24858454b53a0a9c2307e523f733ab4673eda80ea6afb07b6aed7e52f797f63a27878c372955a1b4a852f006d52bd7020e0bb98b56aef6273033e5506b23b744c4e6d220273e0b2d7bfa8a75bd0f58e96ef7f18520cba98cb807f3a0327939f1b36d91f4fca6dbad5cbaea57ee14fbd69373542ededd8028413ff399af8d9ee48ccb36850dc49d3c537bc05528e47f3521f1b0ccb1b029d67d331e4c29f722627bb998725680f489e31577be055b0291250a56f1d423e798f9c725e4acde5120a0e77b03a3cfef56c7b4424ff124e7d67a70c29e5d8b9abcad8ed618da7b44fdd49fa62e74d0f9a6b11687d65754c1b91a65ae9209f4205e761b00f7d72dc7484ac80e349bb2bd7e72d27340bfda0018ac6f98f49ba1877dfe92e25519467c628aca6289ac42b67a52ee59e1820f0570e0025a3b99654d9c7ac78b726096d662cdd015cd3720fef4f55b750fed8cf2e7f6f03507998d591ff6643a94f6a42cccde3be7285691dec90477fd9485685de53b7d1f04b8f483a1db1ccd14fd96a1dff1bdb9059d1fc690d1622fce551013507079533944f4989303c11915a662c8584756aa0154bb32f1f8cdc4ad05aee76b83cd4ea37afd070e7b17bcd3fdd35068f8ca274de20bbf3e9726be00a78cb8f838c51757e16e95958a682435a5ce049684b328bde1e2abe5ca5f40597e753c7608dc86998a4f48c26b11c9d2b28118d3f6c9473cb9d5a1a621145d2b1b137040cd05292256e143ba8be2ef3c4f2b1bd80b9080934c5d23e534d6da88bee7be793b16ee80d84b9d913dbb49f69bf43661875d2ffac9b80c10ff2a0797eac1378213152746e22d5112e5fd3b33f292e71588263addb1aa09a98971e8e2b50c8c62b86b4b34817454e8cfda6e8a760e771cc68d7684f94d5ab51fb854baa0cdb1c926b78b697f6fe59ea8331b8d7b62ed553dda52b22dd0682f0ba656eaf20f475e2226870055e427229d39e91346880f7cb379e8c41e720bb9c1e7570b23f94bd7ac9aa9f5673234ec53f4fb87574f830dfe9ccb601b8c10cc6d1416be0412e014fadcc794d684bb49a8ac5a14506a01bf4c685b4ac7bd2d71b2d059214955755994732cb48c2a22e5cb41cc068ed63330d7541a37a67178e53f3ff4002fcc1fa92200269b5b3506c688cd7670592e7fdaf4c129e209db34f59d1fe8debfa6905beeaff98e318e4041ace8a275982301f4c56c732516cb379d7969162d9ef123d69a87c563b89ce756bdf37009befc2b2d2f05a338ace1ee6b26318abefc46072ae92a12b881037a2c236833ee1f0c8150b28207cff93d00139db990bad68b146d2d531bee3a1f691541e54ebe97c1bd773c61f8dfc307d78a4750df5fbfa0c651d9c3257a5865a23678a09d011a101a55b5400ed61095ed4beb526f2c622741414608615b386b5213756d32b3e28eba3a9c7d8f2ed8476869f3a83c7b6024da557fcdf5dcb83283692e9bf9249f207ef9e7cb5992188e9ab0b099bd9a82fb2f9c8d1f731028e984e1c8906f20f7092196d950675e0e9eced58659d0c0e58720f6047ec7c64322d0c3ccd65a07f54a102441dca00e8e71bb695899fcec444374a75406260096b0a04604bc391d77b09e37217aa70515a163ff601054ab4442f67c4140ad41322a75bf47921bde87425e02a23ec078363efc109970185f9f830c615a65e323173069355b94a1fce0d7b3d9dd9c691ee6165fd64fc8b90909430b98dd6ff5aa680043cad75347040f324b506eab4c9d50f648617600d5acd711b59639c7ee366bb61fdefd681d01eb269b5919b23c39f26725e0f29438c7e99c726c2d7efcf0b56cda0466bbeb0785833c1bb3c13800b55e6bb9991bc958e83e9a48297f4141daa2e7e2e0406997e9e4edf3ee0629e11b9e73ff512162cd62518b0177a5cb9d59e4139f947e13d3836828d0a96cd8be8bce01f3de07e1aa314dbad0df756d2134a63bfb72ac286f212efa0a0fda79fb668969090e654495ea47989c7ab2b2b62a59f6d325d8f048ca167916719299dd3f6ff7d310342c3349ae31736179ba865776fc61f3d5b1c22a2bf4ba7dad0a3b30729df81b651d53fe5bd8f33448056756162f082f2495050b78bcea5e935765588f83ace0faa42e248e288eee33e025d1633cec9fcc2f967b17a410ec1b2d7dc3d9443f0a68bc610ca7a0428ab1de4a7157f0752db78a0c2c24330c7ecb5114364078e9c125e068f921f8a80ec9c870348eab619504f54d51c97cbe7895859e85ebc196506ff3a35fa060aa074472acf2313ae7b85c88c0182fd858db76c04092203171fd6bc2ef9f41cc88fcdcb9e5e578957bbcaadf74a9182ed39266af63a44fad1e9dc208380ce6644310e284d177f4e3305ed93660c12231733dc672d8dc6a601b97c947876e25b30e9666649be77740003c596a6e8481ec9e1c81e619cf010eea2b71c35f0208ee4fed74d03281d329b8cc7706b1241d97d2e49cc4cb4dd4e2d086ee63892bb7d5b94ee23f744f7109b76419658c2be6542fea796ee3a498deb949b9716ec78a9f6652056164d1eb78a33a4cb11f8a62988073f918e988c30821293277329ee1255f7547724cb3f7b27be57552b286e0db11670a12941e421e2e09b3f2d7ace0ff4ed3b4123734d672023ce48e859206c223c5bed4edcfcf9530c2b7ebd8707eefb549cc84e6cee1867c89c2da997b6c149ab736f2a16c997f3317ba3a9195c4e2f3464e88de7b4daa6215a2c7384f286f59cacc2b1e5c75e3069a59a9c078cb7133580fe9bfed5b61337cd3beb2a6d78d3ec8673f35526614906d37423cb3d1c3800300a226c4646a45fd68cc7c323abd446f48263f742e8195fadbe82c43451bdabb334fc24449d61f7bdf15ef51ac47757f6f3372b6fdb7c2cb69440a664927f3504bbc651d49b90c8d277933a7f3291c47df865778cb03aaa68aac6f1c681fb44ba5a7e3ff158f6bdb99ec7e01242bf2e82dc39758a339211418537978d8c1a032b08db5ffc9e9bea904e7a9715bb9ab0899236f7d5d20cb1809aff9fc7d9fda0dc8af3b46ca81d20fcdf94e8987e478b891e38c74fbd9becc75e3d312dd6ce574b56fc208fde4bd75d12569e6a0f9aee06484d16d19ecfde1e2577b3a9568e5bcc2b6ec4fbbbf5ed3a07ee650135b0bf10544bde242fea4162493c8e0d69b876eebf9f88a2b4621b17b0ab766b65ad94163d301f3c0f5c7032ce93c8994f629cddd9987cbf80c37dbb566eee5599bd95fca3fc781a2aa973d655c4f42974b051d3fcf6e4d1810c791c3c8aeab10a75edd338c606d41ba753b065a956b10407d4da9c6350e3e794e631f17eff931fae2ab09e73753a00793fcdcf9fd4aa85caf9b25de6a0baf34daabab5be650f588d552cb5268b6a10107ffcff3f29cd2ddc8f5955218af69560787560f02b805dcce2e08cbe10ee49531f6b4fc964b0eecf870cb114a11812f586e59952acba5bab9fd5407865e6a211c916b3f4ccb817846afb18cf7f329262f06ec908151f2420c9f748139be4f546f651bb92ddfef809a80cf4c575a85d25b41c6bf19fe604691e1489ed3ea299f408e270722501d79fac0df371d42ebffa42a28c68864e8d024be5e2b37a563e4079aafc1ed48dcb726b83ff15edec157221f9d782b8bfbc3db360c7e965e27a8cd1592adb1c4831adf6c9f226b476933d715969a6f0e47f11de8d7111a980ef17210b7df402c9c0bf5b4961f80913e604883cd57bf665f86fd063caa9f534098973e849e8e23f76d7dfc63587c648cb9cf149e9a29963a2d7d2afbf0d4ec476a6b102536c65510f260c31a7e29a7bf3f9779da7ba5ec3347fd4b6e0aee2d6adcfcc690bfa3f876e72dc77eb95e38268c1a2973aa7757704728d920fe029ba72ba652d70cc6f7f886bc6568cf594382f97b185a51954cc5992b45ef6ad004f23db4deea3150fe8eeadb04a19303e3bd80fff1876b89bfbf183fbb37a80e53f2f2ddf28a26ad779f05afefd4b34a9c80a81aa006c6fb3fb31796969c7c12207b0bcfee5d7bd32bab496197cd35dc5e50942bb32d1c7d1388ca7a10b9e21269d45444f02d4fd31b2a1bdbe281fc2d5d83b84e0fca45ee15266770cbcc77e90231fe13ffafec69572617b31d31b6f8415ba836bbcb57604511e38d3e565da6766ec315bd66bef0da2c7859f53aa8c1ae45e75e7d36c2f910e1d384d48c29d78b2d39b7c874d4888bf9a51f45aad1d4c6e4f1a92a6aa87f74facaececfbe2b413c114435952d05fd97f6ff9ffa4a2eff6dae764ea06301365f9fb28cf9db78adc6af946e65391aeb2756a915733d790886db89f6d9e6a6032b1720a27e0379d6ce0cff56f2e1690bfaeeb92f5de5daef9917d734877dfb9546fa171c2710c8824def67ddb56cdab5d95a3e15ca74534a26e234ed1f686e3597e7e418d72b7a5aac504a52002d228e08d7c848e00873772c1df244ef9c2dba6aec49d58374e692c34499bbe5e09609e792363d1e12305fd07ba5d313095902b6c9335ea6201ab73679a5c626076318cbbbd54c720f2c59dab2f4838e1db84034ca58a126960a5842cbdd8947729c13f30eed48f202b980b68c5d49739e2960824dc1a1b6d1ae14da8bf93cd9c968248e175c629cab0a0cb7c2ef2dafedd641fe2f55f6b3c08f92ea34c231a049c1f9b1a1b2f762363536f7d093c1a73b73b165e83eca001bca588c4757db317c8be08fbbbf008a6553d6bf83a9cca1849ea234512d68400d96b5e920a4b2d8f483100443424e4f57e4a9e430353ed63528bfb5ea957e019503fbf42dc80232e8257e1eacdc40059bec56e4eaf79f617a01b26956bf56051b6fe51a6544df0d15432189fdb3656c4cce939353e2514c0528aa8b53c86d75fbdf36a269d6ec33e0e381e13f460c8ee8b837873b4d6254326fa286df142c98db61e998e0c8a3e46d55c158e26a578d6fd81222cc6e16f5d08e06df4b8aa9ec4ff7e94d854f5dfa7db9e03c2c43144acfc10533e1e15e581b736fbaf7e3568ab2da67c59ba3e362ed908452f9968ade7d9dc5795f75ffb1f4451269d782429fdffc8669a765c99abd35356e036ee176c1b8bd65374a90aa681268fc7f6818341fcb448993709784c0e89a3be77694f3b1fd374a0cc04f762093790d507284c6d2a37c749a0210a2257843fdf60594d4b661211acd1f33422496c33b2cb534f921a8fd3bc94611c0cf5271a7298041d47933d25d58df6aeb628af69cae26ad87922adf78e548aa8f3f59af88b7037f0b96df4082c5666584ed9ee4544e45a0be595dc02080aee03db34b4f1483bc80d0ad9e40534ad028803f2cfb1e3c2b568c1925f36ae26bad681d00c20986c8f7de23907da801a9ad7198960c2213ab899177e30d014b438fd41609c6bc665e739f2cf2af0f5ce5f73fac43004533b5746697eb0181c2b9c1797cbcf69eb4c2748f55a99c46be5a5976c9492e636a30d132677d79c90fc245f2e3cb84cc473371d506d2047d7e25f4157e0194e6964181a1590249a7f8a42de039a67e424e28e6c481eeb9fb4fc3858fa2ac58b2a9cbbaf5127d28bee25f9e650c4332089b7a7f4d6cce96079306b29a4d2dc8aeb430e32862337092dc827a953215c6f2cf0ac509972b7cb02e125490ec12fba2e079dbbb42a6f0445f75a8d8ddf31c95607cb085f3823f9c8902f35dd30ece0cad2788a22d2f06f0a7e7a93155f129c6c567a67d5ea4f23ddcd808b750a49b161ddbaf0f524e08adf5e92e1017ce943b81d9878dbf092a697a395beff34ef04e7ce866dfff0fc9d1e60bc93471f5c1cdf15bbbd961e298b3b1910ccef56eaf9e681f65602a63b3a9ee71fb295f59db013e070f0ff202149e9a111fb4db442828cb53ac43ff0a1cff58845b59d8dc3ea1e97ddf20bfaacbe5f2013d03fadc889425ebbc8275c6ab64d1b6b153e3d2e3d608f458016a68f56ca2a61265c4a881a13810bcd34e520270d49ee3fa14723f46329fae09312640e66c8d7e3e8a867cc06efb789f83cf978d1e1abcbdf265e56946622d5207a5fb5d69ef64496f3b622978442efe897aa9209567eefe1085ac245d25b522ca13dc5a95320c6b3d12bef5718eb59b745ae421b393c27d5176ab4f1f53e9bbec34d9adf26e94c301769837d434a6b184acbe48bad02f0364f7cc02ab8f2b907828d464ffdf8b7ba0262a1fb5e15979cc1b7e7bbdd6fb473a1e6f6c12481748eaa51594ee92a9f34c6a45ef4044bed332bc4d201f60f0757fd295bdbc4b8741b426bd6ebd82366ec639d5222d2132d42b6bf40edb175a8ef4d0217435ad1ba1cd85971dd0b83872421ec6e4aaf6d2733829a26875f428ecfe7e68621e97455fc5a287e88c90721f7a267669946c51d0e458a808a76682534184dfa2662b63d166a12f3fb5843e9df5650ce42f778625c745c208b23acab4a55264310f6a8fd90afe3c74e6b93e1abc794e513334fb6e092c6054a433e5e40d8bb9180269793d976677283f7a06a2ed71d023fb888e7684c59f4799744863753a90890a6da03b21abfa021fb854f782758d2ecb5f6b5f3c41737c092226ab70c21f50a173cd9b95496f95fdcda4cc2291a9961d905483a63fcd5c82abfecfdb25f2b710bc1ebceda2242ba9d2d936654e77afcc8bb930827287ed44174d22e4d8b0c600a97c6419ef180347ae270d286c18ed4d46d71c523c804920c47520b354cc2202ce02dadd230e64e1f5d287ee0bfc149253188d17ef50c4230159d31afe74d476f103ba91eeda2ba8f7d9e65cb63f9c48b78d012d2b9f27b8df33e6a061a8e25711a5fa7e69f6779377c78a5fda075b1e3c5bbf3699a58589feb26a3a1995da74f7acbe7290d881432f7572a9673ab9b7ae959b0edc113e4931641ce270070866c3a6fecfb1fb54eaac0b9a236dd532b6889c946b48b2b4b0c7f29261bd7753346e11319808e33a34eeec75f6d5cd6cf5f89ad3af1b986f71aec64f18483e2a5edb229d1ff26e099afa761a6b60ad12b32a8427aaa82a6291a99f73d8479a351876d8ef471c1575713c82ffdae129bfa5724dea20a36105cc0101fc27ac2441c32d73307d5588645bc079e869515aa5d1c9886081b6be94ac3bee709f4929e14144f7e2d75e5a3fa57c924b656ae2406d69bb4ad0cdde9cc7b1ee02d3385fb74770c8e3080b9740f75f05d9a30c65478a52c2e5f2d85d011232c146d1d3f19e789eafe81c3e83e085363df088e786ba1a7ecf91f617c798f9cde821b308fa1efe35892a8fc1279ec469c376fab5c857c38aad9454e1e8a0c3efdb43453f3530ab70c9f57a72e4c8e3f989c5c76f051263dd6059b22e96e39054df32dd96be89614a82cf5d327a41e8411d0e5487f489485a736800dc9398f8c1eae1e83ed7635c2f40ddac50ccde990b1a3b47110f36a58b9985e420366333fb4813b5628634434f8fe8d03a42eec0d69f5382ee8fba1673ae5663b99461e08775e3d39b8d2a452a008b3db0bf5731da395faa913d7c47af0c557cf88e157ff7effc035e7cd7800ba986f84bd528e412a4b6c756b4e2ad53c05901cabc093154760eb6e58b8d8d92dff297ac4827766ce0c1bccd5a9e4297eb80d9ca84aaffdeb42386ac5b616ef70441fe0420a102c5358cfbb2e7be377de1aff8d8f8d19d0e25a728e77802759efc99bcff97ee8b8f2acefb62b2befafeae79fe477ad52d92ba4190aa302fe20b6264c8205c48a776c6b9558846b2a03d7b4d430fe9e68625cbe804e0ee36e912da67134a8f0ece804016aa6336b2fcf52cd59e89c8d6ec58689f8030d44dea4107c16a3670d8674be0af1c3175597f46323ff0930554db46818058e148a453b2c2880ba1613a25b76811858423314c9747d0b45df1733e898ce121da32f93413f28e526c83416e995218fbba6ddb33346ebc74c226ba4c8038d8cc17800b1e43bbde9939e225115915159fcd493eed8c94c0f244e53855c0fdf5167b266590220aaf85399fcae5b2e9085296502dfbada74cd97c148fce1b93596a12ac8826fcbdd89a09a801c34c4e4f79d5fb39686c5a98408af2eeac9fec56dde2eaf996d1a1af05e15ce93d521300416193561b216a61961977071548fd8eb058a473e345972c2ae3628a77a88f08bfe9c7cda3e881448f7c766b67acba48302e96cf7927d9275b1d43dfab531a5a8601b1287f8413b59a657befdc05425b82f164c994407a49a3bc8affa80f687b35a0157a863a4b828ad16f743d1d0efe85830a8a1781c2a93e33e9f0b19950597d6291ce70c4f71ab29e6273472fcc1f69ca8f7f91b36c8efe0b8fd7e2cd8591867d5b49e7cfe4499c41014c7e43e1eec9e0d45f9ee15f788fbc42280a796e24947f9c006788f21fd6387cd20d48282379ba0f25d5eeb4c3b44a73e81201f20fb442b3ad0ba064e50b2b337533f18da36ebffbf40a878f10692862f2b4ce1dfbc2e8c8c4c960f73e95281be9a2dd76a04c1155a6511ec9c13969808360c38afbfdcf5eeb9d73deea61b70287f5c8bf83465f44da41f387b5e6d49f52affceae854737871de642fb6cdf09beb1ca4bf25f5ded5ed98f6ff4ac8c9835c1cade2fab9cd152b4947a4eed8d2ed8655f484655474581210de3b5ba23047d21ab02943ea9f3d948450f50dab7db78e7a58dbcf2c01b29b5a4e132f38e8f88e1a5f9bf9b706b5fbebcae186f0692691bed92bb3bf67d4d26fc9d6c6b6e49641aeaa92ed2e206b65553a072f9bd2176b3e0dd8fdb878b513e02df52d45ed0539ca8ab03a95b0dfe9d1f9089dac47aec53df8e216ebe2bd4fbb268d52dceb74580d5337c28d5457f6ee07990facbe15bcdbba3ad1fa6a8d383c9b3c072feee11d52623985df23c84151c70de4de2fe5769a511d6b92012837f8f586dc3ab08b830870c3a9272e3242bb654837395c145a14a4636f559d22e217a15d90fe7df252744f608de7dd209eb0d080f4bc9bbde41b7172bee9cf38027d0faa29596ef74404b33a3a2bab88a7b28e8deee4ec7c7fba3e97d7f70bb09296b166107c70eba9e0679e92ede6045c6077f5c8e07aca716c2d4754370a7c488d716c1b2d62383175c8479f48cfa8837b8d8d0402dcb7b8747c50d7a3226b891bdf11daeaa371ac8ed3bc3fe25f4e06e4d1fbf0eafc331ee10449fd542c1fee4acbd71e67a6aaa9d820813d55361cba48b027726a204049c9573e42cd6f5f93b87430608860e16a16b512bda43e081a92c169557ad6b8d44651e55211bb7bf3af0680a079c5a1b451295ece64357a3b50a43392e97bda3be27b6ee0aab1d9844cb9b0457f8cbb60c65b948aaada21dec043addb10be0cbd0796ce84948957f943d0e8426c5646601f4e86a6f12e0f5356f0d40b1e0718702d9b1912fc35b741129fcd04c872a6e2029a750977187954990a302a98e4c6d573865f09f236a1b112fda95bf363e24c638a81513a8509c8ead68d8087a634ef10580717dfa37b8f1d13cc630132eb8419990c29c3aa03255ce6e40372240d5931301a183a56d20d91834604b3b5cbb8fd2a9ceec6e18a294376e2d331c0a2788453281e6913ee4730bd4f8a1bd4a921f43e4205bbeb1f6815ca9ce08282a7c30df827268ead3b0cf0cc40a985165fc21c326253766bb76af3ec2052a063ccf7feb6f5e65d10998dc2f3a3d86118ce2d1b6279ddfd489f87c718e184f7b165ae0d007b352eb70adea15ae109dd8cc0708c002df410ec574ca51643bf8c1a6b66e248327cb736890665f59fbb705ff6f52346ef144fd58e132d8d60f86b3d03a14683429982fa2a1172520a73c31f82bc6ebbc0627dea95bd399314f7b3889b16ab336e1ac6f3bfada2ddbe0a763749ca992ba2b74b5d793916118e17cbef84c49fcc92ec0e6f263ceba9316547cb639098e699769279ae93e817fdb757fdc8afbb691825b6c16711d4647549fd97d3e23291c3d43c047534aa9720da62a40cfdf7ac5ad51a9a9accdb3a453c30fb74e8a4780aa67f5ba0076b2ecaba363e237c5a64513a5a9f8ccf739bf8a19e7d80b0634d389735eb16b4766538c3efb09678bd613db62cc2e4a1ab1407b73e1a18b6e8af7d97348cbca8eb6ed58cb9c2c150bdc25bfe4b88d7959ff6e9461319fb164fad551835f0df6af2e88d18d71e960ff946137f25a265c26962f5817c5518345b8ff69ec11f153ecdb4e0bfe6c45803d6e1b3642c67a44b891cf3028c3b4c1d834ec2871aa9ad89ec381fd25f5dcacbf96714264b00015f97510c55deb8e92899bfc0c143cdd926172a028d6082188ea2d078594ad9eb80c069c6f387b08e9909562b0029a8261c97076c1bdeb4958e3dc4e7afe75dffcb537a776dc96646657056014b28f0878754b95d948aaa8f2b2982fb4e76f70aecec46414d011314605adea714363d2794c8f89d5667fe99b81260887c003bd720f0ef8ff49dabe86ffc1e5349a17caae4ea88a24d8a488dff4700b64cc0317df21e5fabef91fee2283bf24a99d6ab073f66468cc3aedef5b5ea8ab8b78cce7f9ce0019f4b3999b5c65101d18ae9994e30d4c02053290db31981e3976cc341b4a82dd8eeb7c821fe76679e0f75ddbbcd1a197d42ea0a50765d896f2305aeb904a85017414dd9da15707338d8205254bfa663a9d2d6c70caca7bdf4d83cf2871536de1fb5cbe39d97840f3599d2d1e5b0bc7a31b70746a581391e2dcd41f7bc31fcc90b2bae492dfff85f6e4d0eea18c470a2e3baa092ccd2d15841098c98124260e62766644c83f0c584441c4d97428b54920d2ec6a23c46b9eb2d1171bfe0175f2f6ea6cb9082330beb4983d5826a7550cdd1e5e5a16b513e2a21ee23d0138a18f18492f56d05533251168a401f8ab30a9734119d202c6839c0a7cce6e17793b1fc762dd329dbb7b6d25aaa0674fedf1064ff044f9f8678aa67d775dd3454f13e23c2fb8b88cfaaf211b38cd1c5bed46fe444bcb951b2e06751116285c6bff003beed8c294351511524e4f82b593ca2d5423c8115fe18f50521dad2695d3bc3b9770733845ffe09d33d177fc0793ba8704f3a4e5038f1ea2a926395b9b852d230dbadfd65e843d058877a90fc5440b07de1500e51245596bdd8a5c51ca9e4276414449c7f599b93fd060e4f70f75c3d8074ca52540bc47368cf35ffe2db2e8c8f7d40f218c6b62af80d99cabcabed56674a81d4b65eb7df24379ba94a7df07a54429c87d43ce7a27732c714951b7fe293e8caaf921c456f9d9c6875146cdb71e9fb381b9413b5b5bae9f636a7c93e656b83eaaf6c447d0ec9073e00e02db5dc434728fa53b9cf377a5c22cac14f478b467c6bc7e0716d645948ebdd15af15175574f38f939c91813811a4e997795e988ac6d4888b19bcb8468762593cb39b1d4bd549ffcb89964583803cf63b3e96ee383a34b6e822b540fbf9679696db818371656baf60ade090d50544c7eee2de3704ea67e3ed3f11e6cef9fd4d63bc3ed9f7d759e6389eefed5ac3e3b5f4bc0d61cefaaa14587c74d86aa877ab5b0519c6ebe237cfe8b37a1e72dab4b0ef4d2cbc7b9ea4f10fa121a798ddbd8d3673d29e39912cbc7d4f3505cdd87cc37b4d77c85ec5ef942528ebe746c67da035fe64c6f25b527a0e7d8969d09e848178af161b9ebc4360993f2673a68de817b3e1d4679e2ee9450f620e27abd5791265b53964e91e6760b2edcbae0b6b5f1768621f488ecdbe819e05499bd6e3890b9485635d24fa8085773c509293a6d8f0054592847d0f4ec7ce9b51eef3021cd02e280a10571f592451818d5d5663f92225589b51f7700d40e6682565777f0ce87b76a8e13c16d343c02bf2565606a6d3d0ebcc9f5d52a41d4b3395fa4ee50a4b8e0b7ca875a2fdc360d7985626585dea71c9e1fb9d0290628f6fd18e1cef5bb6121a948bb105f14d2a1c46cdaa0a1e8cc36ed33bff9895c89f5dc728cde5e331e66ed61cdcd4c6d0dad6938c47d18df614758b1603750f56e3430ee96b6b151790c59a91034b2d2f172307906a900f6c02952b3f2d2a7305a404c14921da666af268b17058d068e31687933cea993921ac6cd4263e788a08b4cc1750510bc10536323460a98aa8a3aa54ea52fb0babbd81f7e8fb9cf3955cee35c8711ce5de3c1697f03b3f16a6f04e539a6dbd72b746273698ee6d647075fb0d36322709d1742a0c2747ae6400f5b2a17e13fbf4bc9e1dcb88087ee010421bd1df59ee1491299349218f2f27a0ae3078f82eb0dc3f297f806b947b8f9990f64b068a45888e73bf40d67f27758c0ffb805a082744a906546b435e508a902e7227e5f773c5c27025aa0fb9658fbf5845fa59e440205ef8c9ca0feb0f316e957602664cd11cb6c898c35910d3847c18582f8fd3e3a3fe648a67188420d61d66d071cdf1b93ba25eac129c57cb35437353f57ca74c12d08d401b3f5adb10b35df4498d1547e7fa84b8097584cf9b5003ee294db7b20376971f77f694f3851cd8b1d6055149e613c3e13c36ead8fa5054d2901595fa07dd91af53035bec680c01f28d409b26ce9f6e28ccde9c372ef12dc5712d2c1adb5e8224931aead9c698fb03a077b8e7c08579011c1aac0c549198abe2edc886ce5223de58268f10735c290d51b731701357c9c078bae4117e31b337b23d643bceceddc0fdfbdb88a4e0775336256c1099e5b0a342a050826e2292fd5bb657408e14d4123bec1cee9cba33cd60f310a47c56493891beba8f7b8aa2fca7b7e38ebcb83ecc0a14284909ddc4f9feaf468cbe29b9f8b995505ebe83daa978ccc8a3aecca8d284082ee7b3d2292e9630c916bd81f5e812547cde8a69243671281da6bbfe8fbb3cd2e37bd368bd8a7d5e5a5bb5d5eac2a3750ae07631340d8f05495bd5d9b4ac509f5e4a2dd15d82fcbe14b0d5e5621e89aaee8c00c8a4b706fc86e6d3e5e0d09fb7d7d02299ee140f717259d5492a7c6d538821b2e661f4b5efe55c4c3dab6085c7a1970b72de818ed597a59f56b40e5c77b27672354bc1578d1d9523c32c014ce0afe3bc9188ca9f540314d92b1cec35f2931d7b490cf1468cd9dc44a17b56dc9ac030a556637e83790e94a8c20c1fffd216ad6478f9fa61c01568cf02349a6862ad2506185525d7402ebc0c120e53494f5519507808a0cc233a6fa57aa442e713402820e98a8d437e18acdf2991a23903f53ca3ca7a92f3a9eb467f8422638fb3b4598d1819dcb51574e7004ab7c6323f1a7b0016c00d477beed073ec60750385b1812837f0643250c0aee10a1def4fc9372222a3347431b1672b629a4b93a3e3543b8a4b89d0021f84536952a2176303cd4f394a98fd10d678cb886f93793c83f6117bd5d56cb05162af2935c5e624f60a6479cc5e0db150db63e141549ea8afd3355da4dd4ce2b3457a9bd22b5fe2c8086178094b74e159b1d8c87be01c17d4e27d65d99babe2e0d697b6c63d006bfe740ea643b5f95b93c6636f312586103e86e2c9bdceabb3904900c67695298626062aadd59979b78b4f50c999b02fa57e4e24b4e08e2f501adcbe4935857a3f09fb1269af8828775a7b976e5929a3b9a3d44eb05aba75a58ecf1a6f61cdebf66db3556edca9fa593740780d496a0b6b0e518ccf1ffa375e52dff8eb8c5c00048f788a3a255853cba3fafb52ae9f1f2d8bdd97933276806c19770cc99aade0cae5063dfb4b67aabac8441ac20258a93a4501c93f5c3cd4ea622ab2d38e4c2acfbe6f90e17d5ebcd25922f47dad74166d4d6f2e7842aea3e1af5bac0c782260db28802d54c0465632c0fccfe87b5617afd8709a0fda7b0338ba12fe114f60f364885adf1a320edc68e15aea641ce09a0bdb2b9baf1a79b8c26b861312696eb596ca95f6f0606c902c5918d8fd93902b3f8743a1cd9cf4a4ae31e705f619876117099c2ef1732ca5a2aec1cc6c63f7d5c8ab1a9b0dbe6366cf8fb8a96c29d7cf56f6abed72ed5ae3debe9dee5374f97d8fc529b77b8a5379bfa4ff3f89ab38297ed8f417b89fed735a57bda05880205e09f401e54b8b9343d9d0a0da54a401908da8aee79475b27c76b70b772beaaad79f92c3b53d11da350d90bd16200191b926d9705edd0451d6734f09eac4bc82e4829a1c0835f9278398ed0c5b067f95fbf0e00ea70847bf865242a29fe7442e39f647603d8ae1d5ffc39d2d79484d390f7582e7ae1065268d0e98c2bf6844215f753425414c2956d829a169a23f492a20271cfedd5ea1e0b822c90236e1cfcbcfc83703212211393ecea1a712688380021de31fc72e3a267594839abfe3f9ac82064beed7762229899307520fb70b4ff42f629fa709cee52babe12d5d7752769028433dc050e78ccd1c4b4b905df87361b4e8eb23a6fc18533d9299c1fe1bce193de475f86a6b59cf6fd2dddd66fdfe8bf53d787d539ef7f2b81017e45eb800e3c51d5d718998e4a17a26608170c5bcce7371c27ea24ed3d51983edf761f86619552a6c80a4c0cc3e69a1abb44f778c555f81a6ee4135e823ed076b0cd07dd6c08d58557db05bd330d4bcf9e0cc9c4f0b037d4726365fc6b8867a08875631e97cc0e80ea9fcd300af26b8f490f67c9bf461fd392890bd6fb510b94242437cef7b61722043a2a5b7245b5126887f7078d816b988837b11b014bc4c7f09b36d076c1a83da9a70e1bbb5d3d69d73562db95d1457d4cd91aef179de83ccca8ec91023843e81e9dc8856764752748a698a569e5d23386b6a528c00274e9eb8a5a82f996c6c033161412458fda5cadea81629e29a3ec6a59ba453dc9b1ace1fee1d2559b7b18f5517e63f96c2e6584328762f20e4c91508428bf54cc7c4a5c2b22b75c41121724810e9db2bca67d0ecc85d3267d36539dadb7b973775073e9ef500131cff300a63f7eaa5dc50d41d0903302746106b33edababa1550a08fa48eccbc73c250d00491f0af3cd113eec1a4ccf9bb3b90f84d640c8858e901f6e05b1a43155a8b8d3175286154bcf9dd963a05ba4399af9868ea59c1a574080227c735a3d94ed35f37d36c3e20a8e86b9401b9b2aa69e753bebf333e5c977bb1401fff4037a38afa1a95392b700809d463dfa319515d6e1bdb7f33314925008f8ceaf5b4b66e5086412ffb3fc6f3ad7f95c060e83534433a174534bb23d9f1e24d570be3c8d5ac2ce208e6398d630bcc4f1162dc39f32f10b958833e9e01b93f368abcc06a9efba091e7756bf9fb2bc471d66ed65c10b6c53452419fe53e09eca8b5fc42b8596607072de208511a980fc95feccf4270995baa68722320b2a6817ee1daa8f3fa3a1b12b2fe6987d581a940ad1e4baece0163fcd42f829889f1a64281cbea6dde0095bf0e14ac764db1c22475158aa3f067f1783b885b931790efc2507077c28ca56045f01c45f7bf6b12268b0150fe504e52d396ab0b1b53fef0a5a000d1967b5d650f788b27864217e0d29e47eb1eeb34c9c4724c48391c4d65aaef318a9ba549852b1f5aabef0d8983b89a3515a1742515903dc0f1074c271ed080a560261c0a0b92dd2864d2cf5ad1523179d23855010948cd827b2181dc1b4e21aa9a865fa043394b5ce75b114ebf35985987c569da18f27136b4de2c391b30cf7e19c55d67abcd6a0efd951033fdc8e02fab7cabd21f85a01374c8b1264536a0bf67b7584db7c9a68774d4e43a5ed5cee4dca1aae2b2d52578a8b78da83ae313a9e83b776f43f17ca131bc239c58f35bcea415d9a750b04ed56d137cc3149496a1d4b660b8e9f44f24b5745d6419c1fab1e2419036efe29ae18071c2db5201e623c97c2b83190fe07360efaae63b6e4b7a1a297c1927edd9601d8d21f5f3a380fd1e4a596063f3de994435f2556e9209e4bf26e960295621e98fabeb9efced7d345d4d852850aacaa330091d69f34808ebae02453cbed818a7a08c1eeedd069514501c64f85a440ad285abeab13e9b32a220b1bea7dd67cd6747865674a51e4050cdb89ce4e0dadbf212bc986d4179e2eb91bddc9a233e11031bdc4e24bc2e424c9810e9a581c0fbda6808108ef41c74d98863158056cf93ec3dc11cba97993fb0bd7ed1f6d6dda84b79c7c607c2f1a32696201ada70fe0c14dc14dbe6c8395efcb56b13cedc15aaba2589a2044144bb57c27ac2dca053891ed217fd98b08c69c75257e770cbd679ff280f85605e24dfd8c6be610e3b80b6d8c33345c7e39b006c354654b254e908fb03f92d9ada53382db2613b21ffbeb891fc9587c64ca33806a2ebc86924113d6ca22b0a4464aa4e87ebe814da1c46db989e828131fe4a3b6f6435c1df820ed5d79faccb05731855bcde42a80d43e11a4c1e609b617aab71803440cf109ac5a5cbcdaacd58078dfa9665f24a0194aba5e3c0418a948d337935c9248237f434eba0c47930ce3cd1dec764252aa6c044ac213f9f048b862ac6c08a220386aba4025c55693bb8858c52687ae9f2a9ddece47bcf0973583d25f1a88e47a32f2b1521cba583bf543cebc068c909dc4e9479c7754cb2439b94cd2ba17ee14bb6d3379d30747656298299fb441eeaa678c6c3e622ef4032003a66923c41659c8f1a1075546273cb087807e16d8f07d36b9288208d9719e764b2f80dc4dfa4ee33cbfa2557b57bd6525e9a048040b7426d35380d7f563d769d812ffda81ce8dbc98e3fcd76ee19bbcb9597394c187c4d14d9bd5080ee6b784c0eab52c8fa5d36af31afa66ec235f93a46e1c0db241a3cf2dddd0ff0388f078b9bd77aa105062ea6b8137d2d53c3778a79a856627dfda8dbf3e87860a405ccd45c484b33b1ba734fd68f5bdc58a814149f454ee7258b119d7be5db1c5e879258804931047ad952b53905bd81a5a59dc55186539f6dc5a6eb480eec8c8923a1328f65386df66a3a13e380d0f6ce9984bb5dbe58b4b049eb2790e1c7d0c5c09fdd1a1963b6824c87e8ef537ae2ed9b981444591acdf35775c2b9b0523c279a5b22290f29b604f37633e018bf3564f8c9d3d7970d024eaa3a67c79fef694bbe96a87c92d5823654136c5667ae844aaade1d9e3c2d769acfd08b7d13a56a9a0c2a69e817803d486e5faae912394ce4101561d4fc2227e79a427a19218706d4cf22c4178b2f37a4e8adbfbf18b8e77c49576accf24080231ad677c0dcc683b247ca45bfc1dc10132d95be371321ede942b0799dacb0ef3efe4831afa8cd9052f7a0a1864a0a34d7f736c44d9040261fd6b21f12095e878b5ef0b3f336394403d92642936569b3290a8923c75ea74d26e0406310d4a3a52d8e9ace0a2d8a2721f63ae67df48b8e08e5bb44840f43df5243b78348a3851b8b5c57911c2699fe96eed88041b10152d752639f38b021934f9e810bf71bbc10d7e4d4a598571077d06d7e198868d29ce48f20142ebba5afd95d279053810367854b612c667e0d18a9ffefd057912b87cd45a79f498a429aa9aadedd5bd26070a5042a1e0977d460bc690b98fa9324893e785e8ef53a8ceb88bdfadf13bb322cad596127ab0e5a0303b2271a1f6939688924f0d16c6feb797516409bed06ee79be939ec1073097a2a16b26f372d02ecc2cc097f188d1ea87d98fbf521f2519e86a1e3f2d1525d42bc56bb799178c31571e34df112b3713044950c29631f9e885fcfe683ca4020d2d2f36d87930512b864aaab0a9a5d129a6a1a2ddb2e910d9463d54c0c99d43a769656e5dd9d893d65182de49ed13fb73071a7c36fc692f69cf09d775f3c1a4547f3fea65a85c8203af849130c0d031948098c17049a4518b49a665c4509b480cb8c0d68113d88b4365cbb8239ac10869d1c9d7100cb0bb6b679efe4d1dbf2967e26f7c0b652da3598c02e0c4e3ce96e959054e36b2912782b0ea37f38af85b09619486fbcd73ef577e7485af5dbce2250c1d225064d44c870f900f7086b33ad2af0c2b67f6c3cee51c746b809e71b2592d3074b86ab28eef535d02e7481cb97b7967dba70d0197fd8f3859d036d658a70a51b8e20517de22c12440764b4c87d508e8d471a8b6d94f2232404e7ae3db43c85f841c094fee30edbcc578b5349fe8b83d7cbe4cd6bdd6e3df0c47770f9193bdc64989bbc7cdc9856ef771bb6dde792f35830bef247b3b837bd0f97bbc593330b542fd964af8d90b24c22cf48169925a1408446b4321018ad059e5a882f6804764e1b7bd47f6114c4eb783889b6a8cfe7b57c45195b57a26542e799d484884b408b00d641fd35d1724d6752d5ad070a075baabeb8aad9cefc3ad83887a6408c60ac6806d33d0821f76ddaca8c06e1b9d1c81c97ff39fbb70a7a9001f0d526ff02bd89bf4e95210bcb22609a99c6cc92d2ffaf3ee1ec53c88ac3035ac571baa2f5437169d16fbe54347662b8713ae13c88528f03e3f7a48ea287f4771612ea8feb6991cce7e2c46f994d331b89af89d54db318a4afb7e30bc7468b876a55ceefd184fb73a41aba2bf6fff58a23502c938f085b45d71001138c3afdeeb7d042a3970ad0517977ffb4d6b7d5485b1396b1a544b0d874234d34ba1ebbb65e7837bb0a18750b2c29582ff2e1de383515c89b6a66317425de33ee37d2608c4b3dd29b52641319c1e294283ad0a46ddfa2d4253ca1022eb7cc0e2811bf71939eb21dea6b49e0c21cc22edf4526784f3b0ee85261ba9310369066e28f9ad4c9002b7f955fb43c0a46624042cb8de568afb9a0d44057c1a1f4aa5c6deea2290c9f7d23a903b42a3258f59ae5929e0a1e1fce528d8da970b4c594facfa5e19f2402ba9d7008e13815231aedf9f313361cfb58ea7572cb58905902b92b6cd7c2a89ad9dbe80e21bd42f740ffc51c76a5961a58c074b4faa1bb5c85db2b53a997d453adbab12dedd1bbbfa77d93bcfbabf3a483251539a5cc58ed27b07f79f4ebba479b029cb7fee0249b69f4fc43e0472c1bd72ae3bff0270a04ea95d1aa7d23ac31aa84b943a0a278c27aff4dae2c80f8f029812f70d86d6a917952991b187a7e4e875d4834ccb8bfd9cc8e64f2776afc574250bfc85696b99369b0c96155d0e83f3b8a1cf8d50fba2290b8675fd13898754824a89a1b9859f3a1129bfc458bbbaf58aad74166c9f16a13710eaac4d40f0657e9e1519e969f3c42d14f6756f4dac52876456a2a127faa0cb950e3cd14eee60bb4477126371f072b210b51f890e2445ef18f816f1d16bdbd75014395f6c8d082de63cdb9c4dfe6949549be95e4e774d26fb89023b007466cb7a8cb91a7256035779bdff99238098bb732f0c7daaab9c129832741bfe0bb0506223d8534c2669eac4ce85b59558a63076ca3497f6ab1e731da3b508098c2d1fc9f3d288427082d5b1e8a856975fe58773f5c50c9a305ec0370ea9d1cd702cce68adb5388529f4ded31ed0f6590157a5d73e2d55131b8d7dcd3d396e523c26b035f5aed3bc6bdb73917d6be58b5fccd500648415fd060390182f129fd3402c14a80ee503bcc49ac6e78a984ccd38bafdd3c975d1c58d18f4d4a747702ac52a8c74a999b8526b37c7a2a69785ebbf26b6379b850db3331b76e904f196ae5a9d7186ca57b4b776e7134d1e0b2f25ec11278e98afeab5d9ee2a3c7d48515b76f6646cd33e2c1515104f18b81c539d92deb1871977431b37e176f71f73d5f112787381283d6c394373ed0d8dda1da9b658348240689b26db62d9da17735818bb5df9d47b42b629528cccf738070a8f9fbe5cbed0e533928e8c7dd07666be9c47928c34da4759465fe2b18e2dbc696b1967fcbb0bcaacb4c9fac16a72322468534ecd0bb9acefbe0edf3c576da1e6a99ce5786062863340b39ad722ba1fc6fc59fe0a2fc201d27d2417b1ed480bcab5f7cc8d882161e66c1d849d906d1527117dc10e62f354ad220845d5dea4a4c82d3b56e66899b3942b19b8776cd506908b630bec3f3130a8d217c96693d8f9172fc9f488f74f00369dfff1bc62b5cad3c08b8276dab810889dfde14333f20e3c7c241d808d6fdf2ff480aa744f190739a7bef08cf41975ff94feed8d250f0ee6d1ebb4fe479a178f7eca6f65c11a3bd0a40462450286759b60ecfa9c21e44126b9870d96a599b8cdd346fbfb56f9aeb61e11aa1e68a4b6a588927959454a22c8a4db22701515bad996268ef5770147c446777e3be9938a3447edda581e33871e93852632225de62c5b6995bd166ef1ae223c1d64e0657ec85feaa2b287ba67adb724561b97402bf2d7de59ac1352e907cbe95529397341a3275813a01200099cc6e23a6a1faf73a394b7422f13c923d764040f2dfbaedbf8cd324a6789d8ca7b0c1ee15f21291c3a0e7b327b9621bf9ea7c4bb0a134d43edcf0cc2d687bfd140af017a0450f99ed9be9fa7213101be97cce0930d30b1c22ef25f03a906e5e5a17283998146b125d104f6d687b892988a4cd77e65e0018edb27590a6b8948965fcf4baffd26a8e470a8c9922191b98926bc11773d0767440a5722eaf15f70775313c982d9771c988fbac48c316c6d51b806e87e185373117d1ead412f9f27973531ab7ef810fcf79e0c51dca3672f4c8ef9871afdac6f39c7070d04b44bbf61a5619a7f44d93ef2b2feee4200db17bdb34062f294039e145092a9859fd01195802f82992ec4bb041772e44c7a55634b21fc179b17490186c5f561d96312647fa19b0d3a2ea50d2e149554a3f76f3a5b61909ab793115cb4bcce0cce510809ff329f2d447b4bef42b32ab2483fb17d148c5bceb7a7c1e88e383f1928e01db05affdaaa23ee2e21338b9e40022b1077a051c67a89e9d1e8089b027b8dd172de11e1d7a664edfc0cb02f6f0811fea7530f3fb8edb3be4236ef1e46df982ea7ee6b62cb2bae542ab546774d07acd0ddefb99a2b8ba7865cab5df1ecf2fa27512f379a5f15b538c0781478171ccfa8d6ee8f293578807efbb594fa889b8b1d0cc6bb2a62fb344c3f40eb5d6966c50cb202e0c84a1fec7cc49f12be04c432bed8ff8a8020f900a058f5eeee0044d07a9a8eb11f0b9346bcad579ed28fbf56a57b6664065576c3f94331090df0bdba3cc4f5184325fa7532fe66046f183d07f993ca490727e10de3fc6c398b971c5afc16b20f7ae8d471de07272165881383ea71d3957cb65b1919b159ebeb0bdc3a7ab3adc220a39f5303f1b4e605ca63f3ac46c37cf440473c65a0ee7220d5e0492e69203f08912c2404245340da091d9ed87920014c5759dd35068bcdc1ab815f80ba5525e7a6513011790eba7d2e6efbded23ab7ac0778867e6e4e390bb94e0c2e593b5f920c82b8ec8efe57258bd598c4f31083bfab5d8756384dcd4d0dfa9c754d21f90c10353525fc49ec12abad2564474b5b0cb196eb343ae794af3e1dee0a6d84f0cf5e0ecb522f8f882936fd5e8ae2a8248b8f8bd4e908a1c8fcdc18704d7f1b721a5ba85eb3e02b916aad4fcb42f0d2bf1507d856ef0d6cbbee316cc1e810a0154790e99646b987a4301656bc51b4d31a242fcef20412eb31dd426d5b3d3db1d94316b52de5e404428d863b4466f201cc1d2d8f2f290acee81374b93b53f6fdc43afd84eab250feb9a5de62d4bcef0197fb44e271455f0d5fbe612c68ceacbb3179f4d0c328d349826a01e038184078b24bc41009ab28f0921ff3faeefbdbbd93885f8dd925eae955bc6a6934fdcd42df910ac6fed53be14d8712aeb59b7ada3fda7b09a0fb6e0b11dc247206658e365f1ecd7afa9e3e558f82204e00b5ad93e093d60c9de135f90f9d5b5353e38e3208221a55002c11d4a8c2075fb5389362660ddf5d1d24a6943980917476a6f193fd197ef3a1de37a411c776ed0057d8b9dcad9bf5a48160506f6a9609d728e47888341f11efa336e80b026636e4919753473a67d049aa05880cd4ec0931997a338d99219d7ba630dbc4fbc6f6598dab74c11d767e8962b14411baa42a0b0e8aa2f0263b3f9c514b84e8b219d3a403ded7ba863bdd7c59b3800077da26ea65ae135038f7bfab5abe9b6d4352dbf663b1d0fee06907c46506850f01cd04592754681510b234b9db13b635d6800b23c55e2e8a2300dc632c6b2b1a39f1bd41ea7da50094f4efcc206e1bea69d41b567c435b62b1fd832bc2aa0f6b874d7747e98b3295da36a730296969bf774ec636466d792f05935e522f10ba2e37bb347c744a950eaf4e79e3a59e5b3beb6be05f8b4d179aa11a08f18b941aa2984a4504ad8c38c85722fac1a9802a38a4a6123229addffb348decddb686b11b6d0434eee5a4041f7d56848380af7cd0c5b9d283461b9fee88058512da722d6a765b5f7097a173b15d949355b22a4b0b5beb6e75d973b4359a3e456a64e17fc5d77d7adb4ec553dd5225e4c6b16a939853d5c7819ad2fe8705d7dc84383730170fc79decd94053132e681dcc319e0763a49e050f0cf82edff27785f9ed13ee5aca70e73c20013197f42425d34b4a54d076b597941906f9d8c72e1c9cf823ea8111ef9062ed9b5b7a8add8c95d3b07927b8a75365a481a62ccbce9a941a6d72e87d0e9776d0a038a290fb434523f8611e1567a1acb71778b6df53e423ad683d93cc1d7484d0e61f2d5c811d40cf0f9a48439f829bbebdb337a006d771e248071006fe8e28a2626fbabe33c0490575ff0f3d8cf250e56b7edeaa631d0d66e3faa43064ea33b21bff28aaf2fbbe35272849f53393711f48f81db9f52b9f8e24c0e3b4223ae0f8dc814a08a9b6f86d75a0dfd9e81ecb7c9b6782f98aadc362295be815cf18b52e855293570401961dd8c81ffcb4b6b3a157e94f5affc5ce60150f7d443966a350dd00a3e688fcf274bcb54d4261f761dc060c1208d248659a396c104cb1a12f050453c977379d8dde0defd9dcb73df79eeb12b9b6a78da857df4960a5ef93f8113eaf734024b5bc6d0fb322d0eac73e2906591d1a8114077e46804ff96e33af93f10835a8d0f011f5e0915601a80575e802080003cfdc32c98c4f1294eb12ba7f75c7cae64e48983cf6b96fa9ad5b384dfffb18e869adee0ff46531c993fef135b781ce3fbd5b59673e1f5bee8250dd747a7c3f1918e3e35e0d906c92bc0cbc30d5581892f1fc4a5bd2a7e043490e9c68532705b66aa1f5154357d8c2e08154db0486fc180ca47e4baf34dd3085d94c1bcbcaa3a0664e0a8462005ed507840c6114eb10a92b675468026e797d1b4c021f48cfbfba00e88befb562f66a68370f7548011db30156f6179706b241ce8fd303b1c0fdbf8a84a8b4929b6c9d80554776ac0edcaa93bbf6049cf427085ac845104c9b2c8515f20fd0439528c10726d0e0370163c9dcda09cdb2204a2daa445f35b42d6bab5888a8d549f48423d83def4f6ca034d8f2d45d1e257032e5858aaa82e29c0586846f6e0d2696a26d11ae4b8b50bfe5aaa3986c4f7c6b971fa9ba3b46b58caed94b7ddad6437e22f5b74ab1f5b8a4acbca97a7e9029f99573df261eec0443fd2868dffb2113a4a91cde461258b34a158dd8eb1aa9f20619b17ce291354592b8dd5265a06bb47152db3745f384919432785a8b7b94140bce6502c47b6b02f4301d7f7aa857e9dd679f82d5dddf531118bb057a20cd87d9c6e9679b0af7055db19f9fc0e4e63b29ed0eb38d3f438dbb848fa41eaf2203fa679c6ae4d10b98490de84291fb8780a49addb80c90fac37674d49f255610b9598af016722d742b11be502bf4a7f504d205ef7019cd06f3afdc52f0f922ad87b920ab244c973521ff45d286574448f37bfcee2a1ae1fab1d0864acda6a10680216b153b2718c7e59f4dc8a1841b4d79a2e6d1053692a106ab0649275045d6d408702aea6504894d0687dfa1ee129b807a6259d772b570242bb5dac8d5e621e7a6b6daf907c43730a92660f41e0bcd2bf68a95db77a84924cb0123cbc521a38c393f5f285be4813ce8537b39c639950227049401ce33654db9c79bf8ffb42e96bd011e19996486b10110a93b90a951819604dfe6cbc2120b5945c9978664ffed419c472a5792fd4b266b93b5c3ffa2163e569c9f50f87c6a4ac1e97bdf0d7ec2d1183a20721406bb078266171bbba0f3023c5d9aa8c962d764a2bcb2143d3e4feec7a9607d00551a520d344cc3bbf5a5e46f7ac3936a9ad2f0cfbf553743608fdce73daf2d5707525ec1eb3bafc99f274f0dccc3a5d724fc062c258e869ffd089be174d014c2071ac4baf5d9a90c74162f099ade9bad1bea32f8cbaba02289e62741eea70fefdfcd46f27055f7c7cb33da8dc90e4ab458c2a6c418385e8c77b4adaacde2b4506de22a453d88ad062c28c3cea6405726ca21e8058045a15ce8819d2d0faf3842e8cac9bbf64adc4b6dbceb93f67ca3f5b94e9e1bdba24207ad63a5544ea978d530cc04a7e19a31c30b5b2b4dc856ad7c42c9e2e3c3e1cff746cb26ac089de7184a2227fe8db0f9423adb6851645b80372d7597cb9051ef72e3ac1b038390c9bd3aeda05401988be0f4f780e588f799f7b4dacb2e20579f542283848a5a431c4d3b384730aaff08ddbe9f0f00ad7784efdc1f5ae34e36518f2c2a7caaa574c7c9e76e0b21293a8be389fd9ed183cf63220e25615f2a0f098380b3c11e88d0a0453cc5fca9198d3a8d7ac464d437395dcee5564a7a973c2f4fb7fe887117b0ec13b4163f4ceff58a1a6d117a6e421060d9269ded657e884fcb164091603ae1bb71f3ba570b0dd128410bd929696e6d75709492fcd2ff7cc237544f529d4074198643ec49b9b391ed2f481534729a356e32b18ac6bfb46985c03613f3666d869ecc4172af40be1d26a1dab36a3551e1a5123c79d5ca0741cd550ee1788b26679722b8689609ab945462984281e2899639856a362a2fedae4021394e05988d1c273739d467aeecf0401518f38f0117a0232e195c24894b8cdc2bfb52066e9605fa1ac80233f3f3f7aff79a6527db4cd39b72e1c74ff1d31018ffc465721232c3a9660a9a7a79e3b8bef9b0007749bf5a465ac7e951b20127aacda2157e3c8a695cf11dcbc46a3578cdaefda1cf14f99a299eba1772cd95cbaa6aba529924ff49b4c4fb94fc75bbf161a4c8ba591dedc12e0164ad0fe40ca54eef3295bd4597613c668447a7383853224235d2fb21f8a2c33770f0754c8d2cb975e20bc602de1daebd8429bf849b7a247880d3e818e8907eafa12af541791e9b2129a9f05e7e8bf7035d16c98fa926ef41e59e8f34ef6e0c87a919c7248c3f022607a4c8a0453a66bb2426ffaf05021b8e65142a438475a1c859018198fe327d08cbf515d05fb334a47b146c9abd7c968e5964261f497961aba12e36b815f5aa391b8e5ee12428a66efa3abe2a0e67bd6f3b1647ce73764d2b328f8529c3141e239ffe72539c53a33da814c5528538cc600043d7097b3d975a26faa372546f6e93e0c9a1fb543d051cf9de28e583139a55587a6d8babcc9caede0974596acd3caa1f22a31459c92a0b7bbe4e64f2a9997250fa1596384db8a6998b4fb72cf96890089e103dd38e9dc6fcf1b30d30bf99038b8cc5f2269762707cb47f2d9c0809c7708ad180c580f1b8e4e96d1c9b9ab6730661ccdb5aab0bbcc800f2ab3d2fbe835b00b6522d4d29feb8c2524633d58b3fbc2b6f36947e40223bb0cb2e7ddb40abae027c594c4c3010d603179acf45542329a29f9f2850df0f616343d46ebf98ddbeec40673e30a2738518bde062d9da2d66b76d513285dd0534cc42456d82f1c5d24caa126101fbbb9e1bedf14182f5dd64eab11d42012d42c5f041bed73bf534833babea877f30650322d5c07eee950b67c78d4ee6b7a6f6c301a3063decca4ac1089fbed3bc9791cf033294bc5eee91440104fccdabf09f27969f772898dd73783e7731a5a02cd901404b337f3f56f04f6dc89d1549265c85e6c0243bdaa2933c041b5c51c28221075f9eea2bce1a38d4cdfc583532b1e27cadf67cb336d28527d6b17f4916ce6749b909d440c660239b98c35a7e8d08112b66b7dd511f734b3e8257fe5584a710659922c8813254e604249f1d541d3789e31c905886ec53d4f93c25263942a08fcbec4d3fe71c1866e3991d5f1b614ac7c333a6a227b187e8034109bd0f937d607b8e84c0e0f4c1170a5b8629a1f6d26fb597f5d1dfde547c9ef810c5b1f65b760c8e9721bdfc744e748ab1d57bce7ee16b8b48927b00eb0068d836e267c80fc2ce6c2b896230422a7e566218fc267a3fd65eea9312bef6d6c92eba240d4c3539a898ab3287f6d85279c435265867ea859a6837428f9ce47f8b43240d449323d352e4ba868b6d366a98a7ed76638419143adef3117c975d647d1cc4d681ff0add97415648cd6e868e90c4eea7030c66b2d694dfcc27a2e56d143500a0f20bf0d22fa827323e8eb2a44861932f1a13e19063bc38a23f7ba008298c70fc40313c88b3c75c7f759c771abd7f80ca5dbe83c243b4a2e22be00d8f0c90891925bc6bc6b7fd545f19ee9bc503f345b7596ef5e0822e7a28cd0366f7cb30f6ef928c119ace073234960c3a6a5f93238abf4bc179b5f9b382cd046980c1a8513be041fc96c375f8c823805df51232cd744dc09c815b2b8c701f1ef6a3b8e46c632aea623cdae28239419d90033c50965503783512e75539f03b6a667d1e1d5860036290669adf645f632e76045790a78d45781547dbb547e2bda77ecb964af112ff7bd105f4bddd6f5c463466748c097e46492f5ca08f4e0a4cbcb1b52766ba5464162770d359fba39bcc537c2c83e25956e02b4708441a1b2f2278ddfd6ad4b47a3bba231e971db07044088d9ce22b8044768101bab48ca70aa8e3b902a8b66a962ba14195cb69b8d83d34ea96368f953939d4b8ae984ac0e178f738278a9e7277d26d911e92e74210cac6033e588aeea3e76d1862944c825a09aadb50b31e12ca70df20bad1118e3d5bcec15e79501a56b6c8d3dea4d79e58404f974ae1f09bdc588880de9e0194981583d0c54b57cf4309e5843355820ed73392b904d3572f4e00e86c83d96a3de712bbd595a160e959e8fc8e2f3b3ec341d08517a74786b8c1cbaa1212b06bba3490da3353dc3717fa6b12a887555dca739ffda5d8da40010c29b75bbc74bc2b1b388364bbf07c77cc91de6c7b43598a33577ef43656dfd132ac303450aa1bcdeaee4a81701ae9d29b97c5a4354b1c0b24b58fcbd833c53d6da85ce06a457b9e7131d1e19047af4ca715dc619c5e7f6cb5be016e78ce6e2dc40ca8920b9ff667b5ba9942024e1a94096f3fa50be5da17f3cd7b7e210cb35bce0e80393b9eaed9480f34aa25f3477154d6c7c330cd6d2d376ebd331e7b641eaa6e9386a9cda3c779cea06359664154d8c6d982057449ddcfff2ef78470feb6193f3b653403fa01f2821c2311ae7eddfefdd2315efe75faaee0eb25278082a64cea27d77d284cdcdfe3119d0a981147db24092fa074d468e0fb2713c574ce48480e707dd80e692385e2325430035be387023b1394bd06d9aee08ee3e095c24c89567642cfce92f2b5eebfaeccc691cf47f4b71e22cc73e990e2f4f5098b22fbebf33a561265f70fdbe2a0c7f48d636b932b3cb1a8fc0aa798ff4e3e1cd3a1aae99a65566dd3e1c2d05fa8f227d890f37cd8758fe66411c488a0c641ea9a9630ee59039c521f7ce0330b1383095263b43658eb3aa23b9473b1ec1ccfffbd355451c375d99a695417b97111bd813d60c31d0b1f0e7bea843b14938695c2b3cb6b73296ae210531b5be77c1249337102cb03a277ca6f5a05ebb5fd436d2d22087c0c97209db711ab4d077c94dcd21f1f02f9c99fd1184b0b099940caa8fbfeae2ea12d8fb44762bac5b81764dcd4842dd02908513311f43852631771fcfe31435f4dae51b73f92374c9fd823d85b1c5ace406bad0c081d5924eb8f96f872891d0bb20cdafaa0aaed5bfedc8fe37e0dbf0aaada11758fdcd36821c502591653dd9ebd489d7fcfe00c4b1f60f2fde3734e1881b15d37501994677065e5e71e3b1bf128845730bbc63558302dc37369005df0c3b99ddd223527f3b8065ee8c9cfd7b19b7fc721cd13d9a5975187b028224382de36f17e2aca028992dc6d0d045efe7729ee1f4023fa86ff64c4aaa8312628151d2136cd68231e6a2f256fc2d4a996940907a67cf7c9f2bc75cd07229b752febd8fed2a884c8216d014acd6f270fd14dffee6567c712428514238013f4c6fe12c19176c7be268758fe90ced696c614f4637f6b457e862f7906e2cd6618daca3543282a4ed763d9efa6676443615f0f1a63e481bea4781434068f414899eac87f643af7dba074562c428e1c81541a12bfb5d7ffebbf82686446233c8428b1c395c978264e3b827f682acdac43db6bed7589a01625c6965a3224abb8602abd8fca8e0d437cafa4d606a2f2985fe07459f03cd0a85b12986edfaf11ad2a8cea0f1cdd5164eb95c954b2c4809a775681ed5e01de8b0093245f0fc13264372d259258b13ca44e96a7b67ae975ad0432087d40e95d750abc024032dc486ecc6728d6bad5db8a2cb487091a23902df25128b0d1821a9123454c033914e83d3403b4a3614c20966a451274e5ddb0996508e0394b9d06ae6bc7d81e39557d73d4642d4e3af7fc932f849671069610efa503106ccc2821332c7621fe895678da22a2b0f31d01b92f9b0a916ea3f7b6cdaed78eaffc04efdbe51efeb9980900446e32afa4b8dbd762382ebad5332d3716842f3417a02fd7d468b3a8191074870102086498ca471f4b8ab39d9d73518ad0f37e313ba4b23194a58d286ff666c8f0e5a2a21a7d0bfafa1b044d8dc300850755d6fb133e26847ad6d68f66dacf14ae3d4ed6f5730c32d56f71874f89dacbc397df3e801531b10fe2901fa7da44d8dd923b12cc986e4de2188a9c6fa2c825b40a592e9c18120432dd18e08613bd6f245c0458cbdbac832d4edf7f0b81b9086919fc491cde0a36deadd55df504981d8ef8737ba4c28c77cde890548d8a7e279f831509030931f201756cb4ea9e07b90db2a057c14cb0c6ee6dc250b1a66c38026fac11133fb1375b296bd3265f1b830d7d2fe7dac3e8ab644c9a8645dbb6225e02febd1aed8858cbd27f50910a3a82c37c6e9c3feef0921840af632f54adea5fc07b3835bf650aec36bfbac5fa2fcae2f10a2f03344d8c28b8fd72ccbc058b07b7a40c5a43a773c108d13c8876e84aacf005891cee207a16a51e88f936cb9863a1c13cf07256fbd257840582446433567bdbce7fcb0b12e1decfccdf219b17371ad8d4e2a74bba94abd94c0dff52d8781f6efc8724fc809014a23f1c616698d164c408a0a3b78fa09870be9ea392c1bc00a1c96bc40a953e04e6fba102274e715df4550f031ec528cdb4d7752e1b5771e8052d43312e023e7eac02d5f1904c66652d739bc885b2975ffb10a4c9421337d3efa4c3ae8cad20b4984137ecab43b5b41699da51849dd7a778ada4792b9b5d7649a908382d34c9c046fd0cd78a1bb857a1c1ee4834c9421a9eafa856ff0d101e7e10a3f6772e964b6b84f05b865df2247d741a0b3e910b6199cf8e200d62f6115e8039aae3bd0f354cd7fbdcbe2433ac6fe0da7f5344686a265752fad1205530f0b62b4d292c95bd1e3413de76461d1a1b98d72d600fe05b3e944792b8a75bd15269bff4269d0df04b4a8c4c3bd75b40f390ad95e2bd40fc847afd8f63434a43ecf28e3bb64970ac9ad2fa2ce50dde80c2c996cc69cd76c17a17c9cac88b15775df8b4e90d006672f0f835dfc6bbef14dc095765eaa562240007a3b433c44d252c505b77e18fe8e74992e8c8f0b8b9599bdd44f891bc697d5382c92d23b44a8e4eb81d6796b00829a6f8bf2b1a231e80c489aa3c122a30e86548a7c666590e35ed2baf1ce8aaf11a8a62dbd9b3ff7f6125a599687dd2f7f51b22fa66c102e8a5870a4a2d337049f36736f90971bef619e552eaca188f8226211016de18b9118a61c35c88439f7e9bb1033cbc8594293e62451278dc55fa534833a6f830a1c8b19f12d6a62d37e05c303f50f628ec09d0bfe8495c99151c23014f4f86432723119f0e4bc8da2da3a5ef2ca3bd4cd5a58d61943be431e8c0da28ee47da106d927a35bdff1d553756cae9c702f0e37eee3aade841c1566ce9444080820369df9d39e6ebe4a8f2b841b38cfd21b7d75aa7633fd56903294b514da0a96e7b307c116534e6c126afe8f11d78b7f705ce6b68d51051cb3e7dd03190bf5c847fc20244403caf12d084f9deb1ea1c9a8f34d3dafd1d9a0c21750ecbfd6838d9040652897212c3a577413d174b9ce454bb50476a19cf8e135ef5a5795f926442686ec0cba2fbb5f2f4a022726c4276f5523a97860d6b47a287645ae641c0ab12287fe6d79588d0ee032efbe4967845ebbd67e1d20021f21dc4be54ebd1079c1942f9e4de45f0c7e159d714c5b6916b859e9b432b2f6ea7abc12fa378cd6bfbe5d4a048e716b34228fb6924fbfffd907504aa4fa24ca68fa58633bcc604a81ba51bd57ec95d3fad2c9add00b92ddf1aacac67261dc03e5b858a91cca99f117211d7d0575753f06661292ac618593bd0958348b597dc4ffa15bc163fd8137b4dd96ce37dd4fb8336cb6251c7a7f0b8e83332bbbdb4bf8ec78441ef11a2d780e7cf98dbe7825c0a32e98750f7d869e417995c2199c5e6a5fcf6760a56c5300acb0b90c2c5f0c7e77dc0b04ac6c208b98ee2085cbd47004571d3da1925f9bfdbec00927ba588276392fda9ff3556864d0e967bceabb3f495f906110caca7f54590be0bb6d0d00521c6305c55553af12acc7a0031299ac7cfeb9a9bfdd95df1a34001bbf7443c96284c03ee9e353fb337b20170a65b581fe825db8f443a14e8de16d454dfb3da37bcac70884b03d7c8d85dacb50d6847874d76c11fd4a6890470756fa92fda231cbc508939343daf203336c45e75e61115b0c104deb840074dbae016748d59e58b9ee1c84da36b7ef9268f83b8ce06ef4230ff439c6e3ea2972b6f017029a2cd171b12ff7b0fc7f162632a17deb4ff2032c34b23e568c22822b9dd0bf098b20ce1c0ca65728f9cc0be28bfbb06efabe4aa1d606889e0e784cdc997f79f06b7654f87a5b433c6c69904b7bc284a75f3fea19f26a280b259952e3392f58207b6e60ba47e617b87daa8d58bdf5ae238e23ab4ec1f5601a6c994eb41a4cd20894c43b8164a35e290aae6e23366db10c533c05a066814dc49365b31519fb76f7ba1d31b8775839e8890519b5b9778860290c24d6e88b8f304b2bedecda96dc643ae1405e7ae5a3c0f65d064e17833f1733bc6653a93bac42e53c077afbde1e028184dcab29fdfb891dc2bc5324e9e7812b9628c5d6e832451b2ae474154866f0138b50106e441ad15a256005bb1feb6b13c7ab58260f8e55587077c0fc9282b1d129154f21638df19cb8afec349812527f866c4bec2bdf0d52253d5f930547a4e9dc02d195ceb5498178b4b320cf8602f9538e6ff1f1dff8fcb3c6e260f5b63c2a4f7ae95a9817ca6f18a47e3ae93db29563960538139cbee6c3507472776fd18032d725db8322414f6b87e16ec6788a9b026f933d7bb69c8820833a293b75817db6c058cec819f3e6eed7579fa6a08b64071f19826738a5e0a9a04c3a2c0132cdc271a202c27cb631c5f4dd5e22de1769c02a67ff004a0fd12eda04f0f2034fb33bae5e57b4126a68825e7f11ff84b187e995285ee40874ba58e56eaad7669c7e588016601d7dad173c3eb7bf8c7889d92f8860472986fdf5f00c186cc9ccc783642776fe59cff4d643eb0c8aafad89f759eac96340fc8ddddb87da7ed1bac48a0fdfbf243579cbe3bbd124cb8bf57f33b64d7b3cb5e69d83e219fc8e232c55e667ebe3748f584e4a561015b9f95c3ea0670201103582c1e8c5b1a3045ee15b16305585be2519d79c146bbb3a3c217bfba6d504d3d37b4a38c8b5f65f6eed4a7e902caac6832c067ffc949cfbd6b5eb63a8fab6fffdfb95770df9d3e14700d148141ea1d468a863a1de2082308bcdee62dd45c6c5c2d1ccae1c4641b3fb5a05475fe6b90ae5dff9472309c4df0d51190dba74547a85b17e401d20a2ea81c487198f26e586a9f3cee5588a5ef855d51a5b3f9d85ad442e865ac6957fff1af1d09acbc817cde05cac769ad69be5aece2480cd791a8473e6efa8c8cccf402cbaf6c77452d87b1f2d658316de4f14d0b431c89f6df5ccd9d4e5a5879563483f66c3ce1f362a625b0f936dc5cba4e8509d3c938cf521f5e1e7b98cb23c367254e4d37b3bb317c2b5d575e19aa69cceaa4472169e337aac61dea7b0e9f3ee1db7b5c14ba64cf040d3c39b9881f6cdfa1aae83bae21e70a213372a21653c8928f456df8f1c0289d046ba2c742affb0640d7839bef5bc6c96f7f5a129ec1ea0ad5eea171cd0af654d9c0e069e2133ea02f63d729d75d9b0f36145a047ac9dc28602d9173f1b9fdf5ca77767608b4a861d6cb27c798a1fae811d9eb566693668e24d112e1ab493f3f362c5a3a24fc7240757d8d06d46749b573fb91b94aa84946bd3b70670f4411d3eb859f5d0e9b2f9d3212ee756d659dd6b379b6b328e4919e050f7c4af8609c512aeb39fc69c0b16bfebcb9576d59aec58ca84d4a8ac81292b9f98e0d5db7bd69dc59a37be0df0ada7bec95893d539987044b7ddeb633d921348c5e100d4f55238151380edb6a1c4c999a7afbabbd96cc1579610b9fd98341a2c3eb7026ea53bb531622cf7cda247f93444e6475f9ca49afbedb7f0aeed010ec43e67722801244aa82d1966f685bd36f7320d171e40ea1351ad3521734c7c9ca58bd365394f4a2fe067f392619f5ebfeefd80258fdec30fbd514c16f760b0ad60724b50968d56b616f2c1ea02ea977bbb05776c0a2e36827108aff6b402e5459c79646f8718ecbe01149a4ef18a194a84c2c41e223846c9125be6b647365635099fa34b46293e86e6193c9877f162dc017b958b4d4e60ba820fd37cd4bc3cbbff82acaf912d68ec3c3809fd308d7f651f51b692cb4d22edc18446b0d1558a3fd2193cb99214e2c1812957ea538dd13f0f2351cb58616f9d9dceb86118a2e0b81465a87d21d5cf31b26bb86a48490c750e6700301fb43be1ad21497cd2b437d8fa7cc19d95793ca559611400e87b4b313e0db23656488c2e002fc6ce162e1e132a42781eced4c0afb555eb791f399024eedbfe7dc6f773cc94b2bc494fdcbeb6cdb4e8234b0f21b1936a10f3d295e31a55147b0303663db8ce90e16c61f456a9a0d552e397135d497dfb396488295323cb5f1245361cc441fb75321b0469c84a7a7527d87478ab91c0bbaebb12d08a0f11ed41e17abefa0d703e6508460a6a8e4e75a3b5084fac315f3265ec7b60d98fd54c6e89d0cca9b9ef53680e282500cd2348318f0c6007bfa71b4f4c06e2c31f7b018c7d074a18c0c0d8f9af65765bfa56beda3dd7233bd7e45d76a65692b8d4ac6c7c58dbd1b6be2acfb454218d122440135fdf679460a1df3e311229c34a0340ae61429a4ba547d6a3fc919b9a0b8024f7f4f430c7e300a96259661d44e9e39a387c3f9d23edd5e3781da21ae2205ab0d8c364f0902a2cd543bc6708ec34587321bc2693ce331fcd4d9be403a36177595f6514d39537ce8155bcecb0370175babee92310714470dc5e3685494540e6eef9750de7301f02a21f3a9d5789873aa70da4ed9d41a6934ff369c28c7adb3b8124bd3871dc2fb540827909524dbfbafa9fd205c24758ed2a9c90146d21655adcf8804cd0260d9f1673fa349e9a02a61cc302676fbfdc22afad221d84cfc2329345562c75e0dab5861f73ee587e1bbd4c5163e00363346dc149e4cc00c829c1686219ea5e33db93688685091e7358ec2f215fa6d763a9d691278dda695edf0151643a61f687afcdd168559858892d04388e9b251eaee713ac5241ae2d712da03ae05f2cb0f014b0fad0bf2b3cd2c6c0173c2ffe015162e9d532af96f9e7ce137b024594e0cf67b0fa154742415a0affa9dedcbd23491a876cd7cb5629c4102c875593c5721550794b9142fb2592473712b04b800a3215d763bc289a57ee310b34bde7bfa17352aa3639271f7cb148de0d0289f658c5cc1f62afea07e0fe741a8fd5774cc1cd144ed6e8e17f9a7a09df012b5e1e82074ae1f35b5185c1a6a98614a0394b50ac9b95a2b59cc2cb4f1d889fa962f22f8e01bb3a6db895b124acd5380f40010829e9421a2a6aa9c1341bb237f4711a94fdaf6bec021787bad1e66ac9aff6c202d3b10eacd0f1bf9eb2788a7706cdd4e10fd7b4c7302ca430232600acecd98609bd&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-default&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-default&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-default&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-default&#34;&gt;您好, 这里需要密码.&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.17lai.site/posts/509c7bd3/</guid>
            <title>自动曝光原理</title>
            <link>https://blog.17lai.site/posts/509c7bd3/</link>
            <category>3a</category>
            <category>ae</category>
            <category>image</category>
            <pubDate>Tue, 14 Sep 2021 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;自动曝光的原理&#34;&gt;自动曝光的原理&lt;/h2&gt;
&lt;p&gt;曝光是摄影中十分重要的一个环节，它决定了一张图片的明暗，如下图所示，第一张图片太暗，而第三种图片太亮。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/09/1420210914131959.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;曝光由什么来决定&#34;&gt;&lt;strong&gt;曝光由什么来决定&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;使用过数码相机的人都知道曝光由光圈、曝光时间、ISO三者共同决定，详细的关系就不赘述。&lt;/p&gt;
&lt;h3 id=&#34;光圈：控制进光量；&#34;&gt;&lt;strong&gt;光圈&lt;/strong&gt;：控制进光量；&lt;/h3&gt;
&lt;h3 id=&#34;曝光时间：光到达的时间长度；&#34;&gt;&lt;strong&gt;曝光时间&lt;/strong&gt;：光到达的时间长度；&lt;/h3&gt;
&lt;h3 id=&#34;ISO：增益；&#34;&gt;&lt;strong&gt;ISO&lt;/strong&gt;：增益；&lt;/h3&gt;
&lt;p&gt;但是对于手机以及其他电子产品使用的微型摄像头，光圈大小是固定的，所以手机拍照的曝光由&lt;strong&gt;曝光时间&lt;/strong&gt;和**增益(ISO)**来控制。&lt;/p&gt;
&lt;h2 id=&#34;什么是自动曝光&#34;&gt;&lt;strong&gt;什么是自动曝光&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;数码相机中有一种手动模式，可手动设置光圈、曝光时间、ISO来控制曝光，该模式的使用对摄影师的要求会比较高。另外 数码相机的全自动模式、光圈优先模式、快门优先模式以及手机等电子产品的曝光都属于自动曝光。&lt;/p&gt;
&lt;p&gt;自动曝光就是相机代替人的操作，自动调节曝光时间、光圈、ISO进行曝光，使得所摄物体亮度正常。这句话解释起来很简单，但是存在两个难点问题：第一，相机不如人眼这样可以直观的分辨图像明暗，如何判断这幅图像是否亮度合适；第二，如何调整曝光时间、光圈、ISO,这三者调节的比例。&lt;/p&gt;
&lt;h2 id=&#34;自动曝光的标准&#34;&gt;&lt;strong&gt;自动曝光的标准&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;在此之前需要了解物体的亮度与色彩是由物体对光线的反射率来决定的。例如纯黑色的放射率是0，纯白色的反射率是100%，处于中间的灰度的反射率是18%，这就是18%中间灰度。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/09/1420210914132002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;具有一定反射率的物体在最终的图像中被还原到了其相应的灰度级，这就意味着达到了正确的曝光。例如摄影师们通常在拍摄之前使用中性灰卡测试曝光是否正常。&lt;/p&gt;
&lt;p&gt;但是相机在各种场景下无法识别物体的反射率，因此采用了一个简单粗暴而又行之有效的方法，统一将图像整体平均亮度设置为中性灰的亮度。该方法基于**科学家认为自然界的平均反射率是18%**这一理论。当然，这个方法也不是走遍天下都不怕，比如拍摄雪景时需要增加曝光补偿，不然会偏暗，因为雪景的亮度远远大于中性灰度。这也就是摄影中的一句口诀的由来“白增黑减”。&lt;/p&gt;
&lt;h2 id=&#34;自动曝光算法&#34;&gt;&lt;strong&gt;自动曝光算法&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;上面已经讲了自动曝光的标准，也就确立了曝光目标，要达到这一目标还要自动曝光算法来实现。&lt;/p&gt;
&lt;p&gt;目前比较常见的算法有平均亮度法、权重均值法、亮度直方图等。其中最普遍的就是平均亮度法。&lt;strong&gt;平均亮度法&lt;/strong&gt;就是对图像所以像素亮度求平均值，通过不断调整曝光参数最终达到目标亮度。而&lt;strong&gt;权重均值法&lt;/strong&gt;是对图像不同区域设置不同权重来计算图像亮度，例如相机中的各种测光模式的选择就是改变不同区域的权重。&lt;strong&gt;亮度直方图法&lt;/strong&gt;是通过为直方图中峰值分配不同权重来计算图像亮度。&lt;/p&gt;
&lt;p&gt;自动曝光实现的过程：&lt;/p&gt;
&lt;p&gt;第一步：对当前图像进行亮度统计；&lt;/p&gt;
&lt;p&gt;第二步：根据当前图像亮度确定曝光值；&lt;/p&gt;
&lt;p&gt;第三步：计算新的曝光参数，曝光时间、光圈、增益；&lt;/p&gt;
&lt;p&gt;第四步：将新的曝光参数应用到相机；&lt;/p&gt;
&lt;p&gt;第五步：重复步骤一到四，直到亮度满足要求。&lt;/p&gt;
&lt;h2 id=&#34;曝光参数调整-曝光表&#34;&gt;&lt;strong&gt;曝光参数调整_曝光表&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;前面留下两个问题：“第一，相机不如人眼这样可以直观的分辨图像明暗，如何判断这幅图像是否亮度合适；第二，如何调整曝光时间、光圈、ISO,这三者调节的比例。” 第一个问题在前面有过解释，第二个问题也就是自动曝光实现步骤的第三步，曝光值由光圈、曝光时间、增益沟通决定，当计算出一个曝光量，曝光三要素有很多种组合方式。一般情况下有曝光曲线，每个曝光量对应一组参数。手机中曝光曲线可以通过Tuning调整。&lt;/p&gt;
&lt;p&gt;From: &lt;a href=&#34;https://zhuanlan.zhihu.com/p/33462189&#34;&gt;积极的悲观主义者&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;系列教程&#34;&gt;&lt;strong&gt;系列教程&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;/atom.xml&#34;&gt;&lt;i class=&#34;fas fa-rss&#34;&gt;&lt;/i&gt;全部文章RSS订阅&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;Embeded系列&#34;&gt;&lt;strong&gt;Embeded系列&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;/categories/embeded/atom.xml&#34;&gt;&lt;i class=&#34;fas fa-rss&#34;&gt;&lt;/i&gt;&lt;strong&gt;Embeded 分类 RSS 订阅&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/posts/13894dce/&#34;&gt;海思MPP&amp;amp;UNF构架源代码级分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/6b2ba137/&#34;&gt;3G,4G,Wifi选型需求分析及技术简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/509c7bd3/&#34;&gt;自动曝光原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/798e6e62/&#34;&gt;ISP 数字图像处理 算法概述、工作原理、架构、处理流程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.17lai.site/posts/6b2ba137/</guid>
            <title>3G,4G,Wifi选型需求分析及技术简介</title>
            <link>https://blog.17lai.site/posts/6b2ba137/</link>
            <category>linux</category>
            <category>embeded</category>
            <category>3G</category>
            <category>4G</category>
            <category>3531a</category>
            <category>移植</category>
            <category>嵌入式</category>
            <pubDate>Fri, 30 Jul 2021 16:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;3G-4G-Wifi选型需求分析及技术简介&#34;&gt;3G,4G,Wifi选型需求分析及技术简介&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;文章写了好多年了，只在一个网站发布过PDF版本。行业内应该很多人看过这个。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关于本blog，&lt;strong&gt;图床&lt;/strong&gt;一般使用&lt;strong&gt;github&lt;/strong&gt;，已经配置了CDN，如果图片还是未显示请自行代理解决&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;原创声明警告&lt;/strong&gt;，文章&lt;strong&gt;禁止转载&lt;/strong&gt;，禁止发布到其它任何网站，可以接受约稿。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;用户需求分析&#34;&gt;用户需求分析&lt;/h2&gt;
&lt;p&gt;减少布线，或有的地方很难布线。&lt;/p&gt;
&lt;p&gt;​    例如：偏远森林，沙漠，海岛，土地所有制导致不能随便开挖等各种原因。&lt;/p&gt;
&lt;h3 id=&#34;–3G，4G–&#34;&gt;–3G，4G–&lt;/h3&gt;
&lt;p&gt;优点： 布线，距离远。&lt;/p&gt;
&lt;p&gt;缺点：流量费高（可以和运营商合作 ）&lt;/p&gt;
&lt;h3 id=&#34;–Wifi–&#34;&gt;–Wifi–&lt;/h3&gt;
&lt;p&gt;优点：费用低，&lt;/p&gt;
&lt;p&gt;缺点：距离近&lt;/p&gt;
&lt;h2 id=&#34;研发需求分析&#34;&gt;研发需求分析&lt;/h2&gt;
&lt;h2 id=&#34;WANTED&#34;&gt;WANTED!&lt;/h2&gt;
&lt;h3 id=&#34;3G，4G选型标准需求&#34;&gt;3G，4G选型标准需求&lt;/h3&gt;
&lt;p&gt;1：产品生命周期，时间空间的重叠。 初产时间较近，出货时间长，&lt;/p&gt;
&lt;p&gt;2：客户那里运营商网络制式？？（例如&lt;strong&gt;TD-LTE****，&lt;strong&gt;&lt;strong&gt;FDD-LTE&lt;/strong&gt;&lt;/strong&gt;，&lt;strong&gt;&lt;strong&gt;CDMA2000&lt;/strong&gt;&lt;/strong&gt;等等&lt;/strong&gt;），&lt;/p&gt;
&lt;p&gt;​    运营商名称？？（一般不同国家不一样，一个国家很多个运营商）&lt;/p&gt;
&lt;p&gt;3：3G，4G具体型号选择： 1：厂家选择？？？ 2：网络制式选择（需要选择制式尽可能支持区域大的，亚洲，欧美，日韩）？？？ 3：USB 使用的技术代差（1：usb猫，2：usb光驱，3：html拨号）&lt;/p&gt;
&lt;p&gt;4：客户3G，4G使用场景？？。流量大小，费用&lt;/p&gt;
&lt;p&gt;**注意：**可能客户那里支持的制式和国内不一样，我们这边验证的制式在客户那里不能用，客户那里支持的制式在国内又没法验证。选择制式的时候特别需要注意。&lt;/p&gt;
&lt;h3 id=&#34;Wifi选择需求&#34;&gt;Wifi选择需求&lt;/h3&gt;
&lt;p&gt;5：芯片厂家需要支持Linux驱动。 芯片出来年代？？？，价格？？？，协议标准（决定速度），网络信号质量？？？，传输速度（不同距离速度，是否要求穿墙）？？？&lt;/p&gt;
&lt;p&gt;6：对应的无线路由器调试&lt;/p&gt;
&lt;p&gt;7：客户Wifi使用场景？？。 主要是使用距离引起速度衰变， 现在有2,4G，5G路由，速度有150Mbit/s 300Mbit/s，450Mbit/s。需要ap评估这种速度能否满足各种场景使用需求&lt;/p&gt;
&lt;h2 id=&#34;3G，4G部分&#34;&gt;3G，4G部分&lt;/h2&gt;
&lt;h3 id=&#34;中国2G，3G，4G制式标准&#34;&gt;中国2G，3G，4G制式标准&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730141533.jpg&#34; alt=&#34;运营商制式&#34;&gt;&lt;/p&gt;
&lt;p&gt;UMTS(Universal Mobile Telecommunications System)，意即通用移动通信系统。UMTS是国际标准化组织3GPP制定的全球3G标准之一。作为一个完整的3G移动通信技术标准，UMTS并不仅限于定义空中接口。它的主体包括CDMA接入网络和分组化的核心网络等一系列技术规范和接口协议。除WCDMA作为首选空中接口技术获得不断完善外，UMTS还相继引入了TD-SCDMA和HSDPA技术。&lt;br&gt;
UMTS网络优先选择的就是WCDMA，国内就是中国联通&lt;/p&gt;
&lt;h3 id=&#34;电信&#34;&gt;&lt;strong&gt;电信&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2G CDMA&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3G CDMA2000&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;4G TD-LTE&lt;/strong&gt;**，**&lt;strong&gt;FDD-LTE&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;移动&#34;&gt;&lt;strong&gt;移动&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2G GSM&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3G TD-SCDMA&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;4G TD-LTE&lt;/strong&gt;**，**&lt;strong&gt;FDD-LTE&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;联通&#34;&gt;&lt;strong&gt;联通&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;2G GSM&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;3G WCDMA&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;4G TD-LTE&lt;/strong&gt;**，**&lt;strong&gt;FDD-LTE&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中国移动TD-LTE：支持频段38、39、40&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中国联通TD-LTE：支持频段40、41&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中国电信TD-LTE：支持频段40、41&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中国联通FDD-LTE：支持频段3&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中国电信FDD-LTE：支持频段3&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;全球制式和区域&#34;&gt;全球制式和区域&lt;/h3&gt;
&lt;h4 id=&#34;2G有GSM，还有CDMA。&#34;&gt;2G有GSM，还有CDMA。&lt;/h4&gt;
&lt;p&gt;​    我们平时说的G 网或者C 网了。联通和移动都是GSM，电信的133号段（之前是联通主营，后来转移给电信）是C网&lt;/p&gt;
&lt;h4 id=&#34;3G有3种：WCDMA，CDMA2000，TD-CDMA&#34;&gt;3G有3种：WCDMA，CDMA2000，TD_CDMA&lt;/h4&gt;
&lt;p&gt;WCDMA（日本、欧洲）、CDMA2000（北美）、TD-SCDMA（中国移动）&lt;/p&gt;
&lt;p&gt;使用最广泛的是WCDMA。美国、欧洲等国很多是WCDMA和CDMA2000都有的。&lt;br&gt;
另外WCDMA、CDMA2000里面还有更细的划分，主要是技术、标准、速度的细微差别。&lt;/p&gt;
&lt;p&gt;WCDMA（欧洲版）：这个是欧洲的主流，也是目前世界范围3G 的使用模式最广的，在中国大陆，是中国联通3G （沃）的模式。&lt;br&gt;
CDMA2000（美国版）：这个数量相对少些，由美国为代表。在大陆，是中国电信3G （天翼）的模式&lt;br&gt;
TD-SCDMA（中国版）：这个是中国大陆自主知识产权的，可以说是中国特色的3G ，虽然大部分的通讯厂商宣布对此技术可以支持，但世界范围内使用的范围有限。在大陆，是中国移动3G的网络模式。&lt;/p&gt;
&lt;h4 id=&#34;4G有2种-LTE-FDD，LTE-TDD&#34;&gt;4G有2种: LTE FDD，LTE TDD&lt;/h4&gt;
&lt;p&gt;LTE FDD（世界绝大多数国家）、LTE TDD（中国移动和国外极少数地区的个别运营商）。&lt;/p&gt;
&lt;p&gt;TD- LTE是我国自主研发的4G标准，是由TD-SCDMA（3G网络）发展而来。&lt;/p&gt;
&lt;p&gt;LTE FDD是现在国际上主流的，使用最广泛的4G网络，由WCDMA演化而来。&lt;/p&gt;
&lt;p&gt;现在全球有超过200个LTE的商用网络，其中超过90%是FDD的。&lt;/p&gt;
&lt;p&gt;从技术上说，TD- LTE采用的是时分双工，而LTE FDD采用的是频分双工&lt;/p&gt;
&lt;p&gt;TD-LTE和FDD-LTE 是4G的两种国际标准，各有利弊。TD-LTE占用频段少，节省资源，带宽长，适合区域热点覆盖；FDD速度更快，覆盖更广，但占用资源多。适合广域覆盖。&lt;/p&gt;
&lt;h4 id=&#34;国内三家运营商4G网络制式分别如下：&#34;&gt;国内三家运营商4G网络制式分别如下：&lt;/h4&gt;
&lt;p&gt;联通4G：TD-LTE、FDD-LTE&lt;/p&gt;
&lt;p&gt;电信4G：TD-LTE、FDD-LTE&lt;/p&gt;
&lt;p&gt;移动4G：TD-LTE&lt;/p&gt;
&lt;p&gt;虽然联通跟电信都是采用双4G网络制式，但目前4G网络仅在部分地区覆盖，3G网络仍然是不可或缺的。而联通3G采用的是WCDMA，为欧洲标准，是技术发展最成熟、国际通用和覆盖范围最广的制式，目前是国内3G网络最快的，最高可达42Mbps，在国外已将其定义为4G标准。&lt;/p&gt;
&lt;p&gt;综合以上，选型推荐。&lt;/p&gt;
&lt;h2 id=&#34;3G推荐选型：WCDMA欧洲，CDMA2000美国&#34;&gt;3G推荐选型：WCDMA欧洲，CDMA2000美国&lt;/h2&gt;
&lt;h2 id=&#34;4G推荐选型：FDD-LTE&#34;&gt;4G推荐选型：FDD-LTE&lt;/h2&gt;
&lt;h2 id=&#34;WIFI部分&#34;&gt;WIFI部分&lt;/h2&gt;
&lt;h2 id=&#34;2-4G和5G究竟是什么&#34;&gt;2.4G和5G究竟是什么&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730141643.jpg&#34; alt=&#34;&#34;&gt;   以往我们一直使用的Wi-Fi大多数是支持 IEEE 802.11n（第四代）无线标准的，而且工作在2.4GHz这个频段上的，所以称之为2.4gWi-Fi，但是严格来说工作在5GHz频段上的不一定就是5G Wi-Fi，因为IEEE 802.11a（第一代）IEEE 802.11n（第四代）和IEEE 802.11ac（第五代)这三种标准都可以工作在5GHz这个频段上。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730141655.jpg&#34; alt=&#34;&#34;&gt;   严格来说只有支持802.11ac的才是真正5G Wi-Fi（在这个视频里我们将它称作ac 5G)，现来在说支持2.4G和5G双频的路由器其实很多都是指支持第四代无线标准，也就是802.11n的双频，而真正支持ac 5G的路由最便宜都要400、500甚至上千元&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730141748.jpg&#34; alt=&#34;&#34;&gt;   我们的路由器一般会有标有一些类似54Mbps，150Mbps，300Mbps这样的参数，要说明一下，这个参数不是指路由器的无线覆盖范围，而是指它的最高传输速率。若要支持ac 5G的也要双方同时支持，单方面支持是不行的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730141738.jpg&#34; alt=&#34;&#34;&gt;   这个速率就相当于车道上的限速标志，当然也不能完全等同与限速标志，因为如果网络中多个设备同时传输要分流的&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730141801.jpg&#34; alt=&#34;&#34;&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最后不要忘记要考虑空间的大小，200多平米的房子一般普通无线路由器的2.4G勉强可以覆盖，5G的话150平米就开始有压力，如果房屋太大或者多楼层的话可能就要考虑一下多个无线路由桥接了。&lt;/p&gt;
&lt;h3 id=&#34;5GWifi速度快，穿墙弱&#34;&gt;5GWifi速度快，穿墙弱&lt;/h3&gt;
&lt;p&gt;5G Wi-Fi的最大缺点就是穿墙能力比较弱，墙体对Wi-Fi信号的强度影响是比较大的，每穿过一面墙，Wi-Fi信号就要减弱不少。&lt;/p&gt;
&lt;h3 id=&#34;路由器摆放小技巧。增强信号。&#34;&gt;路由器摆放小技巧。增强信号。&lt;/h3&gt;
&lt;h4 id=&#34;最根本一半是有线速度限制，但信号强度也很重要&#34;&gt;最根本一半是有线速度限制，但信号强度也很重要&lt;/h4&gt;
&lt;p&gt;另外分享一个摆放路由器的方法，如果受制与网线或者台式电脑的位置就没得说，但是如果可以移动的话，这个位置的原则是要经过尽量少的墙体&lt;/p&gt;
&lt;p&gt;最好不要放在地上，更不要放在角落，&lt;/p&gt;
&lt;h4 id=&#34;放在高处&#34;&gt;放在高处&lt;/h4&gt;
&lt;p&gt;而且应该经适当的放高一点，而不是放在地上，这和手机信号塔的原理是一样的，更加不应该因为他碍眼把它放进抽屉、柜子等里面。这些方法可以略微增强信号强度，不过想从根本上解决信号问题，还是要换一款更好的路由。&lt;/p&gt;
&lt;h2 id=&#34;无线网卡选购简介&#34;&gt;无线网卡选购简介&lt;/h2&gt;
&lt;p&gt;常见值得选购的USB无线网卡按技术规格和价位，大致可以分为如下3类：&lt;/p&gt;
&lt;p&gt;单频11n网卡，标注速度200-300M，20-30元。&lt;/p&gt;
&lt;p&gt;双频11n网卡，支持5g频段，标注速度600M，40-50元。&lt;/p&gt;
&lt;p&gt;双频11ac网卡，支持5g频段，标注速度900-1200M或更高，80元以上。&lt;/p&gt;
&lt;p&gt;无线网卡要想达到标注的技术标准和速度，首先需要路由器支持该标准及速度，否则会降速运行。&lt;/p&gt;
&lt;h3 id=&#34;USB协议：速度，选择2-0还是3-0&#34;&gt;USB协议：速度，选择2.0还是3.0&lt;/h3&gt;
&lt;p&gt;USB2.0的速度传输，理论最大速率480M bit/S。 60MB/S&lt;/p&gt;
&lt;p&gt;USB3.0的理论最大速率是5G bit/S，要比USB2.0快10倍！ 640MB/S&lt;/p&gt;
&lt;p&gt;看线路，工艺质量，实际速度可能不到理论速度一半&lt;/p&gt;
&lt;h3 id=&#34;USB3-0-对wifi和BlueTooth干扰。&#34;&gt;USB3.0 对wifi和BlueTooth干扰。&lt;/h3&gt;
&lt;p&gt;USB3.0的传输频率确实是5GHz串行，但USB3.0使用4条数据线组成2组，每组负责一个传输方向，实现全双工双向5GHz，而每条数据线的基准频率是2.5GHz。&lt;/p&gt;
&lt;p&gt;所以，总带宽是5GHz没错，但每条线上是2.5GHz，这个频率距离2.4G Wifi的频率太近了，又因为高频设备大多数都使用了SSC技术（扩频时钟？）使得信号不完全分布在一个固定频率上，所以就波及了2.5GHz附近的其它频率，所以对Wifi和蓝牙产生了较大的干扰。&lt;/p&gt;
&lt;h3 id=&#34;USB-3-0-干扰-Wifi-2-4G通讯的问题和解决方法&#34;&gt;USB 3.0 干扰 Wifi 2.4G通讯的问题和解决方法&lt;/h3&gt;
&lt;h4 id=&#34;USB3-0-WIFI干扰解决方法&#34;&gt;USB3.0 WIFI干扰解决方法&lt;/h4&gt;
&lt;p&gt;USB3.0的确对2.4G有影响，不过一样可以解决，比如&lt;strong&gt;网件&lt;/strong&gt;的解决方法就是，USB3.0 和网口,天线不在一面，USB3.0接口弄到前面，而且是所有接口有&lt;strong&gt;金属屏蔽罩&lt;/strong&gt;（包括WAN和LAN口），连USB接口与主板连线处都用&lt;strong&gt;屏蔽胶布&lt;/strong&gt;包裹。可惜国内厂商哪怕是大如华为，网口也舍不得这点成本用金属屏蔽的。&lt;/p&gt;
&lt;p&gt;带有USB 3.0接口的无线路由，如果出现外接3.0移动硬盘后网速下降，断网，或者ping延时变得很高，说明出现了3.0对无线的干扰。&lt;/p&gt;
&lt;p&gt;USB3.0与无线冲突解决办法：&lt;/p&gt;
&lt;p&gt;第一种：给USB接口加金属膜做屏蔽可以适当降低干扰，但不能完全屏蔽&lt;/p&gt;
&lt;p&gt;第二种：给主板的USB底座增加统一（并与使用设备）接地和增加金属屏蔽罩，基本可以排除&lt;/p&gt;
&lt;p&gt;【推荐】第三种：用1.2米 双磁环带屏蔽层的USB延长线将移动硬盘放到一米外的地方使用，基本可以完全可以排除&lt;/p&gt;
&lt;p&gt;其实不单是无线路由，像我们平常使用的无线鼠标键盘、蓝牙、wifi电视、iPad、手机等各种使用民用2.4G的通信设备都会出现与USB3.0冲突的情况。&lt;/p&gt;
&lt;h4 id=&#34;USB3-0-移动硬盘干扰解决方法&#34;&gt;USB3.0 移动硬盘干扰解决方法&lt;/h4&gt;
&lt;p&gt;相信随着USB3.0使用的用户越来越多，不少人遇到了一插上USB3.0的硬盘，wifi就出现降速或者中断的问题。其本质原因是USB 3.0 干扰2.4GHz下的Wifi通讯。&lt;/p&gt;
&lt;p&gt;解决方法如下，&lt;/p&gt;
&lt;p&gt;1.更换无线路由为5GHz，因为USB 3.0对5GHz的Wifi干扰程度较低&lt;br&gt;
2.把硬盘盒从USB3.0接口换到USB2.0接口也可以将问题解决&lt;br&gt;
3.使用高质量带屏蔽的USB3.0设备/线缆/接口。或者在USB3.0接口处加屏蔽罩（金属箔即可）&lt;br&gt;
4.最简单的，使用1m以上的高质量USB3.0延长线。将USB3.0设备远离电脑主机。&lt;/p&gt;
&lt;p&gt;Intel官方对USB3.0对WIFI干扰的描述文档：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.usb.org/developers/whitepapers/327216.pdf&#34;&gt;http://www.usb.org/developers/whitepapers/327216.pdf&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;目前在调试的两款型号：&#34;&gt;目前在调试的两款型号：&lt;/h2&gt;
&lt;h3 id=&#34;TL-WN823N&#34;&gt;TL-WN823N&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;​         Bus 002 Device 007: ID 0bda:818b&lt;/li&gt;
&lt;li&gt;​         RTL8192EU&lt;/li&gt;
&lt;li&gt;​         300M迷你型无线USB网卡 TL-WN823N&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;TL-WN725N&#34;&gt;TL-WN725N&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;​         Bus 002 Device 008: ID 0bda:8179&lt;/li&gt;
&lt;li&gt;​         rtl8188eu&lt;/li&gt;
&lt;li&gt;​         150M无线USB网卡 TL-WN725N&lt;/li&gt;
&lt;li&gt;​         网上的驱动版本数据结构和3.10差异较大，不能用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Wifi芯片厂家&#34;&gt;Wifi芯片厂家&lt;/h2&gt;
&lt;h3 id=&#34;Realtek：&#34;&gt;Realtek：&lt;/h3&gt;
&lt;p&gt;​         官方无linux驱动支持&lt;/p&gt;
&lt;h3 id=&#34;Ralink&#34;&gt;Ralink&lt;/h3&gt;
&lt;p&gt;（已经被MTK收购）： 官方有linux驱动&lt;/p&gt;
&lt;h3 id=&#34;Atheros&#34;&gt;Atheros&lt;/h3&gt;
&lt;p&gt;（已经被高通qualcomm收购）：AR9271&lt;/p&gt;
&lt;h2 id=&#34;整理推荐芯片型号：&#34;&gt;整理推荐芯片型号：&lt;/h2&gt;
&lt;p&gt;USB 2.0 Mbit/s&lt;/p&gt;
&lt;h3 id=&#34;rt3070&#34;&gt;rt3070&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mediatek.cn/products/broadbandWifi/rt3070&#34;&gt;http://www.mediatek.cn/products/broadbandWifi/rt3070&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IEEE 802.11:b/g/n&lt;/li&gt;
&lt;li&gt;Wi-Fi Frequency:2.4GHz&lt;/li&gt;
&lt;li&gt;Antenna:1T1R&lt;/li&gt;
&lt;li&gt;Data Throughput:150Mbit/s&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;rt5370&#34;&gt;rt5370&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mediatek.cn/products/broadbandWifi/rt5370&#34;&gt;http://www.mediatek.cn/products/broadbandWifi/rt5370&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IEEE 802.11:b/g/n&lt;/li&gt;
&lt;li&gt;Wi-Fi Frequency:2.4GHz&lt;/li&gt;
&lt;li&gt;Antenna:1T1R&lt;/li&gt;
&lt;li&gt;Data Throughput:150Mbit/s&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;RT3573&#34;&gt;RT3573&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mediatek.cn/products/broadbandWifi/rt3573&#34;&gt;http://www.mediatek.cn/products/broadbandWifi/rt3573&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IEEE 802.11:b/g/n/ac&lt;/li&gt;
&lt;li&gt;Wi-Fi Frequency:2.4GHz, 5GHz&lt;/li&gt;
&lt;li&gt;Antenna:3T3R&lt;/li&gt;
&lt;li&gt;Data Throughput:450Mbit/s&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;RT5572&#34;&gt;RT5572&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mediatek.cn/products/broadbandWifi/rt5572&#34;&gt;http://www.mediatek.cn/products/broadbandWifi/rt5572&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IEEE 802.11:b/g/n/ac&lt;/li&gt;
&lt;li&gt;Wi-Fi Frequency:2.4GHz, 5GHz&lt;/li&gt;
&lt;li&gt;Antenna:2T2R&lt;/li&gt;
&lt;li&gt;Data Throughput:300Mbit/s&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;集成分析&lt;/h1&gt;
&lt;h2 id=&#34;3G，4G集成分析&#34;&gt;3G，4G集成分析&lt;/h2&gt;
&lt;p&gt;根据拨号技术流程，现在已经发现的USB上网有三种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1：默认识别为USB Modem，使用pppoe拨号脚本拨号。&lt;/li&gt;
&lt;li&gt;2：默认识别为usb cdrom，使用usb-modeswitch 转换usb设备工作状态，转换为USB Modem后再采用pppoe拨号脚本拨号。&lt;/li&gt;
&lt;li&gt;3：使用CGI 调用Html链接方式拨号。不需要我们配置用户名密码，网络制式，最方便。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1：Pppoe拨号&#34;&gt;1：Pppoe拨号&lt;/h3&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pppd call wcdma &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2：usb-modeswitch转换usb设备工作模式。&#34;&gt;2：usb_modeswitch转换usb设备工作模式。&lt;/h3&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;usb_modeswitch -W -c /etc/usb_modeswitch.d/19D2:0117&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3：CGI拨号示例&#34;&gt;3：CGI拨号示例&lt;/h3&gt;
&lt;p&gt;从集成实现来说，这种最方便。&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./curl --header &#34;Referer: http://192.168.0.1/index.html&#34; http://192.168.0.1/goform/goform_set_cmd_process?goformId=SET_CONNECTION_MODE&amp;amp;ConnectionMode=auto_dial

./curl --header &#34;Referer: http://192.168.0.1/index.html&#34; http://192.168.0.1/goform/goform_process?goformId=MODE_SWITCH&amp;amp;switchCmd=FACTORY&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h2 id=&#34;Wifi集成分析&#34;&gt;Wifi集成分析&lt;/h2&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1：驱动移植识别&lt;/li&gt;
&lt;li&gt;2：wireless_tools或者wpa_supplicant拨号&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;wpa_supplicant依赖openssl和libnl，支持PSK加密需要用到这个。wireless_tools只支持普通web加密。&lt;/p&gt;
&lt;h1&gt;带宽性能测试&lt;/h1&gt;
&lt;p&gt;服务器运行 iperf -s&lt;/p&gt;
&lt;p&gt;客户端运行 iperf -c 服务器ip -t 60000 -i 2&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;iperf -c 192.168.1.100 -t 60000 -i 2
TP—Link 845&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;笔记本有线连接运行服务端, H3531a（2716TE_C）使用TL-WN823N连接&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;[root@Tvt iperf]# ./iperf.hisi3531A -c 192.168.1.100 -t 60000 -i 2
\------------------------------------------------------------
Client connecting to 192.168.1.100, TCP port 5001
TCP window size: 21.0 KByte (default)
\------------------------------------------------------------
[ 3] local 192.168.1.103 port 47671 connected with 192.168.1.100 port 5001
[ ID] Interval    Transfer   Bandwidth
[ 3] 0.0- 2.0 sec 2.25 MBytes 9.44 Mbits/sec
[ 3] 2.0- 4.0 sec  256 KBytes 1.05 Mbits/sec
[ 3] 4.0- 6.0 sec  128 KBytes  524 Kbits/sec
[ 3] 6.0- 8.0 sec  256 KBytes 1.05 Mbits/sec
[ 3] 8.0-10.0 sec 1.25 MBytes 5.24 Mbits/sec
[ 3] 10.0-12.0 sec 3.75 MBytes 15.7 Mbits/sec
[ 3] 12.0-14.0 sec 4.25 MBytes 17.8 Mbits/sec
[ 3] 14.0-16.0 sec 3.13 MBytes 13.1 Mbits/sec
[ 3] 16.0-18.0 sec 1.75 MBytes 7.34 Mbits/sec
[ 3] 18.0-20.0 sec 1.38 MBytes 5.77 Mbits/sec
[ 3] 20.0-22.0 sec 1.13 MBytes 4.72 Mbits/sec
[ 3] 22.0-24.0 sec  256 KBytes 1.05 Mbits/sec
[ 3] 24.0-26.0 sec  128 KBytes  524 Kbits/sec
[ 3] 26.0-28.0 sec  128 KBytes  524 Kbits/sec
[ 3] 28.0-30.0 sec  512 KBytes 2.10 Mbits/sec
[ 3] 30.0-32.0 sec 2.88 MBytes 12.1 Mbits/sec
[ 3] 32.0-34.0 sec 1.63 MBytes 6.82 Mbits/sec
[ 3] 34.0-36.0 sec 3.50 MBytes 14.7 Mbits/sec
[ 3] 36.0-38.0 sec  768 KBytes 3.15 Mbits/sec
[ 3] 38.0-40.0 sec 4.38 MBytes 18.4 Mbits/sec
[ 3] 40.0-42.0 sec 5.38 MBytes 22.5 Mbits/sec
[ 3] 42.0-44.0 sec 7.13 MBytes 29.9 Mbits/sec
[ 3] 44.0-46.0 sec 6.63 MBytes 27.8 Mbits/sec
[ 3] 46.0-48.0 sec 5.38 MBytes 22.5 Mbits/sec
[ 3] 48.0-50.0 sec 5.75 MBytes 24.1 Mbits/sec
[ 3] 50.0-52.0 sec 7.50 MBytes 31.5 Mbits/sec
[ 3] 52.0-54.0 sec 4.63 MBytes 19.4 Mbits/sec
[ 3] 54.0-56.0 sec 7.50 MBytes 31.5 Mbits/sec
[ 3] 56.0-58.0 sec 6.75 MBytes 28.3 Mbits/sec
[ 3] 58.0-60.0 sec 5.13 MBytes 21.5 Mbits/sec
[ 3] 60.0-62.0 sec 5.38 MBytes 22.5 Mbits/sec
[ 3] 62.0-64.0 sec 4.75 MBytes 19.9 Mbits/sec
[ 3] 64.0-66.0 sec 6.00 MBytes 25.2 Mbits/sec
[ 3] 66.0-68.0 sec 3.50 MBytes 14.7 Mbits/sec
[ 3] 68.0-70.0 sec 5.50 MBytes 23.1 Mbits/sec
[ 3] 70.0-72.0 sec 4.75 MBytes 19.9 Mbits/sec
[ 3] 72.0-74.0 sec 1.50 MBytes 6.29 Mbits/sec
[ 3] 74.0-76.0 sec 4.50 MBytes 18.9 Mbits/sec
[ 3] 76.0-78.0 sec 4.25 MBytes 17.8 Mbits/sec
[ 3] 78.0-80.0 sec 5.13 MBytes 21.5 Mbits/sec
[ 3] 80.0-82.0 sec 7.88 MBytes 33.0 Mbits/sec
[ 3] 82.0-84.0 sec 7.38 MBytes 30.9 Mbits/sec
[ 3] 84.0-86.0 sec 4.38 MBytes 18.4 Mbits/sec
[ 3] 86.0-88.0 sec 5.25 MBytes 22.0 Mbits/sec
[ 3] 88.0-90.0 sec 6.63 MBytes 27.8 Mbits/sec
[ 3] 90.0-92.0 sec 5.00 MBytes 21.0 Mbits/sec
[ 3] 92.0-94.0 sec 6.88 MBytes 28.8 Mbits/sec
[ 3] 94.0-96.0 sec 8.25 MBytes 34.6 Mbits/sec
[ 3] 96.0-98.0 sec 7.25 MBytes 30.4 Mbits/sec&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h1&gt;附录&lt;/h1&gt;
&lt;h2 id=&#34;1：TD-LTE和LTE-FDD标准差异&#34;&gt;1：TD- LTE和LTE FDD标准差异&lt;/h2&gt;
&lt;p&gt;TD- LTE是我国自主研发的4G标准，是由TD-SCDMA（3G网络）发展而来。&lt;/p&gt;
&lt;p&gt;LTE FDD是现在国际上主流的，使用最广泛的4G网络。&lt;/p&gt;
&lt;p&gt;现在全球有超过200个LTE的商用网络，其中超过90%是FDD的。&lt;/p&gt;
&lt;p&gt;从技术上说，TD- LTE采用的是时分双工，而LTE FDD采用的是频分双工&lt;/p&gt;
&lt;p&gt;那什么是频分双工，什么又是时分双工呢？&lt;/p&gt;
&lt;p&gt;先来解释“双工”。&lt;/p&gt;
&lt;p&gt;移动通信系统的工作方式分为：单工、半双工和全双工&lt;/p&gt;
&lt;p&gt;1，单工就是信息只能向一个方向传播。例如寻呼机和收音机，只能接收信息，不能发出信息。&lt;/p&gt;
&lt;p&gt;2，半双工就是信息可以双向传播，但是上传信息的时候只能上传，下载的时候只能下载。例如对讲机，你说话的时候听不见别人别人说，听别人说的时候自己不能说。&lt;/p&gt;
&lt;p&gt;3， 全双工就是信息可以同时双向传播。例如手机，可以边听边说。&lt;br&gt;
其中全双工又分为：时分双工TDD，与频分双工FDD。&lt;/p&gt;
&lt;p&gt;​    所谓的频分双工就是将信息上传和信息下载放在两个不同的频段，称为上行频段和下行频段，且这两个频段必须对称。为了不防止上下行频段之间的信息串频，两个频段不能重叠，而且中间必须隔开一段，称为保护频。如下图：上行和下行频段相互分开&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730142158.jpg&#34; alt=&#34;保护帧&#34;&gt;&lt;/p&gt;
&lt;p&gt;所谓的时分双工就是将上传和下载放在同一个频段，也就是上行频段和下行频段完全一样。那它是如何做到上下的信息不串频呢？其实很简单，顾名思义，频分双工分的是频段，那时分双工分的就是时间。将波传播的时间轴一分为二，&lt;/p&gt;
&lt;p&gt;前半部分用于信息的上传，后一部分用于信息的下载。其实这从理论上更像是同步的半双工，但是由于上行和下行时间差距极短，我们无法感觉到，所以从效果上也是全双工。如下图：时间帧的第一帧为上行，第二帧而为下行，上下行共用一个频段，用时间的差将他们隔开。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730142220.jpg&#34; alt=&#34;数据帧&#34;&gt;&lt;/p&gt;
&lt;p&gt;​    接下来说一说移动TD- LTE和电信联通LTE FDD的优缺点，其实就是时分双工与频分双工的特点。&lt;/p&gt;
&lt;p&gt;​     TD- LTE由于采用上行和下行分时，所以上行和下行的时间差导致他信息传输的速度受到一定的限制。他的理论下载峰值为100Mbps，相比FDD的150Mbps来说，慢了不少。当然TD- LTE的基站信号覆盖半径也比LTE FDD小一点。&lt;/p&gt;
&lt;p&gt;​    LTE FDD也并非都是优点。FDD制式必须要找对称分开的上行、下行频段，也就是说它必须浪费更多的频段资源。那中国联通的FDD网为例，工信部给他发的频段牌照为，上行1755&lt;sub&gt;1765MHz和下行1850&lt;/sub&gt;1860MHz（2×10M），实际联通只得到了上下各10M的频段，但是加上当中的保护频段，一共占用了1755~1860MHz也就是105MHz的频段。这就导致了频段资源利用率低，是一种资源的浪费。目前，频率资源本身就紧张，能找到对称的上行和下行频段就尤其难。频率除了用在手机上网通讯上，像广播，军事,甚至无线路由器等民用领域也广泛使用。将来随着科技的进步，频率频段的稀缺会日益严重。&lt;/p&gt;
&lt;p&gt;​    TD-LTE和FDD-LTE 是4G的两种国际标准，各有利弊。TD-LTE占用频段少，节省资源，带宽长，适合区域热点覆盖；FDD速度更快，覆盖更广，但占用资源多。适合广域覆盖。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;系列教程&#34;&gt;&lt;strong&gt;系列教程&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;/atom.xml&#34;&gt;&lt;i class=&#34;fas fa-rss&#34;&gt;&lt;/i&gt;全部文章RSS订阅&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;Embeded系列&#34;&gt;&lt;strong&gt;Embeded系列&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;/categories/embeded/atom.xml&#34;&gt;&lt;i class=&#34;fas fa-rss&#34;&gt;&lt;/i&gt;&lt;strong&gt;Embeded 分类 RSS 订阅&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/posts/13894dce/&#34;&gt;海思MPP&amp;amp;UNF构架源代码级分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/6b2ba137/&#34;&gt;3G,4G,Wifi选型需求分析及技术简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/509c7bd3/&#34;&gt;自动曝光原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/798e6e62/&#34;&gt;ISP 数字图像处理 算法概述、工作原理、架构、处理流程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.17lai.site/posts/13894dce/</guid>
            <title>海思MPP&amp;UNF构架源代码级分析</title>
            <link>https://blog.17lai.site/posts/13894dce/</link>
            <category>linux</category>
            <category>embeded</category>
            <category>hisilicon</category>
            <category>driver</category>
            <category>3798m</category>
            <category>mpp</category>
            <category>unf</category>
            <category>kernel</category>
            <pubDate>Thu, 01 Jul 2021 18:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;ul&gt;
&lt;li&gt;
&lt;p&gt;文章写了好多年了，只在一个网站发布过PDF版本。行业内应该很多人看过这个。由于早期笔记使用Word格式，转换格式时有不少格式错误，笔者尽量修正。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关于本blog，&lt;strong&gt;图床&lt;/strong&gt;一般使用&lt;strong&gt;github&lt;/strong&gt;，已经配置了CDN，如果图片还是未显示请自行代理解决&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;原创声明警告&lt;/strong&gt;，文章&lt;strong&gt;禁止转载&lt;/strong&gt;，禁止发布到其它任何网站，可以接受约稿。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;前言：&#34;&gt;前言：&lt;/h2&gt;
&lt;p&gt;​    本文通过分析海思文档和代码，把海思SDK的MPI和UNF构架大概实现思想和构架进行了简略的分析。着重分析了内存管理，底层功能如何实现。&lt;/p&gt;
&lt;p&gt;​    前面章节简要分析了NVR芯片MPI构架及其内存管理机制，后面着重详细分析了3798M底层模块api和drv实现的细节过程及其方法流程。&lt;/p&gt;
&lt;p&gt;​    本文前面简略分析了DVR，MPI构架的大体实现机制。后面就具体分析3798M UNF构架的实现。&lt;/p&gt;
&lt;p&gt;本文不光分析了UNF构架，还使用了很多工具，辅助分析代码。这里从三个层面分析了UNF的实现。&lt;/p&gt;
&lt;p&gt;1: 应用层，驱动层的实现框架，使用source insight查看代码并着重分析了avplay等几个模块。&lt;/p&gt;
&lt;p&gt;2：静态分析函数调用。使用cflow，dot工具生成调用关系图&lt;/p&gt;
&lt;p&gt;3：动态追踪运行过程。Ltrace, strace, valgrind分析函数调用，perf动态分析内核调用。&lt;/p&gt;
&lt;h2 id=&#34;1-Hi35xx系列芯片MPP构架&#34;&gt;1:Hi35xx系列芯片MPP构架&lt;/h2&gt;
&lt;h3 id=&#34;1-1-概述&#34;&gt;1.1 概述&lt;/h3&gt;
&lt;p&gt;海思提供的媒体处理软件平台(Media Process Platform,简称 MPP)，可支持应用软件快速开发。该平台对应用软件屏蔽了芯片相关的复杂的底层处理，并对应用软件直接提供MPI（MPP Programe Interface）接口完成相应功能。该平台支持应用软件快速开发以下功能：输入视频捕获、H.264/MJPEG/JPEG/MPEG4 编码、H264/H.265/VC1/MPEG4/MPEG2/AVS 解码、视频输出显示、视频图像前处理（包括去噪、增强、锐化、Deinterlace） 、编码码流叠加 OSD、视频侦测分析、智能分析、音频捕获及输出、音频编解码等功能。&lt;/p&gt;
&lt;h3 id=&#34;1-2-整体软硬件构架&#34;&gt;1.2 整体软硬件构架&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730160509.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;MPP 平台支持的典型的系统层次如上图所示，主要分为以下层次：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;硬件层&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;硬件层由 Hi35xx 芯片加上必要的外围器件构成。外围器件包括 Flash、DDR&lt;br&gt;
（Double Data-Rate） 、视频 Sensor 或 AD、音频 AD 等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;操作系统层&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基于 Linux 3.10.y 的 OS 系统。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;媒体处理平台&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基于操作系统层，控制芯片完成相应的媒体处理功能。它对应用层屏蔽了硬件处理细节，并为应用层提供 API 接口完成相应功能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其他驱动&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;除媒体处理平台外,海思为 Hi35xx 芯片的其他相关硬件处理单元提供了相应的驱动,&lt;/p&gt;
&lt;p&gt;包括 GMAC、SDIO、I2C、USB、SSP 等驱动。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;应用层&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基于海思媒体处理平台及其他驱动，由用户开发的应用软件系统。&lt;/p&gt;
&lt;h3 id=&#34;1-3-海思媒体处理平台架构&#34;&gt;1.3 海思媒体处理平台架构&lt;/h3&gt;
&lt;p&gt;海思媒体处理平台的主要内部处理流程如上图所示，主要分为视频输入（VI） 、视频处理（VPSS） 、视频编码（VENC） 、视频解码（VDEC） 、视频输出(VO)、视频侦测分析(VDA)、音频输入(AI)、音频输出(AO)、音频编码（AENC） 、音频解码（ADEC） 、区域管理（REGION）等模块。主要的处理流程介绍如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730160451.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;VI 模块捕获视频图像，可对其做剪切、缩放、镜像等处理，并输出多路不同分辨&lt;br&gt;
率的图像数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解码模块对编码后的视频码流进行解码，并将解析后的图像数据送 VPSS 进行图&lt;br&gt;
像处理或直接送 VO 显示。可对 H.264/H.265/VC1/MPEG4/MPEG2/AVS 格式的视&lt;br&gt;
频码流进行解码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VPSS 模块接收 VI 和解码模块发送过来的图像，可对图像进行去噪、图像增强、&lt;br&gt;
锐化等处理，并实现同源输出多路不同分辨率的图像数据用于编码、预览或抓&lt;br&gt;
拍。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编码模块接收 VI 捕获并经 VPSS 处理后输出的图像数据，可叠加用户通过 Region&lt;br&gt;
模块设置的 OSD 图像，然后按不同协议进行编码并输出相应码流。&lt;br&gt;
VDA 模块接收 VI 的输出图像，并进行移动侦测和遮挡侦测，最后输出侦测分析&lt;br&gt;
结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VO 模块接收 VPSS 处理后的输出图像，可进行播放控制等处理，最后按用户配置&lt;br&gt;
的输出协议输出给外围视频设备。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AI 模块捕获音频数据，然后 AENC 模块支持按多种音频协议对其进行编码，最后&lt;br&gt;
输出音频码流。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户从网络或外围存储设备获取的音频码流可直接送给 ADEC 模块，ADEC 支持&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-4-MMZ与模块绑定&#34;&gt;1.4 MMZ与模块绑定&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730160438.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;MPP 提供系统绑定接口（HI_MPI_SYS_Bind） ，即通过数据接收者绑定数据源来建立&lt;/p&gt;
&lt;p&gt;两者之间的关联关系（只允许数据接收者绑定数据源） 。绑定后，数据源生成的数据将&lt;/p&gt;
&lt;p&gt;自动发送给接收者。&lt;/p&gt;
&lt;p&gt;Uboot环境变量中定义linux内核使用的内存大小&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;setenv &#39;mem=288M console=ttyAMA0,115200 root=/dev/mtdblock2 rootfstype=jffs2 mtdparts=hi_sfc:768K(boot),2304K(sdr021000),13M(rootfs)&#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;加载内核模块分配MMZ内存大小&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;insmod mmz.ko mmz=anonymous,0,0x8E000000,792M anony=1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;例如512M的DDR&lt;/p&gt;
&lt;p&gt;DDR:&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;DDR:                                                          
-----------|----------|  0x80000000   # Memory managed by OS.             
   64M     |   OS     |                                                
           |          |                                                
-----------|----------|  0x84000000   # Memory managed by MMZ block anonymous.         
   448M    |    MMZ   |                                                
           |          |                                                
-----------|----------|  0xA0000000   # Memory managed by MMZ block jpeg.                      &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;1-5-HiMPP-支持的绑定关系&#34;&gt;1.5 HiMPP 支持的绑定关系&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据源&lt;/th&gt;
&lt;th&gt;数据接收者&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;VI&lt;/td&gt;
&lt;td&gt;VO&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VENC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VDA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VPSS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;PCIV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VPSS&lt;/td&gt;
&lt;td&gt;VO&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VENC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VDA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VPSS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;PCIV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VDEC&lt;/td&gt;
&lt;td&gt;VPSS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VO（只能是标清设备或 single 模式分割）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VDA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;PCIV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vo(WBC)&lt;/td&gt;
&lt;td&gt;VO&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VENC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VPSS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;PCIV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AI&lt;/td&gt;
&lt;td&gt;AENC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;AO&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ADEC&lt;/td&gt;
&lt;td&gt;AO&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;1-6-函数约定说明&#34;&gt;1.6 函数约定说明&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Open/Close&lt;br&gt;
Open/Close 操作用来打开、关闭那些可枚举的设备。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create/ Destroy&lt;br&gt;
Create/ Destroy 操作用来创建、销毁那些不可枚举的设备。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Handle&lt;br&gt;
Handle 用来标识一个“不可枚举”类型的设备。Handle 只在本进程内有效，也就是说 Handle 不可以跨进程传递Handle 是一个 32bit 的数据，其低 8bit 表示设备的 ID，高 16bit 表示模块 ID。比如0x00110000 表示模块 ID 为 0x11 的第 0 个设备。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Attach /Detach&lt;br&gt;
Attach/Detach 用来绑定、解绑定两个设备直接的关联。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Attach 后，目的设备将自动处于 Start/Enable 状态； Detach 后，目的设备将自动处于Stop/Disable 状态。&lt;br&gt;
对于多级绑定，&lt;strong&gt;要求从最后一个设备逐级向前绑定，解绑定的顺序则相反，要求逐级向后。&lt;/strong&gt;**&lt;br&gt;
** 当绑定在一起的多个设备可以设置相同属性时，必须通过最后一个设备进行设置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Get/Put&lt;br&gt;
Get/Put 用来往某个模块输入数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Acquire/Release&lt;br&gt;
Acquire/Release 用来从某个模块获取数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Get/Put和Acquire/Release推荐成对使用&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730155911.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-7-MPP优缺点&#34;&gt;1.7 MPP优缺点&lt;/h3&gt;
&lt;h4 id=&#34;1-7-1-MPP优点&#34;&gt;1.7.1 MPP优点&lt;/h4&gt;
&lt;p&gt;​    内存VB管理和模块绑定子系统，proc运行时调试信息是MPP构架节约用户时间最大的设计。&lt;/p&gt;
&lt;p&gt;​    大部分外围接口都封装好，用户调用接口直接使用，快速，方便。&lt;/p&gt;
&lt;h4 id=&#34;1-7-2-MPP缺点&#34;&gt;1.7.2 MPP缺点&lt;/h4&gt;
&lt;p&gt;​    没有相应子系统的源代码。出了问题，有bug必须需要海思查看，解决。&lt;/p&gt;
&lt;p&gt;​    MPI接口和标准linux接口差异非常大，构架也不一样。有问题需要找海思。中间时间成本。&lt;/p&gt;
&lt;p&gt;不利于研发技术积累。&lt;/p&gt;
&lt;h2 id=&#34;2-MPP和UNF对比&#34;&gt;2:  MPP和UNF对比&lt;/h2&gt;
&lt;p&gt;从函数命名，参数，使用方法来看。UNF和MPP分开比较早，UNF构架在上面函数约定说明基础上的MPI接口封装了一层，UNF-&amp;gt;MPI调用，UNF开发支持更多的模块接口。MPP的模块接口比较固定，比UNF少得多，增强了MMZ内存，VB管理功能，模块绑定功能。&lt;/p&gt;
&lt;p&gt;MPP由HI_MPI_SYS_Bind来绑定两个模块，而UNF还是使用Hi_XXX_Attach来绑定两个模块。&lt;/p&gt;
&lt;p&gt;MPP内存管理MMZ，VB也比UNF更细致，强大。&lt;/p&gt;
&lt;p&gt;UNF支持更多的外设模块。如TUNER（广播电视），CIPHER（芯片内部加密），Subtitle（字幕），PDM（低功耗），SCI（智能卡），GPU等。&lt;/p&gt;
&lt;p&gt;UNF开源。在一些模块的实现中，也使用了一些开源项目，如FFmpeg，Alsa，wpa_supplicant等。&lt;/p&gt;
&lt;h2 id=&#34;3-3798芯片UNF处理构架&#34;&gt;3:  3798芯片UNF处理构架&lt;/h2&gt;
&lt;h3 id=&#34;3-1-应用架构&#34;&gt;3.1 应用架构&lt;/h3&gt;
&lt;p&gt;海思媒体处理平台（ MSP）实现了对海思高清机顶盒解决方案处理器中媒体、图形以&lt;br&gt;
及外设的屏蔽和封装，对应用软件直接提供 API（ Application Program Interface）接口&lt;br&gt;
完成相应功能。典型的应用架构如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730155841.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3798&lt;strong&gt;&lt;strong&gt;比35xx&lt;/strong&gt;&lt;/strong&gt;多了一个UNF&lt;strong&gt;&lt;strong&gt;层，它在MPI&lt;/strong&gt;&lt;/strong&gt;基础上进行了一层封装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;软件架构主要包含以下 4 层：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;UNF层&lt;/p&gt;
&lt;p&gt;媒体处理平台（ MSP）对外统一的应用开发接口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPI层&lt;/p&gt;
&lt;p&gt;处理器各模块硬件能力实现层的用户态部分。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DRV层&lt;/p&gt;
&lt;p&gt;处理器各模块硬件能力实现层的内核态部分。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HAL层&lt;/p&gt;
&lt;p&gt;处理器各模块的硬件抽象层。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-2-3798SDK-概览（功能介绍）&#34;&gt;3.2 3798SDK 概览（功能介绍）&lt;/h3&gt;
&lt;p&gt;媒体处理平台（ MSP）中所有模块按照功能可以分为媒体处理，图形处理，外设处理 3&lt;br&gt;
类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;媒体处理&lt;/p&gt;
&lt;p&gt;DEMUX、 AVPLAY、 SOUND、 DISPLAY、 VO、 HDMI、 PVR、 VDEC、 VENC、&lt;br&gt;
ADEC、 AENC、 VI、 AI&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;图形处理&lt;/p&gt;
&lt;p&gt;HIFB、 HIGO、 TDE、 JPEG、 JPGE、 GPU&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;外设处理&lt;/p&gt;
&lt;p&gt;Cipher、 OTP、 PMOC、 Frontend、 I2C、 SCI、 KEYLED、 GPIO、 IR、 WDG、 C51&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-3-3798内存管理&#34;&gt;3.3 3798内存管理&lt;/h3&gt;
&lt;h4 id=&#34;3-3-1-Mmz内存&#34;&gt;3.3.1 Mmz内存&lt;/h4&gt;
&lt;p&gt;3798的mmz内存在uboot bootargs环境变量中分配，在内核中大块连续内存使用dma_alloc_from_contiguous（drv/mmz/drv_media_mem_v2.c）来分配内存， 小块内存使用kmalloc分配，并且使用内核链表标记管理。和应用层交互使用mamp，umamp，并使用内核链表管理内存。这点和35xx DVR芯片有很大区别，DVR芯片模块内存和linux内核使用内存不再一个地方，应该是通过物理地址往虚拟地址映射来使用的。&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;# cat /proc/cmdline
mem=1G console=ttyAMA0,115200 root=/dev/romblock3 rootfstype=squashfs mtdparts=hinand:5M(boot),1M(baseparam),7M(kernel),18M(rootfs),64M(appfs),16M(qte),4M(config),12M(log),1M(logo) mmz=ddr,0,0,500M&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;具体就是在bootargs中配置mem=1G mmz=ddr,0,0,435M&lt;/p&gt;
&lt;p&gt;查看内存使用情况跟监控相同，通过cat /proc/media-mem&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730155600.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;3-3-2-解码vid内存&#34;&gt;3.3.2 解码vid内存&lt;/h4&gt;
&lt;p&gt;关于码流解码过程中视频缓冲buffer u32VidBufSize配置：&lt;/p&gt;
&lt;p&gt;创建avplay时，可以指定视频es buf大小，参考如下代码&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;Ret = HI_UNF_AVPLAY_GetDefaultConfig(&amp;amp;AvplayAttr, HI_UNF_AVPLAY_STREAM_TYPE_ES);
AvplayAttr.stStreamAttr.u32VidBufSize = 2*1024*1024;
Ret |= HI_UNF_AVPLAY_Create(&amp;amp;AvplayAttr, &amp;amp;hAvplay[i]);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;Es buf的作用存储码流原始es流。&lt;/p&gt;
&lt;p&gt;这个buffer的大小跟码流分辨率、码率都有关系，一般情况下，D1/720P/1080P/4K 码流的配置为 2M/3M/5M/16M 即可，特殊码流除外。&lt;/p&gt;
&lt;h3 id=&#34;3-4-3798模块&#34;&gt;3.4 3798模块&lt;/h3&gt;
&lt;h4 id=&#34;DEMUX：&#34;&gt;DEMUX：&lt;/h4&gt;
&lt;p&gt;​	数据输入模块。IF，TSI，RAM。&lt;/p&gt;
&lt;p&gt;​	NVR使用的是RAM接口输入ES码流。&lt;/p&gt;
&lt;h4 id=&#34;VI&#34;&gt;VI:&lt;/h4&gt;
&lt;p&gt;虚拟VI&lt;/p&gt;
&lt;h4 id=&#34;VDEC&#34;&gt;VDEC&lt;/h4&gt;
&lt;p&gt;​	解码器模块提供一组函数指针，供解码使用。目前有264，mpeg4两个。&lt;/p&gt;
&lt;p&gt;视频解码的简单流程是：&lt;br&gt;
步骤 1 VDEC 从 Demux 或 ES buffer 获取 ES 数据送 Firmware 进行解码（ Firmware: StreamInput(VDEC-&amp;gt;Firmware)）。&lt;br&gt;
步骤 2 Firmware 将解码完的 1D 或者 2D 帧存放在帧 buffer 中。&lt;br&gt;
步骤 3 VDEC 从帧 buffer 中获取（ Firmware: Frame Output(Firmware-&amp;gt;VDEC)）视频帧放入其帧队列中。&lt;br&gt;
步骤 4 VPSS 在线程中从 VDEC 的帧队列中取帧做解码后处理（ Frame Output(VDEC-&amp;gt;VPSS)）。&lt;br&gt;
步骤 5 AVPLAY 向 VDEC 获取视频帧， VDEC 从 VPSS 获取视频帧返回给 AVPLAY。&lt;/p&gt;
&lt;h4 id=&#34;SYNC：&#34;&gt;SYNC：&lt;/h4&gt;
&lt;p&gt;音视频同步工具&lt;/p&gt;
&lt;h4 id=&#34;DISPLAY：显示设备&#34;&gt;DISPLAY：显示设备&lt;/h4&gt;
&lt;h4 id=&#34;WINDOW：显示通道&#34;&gt;WINDOW：显示通道&lt;/h4&gt;
&lt;p&gt;msp 目录下的“ windowXXYY”节点的中的 XX 为显示通道的编号， YY 为 window 序号。比如 window0100， bit[15:8]的 01 表示该 window 基于 DISPLAY1 创建， bit[7:0]的00 表示 window 序号为 0。有支持3D显示&lt;/p&gt;
&lt;p&gt;DISP（ Display）模块接收 WINDOW 提供的视频图像、 Frame Buffer 提供的图形画&lt;br&gt;
面，进行图像叠加处理和图像色彩调节，并将叠加后图像通过多种视频输出端口输出&lt;br&gt;
给显示设备；此外， DISP 支持获取视频输出端口上的包含视频和图形的完整图像。&lt;/p&gt;
&lt;p&gt;窗口类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Display：独立显示窗口&lt;/li&gt;
&lt;li&gt;Virtual：虚拟窗口&lt;/li&gt;
&lt;li&gt;Main：同源显示主窗口&lt;/li&gt;
&lt;li&gt;Slave：同源显示从窗口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730155307.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730155256.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;SO（-Subtitle-Output）&#34;&gt;SO（ Subtitle Output）&lt;/h4&gt;
&lt;h4 id=&#34;PDM&#34;&gt;PDM&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730155248.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;PDM(Product Data Manager)模块用于管理与产品相关的数据，包括基本参数、开机画&lt;br&gt;
面参数及数据、瞬播参数及数据的管理&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730155410.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;用户通过镜像制作工具制作基本参数镜像与瞬播镜像，通过烧写工具烧写至 FLASH，PDM 模块在 BOOT 下将基本参数及瞬播数据读入内存，并传递至 KERNEL。 KERNEL下瞬播从 PDM 模块获取参数及数据，调用 DEMUX、 VDEC、 VO 等模块驱动，完成瞬播播放&lt;/p&gt;
&lt;p&gt;demux&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730155234.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;DEMUX 模块接收 DEMOD 或内存中的 TS 流，按客户应用程序（下简称 APP）的设&lt;br&gt;
置提取出其中的 SEC 数据、 PES 数据、 TS 数据、音频数据和视频数据。 APP 获取&lt;br&gt;
SEC 数据、 PES 数据和 TS 数据进行处理。 AVPLAY 获取音频数据进行处理， VDEC 获&lt;br&gt;
取视频数据进行处理。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730155217.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;AVPLAY 主要依赖 ADEC/VDEC/DEMUX 等模块，其向应用或中间件播放器提供基本&lt;br&gt;
的播放业务相关接口。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730155202.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-5-3798和NVR模块使用方面区别：&#34;&gt;3.5 3798和NVR模块使用方面区别：&lt;/h3&gt;
&lt;p&gt;3798模块中vpss，sync等模块是其它模块自动创建，自动绑定处理的。这点和NVR系列芯片差别很大，nvr中vi，vpss，vo都需要用户自己绑定，设置属性，而3798中vpss，vo创建，属性设置是在上层模块中自动处理的（少量设置属性上层传递下去）。&lt;/p&gt;
&lt;p&gt;​    简单来说，MPP接口只实现了基本的功能接口，没有封装或很少封装。&lt;/p&gt;
&lt;p&gt;UNF 应用层实现了很多业务接口，对底层驱动进行了多层封装，并且实现了一些常用的业务。&lt;/p&gt;
&lt;h2 id=&#34;4-3798代码祥看&#34;&gt;4: 3798代码祥看&lt;/h2&gt;
&lt;h3 id=&#34;4-1-分析方法&#34;&gt;4.1 分析方法&lt;/h3&gt;
&lt;h4 id=&#34;4-1-1：查看代码，静态分析应用层，驱动层实现方法&#34;&gt;4.1.1：查看代码，静态分析应用层，驱动层实现方法&lt;/h4&gt;
&lt;p&gt;​    使用Source insight分析kernel，msp代码。&lt;/p&gt;
&lt;h4 id=&#34;4-1-2：图示静态分析函数调用关系&#34;&gt;4.1.2：图示静态分析函数调用关系&lt;/h4&gt;
&lt;p&gt;​    使用cflow， tree2dotx，和dot生成函数静态调用图。&lt;/p&gt;
&lt;h4 id=&#34;4-1-3：图示动态分析函数调用关系：库函数，系统调用，内核调用&#34;&gt;4.1.3：图示动态分析函数调用关系：库函数，系统调用，内核调用&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;​    使用ltrace分析系统库函数&lt;/li&gt;
&lt;li&gt;​    strace分析系统调用流程&lt;/li&gt;
&lt;li&gt;​    使用Ftrace，valgrind，gprof2dot生成运行时调用图。&lt;/li&gt;
&lt;li&gt;​    Perf分析内核空间调用。发现一些依赖库在ubuntu12.04里面不可用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这一步实现了valgrind动态分析，其它的几个工具需要交叉编译，TODO。使用Perf可能需要换更新的linux版本。&lt;/p&gt;
&lt;p&gt;其它还有time(大概运行时间)，gconv（覆盖率统计）等分析方式。&lt;/p&gt;
&lt;h3 id=&#34;4-2-基础模块：hi-media-hi-mmz-hi-common&#34;&gt;4.2 基础模块：hi_media hi_mmz hi_common&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730155123.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;​    可以从lsmod中很清晰的看出来hi_media hi_mmz hi_common这几个模块的基础地位。hi_media基础模块管理，hi_mmz提供内存管理，hi_common提供proc，log等基础功能，符号导出供其他海思模块使用。&lt;/p&gt;
&lt;p&gt;Common&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;COMMON 模块是 SDK 的基础模块，提供的 API 主要供 SDK 的其他模块调用。&lt;br&gt;
COMMON 模块现在主要有以下功能：
&lt;ul&gt;
&lt;li&gt;系统初始化和去初始化；&lt;/li&gt;
&lt;li&gt;版本信息获取；&lt;/li&gt;
&lt;li&gt;获取时间戳；&lt;/li&gt;
&lt;li&gt;寄存器读写、映射功能；&lt;/li&gt;
&lt;li&gt;MMZ 内存使用；&lt;/li&gt;
&lt;li&gt;调试信息控制；&lt;/li&gt;
&lt;li&gt;Flash 操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-2-1-基本通用模块应用层接口common-api&#34;&gt;4.2.1 基本通用模块应用层接口common/api&lt;/h4&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;HiSTBLinuxFS/source/common/api
mpi_mem.c
MEM_POOL_Init 应用层的内存池，重复利用。
mpi_memmap.c
映射使用链表区分。管理mmap映射
 
 
mpi_module.c
HI_MODULE_Init中有打开内存操作，内存统一管理。
模块id，名称注册，相互查找。
 
mpi_stat.c
线程时间归零，等相关处理
 
hi_common.c
proc，sys一些路径目录增删提供了用户层接口，mmz内存管理用户层接口
 
mpi_userproc
用户层提供线程 通用proc接口，proc读写是在其它模块内部实现的，函数指针形式
 
 
注：himedia 相关模块是海思自己实现的内核子系统。有自己实现的总线，驱动，设备模型结构体。也是在标准linux模型基础上封装的。
 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h4 id=&#34;4-2-2-基本通用模块驱动接口common-dev&#34;&gt;4.2.2 基本通用模块驱动接口common/dev&lt;/h4&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;HiSTBLinuxFS/source/common/dev
drv_dev_ext_k.c 重要
HI_DRV_DEV_Init 所有模块宏定义在这里，注册模块结构体在这里
himedia.c himedia_bash.c     模块注册，注销基础函数
#define DYNAMIC_MINORS 128 /* like dynamic majors */            himedia主设备号218
static unsigned char himedia_minors[DYNAMIC_MINORS / 8];
 
typedef struct tagPM_BASEDEV_S{
    HI_S32        id;
    const HI_S8    * name;
    struct device    dev;
}PM_BASEDEV_S;
 
#define TO_PM_BASEDEV(x) container_of((x), PM_BASEDEV_S, dev)
 
typedef struct tagPM_BASEOPS_S {
    HI_S32  (*probe)(PM_BASEDEV_S *);
    HI_S32  (*remove)(PM_BASEDEV_S *);
    HI_VOID (*shutdown)(PM_BASEDEV_S *);
    HI_S32  (*prepare)(PM_BASEDEV_S *);
    HI_VOID (*complete)(PM_BASEDEV_S *);
    HI_S32  (*suspend)(PM_BASEDEV_S *, pm_message_t state);
    HI_S32  (*suspend_late)(PM_BASEDEV_S *, pm_message_t state);
    HI_S32  (*resume_early)(PM_BASEDEV_S *);
    HI_S32  (*resume)(PM_BASEDEV_S *);
}PM_BASEOPS_S;
 
 
typedef struct tagPM_BASEDRV_S {
    HI_S32  (*probe) (PM_BASEDEV_S *);
    HI_S32  (*remove)(PM_BASEDEV_S *);
    HI_VOID (*shutdown)(PM_BASEDEV_S *);
    HI_S32  (*suspend)(PM_BASEDEV_S *, pm_message_t state);
    HI_S32  (*suspend_late)(PM_BASEDEV_S *, pm_message_t state);
    HI_S32  (*resume_early)(PM_BASEDEV_S *);
    HI_S32  (*resume)(PM_BASEDEV_S *);
    struct device_driver driver;
}PM_BASEDRV_S;
 
typedef struct tagPM_DEVICE_S  {
    HI_S32 minor;
    const HI_S8 *name;
    struct module *owner;
    const struct file_operations *app_ops;
    PM_BASEOPS_S *base_ops;
    struct list_head list;
    struct device *app_device;
    PM_BASEDEV_S *base_device;
    PM_BASEDRV_S *base_driver;
}PM_DEVICE_S;
 
static struct class *himedia_class;
static struct file_operations himedia_fops = {
    .owner        = THIS_MODULE,
    .open        = himedia_open,
};
 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h5 id=&#34;设备模型结构体&#34;&gt;设备模型结构体&lt;/h5&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;struct himedia_devobj {
    PM_BASEDEV_S pdev;
    char name[1];
};
 
typedef struct tagPM_BASEDEV_S{
    HI_S32        id;
    const HI_S8    * name;
    struct device    dev;
}PM_BASEDEV_S;
 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h5 id=&#34;海思模块顶层总线himedia-bus&#34;&gt;海思模块顶层总线himedia_bus&lt;/h5&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;struct device himedia_bus = {
         .init_name        = &#34;himediaBusDev&#34;,
         .release    = himedia_bus_release
};  /*top level bus, parent and bus member are both NULL*//*CNcomment:这是顶层总线，parent 和 bus 成员为 NULL*/
struct bus_type himedia_bus_type = {
         .name                = &#34;himediaBus&#34;,
         .dev_attrs        = himedia_dev_attrs,
         .match               = himedia_match,
         .uevent              = himedia_uevent,
         .pm                     = HIMEDIA_PM_OPS_PTR,
};
定义HIMEDIA_PM_OPS_PTR
                            static struct dev_pm_ops himedia_dev_pm_ops = {
                                     .prepare        = himedia_pm_prepare,
                                     .complete       = himedia_pm_complete,
                                     .suspend        = himedia_pm_suspend,
                                     .resume         = himedia_pm_resume,
                                     .freeze         = himedia_pm_freeze,
                                     .thaw           = himedia_pm_thaw,
                                     .poweroff       = himedia_pm_poweroff,
                                     .restore        = himedia_pm_restore,
                                     .suspend_noirq  = himedia_pm_suspend_noirq,
                                     .resume_noirq   = himedia_pm_resume_noirq,
                                     .freeze_noirq   = himedia_pm_freeze_noirq,
                                     .thaw_noirq     = himedia_pm_thaw_noirq,
                                     .poweroff_noirq = himedia_pm_poweroff_noirq,
                                     .restore_noirq  = himedia_pm_restore_noirq,
                            };
                            #define HIMEDIA_PM_OPS_PTR     (&amp;amp;himedia_dev_pm_ops)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730154854.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730154845.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;内核到用户往用户空间写文件调试&#34;&gt;内核到用户往用户空间写文件调试&lt;/h5&gt;
&lt;p&gt;drv_file_ext.c 提供内核空间创建，读写用户空间文件函数，/mnt文件存储路径。提供了内核数据导出到用户空间的方法。&lt;/p&gt;
&lt;p&gt;应该是echo * &amp;gt; /proc/msp/** 这种调试方式的实现方式&lt;/p&gt;
&lt;h5 id=&#34;内核log日志&#34;&gt;内核log日志&lt;/h5&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;drv_log_ioctl.h  打印日志相关。  这里日志位置可选0:串口 1:网络 2:U盘
/*structure of mode log level */
/*CNcomment: 模块打印级别控制信息结构 */
typedef struct hiLOG_CONFIG_INFO_S
{
    HI_U8 ModName[16+12];     /*mode name 16 + &#39;_&#39; 1 + pid 10 */
    HI_U8 u8LogLevel;         /*log level*//*CNcomment:  模块打印级别控制 */
    HI_U8 u8LogPrintPos;      /*log output location, 0:serial port; 1:network;2:u-disk*//*CNcomment:  模块打印位置控制 0:串口 1:网络 2:U盘 */
    HI_U8 u8UdiskFlag;        /* u-disk log flag */
}LOG_CONFIG_INFO_S;

hi_debug.h    log调试级别
/**Default level of the output debugging information*/
/**CNcomment: 默认的调试信息输出级别*/
#define HI_LOG_LEVEL_DEFAULT HI_LOG_LEVEL_ERROR
 
/**Level of the output debugging information*/
/**CNcomment: 调试信息输出级别*/
typedef enum hiLOG_LEVEL_E
{
    HI_LOG_LEVEL_FATAL   = 0,     /**&amp;lt;Fatal error. It indicates that a critical problem occurs in the system. Therefore, you must pay attention to it.*/
                                  /**&amp;lt;CNcomment: 致命错误, 此类错误需要特别关注，一般出现此类错误代表系统出现了重大问题 */
    HI_LOG_LEVEL_ERROR   = 1,     /**&amp;lt;Major error. It indicates that a major problem occurs in the system and the system cannot run.*/
                                  /**&amp;lt;CNcomment: 一般错误, 一般出现此类错误代表系统出现了比较大的问题，不能再正常运行 */
    HI_LOG_LEVEL_WARNING = 2,     /**&amp;lt;Warning. It indicates that a minor problem occurs in the system, but the system still can run properly.*/
                                  /**&amp;lt;CNcomment: 告警信息, 一般出现此类信息代表系统可能出现问题，但是还能继续运行 */
    HI_LOG_LEVEL_INFO    = 3,     /**&amp;lt;Message. It is used to prompt users. Users can open the message when locating problems. It is recommended to disable this message in general.*/
                                  /**&amp;lt;CNcomment: 提示信息, 一般是为提醒用户而输出，在定位问题的时候可以打开，一般情况下建议关闭 */
    HI_LOG_LEVEL_DBG     = 4,     /**&amp;lt;Debug. It is used to prompt developers. Developers can open the message when locating problems. It is recommended to disable this message in general.*/
                                  /**&amp;lt;CNcomment: 提示信息, 一般是为开发人员调试问题而设定的打印级别，一般情况下建议关闭 */
 
    HI_LOG_LEVEL_BUTT
} HI_LOG_LEVEL_E;
 
drv_media_mem_v2.c    实现了cat /proc/media-mem
 
drv_mem_ext.c 实现了 KMEM_POOL_S 的管理，&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h5 id=&#34;内核模块管理&#34;&gt;内核模块管理&lt;/h5&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;drv_module_ext.c

COMMON_DRV_ModInit

         MMNGR_DRV_ModInit

        

    s32Ret = HI_DRV_MODULE_Register(HI_ID_SYS,    &#34;HI_SYS&#34;,      HI_NULL);

    s32Ret |= HI_DRV_MODULE_Register(HI_ID_MODULE, &#34;HI_MODULE&#34;,   HI_NULL);

    s32Ret |= HI_DRV_MODULE_Register(HI_ID_LOG,    &#34;HI_LOG&#34;,      HI_NULL);

    s32Ret |= HI_DRV_MODULE_Register(HI_ID_PROC,   &#34;HI_PROC&#34;,     HI_NULL);

    s32Ret |= HI_DRV_MODULE_Register(HI_ID_STAT,   &#34;HI_STAT&#34;,     HI_NULL);

    s32Ret |= HI_DRV_MODULE_Register(HI_ID_MEM,    &#34;HI_MEM&#34;,      HI_NULL);

 

drv_media_mem.c  使用dma_alloc_from_contiguous来分配

HI_DRV_MMZ_Init 这里根据bootargs传递的mmz参数分配内存大小。 mmz分配时的参数：&amp;lt;mmz_name&amp;gt;,&amp;lt;gfp&amp;gt;,&amp;lt;phys_start_addr&amp;gt;,&amp;lt;size&amp;gt;,&amp;lt;alloc_type&amp;gt;&#34;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730154720.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;内核Proc的实现&#34;&gt;内核Proc的实现&lt;/h5&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;drv_proc_ext.c
HI_DRV_PROC_Init 实现cat /proc/hisi/msp/
    proc_mkdir(&#34;graphics&#34;, g_pHisi_proc);
    proc_symlink(&#34;msp&#34;, NULL, &#34;hisi/msp&#34;);
    proc_symlink(&#34;graphics&#34;, NULL, &#34;hisi/graphics&#34;);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;drv_userproc.c    proc使用红黑树管理目录路径&lt;/p&gt;
&lt;p&gt;​    创建销毁目录，路径在这里实现，具体每一个不同模块的proc文件读写在每个模块内部实现，使用函数指针。&lt;/p&gt;
&lt;h4 id=&#34;4-2-3-业务模块应用层通用组件source-component&#34;&gt;4.2.3 业务模块应用层通用组件source/component&lt;/h4&gt;
&lt;p&gt;/home/andy/HiSTBLinuxFS/source/component  &lt;a href=&#34;http://xn--ciqz3l2zejvhba81ax77b534ada8984d6qek8t.so&#34;&gt;这个目录里面很多目录只有.so&lt;/a&gt; .a库，没有源代码。&lt;/p&gt;
&lt;p&gt;/source/component/hiplayer 没有源码。&lt;/p&gt;
&lt;p&gt;hi_debug.h   各种调试宏定义，不同级别调试定义&lt;/p&gt;
&lt;p&gt;HI_MALLOC   内存分配使用了内核链表管理&lt;/p&gt;
&lt;p&gt;内存在一个模块内分配，往用户空间传递物理地址，其它模块使用这个物理地址映射到虚拟地址，这样来共享内存&lt;/p&gt;
&lt;p&gt;​    海思这里大多数模块都只提供了编译后的库&lt;/p&gt;
&lt;h3 id=&#34;4-3-海思专用组件&#34;&gt;4.3 海思专用组件&lt;/h3&gt;
&lt;h4 id=&#34;4-3-1-海思MSP模块应用层接口source-msp-api&#34;&gt;4.3.1 海思MSP模块应用层接口source/msp/api&lt;/h4&gt;
&lt;h5 id=&#34;Avplay分析&#34;&gt;Avplay分析&lt;/h5&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;HI_MPI_AVPLAY_Create
         AVPLAY_FrcCreate  帧率控制？    
         HI_MPI_SYNC_Create     音视频同步
         AVPLAY_CreateThread&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;​     &lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730154354.svg&#34; alt=&#34;HI_MPI_AVPLAY_Create.__avplay_mpi_avplay_c&#34;&gt;&lt;/p&gt;
&lt;p&gt;上图插图的是svg格式图片，可以使用IE，firefox打开，最好使用专门的看图软件打开。&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;HI_MPI_VDEC_AllocChan
         VPSS_Control(pstVdec-&amp;gt;hVdec,VPSS_CMD_CREATEVPSS,&amp;amp;(pstVdec-&amp;gt;hVpss))
        
UNF调用一般过程，最终采用ioctl调用驱动   
HI_UNF_AVPLAY_GetBuf
         HI_MPI_AVPLAY_GetBuf
                   HI_MPI_VDEC_ChanGetBuffer
                            VDEC_GetStreamBuf                /* If get but not put, return last address */    这里有对不对称调用特殊处理
                                     ioctl(s_stVdecAdpParam.s32DevFd, UMAPC_VDEC_GETBUF, &amp;amp;stBufParam);     
                                    
HI_MPI_AVPLAY_Start
         AVPLAY_StartVidChn
                   HI_MPI_SYNC_Start
                   HI_MPI_VDEC_ChanStart
                             ioctl(g_SyncDevFd, CMD_SYNC_START_SYNC, &amp;amp;SyncId);
         HI_MPI_SYNC_Play 结构体状态改变
         AVPLAY_Play             结构体状态控制
         HI_MPI_STAT_Event                                   
 
HI_MPI_AVPLAY_Stop
         AVPLAY_StopVidChn
                   HI_MPI_VDEC_ChanStop
                            VDEC_ChanStop      这里调用函数指针
                   HI_MPI_VDEC_ResetChan
                            VDEC_ResetStreamBuf
                            VDEC_VPSSCMD(hVdec, VPSS_CMD_RESETVPSS, HI_NULL);         调用函数指针，指向VPSS_Control
                   AVPLAY_ResetWindow
                   HI_MPI_SYNC_Stop
         HI_MPI_STAT_Event(STAT_EVENT_VSTOP, 0);
 
VDEC使用函数指针集来支持多种解码方式，内部vfmw。mjpeg，内部硬件265协处理器
mpi_vdec_vpu.c
HI_MPI_VDEC_Init
         HI_CODEC_Register(VDEC_MJPEG_Codec());
         HI_CODEC_Register(VDEC_VFMW_Codec());
 
static HI_CODEC_S hi_codecVPU_entry =
{
    .pszName                  = &#34;VPU&#34;,
    .unVersion                 = {.stVersion = {1, 0, 0, 0}},
    .pszDescription = &#34;Hisilicon H265 codec&#34;,
 
    .GetCap                      = HI_VPU_GetCap,
    .Create                       = HI_VPU_Create,
    .Destroy            = HI_VPU_Destroy,
    .Start                           = HI_VPU_Start,
    .Stop                            = HI_VPU_Stop,
    .Reset                         = HI_VPU_Reset,
    .SetAttr             = HI_VPU_SetAttr,
    .GetAttr            = HI_VPU_GetAttr,
    .DecodeFrame          = HI_VPU_DecodeFrame,
    .EncodeFrame = HI_NULL,
    .RegFrameBuffer = HI_VPU_RegFrameBuffer,
    .GetStreamInfo        = HI_VPU_GetStreamInfo,
    .Control             = HI_VPU_Control,
};
 
avplay，vi和 vo之间使用vpss关联。
HI_UNF_VO_DetachWindow
         HI_MPI_AVPLAY_DetachWindow
                   HI_MPI_VDEC_DestroyPort
         HI_MPI_VI_Detach(hSrc, hWindow);
                   VI_DetachFromVpss
        
HI_MPI_AVPLAY_ChnClose
         AVPLAY_FreeVidChn
                   HI_MPI_VDEC_ChanBufferDeInit
                            VDEC_VFMWSpecCMD(hVdec, VFMW_CMD_DETACHBUF, HI_NULL);
                            VDEC_DestroyStreamBuf(pstVdec-&amp;gt;hStreamBuf);                   ummap内存块，ioctl通知内核vdec销毁内存
                   AVPLAY_FreeVdec
                            HI_MPI_VDEC_FreeChan
                                     VPSS_Control(pstVdec-&amp;gt;hVdec,VPSS_CMD_DESTORYVPSS,&amp;amp;(pstVdec-&amp;gt;hVpss));
                                     VDEC_DestroyCodec(pstVdec);
 
HI_UNF_AVPLAY_Destroy
         HI_MPI_AVPLAY_Destroy
                   HI_MPI_SYNC_Destroy(pAvplay-&amp;gt;hSync);
                   ioctl(g_AvplayDevFd, CMD_AVPLAY_DESTROY, &amp;amp;AvplayUsrAddr.AvplayId);
                  
avplay内部的线程
    (HI_VOID)pthread_join(pAvplay-&amp;gt;AvplayDataThdInst, HI_NULL);
#ifdef AVPLAY_VID_THREAD
    (HI_VOID)pthread_join(pAvplay-&amp;gt;AvplayVidDataThdInst, HI_NULL);
#endif
    (HI_VOID)pthread_join(pAvplay-&amp;gt;AvplayStatThdInst, HI_NULL);          &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h4 id=&#34;4-3-2-海思MSP模块驱动层接口source-msp-drv&#34;&gt;4.3.2 海思MSP模块驱动层接口source/msp/drv/&lt;/h4&gt;
&lt;h5 id=&#34;VENC&#34;&gt;VENC&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730161000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;VENC 模块的具体工作原理如上图所示，注意图中褐色箭头，是 VENC 调用到VPSS 模块，来对帧信息做缩放处理后编码的数据流，该处理只用于外部用户送帧的模式。若在绑定情况下出现帧信息分辨率与编码分辨率不匹配， VENC 模块会通知绑定的前级模块进行缩放处理，而不会自行调用 VPSS 模块缩放。&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;VENC_DRV_ModInit
         VENC_DRV_Init
                   HI_DRV_MODULE_Register(HI_ID_VENC, &#34;HI_VENC&#34;, (HI_VOID*)&amp;amp;s_VencExportFuncs);
                            MODULE_DRV_Register
                                     ModuleMgr_Link_AddNode(g_pstKModuleHeader, &amp;amp;stModule); 链表管理
                                     LOGAddModule((HI_PCHAR)pu8ModuleName, (HI_MOD_ID_E)u32ModuleID);  在log模块中注册
         HI_DRV_DEV_Register(&amp;amp;g_VencRegisterData)
                   HI_DRV_PM_Register     海思模块管理非常重要的模块，了解这个函数实现过程就大概明白海思内核模块实现思想了
         VENC_DRV_BoardDeinit();      一些寄存器配置，reset，clock操作。
         venc调用硬件协处理器，涉及263,264，mpeg4，
    snprintf(g_VencRegisterData.devfs_name, 64, &#34;%s&#34;, UMAP_DEVNAME_VENC);
    g_VencRegisterData.fops   = &amp;amp;VENC_FOPS;
    g_VencRegisterData.minor  = UMAP_MIN_MINOR_VENC;
    g_VencRegisterData.owner  = THIS_MODULE;
    g_VencRegisterData.drvops = &amp;amp;venc_drvops;      &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h5 id=&#34;avplay&#34;&gt;avplay&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730154040.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AVPLAY 主要由以下三部分组成：
&lt;ul&gt;
&lt;li&gt;音视频解码器&lt;/li&gt;
&lt;li&gt;同步播放控制模块&lt;/li&gt;
&lt;li&gt;命令与状态管理模块&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主要负责响应外部控制命令的执行、状态查询上报、使解码后的帧数据通过同步控制&lt;br&gt;
模块输出&lt;/p&gt;
&lt;h5 id=&#34;avplay初始化分析&#34;&gt;avplay初始化分析&lt;/h5&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;AVPLAY_DRV_ModInit
​    HI_DRV_MODULE_Register
​         HI_DRV_MODULE_Register(HI_ID_AVPLAY, AVPLAY_NAME, HI_NULL);
​             ModuleMgr_Link_AddNode  内核模块管理
​             KMODULE_MEM_POOL_AddModule
​                 KMODULE_MEM_POOL_FindNode    找到空的没有使用的节点
​                 KMODULE_MEM_POOL_MALLOC 分配内存，然后放到链表
​             LOGAddModule                    日志
​    HI_DRV_DEV_Register(&amp;amp;g_AvplayRegisterData)
​         HI_DRV_PM_Register(&amp;amp;s_umap_devs[i]);   himedia封装处理
​             himedia_device_alloc(himedia-&amp;gt;name, -1);
​             himedia_device_add(bdev);
​                 dev_set_name(&amp;amp;pdev-&amp;gt;dev, &#34;%s.%d&#34;, pdev-&amp;gt;name, pdev-&amp;gt;id);
​                 device_add(&amp;amp;pdev-&amp;gt;dev);
​             device_create(himedia_class, &amp;amp;(bdev-&amp;gt;dev), dev, NULL, &#34;%s&#34;, himedia-&amp;gt;name);
​             himedia_driver_alloc(himedia-&amp;gt;name, himedia-&amp;gt;owner, himedia-&amp;gt;base_ops);
​             himedia_driver_register(bdrv);
​                 driver_register(&amp;amp;drv-&amp;gt;driver);
​   
 
  g_AvplayRegisterData.fops = &amp;amp;AVPLAY_FOPS;
  g_AvplayRegisterData.minor = UMAP_MIN_MINOR_AVPLAY;
  g_AvplayRegisterData.owner = THIS_MODULE;
  g_AvplayRegisterData.drvops = &amp;amp;AVPLAY_DRVOPS;  
 
  s_umap_devs[i].minor = umapd-&amp;gt;minor;
  s_umap_devs[i].name = umapd-&amp;gt;devfs_name;
  s_umap_devs[i].owner = umapd-&amp;gt;owner;
  s_umap_devs[i].app_ops = umapd-&amp;gt;fops;
  s_umap_devs[i].base_ops = umapd-&amp;gt;drvops;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h5 id=&#34;IOCTL实现分析-基于avplay&#34;&gt;IOCTL实现分析 基于avplay&lt;/h5&gt;
&lt;p&gt;在HI_DRV_DEV_Register&lt;strong&gt;中注册&lt;/strong&gt;&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;static struct file_operations AVPLAY_FOPS =
{
    .owner          =  THIS_MODULE,
    .open           =  AVPLAY_DRV_Open,
    .unlocked_ioctl =  AVPLAY_DRV_Ioctl,
    .release        =  AVPLAY_DRV_Close,
};      
AVPLAY_DRV_Ioctl
         HI_DRV_UserCopy(ffile-&amp;gt;f_dentry-&amp;gt;d_inode, ffile, cmd, arg, AVPLAY_Ioctl);
                   func(inode, file, cmd, (parg));           这里对ioctl进行了一层封装，copy_from_user，copy_to_user的自动化处理
AVPLAY_Ioctl(struct inode *inode, struct file *file, unsigned int cmd, HI_VOID *arg)  
                   CMD_AVPLAY_CREATE            
                            AVPLAY_Create
                                     HI_DRV_MMZ_AllocAndMap(BufName, MMZ_OTHERS, 0x2000, 0, &amp;amp;MemBuf);
                                     HI_DRV_PROC_AddModule(ProcName, HI_NULL, HI_NULL);                 这里实现了proc目录的生成，下面是读写proc
                                pProcItem-&amp;gt;read = AVPLAY_ProcRead;
                                pProcItem-&amp;gt;write = AVPLAY_ProcWrite;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h5 id=&#34;avplay-多个实例如何找到对应实例&#34;&gt;avplay 多个实例如何找到对应实例&lt;/h5&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;AVPLAY_GET_INST_AND_LOCK();
         AVPLAY_CheckHandle
                   pAvplayUsrAddr-&amp;gt;AvplayId = hAvplay &amp;amp; 0xff;
                   ioctl(g_AvplayDevFd, CMD_AVPLAY_CHECK_ID, pAvplayUsrAddr);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;drv中的实现&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;AVPLAY_Ioctl            
         AVPLAY_CheckId              
                   pAvplayUsrAddr-&amp;gt;AvplayUsrAddr = g_AvplayGlobalState.AvplayInfo[pAvplayUsrAddr-&amp;gt;AvplayId].AvplayUsrAddr;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h5 id=&#34;VPSS&#34;&gt;VPSS&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730153749.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;    g_VpssRegisterData.fops   = &amp;amp;s_VpssFileOps;
    g_VpssRegisterData.minor  = UMAP_MIN_MINOR_VPSS;
    g_VpssRegisterData.owner  = THIS_MODULE;
g_VpssRegisterData.drvops = &amp;amp;s_VpssBasicOps;
VPSS_DRV_Init
VPSS_CTRL_Init
         VPSS_CTRL_RegistISR     注册中断
         VPSS_CTRL_InitInstList((VPSS_IP_E)i)     管理vpss实例链表初始化
         VPSS_HAL_Init                   内存，寄存器配置
         VPSS_CTRL_CreateThread      内核线程
                   VPSS_CTRL_ThreadProc
                            VPSS_CTRL_CreateTask           创建任务
                            VPSS_CTRL_StartTask               开始任务&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h5 id=&#34;VDEC-2&#34;&gt;VDEC&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730153702.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730153709.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;Avplay解码ES流过程&#34;&gt;Avplay解码ES流过程&lt;/h5&gt;
&lt;p&gt;步骤 1 初始化并配置相关设备，如 DISPLAY、 VO、 SOUND、 DEMUX 设备等。&lt;br&gt;
步骤 2 调用 HI_UNF_AVPLAY_Init 接口初始化 AVPLAY 设备。&lt;br&gt;
步骤 3 调用 HI_UNF_AVPLAY_GetDefaultConfig 接口获取缺省的 AVPLAY 配置，注意选择HI_UNF_AVPLAY_STREAM_TYPE_ES 模式。&lt;br&gt;
步骤 4 根据应用需要，修改码流属性参数。&lt;br&gt;
步骤 5 调用 HI_UNF_AVPLAY_Create 接口创建 AVPLAY 播放器。&lt;br&gt;
步骤 6 调用 HI_UNF_AVPLAY_ChnOpen 接口打开音频或视频通道。&lt;/p&gt;
&lt;p&gt;步骤 7 调用 HI_UNF_AVPLAY_SetAttr 接口设置音频解码器或视频解码器属性，同步设置为自由播放。&lt;br&gt;
步骤 8 调用 HI_UNF_SND_CreateTrack 创建 Track。&lt;br&gt;
步骤 9 调用 HI_UNF_SND_Attach 接口将音频播放器与 Track 绑定。&lt;br&gt;
步骤 10 调用 HI_UNF_VO_AttachWindow 接口将视频播放器与 VO 的窗口绑定。&lt;br&gt;
步骤 11 调用 HI_UNF_VO_SetWindowEnable 接口使能窗口。&lt;br&gt;
步骤 12 调用 HI_UNF_AVPLAY_Start 接口发送 Start 命令，开始播放音频或视频。&lt;br&gt;
步骤 13 调用 HI_UNF_AVPLAY_GetBuf 接口申请存放音频或视频的缓冲区。&lt;br&gt;
步骤 14 通过内存拷贝或文件读取等方式，将音频或视频数据直接写到缓冲区中。&lt;br&gt;
步骤 15 调用 HI_UNF_AVPLAY_PutBuf 接口更新音视频缓冲区中的读写指针。&lt;br&gt;
步骤 16 播放任务结束后，首先调用 HI_UNF_AVPLAY_Stop 接口停止 AVPLAY，再调用HI_UNF_AVPLAY_Destroy 接口销毁 AVPLAY，释放相关资源。&lt;br&gt;
步骤 17 关闭相关设备，如 DISPLAY 设备、 VO 设备、 SOUND 设备、 DEMUX 设备和AVPLAY&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730164615.svg&#34; alt=&#34;HI_MPI_AVPLAY_Create.__avplay_mpi_avplay_c&#34;&gt;&lt;/p&gt;
&lt;p&gt;MCE实现了启动过程画面的平滑切换&lt;/p&gt;
&lt;h5 id=&#34;IR&#34;&gt;IR&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730153646.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;驱动层&lt;/p&gt;
&lt;p&gt;负责完成红外模块的中断处理，在底半部中遍历所有协议并调用 match 函数来判定当前收到的红外帧属于哪种协议。如果没有匹配，则丢弃当前帧。完成最顶层的错误处理：如果当前帧当前时刻还不能被解析，则会等待大约 200ms 之后再次尝试，如果失败，则丢弃当前帧。&lt;/p&gt;
&lt;p&gt;协议适配层&lt;/p&gt;
&lt;p&gt;完成各个协议的初始化工作，向上提供遍历协议的接口，向下提供容纳协议描述符的存储空间。&lt;/p&gt;
&lt;p&gt;协议处理层&lt;/p&gt;
&lt;p&gt;协议处理层完成判定：由从某个 symbol 开始的一连串 symbol 是不是符合本协议的一&lt;br&gt;
帧。在判定某一帧符合本协议的前提条件下，完成一帧 symbol 的解析，将对应的键值解析出来。如果在解析过程中出错，或者判定是本协议的帧，但无法解析时，完成错误处理。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730153556.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730153604.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730153611.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730153623.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730153630.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;4-4-Sample-mosaic分析&#34;&gt;4.4 Sample_mosaic分析&lt;/h4&gt;
&lt;h5 id=&#34;应用层调用&#34;&gt;应用层调用&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730153315.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上图是部分截图，完整大的原图见目录中svg文件&lt;/p&gt;
&lt;p&gt;valgrind --tool=callgrind ./sample_mosaic 1080P.h264 h264&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730153400.svg&#34; alt=&#34;samplemosaic-callgrind-all&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;系统调用&#34;&gt;系统调用&lt;/h5&gt;
&lt;p&gt;Strace分析&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.fun/data/2021/07/3020210730153300.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-小结：&#34;&gt;5:小结：&lt;/h2&gt;
&lt;p&gt;海思MPI驱动其实就是在标准linux驱动基础之上封装了一层，增加了log，proc，内存管理（映射，链表）功能。MPI是在标准linux驱动基础上封装了DVR常用外围逻辑接口，并且统一并简化了接口操作方式，原来各个外围子系统操作方式差别很大，不同实现框架，实现方式使用方法也不一样（如VI，VO，AI/AO，VPSS，如果自己用标准linux子系统实现要复杂得多）。&lt;/p&gt;
&lt;p&gt;应用层MPI接口是在MPI驱动基础上再次封装了一层，封装了驱动的调用，配置等操作，在驱动功能的基础上进一步封装完成了一些简单的业务功能接口，方便了用户的使用。UNF就是在MPI基础上增加了业务逻辑封装，把常用的业务逻辑封装成接口，大大方便用户的应用程序开发。&lt;/p&gt;
&lt;h3 id=&#34;5-1-UNF相对标准内核模块区别&#34;&gt;5.1 UNF相对标准内核模块区别&lt;/h3&gt;
&lt;h4 id=&#34;5-1-1-Proc读写调试。&#34;&gt;5.1.1 Proc读写调试。&lt;/h4&gt;
&lt;p&gt;实时查询运行状态，修改设置。通用的proc目录、文件创建销毁有通用接口。读写proc文件在每个内核模块中有单独实现。&lt;/p&gt;
&lt;h4 id=&#34;5-1-2-内核空间往应用空间写文件&#34;&gt;5.1.2 内核空间往应用空间写文件&lt;/h4&gt;
&lt;p&gt;方便调试，Dump内核数据到用户控件方便定位Bug。&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;HI_DRV_FILE_Open
filp_open
HI_DRV_FILE_Close
​    filp_close
HI_DRV_FILE_Read
​    pFile-&amp;gt;f_op-&amp;gt;read
HI_DRV_FILE_Write
​    pFile-&amp;gt;f_op-&amp;gt;write
HI_DRV_FILE_Lseek
​    vfs_llseek&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h4 id=&#34;5-1-3Log管理&#34;&gt;5.1.3Log管理&lt;/h4&gt;
&lt;p&gt;日志打印分级，实时修改。如何实现的见前面章节。&lt;/p&gt;
&lt;h4 id=&#34;5-1-4内存映射&#34;&gt;5.1.4内存映射&lt;/h4&gt;
&lt;p&gt;物理地址，虚拟地址映射关系管理，小块内存使用kmalloc申请，大块内存使用dma_alloc_from_contiguous申请。&lt;/p&gt;
&lt;p&gt;使用内核链表管理。&lt;/p&gt;
&lt;p&gt;打印到proc，log模块中，实时查看运行状态，内存。&lt;/p&gt;
&lt;p&gt;方便查找，打印。&lt;/p&gt;
&lt;p&gt;在多个内核共享数据也是这样实现的。&lt;/p&gt;
&lt;h3 id=&#34;5-2代码分析方法&#34;&gt;5.2代码分析方法&lt;/h3&gt;
&lt;h4 id=&#34;5-2-1-查看代码，静态分析应用层，驱动层实现方法&#34;&gt;5.2.1 查看代码，静态分析应用层，驱动层实现方法&lt;/h4&gt;
&lt;h4 id=&#34;5-2-2-图示静态分析函数调用关系&#34;&gt;5.2.2 图示静态分析函数调用关系.&lt;/h4&gt;
&lt;p&gt;Cflow, dot&lt;/p&gt;
&lt;h4 id=&#34;5-2-3-图示动态分析函数调用关系：库函数，系统调用，内核调用&#34;&gt;5.2.3 图示动态分析函数调用关系：库函数，系统调用，内核调用&lt;/h4&gt;
&lt;p&gt;​    Ltrace, strace, valgrind, perf&lt;/p&gt;
&lt;p&gt;具体分析方法，使用工具见前面章节。&lt;/p&gt;
&lt;h2 id=&#34;参考文档：&#34;&gt;参考文档：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;03-HMS 开发指南.pdf&lt;/li&gt;
&lt;li&gt;HiSTBAndroidV600R001C00SPC060_cn\document\01-Development Guide&lt;/li&gt;
&lt;li&gt;HiMPP V3.0 媒体处理软件开发参考.pdf&lt;/li&gt;
&lt;li&gt;HiSTBAndroidV600R001C00SPC060_cn\document\01-Development Guide&lt;/li&gt;
&lt;li&gt;3798m SDK 代码&lt;/li&gt;
&lt;li&gt;HMS API Development Reference.chm&lt;/li&gt;
&lt;li&gt;HiSTBAndroidV600R001C00SPC060_cn\document\01-Development Guide\09-API Reference&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;相关文章&#34;&gt;相关文章&lt;/h2&gt;
&lt;div class=&#34;vkr-url-wrapper&#34;&gt;
    
        &lt;a href=&#34;/posts/ed364362/&#34;&gt;&lt;img class=&#34;avatar&#34; src=&#34;/medias_webp/cover/linux.webp&#34;&gt;&lt;/a&gt;
    
    &lt;div class=&#34;desc-wrapper&#34;&gt;
        &lt;a href=&#34;/posts/ed364362/&#34;&gt;如何编写Linux驱动&lt;/a&gt;
        &lt;hr&gt;
        &lt;div class=&#34;desc&#34;&gt;本文介绍了编写驱动必备基础知识，编写驱动的难点之处。并从按键驱动到Sensor驱动简单介绍示范了驱动编写过程。并给出了驱动学习方法和评价驱动能力的技术指标！&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;vkr-url-wrapper&#34;&gt;
    
        &lt;a href=&#34;/posts/6b2ba137/&#34;&gt;&lt;img class=&#34;avatar&#34; src=&#34;/medias_webp/cover/3g4g.webp&#34;&gt;&lt;/a&gt;
    
    &lt;div class=&#34;desc-wrapper&#34;&gt;
        &lt;a href=&#34;/posts/6b2ba137/&#34;&gt;3G,4G,Wifi选型需求分析及技术简介&lt;/a&gt;
        &lt;hr&gt;
        &lt;div class=&#34;desc&#34;&gt;详细介绍了3G，4G，wifi技术类型，选型，移植，性能介绍全过程。写了好多年了，禁止转载，第一次公开发表。&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;vkr-url-wrapper&#34;&gt;
    
        &lt;a href=&#34;/posts/13894dce/&#34;&gt;&lt;img class=&#34;avatar&#34; src=&#34;/medias_webp/cover/hisi.webp&#34;&gt;&lt;/a&gt;
    
    &lt;div class=&#34;desc-wrapper&#34;&gt;
        &lt;a href=&#34;/posts/13894dce/&#34;&gt;海思MPP&amp;amp;UNF构架源代码级分析&lt;/a&gt;
        &lt;hr&gt;
        &lt;div class=&#34;desc&#34;&gt;行业中分析海思MPP内核构架，源码分析，多年经验总结积累结果。写了好多年了，禁止转载，第一次公开发表。&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;vkr-url-wrapper&#34;&gt;
    
        &lt;a href=&#34;/posts/ffcce55d/&#34;&gt;&lt;img class=&#34;avatar&#34; src=&#34;/medias_webp/cover/os.webp&#34;&gt;&lt;/a&gt;
    
    &lt;div class=&#34;desc-wrapper&#34;&gt;
        &lt;a href=&#34;/posts/ffcce55d/&#34;&gt;如何实现自己的操作系统&lt;/a&gt;
        &lt;hr&gt;
        &lt;div class=&#34;desc&#34;&gt;作为一个程序员，你肯定设想过创造属于自己的操作系统，这其中涉及非常多的知识。本文大概介绍了涉及的知识点，并给出了相关书籍和参考源代码仓库！&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;vkr-url-wrapper&#34;&gt;
    
        &lt;a href=&#34;/posts/32570315/&#34;&gt;&lt;img class=&#34;avatar&#34; src=&#34;/medias_webp/cover/compiler.webp&#34;&gt;&lt;/a&gt;
    
    &lt;div class=&#34;desc-wrapper&#34;&gt;
        &lt;a href=&#34;/posts/32570315/&#34;&gt;手把手教你构建 C 语言编译器&lt;/a&gt;
        &lt;hr&gt;
        &lt;div class=&#34;desc&#34;&gt;“手把手教你构建 C 语言编译器” 这一系列教程将带你从头编写一个 C 语言的编译器。希望通过这个系列，我们能对编译器的构建有一定的了解，同时，我们也将构建出一个能用的 C 语言编译器，尽管有许多语法并不支持。&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;系列教程&#34;&gt;&lt;strong&gt;系列教程&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;/atom.xml&#34;&gt;&lt;i class=&#34;fas fa-rss&#34;&gt;&lt;/i&gt;全部文章RSS订阅&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;Embeded系列&#34;&gt;&lt;strong&gt;Embeded系列&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;/categories/embeded/atom.xml&#34;&gt;&lt;i class=&#34;fas fa-rss&#34;&gt;&lt;/i&gt;&lt;strong&gt;Embeded 分类 RSS 订阅&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/posts/13894dce/&#34;&gt;海思MPP&amp;amp;UNF构架源代码级分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/6b2ba137/&#34;&gt;3G,4G,Wifi选型需求分析及技术简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/509c7bd3/&#34;&gt;自动曝光原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/798e6e62/&#34;&gt;ISP 数字图像处理 算法概述、工作原理、架构、处理流程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
