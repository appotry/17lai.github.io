<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.17lai.site</id>
    <title>夜法之书 • Posts by &#34;embeded&#34; category</title>
    <link href="https://blog.17lai.site" />
    <updated>2022-03-24T13:13:38.000Z</updated>
    <category term="web" />
    <category term="http" />
    <category term="github" />
    <category term="jekyll" />
    <category term="blog" />
    <category term="linux" />
    <category term="hardlink" />
    <category term="bt" />
    <category term="pt" />
    <category term="gitlab" />
    <category term="git" />
    <category term="crack" />
    <category term="markdown" />
    <category term="picgo" />
    <category term="wiz" />
    <category term="joplin" />
    <category term="typora" />
    <category term="qnap" />
    <category term="硬盘" />
    <category term="nas" />
    <category term="embeded" />
    <category term="3G" />
    <category term="4G" />
    <category term="3531a" />
    <category term="移植" />
    <category term="嵌入式" />
    <category term="hisilicon" />
    <category term="driver" />
    <category term="3798m" />
    <category term="mpp" />
    <category term="unf" />
    <category term="kernel" />
    <category term="宝塔" />
    <category term="vps" />
    <category term="建站" />
    <category term="nginx" />
    <category term="apache" />
    <category term="mysql" />
    <category term="docker" />
    <category term="lamp" />
    <category term="php" />
    <category term="tomcat" />
    <category term="registry" />
    <category term="教程" />
    <category term="email" />
    <category term="https" />
    <category term="ssl" />
    <category term="debian" />
    <category term="laptop" />
    <category term="ed2k" />
    <category term="ati" />
    <category term="ssd" />
    <category term="hdd" />
    <category term="pdca" />
    <category term="5w2h" />
    <category term="smart" />
    <category term="swot" />
    <category term="grow" />
    <category term="okr" />
    <category term="wbs" />
    <category term="qbittorrent" />
    <category term="transmission" />
    <category term="emby" />
    <category term="sonarr" />
    <category term="jeckett" />
    <category term="portainer" />
    <category term="启动" />
    <category term="优化" />
    <category term="tls" />
    <category term="隐私" />
    <category term="安全" />
    <category term="gitbook" />
    <category term="mariadb" />
    <category term="note" />
    <category term="mermaid" />
    <category term="webdav" />
    <category term="hexo" />
    <category term="matery" />
    <category term="npm" />
    <category term="css" />
    <category term="js" />
    <category term="3a" />
    <category term="ae" />
    <category term="image" />
    <category term="ai" />
    <category term="face" />
    <category term="ccs" />
    <category term="vim" />
    <category term="ide" />
    <category term="music" />
    <category term="韩红" />
    <category term="thinkpad" />
    <category term="sound" />
    <category term="speaker" />
    <category term="刮削" />
    <category term="musicbrainz" />
    <category term="mp3tag" />
    <category term="tmm" />
    <category term="字幕" />
    <category term="plex" />
    <category term="cmake" />
    <category term="develop" />
    <category term="ipv6" />
    <category term="traefik" />
    <category term="proxy" />
    <category term="swarm" />
    <category term="ubuntu" />
    <category term="vscode" />
    <category term="插件" />
    <category term="编码" />
    <category term="plantuml" />
    <category term="mathjax" />
    <category term="ci/cd" />
    <category term="earthly" />
    <category term="mstream" />
    <category term="selfhost" />
    <category term="中岛美嘉" />
    <category term="node" />
    <category term="jenkins" />
    <category term="shell" />
    <category term="tools" />
    <category term="winrar" />
    <category term="emoji" />
    <category term="isp" />
    <category term="awb" />
    <category term="mywork" />
    <category term="cdn" />
    <category term="seo" />
    <category term="fitness" />
    <category term="健身" />
    <category term="运动" />
    <category term="devops" />
    <category term="k8s" />
    <category term="harbor" />
    <category term="drowio" />
    <category term="pmbok" />
    <category term="管理" />
    <category term="ipd" />
    <category term="绩效" />
    <category term="man" />
    <category term="calibre" />
    <category term="douban" />
    <category term="book" />
    <category term="框架" />
    <category term="图解" />
    <category term="doxygen" />
    <category term="bash" />
    <category term="中医" />
    <category term="西医" />
    <category term="社会观察" />
    <category term="竞品分析" />
    <category term="rss" />
    <category term="rsshub" />
    <category term="os" />
    <category term="自制" />
    <category term="编译器" />
    <category term="C" />
    <category term="compiler" />
    <category term="驱动" />
    <category term="sensor" />
    <category term="nodeppt" />
    <category term="故事" />
    <category term="echarts" />
    <category term="vercel" />
    <category term="知识" />
    <category term="智慧" />
    <category term="potplayer" />
    <category term="写作" />
    <entry>
        <id>https://blog.17lai.site/posts/798e6e62/</id>
        <title>ISP 数字图像处理 算法概述、工作原理、架构、处理流程</title>
        <link rel="alternate" href="https://blog.17lai.site/posts/798e6e62/"/>
        <content type="html">&lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;抱歉, 这个密码看着不太对, 请再试试.&#34; data-whm=&#34;抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;1d45df22da05613b5dacd840032e5ca0211189cf31719564aa1a5681b6996719&#34;&gt;&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-default&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-default&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-default&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-default&#34;&gt;您好, 这里需要密码.&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="isp" />
        <category term="awb" />
        <category term="mywork" />
        <updated>2022-03-24T13:13:38.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.17lai.site/posts/509c7bd3/</id>
        <title>自动曝光原理</title>
        <link rel="alternate" href="https://blog.17lai.site/posts/509c7bd3/"/>
        <content type="html">&lt;h2 id=&#34;自动曝光的原理&#34;&gt;自动曝光的原理&lt;/h2&gt;
&lt;p&gt;曝光是摄影中十分重要的一个环节，它决定了一张图片的明暗，如下图所示，第一张图片太暗，而第三种图片太亮。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/09/1420210914131959.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;曝光由什么来决定&#34;&gt;&lt;strong&gt;曝光由什么来决定&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;使用过数码相机的人都知道曝光由光圈、曝光时间、ISO三者共同决定，详细的关系就不赘述。&lt;/p&gt;
&lt;h3 id=&#34;光圈：控制进光量；&#34;&gt;&lt;strong&gt;光圈&lt;/strong&gt;：控制进光量；&lt;/h3&gt;
&lt;h3 id=&#34;曝光时间：光到达的时间长度；&#34;&gt;&lt;strong&gt;曝光时间&lt;/strong&gt;：光到达的时间长度；&lt;/h3&gt;
&lt;h3 id=&#34;ISO：增益；&#34;&gt;&lt;strong&gt;ISO&lt;/strong&gt;：增益；&lt;/h3&gt;
&lt;p&gt;但是对于手机以及其他电子产品使用的微型摄像头，光圈大小是固定的，所以手机拍照的曝光由&lt;strong&gt;曝光时间&lt;/strong&gt;和**增益(ISO)**来控制。&lt;/p&gt;
&lt;h2 id=&#34;什么是自动曝光&#34;&gt;&lt;strong&gt;什么是自动曝光&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;数码相机中有一种手动模式，可手动设置光圈、曝光时间、ISO来控制曝光，该模式的使用对摄影师的要求会比较高。另外 数码相机的全自动模式、光圈优先模式、快门优先模式以及手机等电子产品的曝光都属于自动曝光。&lt;/p&gt;
&lt;p&gt;自动曝光就是相机代替人的操作，自动调节曝光时间、光圈、ISO进行曝光，使得所摄物体亮度正常。这句话解释起来很简单，但是存在两个难点问题：第一，相机不如人眼这样可以直观的分辨图像明暗，如何判断这幅图像是否亮度合适；第二，如何调整曝光时间、光圈、ISO,这三者调节的比例。&lt;/p&gt;
&lt;h2 id=&#34;自动曝光的标准&#34;&gt;&lt;strong&gt;自动曝光的标准&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;在此之前需要了解物体的亮度与色彩是由物体对光线的反射率来决定的。例如纯黑色的放射率是0，纯白色的反射率是100%，处于中间的灰度的反射率是18%，这就是18%中间灰度。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/09/1420210914132002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;具有一定反射率的物体在最终的图像中被还原到了其相应的灰度级，这就意味着达到了正确的曝光。例如摄影师们通常在拍摄之前使用中性灰卡测试曝光是否正常。&lt;/p&gt;
&lt;p&gt;但是相机在各种场景下无法识别物体的反射率，因此采用了一个简单粗暴而又行之有效的方法，统一将图像整体平均亮度设置为中性灰的亮度。该方法基于**科学家认为自然界的平均反射率是18%**这一理论。当然，这个方法也不是走遍天下都不怕，比如拍摄雪景时需要增加曝光补偿，不然会偏暗，因为雪景的亮度远远大于中性灰度。这也就是摄影中的一句口诀的由来“白增黑减”。&lt;/p&gt;
&lt;h2 id=&#34;自动曝光算法&#34;&gt;&lt;strong&gt;自动曝光算法&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;上面已经讲了自动曝光的标准，也就确立了曝光目标，要达到这一目标还要自动曝光算法来实现。&lt;/p&gt;
&lt;p&gt;目前比较常见的算法有平均亮度法、权重均值法、亮度直方图等。其中最普遍的就是平均亮度法。&lt;strong&gt;平均亮度法&lt;/strong&gt;就是对图像所以像素亮度求平均值，通过不断调整曝光参数最终达到目标亮度。而&lt;strong&gt;权重均值法&lt;/strong&gt;是对图像不同区域设置不同权重来计算图像亮度，例如相机中的各种测光模式的选择就是改变不同区域的权重。&lt;strong&gt;亮度直方图法&lt;/strong&gt;是通过为直方图中峰值分配不同权重来计算图像亮度。&lt;/p&gt;
&lt;p&gt;自动曝光实现的过程：&lt;/p&gt;
&lt;p&gt;第一步：对当前图像进行亮度统计；&lt;/p&gt;
&lt;p&gt;第二步：根据当前图像亮度确定曝光值；&lt;/p&gt;
&lt;p&gt;第三步：计算新的曝光参数，曝光时间、光圈、增益；&lt;/p&gt;
&lt;p&gt;第四步：将新的曝光参数应用到相机；&lt;/p&gt;
&lt;p&gt;第五步：重复步骤一到四，直到亮度满足要求。&lt;/p&gt;
&lt;h2 id=&#34;曝光参数调整-曝光表&#34;&gt;&lt;strong&gt;曝光参数调整_曝光表&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;前面留下两个问题：“第一，相机不如人眼这样可以直观的分辨图像明暗，如何判断这幅图像是否亮度合适；第二，如何调整曝光时间、光圈、ISO,这三者调节的比例。” 第一个问题在前面有过解释，第二个问题也就是自动曝光实现步骤的第三步，曝光值由光圈、曝光时间、增益沟通决定，当计算出一个曝光量，曝光三要素有很多种组合方式。一般情况下有曝光曲线，每个曝光量对应一组参数。手机中曝光曲线可以通过Tuning调整。&lt;/p&gt;
&lt;p&gt;From: &lt;a href=&#34;https://zhuanlan.zhihu.com/p/33462189&#34;&gt;积极的悲观主义者&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;i-class-fa-solid-fa-school-i-系列教程-5&#34;&gt;&lt;i class=&#34;fa-solid fa-school&#34;&gt;&lt;/i&gt;&lt;strong&gt;系列教程&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;/atom.xml&#34;&gt;&lt;i class=&#34;fa-solid fa-square-rss&#34;&gt;&lt;/i&gt;全部文章RSS订阅&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;i-class-fa-solid-fa-rectangle-terminal-i-Embeded系列-3&#34;&gt;&lt;i class=&#34;fa-solid fa-rectangle-terminal&#34;&gt;&lt;/i&gt;&lt;strong&gt;Embeded系列&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;/categories/embeded/atom.xml&#34;&gt;&lt;i class=&#34;fa-solid fa-square-rss&#34;&gt;&lt;/i&gt;&lt;strong&gt;Embeded 分类 RSS 订阅&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/posts/13894dce/&#34;&gt;海思MPP&amp;amp;UNF构架源代码级分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/6b2ba137/&#34;&gt;3G,4G,Wifi选型需求分析及技术简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/509c7bd3/&#34;&gt;自动曝光原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/798e6e62/&#34;&gt;ISP 数字图像处理 算法概述、工作原理、架构、处理流程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/bilicard.css&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="3a" />
        <category term="ae" />
        <category term="image" />
        <updated>2021-09-14T01:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.17lai.site/posts/6b2ba137/</id>
        <title>3G,4G,Wifi选型需求分析及技术简介</title>
        <link rel="alternate" href="https://blog.17lai.site/posts/6b2ba137/"/>
        <content type="html">&lt;h2 id=&#34;3G-4G-Wifi选型需求分析及技术简介&#34;&gt;3G,4G,Wifi选型需求分析及技术简介&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;文章写了好多年了，只在一个网站发布过PDF版本。行业内应该很多人看过这个。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关于本blog，&lt;strong&gt;图床&lt;/strong&gt;一般使用&lt;strong&gt;github&lt;/strong&gt;，已经配置了CDN，如果图片还是未显示请自行代理解决&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;原创声明警告&lt;/strong&gt;，文章&lt;strong&gt;禁止转载&lt;/strong&gt;，禁止发布到其它任何网站，可以接受约稿。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;用户需求分析&#34;&gt;用户需求分析&lt;/h2&gt;
&lt;p&gt;减少布线，或有的地方很难布线。&lt;/p&gt;
&lt;p&gt;​    例如：偏远森林，沙漠，海岛，土地所有制导致不能随便开挖等各种原因。&lt;/p&gt;
&lt;h3 id=&#34;3G，4G&#34;&gt;--3G，4G--&lt;/h3&gt;
&lt;p&gt;优点： 布线，距离远。&lt;/p&gt;
&lt;p&gt;缺点：流量费高（可以和运营商合作 ）&lt;/p&gt;
&lt;h3 id=&#34;Wifi&#34;&gt;--Wifi--&lt;/h3&gt;
&lt;p&gt;优点：费用低，&lt;/p&gt;
&lt;p&gt;缺点：距离近&lt;/p&gt;
&lt;h2 id=&#34;研发需求分析&#34;&gt;研发需求分析&lt;/h2&gt;
&lt;h2 id=&#34;WANTED&#34;&gt;WANTED!&lt;/h2&gt;
&lt;h3 id=&#34;3G，4G选型标准需求&#34;&gt;3G，4G选型标准需求&lt;/h3&gt;
&lt;p&gt;1：产品生命周期，时间空间的重叠。 初产时间较近，出货时间长，&lt;/p&gt;
&lt;p&gt;2：客户那里运营商网络制式？？（例如&lt;strong&gt;TD-LTE****，&lt;strong&gt;&lt;strong&gt;FDD-LTE&lt;/strong&gt;&lt;/strong&gt;，&lt;strong&gt;&lt;strong&gt;CDMA2000&lt;/strong&gt;&lt;/strong&gt;等等&lt;/strong&gt;），&lt;/p&gt;
&lt;p&gt;​    运营商名称？？（一般不同国家不一样，一个国家很多个运营商）&lt;/p&gt;
&lt;p&gt;3：3G，4G具体型号选择： 1：厂家选择？？？ 2：网络制式选择（需要选择制式尽可能支持区域大的，亚洲，欧美，日韩）？？？ 3：USB 使用的技术代差（1：usb猫，2：usb光驱，3：html拨号）&lt;/p&gt;
&lt;p&gt;4：客户3G，4G使用场景？？。流量大小，费用&lt;/p&gt;
&lt;p&gt;**注意：**可能客户那里支持的制式和国内不一样，我们这边验证的制式在客户那里不能用，客户那里支持的制式在国内又没法验证。选择制式的时候特别需要注意。&lt;/p&gt;
&lt;h3 id=&#34;Wifi选择需求&#34;&gt;Wifi选择需求&lt;/h3&gt;
&lt;p&gt;5：芯片厂家需要支持Linux驱动。 芯片出来年代？？？，价格？？？，协议标准（决定速度），网络信号质量？？？，传输速度（不同距离速度，是否要求穿墙）？？？&lt;/p&gt;
&lt;p&gt;6：对应的无线路由器调试&lt;/p&gt;
&lt;p&gt;7：客户Wifi使用场景？？。 主要是使用距离引起速度衰变， 现在有2,4G，5G路由，速度有150Mbit/s 300Mbit/s，450Mbit/s。需要ap评估这种速度能否满足各种场景使用需求&lt;/p&gt;
&lt;h2 id=&#34;3G，4G部分&#34;&gt;3G，4G部分&lt;/h2&gt;
&lt;h3 id=&#34;中国2G，3G，4G制式标准&#34;&gt;中国2G，3G，4G制式标准&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730141533.jpg&#34; alt=&#34;运营商制式&#34;&gt;&lt;/p&gt;
&lt;p&gt;UMTS(Universal Mobile Telecommunications System)，意即通用移动通信系统。UMTS是国际标准化组织3GPP制定的全球3G标准之一。作为一个完整的3G移动通信技术标准，UMTS并不仅限于定义空中接口。它的主体包括CDMA接入网络和分组化的核心网络等一系列技术规范和接口协议。除WCDMA作为首选空中接口技术获得不断完善外，UMTS还相继引入了TD-SCDMA和HSDPA技术。&lt;br&gt;
UMTS网络优先选择的就是WCDMA，国内就是中国联通&lt;/p&gt;
&lt;h3 id=&#34;电信&#34;&gt;&lt;strong&gt;电信&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2G CDMA&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3G CDMA2000&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;4G TD-LTE&lt;/strong&gt;**，**&lt;strong&gt;FDD-LTE&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;移动&#34;&gt;&lt;strong&gt;移动&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2G GSM&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3G TD-SCDMA&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;4G TD-LTE&lt;/strong&gt;**，**&lt;strong&gt;FDD-LTE&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;联通&#34;&gt;&lt;strong&gt;联通&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;2G GSM&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;3G WCDMA&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;4G TD-LTE&lt;/strong&gt;**，**&lt;strong&gt;FDD-LTE&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中国移动TD-LTE：支持频段38、39、40&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中国联通TD-LTE：支持频段40、41&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中国电信TD-LTE：支持频段40、41&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中国联通FDD-LTE：支持频段3&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中国电信FDD-LTE：支持频段3&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;全球制式和区域&#34;&gt;全球制式和区域&lt;/h3&gt;
&lt;h4 id=&#34;2G有GSM，还有CDMA。&#34;&gt;2G有GSM，还有CDMA。&lt;/h4&gt;
&lt;p&gt;​    我们平时说的G 网或者C 网了。联通和移动都是GSM，电信的133号段（之前是联通主营，后来转移给电信）是C网&lt;/p&gt;
&lt;h4 id=&#34;3G有3种：WCDMA，CDMA2000，TD-CDMA&#34;&gt;3G有3种：WCDMA，CDMA2000，TD_CDMA&lt;/h4&gt;
&lt;p&gt;WCDMA（日本、欧洲）、CDMA2000（北美）、TD-SCDMA（中国移动）&lt;/p&gt;
&lt;p&gt;使用最广泛的是WCDMA。美国、欧洲等国很多是WCDMA和CDMA2000都有的。&lt;br&gt;
另外WCDMA、CDMA2000里面还有更细的划分，主要是技术、标准、速度的细微差别。&lt;/p&gt;
&lt;p&gt;WCDMA（欧洲版）：这个是欧洲的主流，也是目前世界范围3G 的使用模式最广的，在中国大陆，是中国联通3G （沃）的模式。&lt;br&gt;
CDMA2000（美国版）：这个数量相对少些，由美国为代表。在大陆，是中国电信3G （天翼）的模式&lt;br&gt;
TD-SCDMA（中国版）：这个是中国大陆自主知识产权的，可以说是中国特色的3G ，虽然大部分的通讯厂商宣布对此技术可以支持，但世界范围内使用的范围有限。在大陆，是中国移动3G的网络模式。&lt;/p&gt;
&lt;h4 id=&#34;4G有2种-LTE-FDD，LTE-TDD&#34;&gt;4G有2种: LTE FDD，LTE TDD&lt;/h4&gt;
&lt;p&gt;LTE FDD（世界绝大多数国家）、LTE TDD（中国移动和国外极少数地区的个别运营商）。&lt;/p&gt;
&lt;p&gt;TD- LTE是我国自主研发的4G标准，是由TD-SCDMA（3G网络）发展而来。&lt;/p&gt;
&lt;p&gt;LTE FDD是现在国际上主流的，使用最广泛的4G网络，由WCDMA演化而来。&lt;/p&gt;
&lt;p&gt;现在全球有超过200个LTE的商用网络，其中超过90%是FDD的。&lt;/p&gt;
&lt;p&gt;从技术上说，TD- LTE采用的是时分双工，而LTE FDD采用的是频分双工&lt;/p&gt;
&lt;p&gt;TD-LTE和FDD-LTE 是4G的两种国际标准，各有利弊。TD-LTE占用频段少，节省资源，带宽长，适合区域热点覆盖；FDD速度更快，覆盖更广，但占用资源多。适合广域覆盖。&lt;/p&gt;
&lt;h4 id=&#34;国内三家运营商4G网络制式分别如下：&#34;&gt;国内三家运营商4G网络制式分别如下：&lt;/h4&gt;
&lt;p&gt;联通4G：TD-LTE、FDD-LTE&lt;/p&gt;
&lt;p&gt;电信4G：TD-LTE、FDD-LTE&lt;/p&gt;
&lt;p&gt;移动4G：TD-LTE&lt;/p&gt;
&lt;p&gt;虽然联通跟电信都是采用双4G网络制式，但目前4G网络仅在部分地区覆盖，3G网络仍然是不可或缺的。而联通3G采用的是WCDMA，为欧洲标准，是技术发展最成熟、国际通用和覆盖范围最广的制式，目前是国内3G网络最快的，最高可达42Mbps，在国外已将其定义为4G标准。&lt;/p&gt;
&lt;p&gt;综合以上，选型推荐。&lt;/p&gt;
&lt;h2 id=&#34;3G推荐选型：WCDMA欧洲，CDMA2000美国&#34;&gt;3G推荐选型：WCDMA欧洲，CDMA2000美国&lt;/h2&gt;
&lt;h2 id=&#34;4G推荐选型：FDD-LTE&#34;&gt;4G推荐选型：FDD-LTE&lt;/h2&gt;
&lt;h2 id=&#34;WIFI部分&#34;&gt;WIFI部分&lt;/h2&gt;
&lt;h2 id=&#34;2-4G和5G究竟是什么&#34;&gt;2.4G和5G究竟是什么&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730141643.jpg&#34; alt=&#34;&#34;&gt;   以往我们一直使用的Wi-Fi大多数是支持 IEEE 802.11n（第四代）无线标准的，而且工作在2.4GHz这个频段上的，所以称之为2.4gWi-Fi，但是严格来说工作在5GHz频段上的不一定就是5G Wi-Fi，因为IEEE 802.11a（第一代）IEEE 802.11n（第四代）和IEEE 802.11ac（第五代)这三种标准都可以工作在5GHz这个频段上。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730141655.jpg&#34; alt=&#34;&#34;&gt;   严格来说只有支持802.11ac的才是真正5G Wi-Fi（在这个视频里我们将它称作ac 5G)，现来在说支持2.4G和5G双频的路由器其实很多都是指支持第四代无线标准，也就是802.11n的双频，而真正支持ac 5G的路由最便宜都要400、500甚至上千元&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730141748.jpg&#34; alt=&#34;&#34;&gt;   我们的路由器一般会有标有一些类似54Mbps，150Mbps，300Mbps这样的参数，要说明一下，这个参数不是指路由器的无线覆盖范围，而是指它的最高传输速率。若要支持ac 5G的也要双方同时支持，单方面支持是不行的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730141738.jpg&#34; alt=&#34;&#34;&gt;   这个速率就相当于车道上的限速标志，当然也不能完全等同与限速标志，因为如果网络中多个设备同时传输要分流的&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730141801.jpg&#34; alt=&#34;&#34;&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最后不要忘记要考虑空间的大小，200多平米的房子一般普通无线路由器的2.4G勉强可以覆盖，5G的话150平米就开始有压力，如果房屋太大或者多楼层的话可能就要考虑一下多个无线路由桥接了。&lt;/p&gt;
&lt;h3 id=&#34;5GWifi速度快，穿墙弱&#34;&gt;5GWifi速度快，穿墙弱&lt;/h3&gt;
&lt;p&gt;5G Wi-Fi的最大缺点就是穿墙能力比较弱，墙体对Wi-Fi信号的强度影响是比较大的，每穿过一面墙，Wi-Fi信号就要减弱不少。&lt;/p&gt;
&lt;h3 id=&#34;路由器摆放小技巧。增强信号。&#34;&gt;路由器摆放小技巧。增强信号。&lt;/h3&gt;
&lt;h4 id=&#34;最根本一半是有线速度限制，但信号强度也很重要&#34;&gt;最根本一半是有线速度限制，但信号强度也很重要&lt;/h4&gt;
&lt;p&gt;另外分享一个摆放路由器的方法，如果受制与网线或者台式电脑的位置就没得说，但是如果可以移动的话，这个位置的原则是要经过尽量少的墙体&lt;/p&gt;
&lt;p&gt;最好不要放在地上，更不要放在角落，&lt;/p&gt;
&lt;h4 id=&#34;放在高处&#34;&gt;放在高处&lt;/h4&gt;
&lt;p&gt;而且应该经适当的放高一点，而不是放在地上，这和手机信号塔的原理是一样的，更加不应该因为他碍眼把它放进抽屉、柜子等里面。这些方法可以略微增强信号强度，不过想从根本上解决信号问题，还是要换一款更好的路由。&lt;/p&gt;
&lt;h2 id=&#34;无线网卡选购简介&#34;&gt;无线网卡选购简介&lt;/h2&gt;
&lt;p&gt;常见值得选购的USB无线网卡按技术规格和价位，大致可以分为如下3类：&lt;/p&gt;
&lt;p&gt;单频11n网卡，标注速度200-300M，20-30元。&lt;/p&gt;
&lt;p&gt;双频11n网卡，支持5g频段，标注速度600M，40-50元。&lt;/p&gt;
&lt;p&gt;双频11ac网卡，支持5g频段，标注速度900-1200M或更高，80元以上。&lt;/p&gt;
&lt;p&gt;无线网卡要想达到标注的技术标准和速度，首先需要路由器支持该标准及速度，否则会降速运行。&lt;/p&gt;
&lt;h3 id=&#34;USB协议：速度，选择2-0还是3-0&#34;&gt;USB协议：速度，选择2.0还是3.0&lt;/h3&gt;
&lt;p&gt;USB2.0的速度传输，理论最大速率480M bit/S。 60MB/S&lt;/p&gt;
&lt;p&gt;USB3.0的理论最大速率是5G bit/S，要比USB2.0快10倍！ 640MB/S&lt;/p&gt;
&lt;p&gt;看线路，工艺质量，实际速度可能不到理论速度一半&lt;/p&gt;
&lt;h3 id=&#34;USB3-0-对wifi和BlueTooth干扰。&#34;&gt;USB3.0 对wifi和BlueTooth干扰。&lt;/h3&gt;
&lt;p&gt;USB3.0的传输频率确实是5GHz串行，但USB3.0使用4条数据线组成2组，每组负责一个传输方向，实现全双工双向5GHz，而每条数据线的基准频率是2.5GHz。&lt;/p&gt;
&lt;p&gt;所以，总带宽是5GHz没错，但每条线上是2.5GHz，这个频率距离2.4G Wifi的频率太近了，又因为高频设备大多数都使用了SSC技术（扩频时钟？）使得信号不完全分布在一个固定频率上，所以就波及了2.5GHz附近的其它频率，所以对Wifi和蓝牙产生了较大的干扰。&lt;/p&gt;
&lt;h3 id=&#34;USB-3-0-干扰-Wifi-2-4G通讯的问题和解决方法&#34;&gt;USB 3.0 干扰 Wifi 2.4G通讯的问题和解决方法&lt;/h3&gt;
&lt;h4 id=&#34;USB3-0-WIFI干扰解决方法&#34;&gt;USB3.0 WIFI干扰解决方法&lt;/h4&gt;
&lt;p&gt;USB3.0的确对2.4G有影响，不过一样可以解决，比如&lt;strong&gt;网件&lt;/strong&gt;的解决方法就是，USB3.0 和网口,天线不在一面，USB3.0接口弄到前面，而且是所有接口有&lt;strong&gt;金属屏蔽罩&lt;/strong&gt;（包括WAN和LAN口），连USB接口与主板连线处都用&lt;strong&gt;屏蔽胶布&lt;/strong&gt;包裹。可惜国内厂商哪怕是大如华为，网口也舍不得这点成本用金属屏蔽的。&lt;/p&gt;
&lt;p&gt;带有USB 3.0接口的无线路由，如果出现外接3.0移动硬盘后网速下降，断网，或者ping延时变得很高，说明出现了3.0对无线的干扰。&lt;/p&gt;
&lt;p&gt;USB3.0与无线冲突解决办法：&lt;/p&gt;
&lt;p&gt;第一种：给USB接口加金属膜做屏蔽可以适当降低干扰，但不能完全屏蔽&lt;/p&gt;
&lt;p&gt;第二种：给主板的USB底座增加统一（并与使用设备）接地和增加金属屏蔽罩，基本可以排除&lt;/p&gt;
&lt;p&gt;【推荐】第三种：用1.2米 双磁环带屏蔽层的USB延长线将移动硬盘放到一米外的地方使用，基本可以完全可以排除&lt;/p&gt;
&lt;p&gt;其实不单是无线路由，像我们平常使用的无线鼠标键盘、蓝牙、wifi电视、iPad、手机等各种使用民用2.4G的通信设备都会出现与USB3.0冲突的情况。&lt;/p&gt;
&lt;h4 id=&#34;USB3-0-移动硬盘干扰解决方法&#34;&gt;USB3.0 移动硬盘干扰解决方法&lt;/h4&gt;
&lt;p&gt;相信随着USB3.0使用的用户越来越多，不少人遇到了一插上USB3.0的硬盘，wifi就出现降速或者中断的问题。其本质原因是USB 3.0 干扰2.4GHz下的Wifi通讯。&lt;/p&gt;
&lt;p&gt;解决方法如下，&lt;/p&gt;
&lt;p&gt;1.更换无线路由为5GHz，因为USB 3.0对5GHz的Wifi干扰程度较低&lt;br&gt;
2.把硬盘盒从USB3.0接口换到USB2.0接口也可以将问题解决&lt;br&gt;
3.使用高质量带屏蔽的USB3.0设备/线缆/接口。或者在USB3.0接口处加屏蔽罩（金属箔即可）&lt;br&gt;
4.最简单的，使用1m以上的高质量USB3.0延长线。将USB3.0设备远离电脑主机。&lt;/p&gt;
&lt;p&gt;Intel官方对USB3.0对WIFI干扰的描述文档：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.usb.org/developers/whitepapers/327216.pdf&#34;&gt;http://www.usb.org/developers/whitepapers/327216.pdf&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;目前在调试的两款型号：&#34;&gt;目前在调试的两款型号：&lt;/h2&gt;
&lt;h3 id=&#34;TL-WN823N&#34;&gt;TL-WN823N&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;​         Bus 002 Device 007: ID 0bda:818b&lt;/li&gt;
&lt;li&gt;​         RTL8192EU&lt;/li&gt;
&lt;li&gt;​         300M迷你型无线USB网卡 TL-WN823N&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;TL-WN725N&#34;&gt;TL-WN725N&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;​         Bus 002 Device 008: ID 0bda:8179&lt;/li&gt;
&lt;li&gt;​         rtl8188eu&lt;/li&gt;
&lt;li&gt;​         150M无线USB网卡 TL-WN725N&lt;/li&gt;
&lt;li&gt;​         网上的驱动版本数据结构和3.10差异较大，不能用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Wifi芯片厂家&#34;&gt;Wifi芯片厂家&lt;/h2&gt;
&lt;h3 id=&#34;Realtek：&#34;&gt;Realtek：&lt;/h3&gt;
&lt;p&gt;​         官方无linux驱动支持&lt;/p&gt;
&lt;h3 id=&#34;Ralink&#34;&gt;Ralink&lt;/h3&gt;
&lt;p&gt;（已经被MTK收购）： 官方有linux驱动&lt;/p&gt;
&lt;h3 id=&#34;Atheros&#34;&gt;Atheros&lt;/h3&gt;
&lt;p&gt;（已经被高通qualcomm收购）：AR9271&lt;/p&gt;
&lt;h2 id=&#34;整理推荐芯片型号：&#34;&gt;整理推荐芯片型号：&lt;/h2&gt;
&lt;p&gt;USB 2.0 Mbit/s&lt;/p&gt;
&lt;h3 id=&#34;rt3070&#34;&gt;rt3070&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mediatek.cn/products/broadbandWifi/rt3070&#34;&gt;http://www.mediatek.cn/products/broadbandWifi/rt3070&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IEEE 802.11:b/g/n&lt;/li&gt;
&lt;li&gt;Wi-Fi Frequency:2.4GHz&lt;/li&gt;
&lt;li&gt;Antenna:1T1R&lt;/li&gt;
&lt;li&gt;Data Throughput:150Mbit/s&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;rt5370&#34;&gt;rt5370&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mediatek.cn/products/broadbandWifi/rt5370&#34;&gt;http://www.mediatek.cn/products/broadbandWifi/rt5370&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IEEE 802.11:b/g/n&lt;/li&gt;
&lt;li&gt;Wi-Fi Frequency:2.4GHz&lt;/li&gt;
&lt;li&gt;Antenna:1T1R&lt;/li&gt;
&lt;li&gt;Data Throughput:150Mbit/s&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;RT3573&#34;&gt;RT3573&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mediatek.cn/products/broadbandWifi/rt3573&#34;&gt;http://www.mediatek.cn/products/broadbandWifi/rt3573&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IEEE 802.11:b/g/n/ac&lt;/li&gt;
&lt;li&gt;Wi-Fi Frequency:2.4GHz, 5GHz&lt;/li&gt;
&lt;li&gt;Antenna:3T3R&lt;/li&gt;
&lt;li&gt;Data Throughput:450Mbit/s&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;RT5572&#34;&gt;RT5572&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mediatek.cn/products/broadbandWifi/rt5572&#34;&gt;http://www.mediatek.cn/products/broadbandWifi/rt5572&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IEEE 802.11:b/g/n/ac&lt;/li&gt;
&lt;li&gt;Wi-Fi Frequency:2.4GHz, 5GHz&lt;/li&gt;
&lt;li&gt;Antenna:2T2R&lt;/li&gt;
&lt;li&gt;Data Throughput:300Mbit/s&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;集成分析&lt;/h1&gt;
&lt;h2 id=&#34;3G，4G集成分析&#34;&gt;3G，4G集成分析&lt;/h2&gt;
&lt;p&gt;根据拨号技术流程，现在已经发现的USB上网有三种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1：默认识别为USB Modem，使用pppoe拨号脚本拨号。&lt;/li&gt;
&lt;li&gt;2：默认识别为usb cdrom，使用usb-modeswitch 转换usb设备工作状态，转换为USB Modem后再采用pppoe拨号脚本拨号。&lt;/li&gt;
&lt;li&gt;3：使用CGI 调用Html链接方式拨号。不需要我们配置用户名密码，网络制式，最方便。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1：Pppoe拨号&#34;&gt;1：Pppoe拨号&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pppd call wcdma &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2：usb-modeswitch转换usb设备工作模式。&#34;&gt;2：usb_modeswitch转换usb设备工作模式。&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;usb_modeswitch -W -c /etc/usb_modeswitch.d/19D2:0117&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3：CGI拨号示例&#34;&gt;3：CGI拨号示例&lt;/h3&gt;
&lt;p&gt;从集成实现来说，这种最方便。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./curl --header &lt;span class=&#34;token string&#34;&gt;&#34;Referer: http://192.168.0.1/index.html&#34;&lt;/span&gt; http://192.168.0.1/goform/goform_set_cmd_process?goformId&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;SET_CONNECTION_MODE&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ConnectionMode&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;auto_dial

./curl --header &lt;span class=&#34;token string&#34;&gt;&#34;Referer: http://192.168.0.1/index.html&#34;&lt;/span&gt; http://192.168.0.1/goform/goform_process?goformId&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;MODE_SWITCH&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;switchCmd&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;FACTORY&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;Wifi集成分析&#34;&gt;Wifi集成分析&lt;/h2&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1：驱动移植识别&lt;/li&gt;
&lt;li&gt;2：wireless_tools或者wpa_supplicant拨号&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;wpa_supplicant依赖openssl和libnl，支持PSK加密需要用到这个。wireless_tools只支持普通web加密。&lt;/p&gt;
&lt;h1&gt;带宽性能测试&lt;/h1&gt;
&lt;p&gt;服务器运行 iperf -s&lt;/p&gt;
&lt;p&gt;客户端运行 iperf -c 服务器ip -t 60000 -i 2&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;iperf -c 192.168.1.100 -t 60000 -i 2
TP—Link 845&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;笔记本有线连接运行服务端, H3531a（2716TE_C）使用TL-WN823N连接&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@Tvt iperf&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# ./iperf.hisi3531A -c 192.168.1.100 -t 60000 -i 2&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;------------------------------------------------------------
Client connecting to &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;.1.100, TCP port &lt;span class=&#34;token number&#34;&gt;5001&lt;/span&gt;
TCP window size: &lt;span class=&#34;token number&#34;&gt;21.0&lt;/span&gt; KByte &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;default&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;------------------------------------------------------------
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;.1.103 port &lt;span class=&#34;token number&#34;&gt;47671&lt;/span&gt; connected with &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;.1.100 port &lt;span class=&#34;token number&#34;&gt;5001&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; ID&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; Interval    Transfer   Bandwidth
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;- &lt;span class=&#34;token number&#34;&gt;2.0&lt;/span&gt; sec &lt;span class=&#34;token number&#34;&gt;2.25&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;9.44&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2.0&lt;/span&gt;- &lt;span class=&#34;token number&#34;&gt;4.0&lt;/span&gt; sec  &lt;span class=&#34;token number&#34;&gt;256&lt;/span&gt; KBytes &lt;span class=&#34;token number&#34;&gt;1.05&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4.0&lt;/span&gt;- &lt;span class=&#34;token number&#34;&gt;6.0&lt;/span&gt; sec  &lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt; KBytes  &lt;span class=&#34;token number&#34;&gt;524&lt;/span&gt; Kbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6.0&lt;/span&gt;- &lt;span class=&#34;token number&#34;&gt;8.0&lt;/span&gt; sec  &lt;span class=&#34;token number&#34;&gt;256&lt;/span&gt; KBytes &lt;span class=&#34;token number&#34;&gt;1.05&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8.0&lt;/span&gt;-10.0 sec &lt;span class=&#34;token number&#34;&gt;1.25&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;5.24&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10.0&lt;/span&gt;-12.0 sec &lt;span class=&#34;token number&#34;&gt;3.75&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;15.7&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12.0&lt;/span&gt;-14.0 sec &lt;span class=&#34;token number&#34;&gt;4.25&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;17.8&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;14.0&lt;/span&gt;-16.0 sec &lt;span class=&#34;token number&#34;&gt;3.13&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;13.1&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16.0&lt;/span&gt;-18.0 sec &lt;span class=&#34;token number&#34;&gt;1.75&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;7.34&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;18.0&lt;/span&gt;-20.0 sec &lt;span class=&#34;token number&#34;&gt;1.38&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;5.77&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20.0&lt;/span&gt;-22.0 sec &lt;span class=&#34;token number&#34;&gt;1.13&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;4.72&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;22.0&lt;/span&gt;-24.0 sec  &lt;span class=&#34;token number&#34;&gt;256&lt;/span&gt; KBytes &lt;span class=&#34;token number&#34;&gt;1.05&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;24.0&lt;/span&gt;-26.0 sec  &lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt; KBytes  &lt;span class=&#34;token number&#34;&gt;524&lt;/span&gt; Kbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;26.0&lt;/span&gt;-28.0 sec  &lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt; KBytes  &lt;span class=&#34;token number&#34;&gt;524&lt;/span&gt; Kbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;28.0&lt;/span&gt;-30.0 sec  &lt;span class=&#34;token number&#34;&gt;512&lt;/span&gt; KBytes &lt;span class=&#34;token number&#34;&gt;2.10&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30.0&lt;/span&gt;-32.0 sec &lt;span class=&#34;token number&#34;&gt;2.88&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;12.1&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;32.0&lt;/span&gt;-34.0 sec &lt;span class=&#34;token number&#34;&gt;1.63&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;6.82&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;34.0&lt;/span&gt;-36.0 sec &lt;span class=&#34;token number&#34;&gt;3.50&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;14.7&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;36.0&lt;/span&gt;-38.0 sec  &lt;span class=&#34;token number&#34;&gt;768&lt;/span&gt; KBytes &lt;span class=&#34;token number&#34;&gt;3.15&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;38.0&lt;/span&gt;-40.0 sec &lt;span class=&#34;token number&#34;&gt;4.38&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;18.4&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;40.0&lt;/span&gt;-42.0 sec &lt;span class=&#34;token number&#34;&gt;5.38&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;22.5&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;42.0&lt;/span&gt;-44.0 sec &lt;span class=&#34;token number&#34;&gt;7.13&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;29.9&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;44.0&lt;/span&gt;-46.0 sec &lt;span class=&#34;token number&#34;&gt;6.63&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;27.8&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;46.0&lt;/span&gt;-48.0 sec &lt;span class=&#34;token number&#34;&gt;5.38&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;22.5&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;48.0&lt;/span&gt;-50.0 sec &lt;span class=&#34;token number&#34;&gt;5.75&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;24.1&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50.0&lt;/span&gt;-52.0 sec &lt;span class=&#34;token number&#34;&gt;7.50&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;31.5&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;52.0&lt;/span&gt;-54.0 sec &lt;span class=&#34;token number&#34;&gt;4.63&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;19.4&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;54.0&lt;/span&gt;-56.0 sec &lt;span class=&#34;token number&#34;&gt;7.50&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;31.5&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;56.0&lt;/span&gt;-58.0 sec &lt;span class=&#34;token number&#34;&gt;6.75&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;28.3&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;58.0&lt;/span&gt;-60.0 sec &lt;span class=&#34;token number&#34;&gt;5.13&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;21.5&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60.0&lt;/span&gt;-62.0 sec &lt;span class=&#34;token number&#34;&gt;5.38&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;22.5&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;62.0&lt;/span&gt;-64.0 sec &lt;span class=&#34;token number&#34;&gt;4.75&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;19.9&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;64.0&lt;/span&gt;-66.0 sec &lt;span class=&#34;token number&#34;&gt;6.00&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;25.2&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;66.0&lt;/span&gt;-68.0 sec &lt;span class=&#34;token number&#34;&gt;3.50&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;14.7&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;68.0&lt;/span&gt;-70.0 sec &lt;span class=&#34;token number&#34;&gt;5.50&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;23.1&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;70.0&lt;/span&gt;-72.0 sec &lt;span class=&#34;token number&#34;&gt;4.75&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;19.9&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;72.0&lt;/span&gt;-74.0 sec &lt;span class=&#34;token number&#34;&gt;1.50&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;6.29&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;74.0&lt;/span&gt;-76.0 sec &lt;span class=&#34;token number&#34;&gt;4.50&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;18.9&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;76.0&lt;/span&gt;-78.0 sec &lt;span class=&#34;token number&#34;&gt;4.25&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;17.8&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;78.0&lt;/span&gt;-80.0 sec &lt;span class=&#34;token number&#34;&gt;5.13&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;21.5&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;80.0&lt;/span&gt;-82.0 sec &lt;span class=&#34;token number&#34;&gt;7.88&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;33.0&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;82.0&lt;/span&gt;-84.0 sec &lt;span class=&#34;token number&#34;&gt;7.38&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;30.9&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;84.0&lt;/span&gt;-86.0 sec &lt;span class=&#34;token number&#34;&gt;4.38&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;18.4&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;86.0&lt;/span&gt;-88.0 sec &lt;span class=&#34;token number&#34;&gt;5.25&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;22.0&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;88.0&lt;/span&gt;-90.0 sec &lt;span class=&#34;token number&#34;&gt;6.63&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;27.8&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;90.0&lt;/span&gt;-92.0 sec &lt;span class=&#34;token number&#34;&gt;5.00&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;21.0&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;92.0&lt;/span&gt;-94.0 sec &lt;span class=&#34;token number&#34;&gt;6.88&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;28.8&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;94.0&lt;/span&gt;-96.0 sec &lt;span class=&#34;token number&#34;&gt;8.25&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;34.6&lt;/span&gt; Mbits/sec
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;96.0&lt;/span&gt;-98.0 sec &lt;span class=&#34;token number&#34;&gt;7.25&lt;/span&gt; MBytes &lt;span class=&#34;token number&#34;&gt;30.4&lt;/span&gt; Mbits/sec&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;附录&lt;/h1&gt;
&lt;h2 id=&#34;1：TD-LTE和LTE-FDD标准差异&#34;&gt;1：TD- LTE和LTE FDD标准差异&lt;/h2&gt;
&lt;p&gt;TD- LTE是我国自主研发的4G标准，是由TD-SCDMA（3G网络）发展而来。&lt;/p&gt;
&lt;p&gt;LTE FDD是现在国际上主流的，使用最广泛的4G网络。&lt;/p&gt;
&lt;p&gt;现在全球有超过200个LTE的商用网络，其中超过90%是FDD的。&lt;/p&gt;
&lt;p&gt;从技术上说，TD- LTE采用的是时分双工，而LTE FDD采用的是频分双工&lt;/p&gt;
&lt;p&gt;那什么是频分双工，什么又是时分双工呢？&lt;/p&gt;
&lt;p&gt;先来解释“双工”。&lt;/p&gt;
&lt;p&gt;移动通信系统的工作方式分为：单工、半双工和全双工&lt;/p&gt;
&lt;p&gt;1，单工就是信息只能向一个方向传播。例如寻呼机和收音机，只能接收信息，不能发出信息。&lt;/p&gt;
&lt;p&gt;2，半双工就是信息可以双向传播，但是上传信息的时候只能上传，下载的时候只能下载。例如对讲机，你说话的时候听不见别人别人说，听别人说的时候自己不能说。&lt;/p&gt;
&lt;p&gt;3， 全双工就是信息可以同时双向传播。例如手机，可以边听边说。&lt;br&gt;
其中全双工又分为：时分双工TDD，与频分双工FDD。&lt;/p&gt;
&lt;p&gt;​    所谓的频分双工就是将信息上传和信息下载放在两个不同的频段，称为上行频段和下行频段，且这两个频段必须对称。为了不防止上下行频段之间的信息串频，两个频段不能重叠，而且中间必须隔开一段，称为保护频。如下图：上行和下行频段相互分开&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730142158.jpg&#34; alt=&#34;保护帧&#34;&gt;&lt;/p&gt;
&lt;p&gt;所谓的时分双工就是将上传和下载放在同一个频段，也就是上行频段和下行频段完全一样。那它是如何做到上下的信息不串频呢？其实很简单，顾名思义，频分双工分的是频段，那时分双工分的就是时间。将波传播的时间轴一分为二，&lt;/p&gt;
&lt;p&gt;前半部分用于信息的上传，后一部分用于信息的下载。其实这从理论上更像是同步的半双工，但是由于上行和下行时间差距极短，我们无法感觉到，所以从效果上也是全双工。如下图：时间帧的第一帧为上行，第二帧而为下行，上下行共用一个频段，用时间的差将他们隔开。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730142220.jpg&#34; alt=&#34;数据帧&#34;&gt;&lt;/p&gt;
&lt;p&gt;​    接下来说一说移动TD- LTE和电信联通LTE FDD的优缺点，其实就是时分双工与频分双工的特点。&lt;/p&gt;
&lt;p&gt;​     TD- LTE由于采用上行和下行分时，所以上行和下行的时间差导致他信息传输的速度受到一定的限制。他的理论下载峰值为100Mbps，相比FDD的150Mbps来说，慢了不少。当然TD- LTE的基站信号覆盖半径也比LTE FDD小一点。&lt;/p&gt;
&lt;p&gt;​    LTE FDD也并非都是优点。FDD制式必须要找对称分开的上行、下行频段，也就是说它必须浪费更多的频段资源。那中国联通的FDD网为例，工信部给他发的频段牌照为，上行1755&lt;sub&gt;1765MHz和下行1850&lt;/sub&gt;1860MHz（2×10M），实际联通只得到了上下各10M的频段，但是加上当中的保护频段，一共占用了1755~1860MHz也就是105MHz的频段。这就导致了频段资源利用率低，是一种资源的浪费。目前，频率资源本身就紧张，能找到对称的上行和下行频段就尤其难。频率除了用在手机上网通讯上，像广播，军事,甚至无线路由器等民用领域也广泛使用。将来随着科技的进步，频率频段的稀缺会日益严重。&lt;/p&gt;
&lt;p&gt;​    TD-LTE和FDD-LTE 是4G的两种国际标准，各有利弊。TD-LTE占用频段少，节省资源，带宽长，适合区域热点覆盖；FDD速度更快，覆盖更广，但占用资源多。适合广域覆盖。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;i-class-fa-solid-fa-school-i-系列教程-2&#34;&gt;&lt;i class=&#34;fa-solid fa-school&#34;&gt;&lt;/i&gt;&lt;strong&gt;系列教程&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;/atom.xml&#34;&gt;&lt;i class=&#34;fa-solid fa-square-rss&#34;&gt;&lt;/i&gt;全部文章RSS订阅&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;i-class-fa-solid-fa-rectangle-terminal-i-Embeded系列&#34;&gt;&lt;i class=&#34;fa-solid fa-rectangle-terminal&#34;&gt;&lt;/i&gt;&lt;strong&gt;Embeded系列&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;/categories/embeded/atom.xml&#34;&gt;&lt;i class=&#34;fa-solid fa-square-rss&#34;&gt;&lt;/i&gt;&lt;strong&gt;Embeded 分类 RSS 订阅&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/posts/13894dce/&#34;&gt;海思MPP&amp;amp;UNF构架源代码级分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/6b2ba137/&#34;&gt;3G,4G,Wifi选型需求分析及技术简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/509c7bd3/&#34;&gt;自动曝光原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/798e6e62/&#34;&gt;ISP 数字图像处理 算法概述、工作原理、架构、处理流程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/bilicard.css&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="linux" />
        <category term="embeded" />
        <category term="3G" />
        <category term="4G" />
        <category term="3531a" />
        <category term="移植" />
        <category term="嵌入式" />
        <updated>2021-07-30T08:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.17lai.site/posts/13894dce/</id>
        <title>海思MPP&amp;UNF构架源代码级分析</title>
        <link rel="alternate" href="https://blog.17lai.site/posts/13894dce/"/>
        <content type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;文章写了好多年了，只在一个网站发布过PDF版本。行业内应该很多人看过这个。由于早期笔记使用Word格式，转换格式时有不少格式错误，笔者尽量修正。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关于本blog，&lt;strong&gt;图床&lt;/strong&gt;一般使用&lt;strong&gt;github&lt;/strong&gt;，已经配置了CDN，如果图片还是未显示请自行代理解决&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;原创声明警告&lt;/strong&gt;，文章&lt;strong&gt;禁止转载&lt;/strong&gt;，禁止发布到其它任何网站，可以接受约稿。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;前言：&#34;&gt;前言：&lt;/h2&gt;
&lt;p&gt;​    本文通过分析海思文档和代码，把海思SDK的MPI和UNF构架大概实现思想和构架进行了简略的分析。着重分析了内存管理，底层功能如何实现。&lt;/p&gt;
&lt;p&gt;​    前面章节简要分析了NVR芯片MPI构架及其内存管理机制，后面着重详细分析了3798M底层模块api和drv实现的细节过程及其方法流程。&lt;/p&gt;
&lt;p&gt;​    本文前面简略分析了DVR，MPI构架的大体实现机制。后面就具体分析3798M UNF构架的实现。&lt;/p&gt;
&lt;p&gt;本文不光分析了UNF构架，还使用了很多工具，辅助分析代码。这里从三个层面分析了UNF的实现。&lt;/p&gt;
&lt;p&gt;1: 应用层，驱动层的实现框架，使用source insight查看代码并着重分析了avplay等几个模块。&lt;/p&gt;
&lt;p&gt;2：静态分析函数调用。使用cflow，dot工具生成调用关系图&lt;/p&gt;
&lt;p&gt;3：动态追踪运行过程。Ltrace, strace, valgrind分析函数调用，perf动态分析内核调用。&lt;/p&gt;
&lt;h2 id=&#34;1-Hi35xx系列芯片MPP构架&#34;&gt;1:Hi35xx系列芯片MPP构架&lt;/h2&gt;
&lt;h3 id=&#34;1-1-概述&#34;&gt;1.1 概述&lt;/h3&gt;
&lt;p&gt;海思提供的媒体处理软件平台(Media Process Platform,简称 MPP)，可支持应用软件快速开发。该平台对应用软件屏蔽了芯片相关的复杂的底层处理，并对应用软件直接提供MPI（MPP Programe Interface）接口完成相应功能。该平台支持应用软件快速开发以下功能：输入视频捕获、H.264/MJPEG/JPEG/MPEG4 编码、H264/H.265/VC1/MPEG4/MPEG2/AVS 解码、视频输出显示、视频图像前处理（包括去噪、增强、锐化、Deinterlace） 、编码码流叠加 OSD、视频侦测分析、智能分析、音频捕获及输出、音频编解码等功能。&lt;/p&gt;
&lt;h3 id=&#34;1-2-整体软硬件构架&#34;&gt;1.2 整体软硬件构架&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730160509.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;MPP 平台支持的典型的系统层次如上图所示，主要分为以下层次：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;硬件层&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;硬件层由 Hi35xx 芯片加上必要的外围器件构成。外围器件包括 Flash、DDR&lt;br&gt;
（Double Data-Rate） 、视频 Sensor 或 AD、音频 AD 等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;操作系统层&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基于 Linux 3.10.y 的 OS 系统。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;媒体处理平台&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基于操作系统层，控制芯片完成相应的媒体处理功能。它对应用层屏蔽了硬件处理细节，并为应用层提供 API 接口完成相应功能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其他驱动&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;除媒体处理平台外,海思为 Hi35xx 芯片的其他相关硬件处理单元提供了相应的驱动,&lt;/p&gt;
&lt;p&gt;包括 GMAC、SDIO、I2C、USB、SSP 等驱动。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;应用层&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基于海思媒体处理平台及其他驱动，由用户开发的应用软件系统。&lt;/p&gt;
&lt;h3 id=&#34;1-3-海思媒体处理平台架构&#34;&gt;1.3 海思媒体处理平台架构&lt;/h3&gt;
&lt;p&gt;海思媒体处理平台的主要内部处理流程如上图所示，主要分为视频输入（VI） 、视频处理（VPSS） 、视频编码（VENC） 、视频解码（VDEC） 、视频输出(VO)、视频侦测分析(VDA)、音频输入(AI)、音频输出(AO)、音频编码（AENC） 、音频解码（ADEC） 、区域管理（REGION）等模块。主要的处理流程介绍如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730160451.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;VI 模块捕获视频图像，可对其做剪切、缩放、镜像等处理，并输出多路不同分辨&lt;br&gt;
率的图像数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解码模块对编码后的视频码流进行解码，并将解析后的图像数据送 VPSS 进行图&lt;br&gt;
像处理或直接送 VO 显示。可对 H.264/H.265/VC1/MPEG4/MPEG2/AVS 格式的视&lt;br&gt;
频码流进行解码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VPSS 模块接收 VI 和解码模块发送过来的图像，可对图像进行去噪、图像增强、&lt;br&gt;
锐化等处理，并实现同源输出多路不同分辨率的图像数据用于编码、预览或抓&lt;br&gt;
拍。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编码模块接收 VI 捕获并经 VPSS 处理后输出的图像数据，可叠加用户通过 Region&lt;br&gt;
模块设置的 OSD 图像，然后按不同协议进行编码并输出相应码流。&lt;br&gt;
VDA 模块接收 VI 的输出图像，并进行移动侦测和遮挡侦测，最后输出侦测分析&lt;br&gt;
结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VO 模块接收 VPSS 处理后的输出图像，可进行播放控制等处理，最后按用户配置&lt;br&gt;
的输出协议输出给外围视频设备。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AI 模块捕获音频数据，然后 AENC 模块支持按多种音频协议对其进行编码，最后&lt;br&gt;
输出音频码流。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户从网络或外围存储设备获取的音频码流可直接送给 ADEC 模块，ADEC 支持&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-4-MMZ与模块绑定&#34;&gt;1.4 MMZ与模块绑定&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730160438.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;MPP 提供系统绑定接口（HI_MPI_SYS_Bind） ，即通过数据接收者绑定数据源来建立&lt;/p&gt;
&lt;p&gt;两者之间的关联关系（只允许数据接收者绑定数据源） 。绑定后，数据源生成的数据将&lt;/p&gt;
&lt;p&gt;自动发送给接收者。&lt;/p&gt;
&lt;p&gt;Uboot环境变量中定义linux内核使用的内存大小&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;setenv &lt;span class=&#34;token string&#34;&gt;&#39;mem=288M console=ttyAMA0,115200 root=/dev/mtdblock2 rootfstype=jffs2 mtdparts=hi_sfc:768K(boot),2304K(sdr021000),13M(rootfs)&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;加载内核模块分配MMZ内存大小&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;insmod mmz.ko &lt;span class=&#34;token assign-left variable&#34;&gt;mmz&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;anonymous,0,0x8E000000,792M &lt;span class=&#34;token assign-left variable&#34;&gt;anony&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;例如512M的DDR&lt;/p&gt;
&lt;p&gt;DDR:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;DDR:                                                          
-----------&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;----------&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;  0x80000000   &lt;span class=&#34;token comment&#34;&gt;# Memory managed by OS.             &lt;/span&gt;
   64M     &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;   OS     &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;                                                
           &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;                                                
-----------&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;----------&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;  0x84000000   &lt;span class=&#34;token comment&#34;&gt;# Memory managed by MMZ block anonymous.         &lt;/span&gt;
   448M    &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;    MMZ   &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;                                                
           &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;          &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;                                                
-----------&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;----------&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;  0xA0000000   &lt;span class=&#34;token comment&#34;&gt;# Memory managed by MMZ block jpeg.                      &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;1-5-HiMPP-支持的绑定关系&#34;&gt;1.5 HiMPP 支持的绑定关系&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据源&lt;/th&gt;
&lt;th&gt;数据接收者&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;VI&lt;/td&gt;
&lt;td&gt;VO&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VENC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VDA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VPSS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;PCIV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VPSS&lt;/td&gt;
&lt;td&gt;VO&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VENC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VDA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VPSS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;PCIV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VDEC&lt;/td&gt;
&lt;td&gt;VPSS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VO（只能是标清设备或 single 模式分割）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VDA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;PCIV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vo(WBC)&lt;/td&gt;
&lt;td&gt;VO&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VENC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;VPSS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;PCIV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AI&lt;/td&gt;
&lt;td&gt;AENC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;AO&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ADEC&lt;/td&gt;
&lt;td&gt;AO&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;1-6-函数约定说明&#34;&gt;1.6 函数约定说明&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Open/Close&lt;br&gt;
Open/Close 操作用来打开、关闭那些可枚举的设备。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create/ Destroy&lt;br&gt;
Create/ Destroy 操作用来创建、销毁那些不可枚举的设备。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Handle&lt;br&gt;
Handle 用来标识一个“不可枚举”类型的设备。Handle 只在本进程内有效，也就是说 Handle 不可以跨进程传递Handle 是一个 32bit 的数据，其低 8bit 表示设备的 ID，高 16bit 表示模块 ID。比如0x00110000 表示模块 ID 为 0x11 的第 0 个设备。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Attach /Detach&lt;br&gt;
Attach/Detach 用来绑定、解绑定两个设备直接的关联。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Attach 后，目的设备将自动处于 Start/Enable 状态； Detach 后，目的设备将自动处于Stop/Disable 状态。&lt;br&gt;
对于多级绑定，&lt;strong&gt;要求从最后一个设备逐级向前绑定，解绑定的顺序则相反，要求逐级向后。&lt;/strong&gt;**&lt;br&gt;
** 当绑定在一起的多个设备可以设置相同属性时，必须通过最后一个设备进行设置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Get/Put&lt;br&gt;
Get/Put 用来往某个模块输入数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Acquire/Release&lt;br&gt;
Acquire/Release 用来从某个模块获取数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Get/Put和Acquire/Release推荐成对使用&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730155911.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-7-MPP优缺点&#34;&gt;1.7 MPP优缺点&lt;/h3&gt;
&lt;h4 id=&#34;1-7-1-MPP优点&#34;&gt;1.7.1 MPP优点&lt;/h4&gt;
&lt;p&gt;​    内存VB管理和模块绑定子系统，proc运行时调试信息是MPP构架节约用户时间最大的设计。&lt;/p&gt;
&lt;p&gt;​    大部分外围接口都封装好，用户调用接口直接使用，快速，方便。&lt;/p&gt;
&lt;h4 id=&#34;1-7-2-MPP缺点&#34;&gt;1.7.2 MPP缺点&lt;/h4&gt;
&lt;p&gt;​    没有相应子系统的源代码。出了问题，有bug必须需要海思查看，解决。&lt;/p&gt;
&lt;p&gt;​    MPI接口和标准linux接口差异非常大，构架也不一样。有问题需要找海思。中间时间成本。&lt;/p&gt;
&lt;p&gt;不利于研发技术积累。&lt;/p&gt;
&lt;h2 id=&#34;2-MPP和UNF对比&#34;&gt;2:  MPP和UNF对比&lt;/h2&gt;
&lt;p&gt;从函数命名，参数，使用方法来看。UNF和MPP分开比较早，UNF构架在上面函数约定说明基础上的MPI接口封装了一层，UNF-&amp;gt;MPI调用，UNF开发支持更多的模块接口。MPP的模块接口比较固定，比UNF少得多，增强了MMZ内存，VB管理功能，模块绑定功能。&lt;/p&gt;
&lt;p&gt;MPP由HI_MPI_SYS_Bind来绑定两个模块，而UNF还是使用Hi_XXX_Attach来绑定两个模块。&lt;/p&gt;
&lt;p&gt;MPP内存管理MMZ，VB也比UNF更细致，强大。&lt;/p&gt;
&lt;p&gt;UNF支持更多的外设模块。如TUNER（广播电视），CIPHER（芯片内部加密），Subtitle（字幕），PDM（低功耗），SCI（智能卡），GPU等。&lt;/p&gt;
&lt;p&gt;UNF开源。在一些模块的实现中，也使用了一些开源项目，如FFmpeg，Alsa，wpa_supplicant等。&lt;/p&gt;
&lt;h2 id=&#34;3-3798芯片UNF处理构架&#34;&gt;3:  3798芯片UNF处理构架&lt;/h2&gt;
&lt;h3 id=&#34;3-1-应用架构&#34;&gt;3.1 应用架构&lt;/h3&gt;
&lt;p&gt;海思媒体处理平台（ MSP）实现了对海思高清机顶盒解决方案处理器中媒体、图形以&lt;br&gt;
及外设的屏蔽和封装，对应用软件直接提供 API（ Application Program Interface）接口&lt;br&gt;
完成相应功能。典型的应用架构如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730155841.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3798&lt;strong&gt;&lt;strong&gt;比35xx&lt;/strong&gt;&lt;/strong&gt;多了一个UNF&lt;strong&gt;&lt;strong&gt;层，它在MPI&lt;/strong&gt;&lt;/strong&gt;基础上进行了一层封装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;软件架构主要包含以下 4 层：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;UNF层&lt;/p&gt;
&lt;p&gt;媒体处理平台（ MSP）对外统一的应用开发接口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPI层&lt;/p&gt;
&lt;p&gt;处理器各模块硬件能力实现层的用户态部分。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DRV层&lt;/p&gt;
&lt;p&gt;处理器各模块硬件能力实现层的内核态部分。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HAL层&lt;/p&gt;
&lt;p&gt;处理器各模块的硬件抽象层。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-2-3798SDK-概览（功能介绍）&#34;&gt;3.2 3798SDK 概览（功能介绍）&lt;/h3&gt;
&lt;p&gt;媒体处理平台（ MSP）中所有模块按照功能可以分为媒体处理，图形处理，外设处理 3&lt;br&gt;
类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;媒体处理&lt;/p&gt;
&lt;p&gt;DEMUX、 AVPLAY、 SOUND、 DISPLAY、 VO、 HDMI、 PVR、 VDEC、 VENC、&lt;br&gt;
ADEC、 AENC、 VI、 AI&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;图形处理&lt;/p&gt;
&lt;p&gt;HIFB、 HIGO、 TDE、 JPEG、 JPGE、 GPU&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;外设处理&lt;/p&gt;
&lt;p&gt;Cipher、 OTP、 PMOC、 Frontend、 I2C、 SCI、 KEYLED、 GPIO、 IR、 WDG、 C51&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-3-3798内存管理&#34;&gt;3.3 3798内存管理&lt;/h3&gt;
&lt;h4 id=&#34;3-3-1-Mmz内存&#34;&gt;3.3.1 Mmz内存&lt;/h4&gt;
&lt;p&gt;3798的mmz内存在uboot bootargs环境变量中分配，在内核中大块连续内存使用dma_alloc_from_contiguous（drv/mmz/drv_media_mem_v2.c）来分配内存， 小块内存使用kmalloc分配，并且使用内核链表标记管理。和应用层交互使用mamp，umamp，并使用内核链表管理内存。这点和35xx DVR芯片有很大区别，DVR芯片模块内存和linux内核使用内存不再一个地方，应该是通过物理地址往虚拟地址映射来使用的。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# cat /proc/cmdline&lt;/span&gt;
&lt;span class=&#34;token assign-left variable&#34;&gt;mem&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;1G &lt;span class=&#34;token assign-left variable&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;ttyAMA0,115200 &lt;span class=&#34;token assign-left variable&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/dev/romblock3 &lt;span class=&#34;token assign-left variable&#34;&gt;rootfstype&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;squashfs &lt;span class=&#34;token assign-left variable&#34;&gt;mtdparts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;hinand:5M&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;boot&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;,1M&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;baseparam&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;,7M&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;kernel&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;,18M&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rootfs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;,64M&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;appfs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;,16M&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;qte&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;,4M&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;,12M&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;log&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;,1M&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;logo&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;mmz&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;ddr,0,0,500M&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;具体就是在bootargs中配置mem=1G mmz=ddr,0,0,435M&lt;/p&gt;
&lt;p&gt;查看内存使用情况跟监控相同，通过cat /proc/media-mem&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730155600.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;3-3-2-解码vid内存&#34;&gt;3.3.2 解码vid内存&lt;/h4&gt;
&lt;p&gt;关于码流解码过程中视频缓冲buffer u32VidBufSize配置：&lt;/p&gt;
&lt;p&gt;创建avplay时，可以指定视频es buf大小，参考如下代码&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;Ret &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;HI_UNF_AVPLAY_GetDefaultConfig&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;AvplayAttr&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; HI_UNF_AVPLAY_STREAM_TYPE_ES&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
AvplayAttr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;stStreamAttr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;u32VidBufSize &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
Ret &lt;span class=&#34;token operator&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;HI_UNF_AVPLAY_Create&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;AvplayAttr&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;hAvplay&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Es buf的作用存储码流原始es流。&lt;/p&gt;
&lt;p&gt;这个buffer的大小跟码流分辨率、码率都有关系，一般情况下，D1/720P/1080P/4K 码流的配置为 2M/3M/5M/16M 即可，特殊码流除外。&lt;/p&gt;
&lt;h3 id=&#34;3-4-3798模块&#34;&gt;3.4 3798模块&lt;/h3&gt;
&lt;h4 id=&#34;DEMUX：&#34;&gt;DEMUX：&lt;/h4&gt;
&lt;p&gt;​	数据输入模块。IF，TSI，RAM。&lt;/p&gt;
&lt;p&gt;​	NVR使用的是RAM接口输入ES码流。&lt;/p&gt;
&lt;h4 id=&#34;VI&#34;&gt;VI:&lt;/h4&gt;
&lt;p&gt;虚拟VI&lt;/p&gt;
&lt;h4 id=&#34;VDEC&#34;&gt;VDEC&lt;/h4&gt;
&lt;p&gt;​	解码器模块提供一组函数指针，供解码使用。目前有264，mpeg4两个。&lt;/p&gt;
&lt;p&gt;视频解码的简单流程是：&lt;br&gt;
步骤 1 VDEC 从 Demux 或 ES buffer 获取 ES 数据送 Firmware 进行解码（ Firmware: StreamInput(VDEC-&amp;gt;Firmware)）。&lt;br&gt;
步骤 2 Firmware 将解码完的 1D 或者 2D 帧存放在帧 buffer 中。&lt;br&gt;
步骤 3 VDEC 从帧 buffer 中获取（ Firmware: Frame Output(Firmware-&amp;gt;VDEC)）视频帧放入其帧队列中。&lt;br&gt;
步骤 4 VPSS 在线程中从 VDEC 的帧队列中取帧做解码后处理（ Frame Output(VDEC-&amp;gt;VPSS)）。&lt;br&gt;
步骤 5 AVPLAY 向 VDEC 获取视频帧， VDEC 从 VPSS 获取视频帧返回给 AVPLAY。&lt;/p&gt;
&lt;h4 id=&#34;SYNC：&#34;&gt;SYNC：&lt;/h4&gt;
&lt;p&gt;音视频同步工具&lt;/p&gt;
&lt;h4 id=&#34;DISPLAY：显示设备&#34;&gt;DISPLAY：显示设备&lt;/h4&gt;
&lt;h4 id=&#34;WINDOW：显示通道&#34;&gt;WINDOW：显示通道&lt;/h4&gt;
&lt;p&gt;msp 目录下的“ windowXXYY”节点的中的 XX 为显示通道的编号， YY 为 window 序号。比如 window0100， bit[15:8]的 01 表示该 window 基于 DISPLAY1 创建， bit[7:0]的00 表示 window 序号为 0。有支持3D显示&lt;/p&gt;
&lt;p&gt;DISP（ Display）模块接收 WINDOW 提供的视频图像、 Frame Buffer 提供的图形画&lt;br&gt;
面，进行图像叠加处理和图像色彩调节，并将叠加后图像通过多种视频输出端口输出&lt;br&gt;
给显示设备；此外， DISP 支持获取视频输出端口上的包含视频和图形的完整图像。&lt;/p&gt;
&lt;p&gt;窗口类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Display：独立显示窗口&lt;/li&gt;
&lt;li&gt;Virtual：虚拟窗口&lt;/li&gt;
&lt;li&gt;Main：同源显示主窗口&lt;/li&gt;
&lt;li&gt;Slave：同源显示从窗口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730155307.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730155256.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;SO（-Subtitle-Output）&#34;&gt;SO（ Subtitle Output）&lt;/h4&gt;
&lt;h4 id=&#34;PDM&#34;&gt;PDM&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730155248.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;PDM(Product Data Manager)模块用于管理与产品相关的数据，包括基本参数、开机画&lt;br&gt;
面参数及数据、瞬播参数及数据的管理&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730155410.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;用户通过镜像制作工具制作基本参数镜像与瞬播镜像，通过烧写工具烧写至 FLASH，PDM 模块在 BOOT 下将基本参数及瞬播数据读入内存，并传递至 KERNEL。 KERNEL下瞬播从 PDM 模块获取参数及数据，调用 DEMUX、 VDEC、 VO 等模块驱动，完成瞬播播放&lt;/p&gt;
&lt;p&gt;demux&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730155234.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;DEMUX 模块接收 DEMOD 或内存中的 TS 流，按客户应用程序（下简称 APP）的设&lt;br&gt;
置提取出其中的 SEC 数据、 PES 数据、 TS 数据、音频数据和视频数据。 APP 获取&lt;br&gt;
SEC 数据、 PES 数据和 TS 数据进行处理。 AVPLAY 获取音频数据进行处理， VDEC 获&lt;br&gt;
取视频数据进行处理。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730155217.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;AVPLAY 主要依赖 ADEC/VDEC/DEMUX 等模块，其向应用或中间件播放器提供基本&lt;br&gt;
的播放业务相关接口。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730155202.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-5-3798和NVR模块使用方面区别：&#34;&gt;3.5 3798和NVR模块使用方面区别：&lt;/h3&gt;
&lt;p&gt;3798模块中vpss，sync等模块是其它模块自动创建，自动绑定处理的。这点和NVR系列芯片差别很大，nvr中vi，vpss，vo都需要用户自己绑定，设置属性，而3798中vpss，vo创建，属性设置是在上层模块中自动处理的（少量设置属性上层传递下去）。&lt;/p&gt;
&lt;p&gt;​    简单来说，MPP接口只实现了基本的功能接口，没有封装或很少封装。&lt;/p&gt;
&lt;p&gt;UNF 应用层实现了很多业务接口，对底层驱动进行了多层封装，并且实现了一些常用的业务。&lt;/p&gt;
&lt;h2 id=&#34;4-3798代码祥看&#34;&gt;4: 3798代码祥看&lt;/h2&gt;
&lt;h3 id=&#34;4-1-分析方法&#34;&gt;4.1 分析方法&lt;/h3&gt;
&lt;h4 id=&#34;4-1-1：查看代码，静态分析应用层，驱动层实现方法&#34;&gt;4.1.1：查看代码，静态分析应用层，驱动层实现方法&lt;/h4&gt;
&lt;p&gt;​    使用Source insight分析kernel，msp代码。&lt;/p&gt;
&lt;h4 id=&#34;4-1-2：图示静态分析函数调用关系&#34;&gt;4.1.2：图示静态分析函数调用关系&lt;/h4&gt;
&lt;p&gt;​    使用cflow， tree2dotx，和dot生成函数静态调用图。&lt;/p&gt;
&lt;h4 id=&#34;4-1-3：图示动态分析函数调用关系：库函数，系统调用，内核调用&#34;&gt;4.1.3：图示动态分析函数调用关系：库函数，系统调用，内核调用&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;​    使用ltrace分析系统库函数&lt;/li&gt;
&lt;li&gt;​    strace分析系统调用流程&lt;/li&gt;
&lt;li&gt;​    使用Ftrace，valgrind，gprof2dot生成运行时调用图。&lt;/li&gt;
&lt;li&gt;​    Perf分析内核空间调用。发现一些依赖库在ubuntu12.04里面不可用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这一步实现了valgrind动态分析，其它的几个工具需要交叉编译，TODO。使用Perf可能需要换更新的linux版本。&lt;/p&gt;
&lt;p&gt;其它还有time(大概运行时间)，gconv（覆盖率统计）等分析方式。&lt;/p&gt;
&lt;h3 id=&#34;4-2-基础模块：hi-media-hi-mmz-hi-common&#34;&gt;4.2 基础模块：hi_media hi_mmz hi_common&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730155123.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;​    可以从lsmod中很清晰的看出来hi_media hi_mmz hi_common这几个模块的基础地位。hi_media基础模块管理，hi_mmz提供内存管理，hi_common提供proc，log等基础功能，符号导出供其他海思模块使用。&lt;/p&gt;
&lt;p&gt;Common&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;COMMON 模块是 SDK 的基础模块，提供的 API 主要供 SDK 的其他模块调用。&lt;br&gt;
COMMON 模块现在主要有以下功能：
&lt;ul&gt;
&lt;li&gt;系统初始化和去初始化；&lt;/li&gt;
&lt;li&gt;版本信息获取；&lt;/li&gt;
&lt;li&gt;获取时间戳；&lt;/li&gt;
&lt;li&gt;寄存器读写、映射功能；&lt;/li&gt;
&lt;li&gt;MMZ 内存使用；&lt;/li&gt;
&lt;li&gt;调试信息控制；&lt;/li&gt;
&lt;li&gt;Flash 操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-2-1-基本通用模块应用层接口common-api&#34;&gt;4.2.1 基本通用模块应用层接口common/api&lt;/h4&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;HiSTBLinuxFS&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;source&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;common&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;api
mpi_mem&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c
MEM_POOL_Init 应用层的内存池，重复利用。
mpi_memmap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c
映射使用链表区分。管理mmap映射
 
 
mpi_module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c
HI_MODULE_Init中有打开内存操作，内存统一管理。
模块id，名称注册，相互查找。
 
mpi_stat&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c
线程时间归零，等相关处理
 
hi_common&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c
proc，sys一些路径目录增删提供了用户层接口，mmz内存管理用户层接口
 
mpi_userproc
用户层提供线程 通用proc接口，proc读写是在其它模块内部实现的，函数指针形式
 
 
注：himedia 相关模块是海思自己实现的内核子系统。有自己实现的总线，驱动，设备模型结构体。也是在标准linux模型基础上封装的。
 &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;4-2-2-基本通用模块驱动接口common-dev&#34;&gt;4.2.2 基本通用模块驱动接口common/dev&lt;/h4&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;HiSTBLinuxFS&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;source&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;common&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dev
drv_dev_ext_k&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c 重要
HI_DRV_DEV_Init 所有模块宏定义在这里，注册模块结构体在这里
himedia&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c himedia_bash&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c     模块注册，注销基础函数
&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;DYNAMIC_MINORS&lt;/span&gt; &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt; &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* like dynamic majors */&lt;/span&gt;            &lt;span class=&#34;token expression&#34;&gt;himedia主设备号&lt;span class=&#34;token number&#34;&gt;218&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; himedia_minors&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;DYNAMIC_MINORS &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
 
&lt;span class=&#34;token keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;tagPM_BASEDEV_S&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    HI_S32        id&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; HI_S8    &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;device&lt;/span&gt;    dev&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;PM_BASEDEV_S&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
 
&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name function&#34;&gt;TO_PM_BASEDEV&lt;/span&gt;&lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;container_of&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; PM_BASEDEV_S&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dev&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
 
&lt;span class=&#34;token keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;tagPM_BASEOPS_S&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;HI_S32&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;probe&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;HI_S32&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;remove&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;HI_VOID&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;shutdown&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;HI_S32&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;prepare&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;HI_VOID&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;complete&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;HI_S32&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;suspend&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;pm_message_t&lt;/span&gt; state&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;HI_S32&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;suspend_late&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;pm_message_t&lt;/span&gt; state&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;HI_S32&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;resume_early&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;HI_S32&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;resume&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;PM_BASEOPS_S&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
 
 
&lt;span class=&#34;token keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;tagPM_BASEDRV_S&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;HI_S32&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;probe&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;HI_S32&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;remove&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;HI_VOID&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;shutdown&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;HI_S32&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;suspend&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;pm_message_t&lt;/span&gt; state&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;HI_S32&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;suspend_late&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;pm_message_t&lt;/span&gt; state&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;HI_S32&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;resume_early&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;HI_S32&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;resume&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;device_driver&lt;/span&gt; driver&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;PM_BASEDRV_S&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
 
&lt;span class=&#34;token keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;tagPM_DEVICE_S&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    HI_S32 minor&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; HI_S8 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;owner&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;file_operations&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;app_ops&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    PM_BASEOPS_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;base_ops&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;list_head&lt;/span&gt; list&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;device&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;app_device&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    PM_BASEDEV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;base_device&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    PM_BASEDRV_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;base_driver&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;PM_DEVICE_S&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
 
&lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;himedia_class&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;file_operations&lt;/span&gt; himedia_fops &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;owner        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; THIS_MODULE&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;open        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_open&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
 &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;设备模型结构体&#34;&gt;设备模型结构体&lt;/h5&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;himedia_devobj&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    PM_BASEDEV_S pdev&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
 
&lt;span class=&#34;token keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;tagPM_BASEDEV_S&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    HI_S32        id&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; HI_S8    &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;device&lt;/span&gt;    dev&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;PM_BASEDEV_S&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
 &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;海思模块顶层总线himedia-bus&#34;&gt;海思模块顶层总线himedia_bus&lt;/h5&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;device&lt;/span&gt; himedia_bus &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
         &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;init_name        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;himediaBusDev&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
         &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;release    &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_bus_release
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;/*top level bus, parent and bus member are both NULL*/&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/*CNcomment:这是顶层总线，parent 和 bus 成员为 NULL*/&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;bus_type&lt;/span&gt; himedia_bus_type &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
         &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name                &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;himediaBus&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
         &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dev_attrs        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_dev_attrs&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
         &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;match               &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_match&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
         &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;uevent              &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_uevent&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
         &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pm                     &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; HIMEDIA_PM_OPS_PTR&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
定义HIMEDIA_PM_OPS_PTR
                            &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;dev_pm_ops&lt;/span&gt; himedia_dev_pm_ops &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
                                     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prepare        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_pm_prepare&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                                     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;complete       &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_pm_complete&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                                     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;suspend        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_pm_suspend&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                                     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;resume         &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_pm_resume&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                                     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;freeze         &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_pm_freeze&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                                     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;thaw           &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_pm_thaw&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                                     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;poweroff       &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_pm_poweroff&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                                     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;restore        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_pm_restore&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                                     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;suspend_noirq  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_pm_suspend_noirq&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                                     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;resume_noirq   &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_pm_resume_noirq&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                                     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;freeze_noirq   &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_pm_freeze_noirq&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                                     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;thaw_noirq     &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_pm_thaw_noirq&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                                     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;poweroff_noirq &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_pm_poweroff_noirq&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                                     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;restore_noirq  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; himedia_pm_restore_noirq&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                            &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
                            &lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;HIMEDIA_PM_OPS_PTR&lt;/span&gt;     &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;himedia_dev_pm_ops&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730154854.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730154845.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;内核到用户往用户空间写文件调试&#34;&gt;内核到用户往用户空间写文件调试&lt;/h5&gt;
&lt;p&gt;drv_file_ext.c 提供内核空间创建，读写用户空间文件函数，/mnt文件存储路径。提供了内核数据导出到用户空间的方法。&lt;/p&gt;
&lt;p&gt;应该是echo * &amp;gt; /proc/msp/** 这种调试方式的实现方式&lt;/p&gt;
&lt;h5 id=&#34;内核log日志&#34;&gt;内核log日志&lt;/h5&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;drv_log_ioctl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;h  打印日志相关。  这里日志位置可选&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;串口 &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;网络 &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;U盘
&lt;span class=&#34;token comment&#34;&gt;/*structure of mode log level */&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;/*CNcomment: 模块打印级别控制信息结构 */&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;hiLOG_CONFIG_INFO_S&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    HI_U8 ModName&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;/*mode name 16 + &#39;_&#39; 1 + pid 10 */&lt;/span&gt;
    HI_U8 u8LogLevel&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;/*log level*/&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/*CNcomment:  模块打印级别控制 */&lt;/span&gt;
    HI_U8 u8LogPrintPos&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;/*log output location, 0:serial port; 1:network;2:u-disk*/&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/*CNcomment:  模块打印位置控制 0:串口 1:网络 2:U盘 */&lt;/span&gt;
    HI_U8 u8UdiskFlag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;/* u-disk log flag */&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;LOG_CONFIG_INFO_S&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

hi_debug&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;h    log调试级别
&lt;span class=&#34;token comment&#34;&gt;/**Default level of the output debugging information*/&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;/**CNcomment: 默认的调试信息输出级别*/&lt;/span&gt;
&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;HI_LOG_LEVEL_DEFAULT&lt;/span&gt; &lt;span class=&#34;token expression&#34;&gt;HI_LOG_LEVEL_ERROR&lt;/span&gt;&lt;/span&gt;
 
&lt;span class=&#34;token comment&#34;&gt;/**Level of the output debugging information*/&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;/**CNcomment: 调试信息输出级别*/&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;hiLOG_LEVEL_E&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    HI_LOG_LEVEL_FATAL   &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;/**&amp;lt;Fatal error. It indicates that a critical problem occurs in the system. Therefore, you must pay attention to it.*/&lt;/span&gt;
                                  &lt;span class=&#34;token comment&#34;&gt;/**&amp;lt;CNcomment: 致命错误, 此类错误需要特别关注，一般出现此类错误代表系统出现了重大问题 */&lt;/span&gt;
    HI_LOG_LEVEL_ERROR   &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;/**&amp;lt;Major error. It indicates that a major problem occurs in the system and the system cannot run.*/&lt;/span&gt;
                                  &lt;span class=&#34;token comment&#34;&gt;/**&amp;lt;CNcomment: 一般错误, 一般出现此类错误代表系统出现了比较大的问题，不能再正常运行 */&lt;/span&gt;
    HI_LOG_LEVEL_WARNING &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;/**&amp;lt;Warning. It indicates that a minor problem occurs in the system, but the system still can run properly.*/&lt;/span&gt;
                                  &lt;span class=&#34;token comment&#34;&gt;/**&amp;lt;CNcomment: 告警信息, 一般出现此类信息代表系统可能出现问题，但是还能继续运行 */&lt;/span&gt;
    HI_LOG_LEVEL_INFO    &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;/**&amp;lt;Message. It is used to prompt users. Users can open the message when locating problems. It is recommended to disable this message in general.*/&lt;/span&gt;
                                  &lt;span class=&#34;token comment&#34;&gt;/**&amp;lt;CNcomment: 提示信息, 一般是为提醒用户而输出，在定位问题的时候可以打开，一般情况下建议关闭 */&lt;/span&gt;
    HI_LOG_LEVEL_DBG     &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;/**&amp;lt;Debug. It is used to prompt developers. Developers can open the message when locating problems. It is recommended to disable this message in general.*/&lt;/span&gt;
                                  &lt;span class=&#34;token comment&#34;&gt;/**&amp;lt;CNcomment: 提示信息, 一般是为开发人员调试问题而设定的打印级别，一般情况下建议关闭 */&lt;/span&gt;
 
    HI_LOG_LEVEL_BUTT
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; HI_LOG_LEVEL_E&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
 
drv_media_mem_v2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c    实现了cat &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;proc&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;media&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;mem
 
drv_mem_ext&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c 实现了 KMEM_POOL_S 的管理，&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;内核模块管理&#34;&gt;内核模块管理&lt;/h5&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;drv_module_ext&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c

COMMON_DRV_ModInit

         MMNGR_DRV_ModInit

        

    s32Ret &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;HI_DRV_MODULE_Register&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HI_ID_SYS&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;HI_SYS&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;      HI_NULL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

    s32Ret &lt;span class=&#34;token operator&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;HI_DRV_MODULE_Register&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HI_ID_MODULE&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;HI_MODULE&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   HI_NULL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

    s32Ret &lt;span class=&#34;token operator&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;HI_DRV_MODULE_Register&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HI_ID_LOG&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;HI_LOG&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;      HI_NULL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

    s32Ret &lt;span class=&#34;token operator&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;HI_DRV_MODULE_Register&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HI_ID_PROC&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;token string&#34;&gt;&#34;HI_PROC&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;     HI_NULL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

    s32Ret &lt;span class=&#34;token operator&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;HI_DRV_MODULE_Register&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HI_ID_STAT&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;token string&#34;&gt;&#34;HI_STAT&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;     HI_NULL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

    s32Ret &lt;span class=&#34;token operator&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;HI_DRV_MODULE_Register&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HI_ID_MEM&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;HI_MEM&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;      HI_NULL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

 

drv_media_mem&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c  使用dma_alloc_from_contiguous来分配

HI_DRV_MMZ_Init 这里根据bootargs传递的mmz参数分配内存大小。 mmz分配时的参数：&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;mmz_name&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;gfp&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;phys_start_addr&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;size&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;alloc_type&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&#34;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730154720.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;内核Proc的实现&#34;&gt;内核Proc的实现&lt;/h5&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;drv_proc_ext&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c
HI_DRV_PROC_Init 实现cat &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;proc&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;hisi&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;msp&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;proc_mkdir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;graphics&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; g_pHisi_proc&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;proc_symlink&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;msp&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;hisi/msp&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;proc_symlink&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;graphics&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;hisi/graphics&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;drv_userproc.c    proc使用红黑树管理目录路径&lt;/p&gt;
&lt;p&gt;​    创建销毁目录，路径在这里实现，具体每一个不同模块的proc文件读写在每个模块内部实现，使用函数指针。&lt;/p&gt;
&lt;h4 id=&#34;4-2-3-业务模块应用层通用组件source-component&#34;&gt;4.2.3 业务模块应用层通用组件source/component&lt;/h4&gt;
&lt;p&gt;/home/andy/HiSTBLinuxFS/source/component  &lt;a href=&#34;http://xn--ciqz3l2zejvhba81ax77b534ada8984d6qek8t.so&#34;&gt;这个目录里面很多目录只有.so&lt;/a&gt; .a库，没有源代码。&lt;/p&gt;
&lt;p&gt;/source/component/hiplayer 没有源码。&lt;/p&gt;
&lt;p&gt;hi_debug.h   各种调试宏定义，不同级别调试定义&lt;/p&gt;
&lt;p&gt;HI_MALLOC   内存分配使用了内核链表管理&lt;/p&gt;
&lt;p&gt;内存在一个模块内分配，往用户空间传递物理地址，其它模块使用这个物理地址映射到虚拟地址，这样来共享内存&lt;/p&gt;
&lt;p&gt;​    海思这里大多数模块都只提供了编译后的库&lt;/p&gt;
&lt;h3 id=&#34;4-3-海思专用组件&#34;&gt;4.3 海思专用组件&lt;/h3&gt;
&lt;h4 id=&#34;4-3-1-海思MSP模块应用层接口source-msp-api&#34;&gt;4.3.1 海思MSP模块应用层接口source/msp/api&lt;/h4&gt;
&lt;h5 id=&#34;Avplay分析&#34;&gt;Avplay分析&lt;/h5&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;HI_MPI_AVPLAY_Create
         AVPLAY_FrcCreate  帧率控制？    
         HI_MPI_SYNC_Create     音视频同步
         AVPLAY_CreateThread&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​     &lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730154354.svg&#34; alt=&#34;HI_MPI_AVPLAY_Create.__avplay_mpi_avplay_c&#34;&gt;&lt;/p&gt;
&lt;p&gt;上图插图的是svg格式图片，可以使用IE，firefox打开，最好使用专门的看图软件打开。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;HI_MPI_VDEC_AllocChan
         &lt;span class=&#34;token function&#34;&gt;VPSS_Control&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pstVdec&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;hVdec&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;VPSS_CMD_CREATEVPSS&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pstVdec&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;hVpss&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        
UNF调用一般过程，最终采用ioctl调用驱动   
HI_UNF_AVPLAY_GetBuf
         HI_MPI_AVPLAY_GetBuf
                   HI_MPI_VDEC_ChanGetBuffer
                            VDEC_GetStreamBuf                &lt;span class=&#34;token comment&#34;&gt;/* If get but not put, return last address */&lt;/span&gt;    这里有对不对称调用特殊处理
                                     &lt;span class=&#34;token function&#34;&gt;ioctl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s_stVdecAdpParam&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;s32DevFd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; UMAPC_VDEC_GETBUF&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;stBufParam&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;     
                                    
HI_MPI_AVPLAY_Start
         AVPLAY_StartVidChn
                   HI_MPI_SYNC_Start
                   HI_MPI_VDEC_ChanStart
                             &lt;span class=&#34;token function&#34;&gt;ioctl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;g_SyncDevFd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; CMD_SYNC_START_SYNC&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;SyncId&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
         HI_MPI_SYNC_Play 结构体状态改变
         AVPLAY_Play             结构体状态控制
         HI_MPI_STAT_Event                                   
 
HI_MPI_AVPLAY_Stop
         AVPLAY_StopVidChn
                   HI_MPI_VDEC_ChanStop
                            VDEC_ChanStop      这里调用函数指针
                   HI_MPI_VDEC_ResetChan
                            VDEC_ResetStreamBuf
                            &lt;span class=&#34;token function&#34;&gt;VDEC_VPSSCMD&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hVdec&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; VPSS_CMD_RESETVPSS&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; HI_NULL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;         调用函数指针，指向VPSS_Control
                   AVPLAY_ResetWindow
                   HI_MPI_SYNC_Stop
         &lt;span class=&#34;token function&#34;&gt;HI_MPI_STAT_Event&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;STAT_EVENT_VSTOP&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
 
VDEC使用函数指针集来支持多种解码方式，内部vfmw。mjpeg，内部硬件&lt;span class=&#34;token number&#34;&gt;265&lt;/span&gt;协处理器
mpi_vdec_vpu&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c
HI_MPI_VDEC_Init
         &lt;span class=&#34;token function&#34;&gt;HI_CODEC_Register&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;VDEC_MJPEG_Codec&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
         &lt;span class=&#34;token function&#34;&gt;HI_CODEC_Register&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;VDEC_VFMW_Codec&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
 
&lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; HI_CODEC_S hi_codecVPU_entry &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pszName                  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;VPU&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;unVersion                 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;stVersion &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pszDescription &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hisilicon H265 codec&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
 
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;GetCap                      &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; HI_VPU_GetCap&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Create                       &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; HI_VPU_Create&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Destroy            &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; HI_VPU_Destroy&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Start                           &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; HI_VPU_Start&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Stop                            &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; HI_VPU_Stop&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Reset                         &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; HI_VPU_Reset&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SetAttr             &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; HI_VPU_SetAttr&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;GetAttr            &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; HI_VPU_GetAttr&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DecodeFrame          &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; HI_VPU_DecodeFrame&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;EncodeFrame &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; HI_NULL&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;RegFrameBuffer &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; HI_VPU_RegFrameBuffer&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;GetStreamInfo        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; HI_VPU_GetStreamInfo&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Control             &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; HI_VPU_Control&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
 
avplay，vi和 vo之间使用vpss关联。
HI_UNF_VO_DetachWindow
         HI_MPI_AVPLAY_DetachWindow
                   HI_MPI_VDEC_DestroyPort
         &lt;span class=&#34;token function&#34;&gt;HI_MPI_VI_Detach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hSrc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; hWindow&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
                   VI_DetachFromVpss
        
HI_MPI_AVPLAY_ChnClose
         AVPLAY_FreeVidChn
                   HI_MPI_VDEC_ChanBufferDeInit
                            &lt;span class=&#34;token function&#34;&gt;VDEC_VFMWSpecCMD&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hVdec&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; VFMW_CMD_DETACHBUF&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; HI_NULL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
                            &lt;span class=&#34;token function&#34;&gt;VDEC_DestroyStreamBuf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pstVdec&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;hStreamBuf&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                   ummap内存块，ioctl通知内核vdec销毁内存
                   AVPLAY_FreeVdec
                            HI_MPI_VDEC_FreeChan
                                     &lt;span class=&#34;token function&#34;&gt;VPSS_Control&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pstVdec&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;hVdec&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;VPSS_CMD_DESTORYVPSS&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pstVdec&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;hVpss&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
                                     &lt;span class=&#34;token function&#34;&gt;VDEC_DestroyCodec&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pstVdec&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
 
HI_UNF_AVPLAY_Destroy
         HI_MPI_AVPLAY_Destroy
                   &lt;span class=&#34;token function&#34;&gt;HI_MPI_SYNC_Destroy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pAvplay&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;hSync&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
                   &lt;span class=&#34;token function&#34;&gt;ioctl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;g_AvplayDevFd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; CMD_AVPLAY_DESTROY&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;AvplayUsrAddr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AvplayId&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
                  
avplay内部的线程
    &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HI_VOID&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;pthread_join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pAvplay&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;AvplayDataThdInst&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; HI_NULL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;ifdef&lt;/span&gt; &lt;span class=&#34;token expression&#34;&gt;AVPLAY_VID_THREAD&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HI_VOID&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;pthread_join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pAvplay&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;AvplayVidDataThdInst&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; HI_NULL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HI_VOID&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;pthread_join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pAvplay&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;AvplayStatThdInst&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; HI_NULL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;          &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;4-3-2-海思MSP模块驱动层接口source-msp-drv&#34;&gt;4.3.2 海思MSP模块驱动层接口source/msp/drv/&lt;/h4&gt;
&lt;h5 id=&#34;VENC&#34;&gt;VENC&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730161000.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;VENC 模块的具体工作原理如上图所示，注意图中褐色箭头，是 VENC 调用到VPSS 模块，来对帧信息做缩放处理后编码的数据流，该处理只用于外部用户送帧的模式。若在绑定情况下出现帧信息分辨率与编码分辨率不匹配， VENC 模块会通知绑定的前级模块进行缩放处理，而不会自行调用 VPSS 模块缩放。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;VENC_DRV_ModInit
         VENC_DRV_Init
                   &lt;span class=&#34;token function&#34;&gt;HI_DRV_MODULE_Register&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HI_ID_VENC&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;HI_VENC&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HI_VOID&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;s_VencExportFuncs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
                            MODULE_DRV_Register
                                     &lt;span class=&#34;token function&#34;&gt;ModuleMgr_Link_AddNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;g_pstKModuleHeader&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;stModule&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 链表管理
                                     &lt;span class=&#34;token function&#34;&gt;LOGAddModule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HI_PCHAR&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;pu8ModuleName&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HI_MOD_ID_E&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;u32ModuleID&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  在log模块中注册
         &lt;span class=&#34;token function&#34;&gt;HI_DRV_DEV_Register&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;g_VencRegisterData&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
                   HI_DRV_PM_Register     海思模块管理非常重要的模块，了解这个函数实现过程就大概明白海思内核模块实现思想了
         &lt;span class=&#34;token function&#34;&gt;VENC_DRV_BoardDeinit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      一些寄存器配置，reset，clock操作。
         venc调用硬件协处理器，涉及&lt;span class=&#34;token number&#34;&gt;263&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;264&lt;/span&gt;，mpeg4，
    &lt;span class=&#34;token function&#34;&gt;snprintf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;g_VencRegisterData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;devfs_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;%s&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; UMAP_DEVNAME_VENC&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    g_VencRegisterData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fops   &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;VENC_FOPS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    g_VencRegisterData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;minor  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; UMAP_MIN_MINOR_VENC&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    g_VencRegisterData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;owner  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; THIS_MODULE&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    g_VencRegisterData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;drvops &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;venc_drvops&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;avplay&#34;&gt;avplay&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730154040.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AVPLAY 主要由以下三部分组成：
&lt;ul&gt;
&lt;li&gt;音视频解码器&lt;/li&gt;
&lt;li&gt;同步播放控制模块&lt;/li&gt;
&lt;li&gt;命令与状态管理模块&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主要负责响应外部控制命令的执行、状态查询上报、使解码后的帧数据通过同步控制&lt;br&gt;
模块输出&lt;/p&gt;
&lt;h5 id=&#34;avplay初始化分析&#34;&gt;avplay初始化分析&lt;/h5&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;AVPLAY_DRV_ModInit
​    HI_DRV_MODULE_Register
​         &lt;span class=&#34;token function&#34;&gt;HI_DRV_MODULE_Register&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HI_ID_AVPLAY&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; AVPLAY_NAME&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; HI_NULL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
​             ModuleMgr_Link_AddNode  内核模块管理
​             KMODULE_MEM_POOL_AddModule
​                 KMODULE_MEM_POOL_FindNode    找到空的没有使用的节点
​                 KMODULE_MEM_POOL_MALLOC 分配内存，然后放到链表
​             LOGAddModule                    日志
​    &lt;span class=&#34;token function&#34;&gt;HI_DRV_DEV_Register&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;g_AvplayRegisterData&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
​         &lt;span class=&#34;token function&#34;&gt;HI_DRV_PM_Register&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;s_umap_devs&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   himedia封装处理
​             &lt;span class=&#34;token function&#34;&gt;himedia_device_alloc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;himedia&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
​             &lt;span class=&#34;token function&#34;&gt;himedia_device_add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;bdev&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
​                 &lt;span class=&#34;token function&#34;&gt;dev_set_name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;pdev&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;dev&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;%s.%d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pdev&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pdev&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
​                 &lt;span class=&#34;token function&#34;&gt;device_add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;pdev&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;dev&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
​             &lt;span class=&#34;token function&#34;&gt;device_create&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;himedia_class&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;bdev&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;dev&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dev&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;%s&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; himedia&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
​             &lt;span class=&#34;token function&#34;&gt;himedia_driver_alloc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;himedia&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; himedia&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;owner&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; himedia&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;base_ops&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
​             &lt;span class=&#34;token function&#34;&gt;himedia_driver_register&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;bdrv&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
​                 &lt;span class=&#34;token function&#34;&gt;driver_register&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;drv&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;driver&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
​   
 
  g_AvplayRegisterData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fops &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;AVPLAY_FOPS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  g_AvplayRegisterData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;minor &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; UMAP_MIN_MINOR_AVPLAY&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  g_AvplayRegisterData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;owner &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; THIS_MODULE&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  g_AvplayRegisterData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;drvops &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;AVPLAY_DRVOPS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
 
  s_umap_devs&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;minor &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; umapd&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;minor&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  s_umap_devs&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; umapd&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;devfs_name&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  s_umap_devs&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;owner &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; umapd&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;owner&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  s_umap_devs&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;app_ops &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; umapd&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;fops&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  s_umap_devs&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;base_ops &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; umapd&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;drvops&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;IOCTL实现分析-基于avplay&#34;&gt;IOCTL实现分析 基于avplay&lt;/h5&gt;
&lt;p&gt;在HI_DRV_DEV_Register&lt;strong&gt;中注册&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;file_operations&lt;/span&gt; AVPLAY_FOPS &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;owner          &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  THIS_MODULE&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;open           &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  AVPLAY_DRV_Open&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;unlocked_ioctl &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  AVPLAY_DRV_Ioctl&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;release        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  AVPLAY_DRV_Close&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      
AVPLAY_DRV_Ioctl
         &lt;span class=&#34;token function&#34;&gt;HI_DRV_UserCopy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ffile&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;f_dentry&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;d_inode&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ffile&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; cmd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; arg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; AVPLAY_Ioctl&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
                   &lt;span class=&#34;token function&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;inode&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; file&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; cmd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;parg&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           这里对ioctl进行了一层封装，copy_from_user，copy_to_user的自动化处理
&lt;span class=&#34;token function&#34;&gt;AVPLAY_Ioctl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;inode&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;inode&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;file&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; cmd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; HI_VOID &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;arg&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
                   CMD_AVPLAY_CREATE            
                            AVPLAY_Create
                                     &lt;span class=&#34;token function&#34;&gt;HI_DRV_MMZ_AllocAndMap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;BufName&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; MMZ_OTHERS&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x2000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;MemBuf&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
                                     &lt;span class=&#34;token function&#34;&gt;HI_DRV_PROC_AddModule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ProcName&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; HI_NULL&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; HI_NULL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                 这里实现了proc目录的生成，下面是读写proc
                                pProcItem&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;read &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; AVPLAY_ProcRead&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
                                pProcItem&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;write &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; AVPLAY_ProcWrite&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;avplay-多个实例如何找到对应实例&#34;&gt;avplay 多个实例如何找到对应实例&lt;/h5&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token function&#34;&gt;AVPLAY_GET_INST_AND_LOCK&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
         AVPLAY_CheckHandle
                   pAvplayUsrAddr&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;AvplayId &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; hAvplay &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0xff&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
                   &lt;span class=&#34;token function&#34;&gt;ioctl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;g_AvplayDevFd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; CMD_AVPLAY_CHECK_ID&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pAvplayUsrAddr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;drv中的实现&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;AVPLAY_Ioctl            
         AVPLAY_CheckId              
                   pAvplayUsrAddr&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;AvplayUsrAddr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; g_AvplayGlobalState&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AvplayInfo&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;pAvplayUsrAddr&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;AvplayId&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AvplayUsrAddr&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;VPSS&#34;&gt;VPSS&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730153749.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;    g_VpssRegisterData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fops   &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;s_VpssFileOps&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    g_VpssRegisterData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;minor  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; UMAP_MIN_MINOR_VPSS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    g_VpssRegisterData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;owner  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; THIS_MODULE&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
g_VpssRegisterData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;drvops &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;s_VpssBasicOps&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
VPSS_DRV_Init
VPSS_CTRL_Init
         VPSS_CTRL_RegistISR     注册中断
         &lt;span class=&#34;token function&#34;&gt;VPSS_CTRL_InitInstList&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;VPSS_IP_E&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;     管理vpss实例链表初始化
         VPSS_HAL_Init                   内存，寄存器配置
         VPSS_CTRL_CreateThread      内核线程
                   VPSS_CTRL_ThreadProc
                            VPSS_CTRL_CreateTask           创建任务
                            VPSS_CTRL_StartTask               开始任务&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;VDEC-2&#34;&gt;VDEC&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730153702.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730153709.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;Avplay解码ES流过程&#34;&gt;Avplay解码ES流过程&lt;/h5&gt;
&lt;p&gt;步骤 1 初始化并配置相关设备，如 DISPLAY、 VO、 SOUND、 DEMUX 设备等。&lt;br&gt;
步骤 2 调用 HI_UNF_AVPLAY_Init 接口初始化 AVPLAY 设备。&lt;br&gt;
步骤 3 调用 HI_UNF_AVPLAY_GetDefaultConfig 接口获取缺省的 AVPLAY 配置，注意选择HI_UNF_AVPLAY_STREAM_TYPE_ES 模式。&lt;br&gt;
步骤 4 根据应用需要，修改码流属性参数。&lt;br&gt;
步骤 5 调用 HI_UNF_AVPLAY_Create 接口创建 AVPLAY 播放器。&lt;br&gt;
步骤 6 调用 HI_UNF_AVPLAY_ChnOpen 接口打开音频或视频通道。&lt;/p&gt;
&lt;p&gt;步骤 7 调用 HI_UNF_AVPLAY_SetAttr 接口设置音频解码器或视频解码器属性，同步设置为自由播放。&lt;br&gt;
步骤 8 调用 HI_UNF_SND_CreateTrack 创建 Track。&lt;br&gt;
步骤 9 调用 HI_UNF_SND_Attach 接口将音频播放器与 Track 绑定。&lt;br&gt;
步骤 10 调用 HI_UNF_VO_AttachWindow 接口将视频播放器与 VO 的窗口绑定。&lt;br&gt;
步骤 11 调用 HI_UNF_VO_SetWindowEnable 接口使能窗口。&lt;br&gt;
步骤 12 调用 HI_UNF_AVPLAY_Start 接口发送 Start 命令，开始播放音频或视频。&lt;br&gt;
步骤 13 调用 HI_UNF_AVPLAY_GetBuf 接口申请存放音频或视频的缓冲区。&lt;br&gt;
步骤 14 通过内存拷贝或文件读取等方式，将音频或视频数据直接写到缓冲区中。&lt;br&gt;
步骤 15 调用 HI_UNF_AVPLAY_PutBuf 接口更新音视频缓冲区中的读写指针。&lt;br&gt;
步骤 16 播放任务结束后，首先调用 HI_UNF_AVPLAY_Stop 接口停止 AVPLAY，再调用HI_UNF_AVPLAY_Destroy 接口销毁 AVPLAY，释放相关资源。&lt;br&gt;
步骤 17 关闭相关设备，如 DISPLAY 设备、 VO 设备、 SOUND 设备、 DEMUX 设备和AVPLAY&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730164615.svg&#34; alt=&#34;HI_MPI_AVPLAY_Create.__avplay_mpi_avplay_c&#34;&gt;&lt;/p&gt;
&lt;p&gt;MCE实现了启动过程画面的平滑切换&lt;/p&gt;
&lt;h5 id=&#34;IR&#34;&gt;IR&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730153646.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;驱动层&lt;/p&gt;
&lt;p&gt;负责完成红外模块的中断处理，在底半部中遍历所有协议并调用 match 函数来判定当前收到的红外帧属于哪种协议。如果没有匹配，则丢弃当前帧。完成最顶层的错误处理：如果当前帧当前时刻还不能被解析，则会等待大约 200ms 之后再次尝试，如果失败，则丢弃当前帧。&lt;/p&gt;
&lt;p&gt;协议适配层&lt;/p&gt;
&lt;p&gt;完成各个协议的初始化工作，向上提供遍历协议的接口，向下提供容纳协议描述符的存储空间。&lt;/p&gt;
&lt;p&gt;协议处理层&lt;/p&gt;
&lt;p&gt;协议处理层完成判定：由从某个 symbol 开始的一连串 symbol 是不是符合本协议的一&lt;br&gt;
帧。在判定某一帧符合本协议的前提条件下，完成一帧 symbol 的解析，将对应的键值解析出来。如果在解析过程中出错，或者判定是本协议的帧，但无法解析时，完成错误处理。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730153556.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730153604.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730153611.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730153623.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730153630.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;4-4-Sample-mosaic分析&#34;&gt;4.4 Sample_mosaic分析&lt;/h4&gt;
&lt;h5 id=&#34;应用层调用&#34;&gt;应用层调用&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730153315.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上图是部分截图，完整大的原图见目录中svg文件&lt;/p&gt;
&lt;p&gt;valgrind --tool=callgrind ./sample_mosaic 1080P.h264 h264&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730153400.svg&#34; alt=&#34;samplemosaic-callgrind-all&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;系统调用&#34;&gt;系统调用&lt;/h5&gt;
&lt;p&gt;Strace分析&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/07/3020210730153300.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-小结：&#34;&gt;5:小结：&lt;/h2&gt;
&lt;p&gt;海思MPI驱动其实就是在标准linux驱动基础之上封装了一层，增加了log，proc，内存管理（映射，链表）功能。MPI是在标准linux驱动基础上封装了DVR常用外围逻辑接口，并且统一并简化了接口操作方式，原来各个外围子系统操作方式差别很大，不同实现框架，实现方式使用方法也不一样（如VI，VO，AI/AO，VPSS，如果自己用标准linux子系统实现要复杂得多）。&lt;/p&gt;
&lt;p&gt;应用层MPI接口是在MPI驱动基础上再次封装了一层，封装了驱动的调用，配置等操作，在驱动功能的基础上进一步封装完成了一些简单的业务功能接口，方便了用户的使用。UNF就是在MPI基础上增加了业务逻辑封装，把常用的业务逻辑封装成接口，大大方便用户的应用程序开发。&lt;/p&gt;
&lt;h3 id=&#34;5-1-UNF相对标准内核模块区别&#34;&gt;5.1 UNF相对标准内核模块区别&lt;/h3&gt;
&lt;h4 id=&#34;5-1-1-Proc读写调试。&#34;&gt;5.1.1 Proc读写调试。&lt;/h4&gt;
&lt;p&gt;实时查询运行状态，修改设置。通用的proc目录、文件创建销毁有通用接口。读写proc文件在每个内核模块中有单独实现。&lt;/p&gt;
&lt;h4 id=&#34;5-1-2-内核空间往应用空间写文件&#34;&gt;5.1.2 内核空间往应用空间写文件&lt;/h4&gt;
&lt;p&gt;方便调试，Dump内核数据到用户控件方便定位Bug。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;HI_DRV_FILE_Open
filp_open
HI_DRV_FILE_Close
​    filp_close
HI_DRV_FILE_Read
​    pFile&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;f_op&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;read
HI_DRV_FILE_Write
​    pFile&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;f_op&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;write
HI_DRV_FILE_Lseek
​    vfs_llseek&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;5-1-3Log管理&#34;&gt;5.1.3Log管理&lt;/h4&gt;
&lt;p&gt;日志打印分级，实时修改。如何实现的见前面章节。&lt;/p&gt;
&lt;h4 id=&#34;5-1-4内存映射&#34;&gt;5.1.4内存映射&lt;/h4&gt;
&lt;p&gt;物理地址，虚拟地址映射关系管理，小块内存使用kmalloc申请，大块内存使用dma_alloc_from_contiguous申请。&lt;/p&gt;
&lt;p&gt;使用内核链表管理。&lt;/p&gt;
&lt;p&gt;打印到proc，log模块中，实时查看运行状态，内存。&lt;/p&gt;
&lt;p&gt;方便查找，打印。&lt;/p&gt;
&lt;p&gt;在多个内核共享数据也是这样实现的。&lt;/p&gt;
&lt;h3 id=&#34;5-2代码分析方法&#34;&gt;5.2代码分析方法&lt;/h3&gt;
&lt;h4 id=&#34;5-2-1-查看代码，静态分析应用层，驱动层实现方法&#34;&gt;5.2.1 查看代码，静态分析应用层，驱动层实现方法&lt;/h4&gt;
&lt;h4 id=&#34;5-2-2-图示静态分析函数调用关系&#34;&gt;5.2.2 图示静态分析函数调用关系.&lt;/h4&gt;
&lt;p&gt;Cflow, dot&lt;/p&gt;
&lt;h4 id=&#34;5-2-3-图示动态分析函数调用关系：库函数，系统调用，内核调用&#34;&gt;5.2.3 图示动态分析函数调用关系：库函数，系统调用，内核调用&lt;/h4&gt;
&lt;p&gt;​    Ltrace, strace, valgrind, perf&lt;/p&gt;
&lt;p&gt;具体分析方法，使用工具见前面章节。&lt;/p&gt;
&lt;h2 id=&#34;参考文档：&#34;&gt;参考文档：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;03-HMS 开发指南.pdf&lt;/li&gt;
&lt;li&gt;HiSTBAndroidV600R001C00SPC060_cn\document\01-Development Guide&lt;/li&gt;
&lt;li&gt;HiMPP V3.0 媒体处理软件开发参考.pdf&lt;/li&gt;
&lt;li&gt;HiSTBAndroidV600R001C00SPC060_cn\document\01-Development Guide&lt;/li&gt;
&lt;li&gt;3798m SDK 代码&lt;/li&gt;
&lt;li&gt;HMS API Development Reference.chm&lt;/li&gt;
&lt;li&gt;HiSTBAndroidV600R001C00SPC060_cn\document\01-Development Guide\09-API Reference&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;相关文章-2&#34;&gt;相关文章&lt;/h2&gt;
&lt;div class=&#34;vkr-url-wrapper&#34;&gt;
    
        &lt;a href=&#34;/posts/ed364362/&#34;&gt;&lt;img class=&#34;avatar&#34; src=&#34;/medias_webp/cover/linux.webp&#34;&gt;&lt;/a&gt;
    
    &lt;div class=&#34;desc-wrapper&#34;&gt;
        &lt;a href=&#34;/posts/ed364362/&#34;&gt;如何编写Linux驱动&lt;/a&gt;
        &lt;hr&gt;
        &lt;div class=&#34;desc&#34;&gt;本文介绍了编写驱动必备基础知识，编写驱动的难点之处。并从按键驱动到Sensor驱动简单介绍示范了驱动编写过程。并给出了驱动学习方法和评价驱动能力的技术指标！&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;vkr-url-wrapper&#34;&gt;
    
        &lt;a href=&#34;/posts/6b2ba137/&#34;&gt;&lt;img class=&#34;avatar&#34; src=&#34;/medias_webp/cover/3g4g.webp&#34;&gt;&lt;/a&gt;
    
    &lt;div class=&#34;desc-wrapper&#34;&gt;
        &lt;a href=&#34;/posts/6b2ba137/&#34;&gt;3G,4G,Wifi选型需求分析及技术简介&lt;/a&gt;
        &lt;hr&gt;
        &lt;div class=&#34;desc&#34;&gt;详细介绍了3G，4G，wifi技术类型，选型，移植，性能介绍全过程。写了好多年了，禁止转载，第一次公开发表。&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;vkr-url-wrapper&#34;&gt;
    
        &lt;a href=&#34;/posts/13894dce/&#34;&gt;&lt;img class=&#34;avatar&#34; src=&#34;/medias_webp/cover/hisi.webp&#34;&gt;&lt;/a&gt;
    
    &lt;div class=&#34;desc-wrapper&#34;&gt;
        &lt;a href=&#34;/posts/13894dce/&#34;&gt;海思MPP&amp;amp;UNF构架源代码级分析&lt;/a&gt;
        &lt;hr&gt;
        &lt;div class=&#34;desc&#34;&gt;行业中分析海思MPP内核构架，源码分析，多年经验总结积累结果。写了好多年了，禁止转载，第一次公开发表。&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;vkr-url-wrapper&#34;&gt;
    
        &lt;a href=&#34;/posts/ffcce55d/&#34;&gt;&lt;img class=&#34;avatar&#34; src=&#34;/medias_webp/cover/os.webp&#34;&gt;&lt;/a&gt;
    
    &lt;div class=&#34;desc-wrapper&#34;&gt;
        &lt;a href=&#34;/posts/ffcce55d/&#34;&gt;如何实现自己的操作系统&lt;/a&gt;
        &lt;hr&gt;
        &lt;div class=&#34;desc&#34;&gt;作为一个程序员，你肯定设想过创造属于自己的操作系统，这其中涉及非常多的知识。本文大概介绍了涉及的知识点，并给出了相关书籍和参考源代码仓库！&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;vkr-url-wrapper&#34;&gt;
    
        &lt;a href=&#34;/posts/32570315/&#34;&gt;&lt;img class=&#34;avatar&#34; src=&#34;/medias_webp/cover/compiler.webp&#34;&gt;&lt;/a&gt;
    
    &lt;div class=&#34;desc-wrapper&#34;&gt;
        &lt;a href=&#34;/posts/32570315/&#34;&gt;手把手教你构建 C 语言编译器&lt;/a&gt;
        &lt;hr&gt;
        &lt;div class=&#34;desc&#34;&gt;“手把手教你构建 C 语言编译器” 这一系列教程将带你从头编写一个 C 语言的编译器。希望通过这个系列，我们能对编译器的构建有一定的了解，同时，我们也将构建出一个能用的 C 语言编译器，尽管有许多语法并不支持。&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;i-class-fa-solid-fa-school-i-系列教程-3&#34;&gt;&lt;i class=&#34;fa-solid fa-school&#34;&gt;&lt;/i&gt;&lt;strong&gt;系列教程&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;/atom.xml&#34;&gt;&lt;i class=&#34;fa-solid fa-square-rss&#34;&gt;&lt;/i&gt;全部文章RSS订阅&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;i-class-fa-solid-fa-rectangle-terminal-i-Embeded系列-2&#34;&gt;&lt;i class=&#34;fa-solid fa-rectangle-terminal&#34;&gt;&lt;/i&gt;&lt;strong&gt;Embeded系列&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;/categories/embeded/atom.xml&#34;&gt;&lt;i class=&#34;fa-solid fa-square-rss&#34;&gt;&lt;/i&gt;&lt;strong&gt;Embeded 分类 RSS 订阅&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/posts/13894dce/&#34;&gt;海思MPP&amp;amp;UNF构架源代码级分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/6b2ba137/&#34;&gt;3G,4G,Wifi选型需求分析及技术简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/509c7bd3/&#34;&gt;自动曝光原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/posts/798e6e62/&#34;&gt;ISP 数字图像处理 算法概述、工作原理、架构、处理流程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/bilicard.css&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="linux" />
        <category term="embeded" />
        <category term="hisilicon" />
        <category term="driver" />
        <category term="3798m" />
        <category term="mpp" />
        <category term="unf" />
        <category term="kernel" />
        <updated>2021-07-01T10:25:00.000Z</updated>
    </entry>
</feed>
