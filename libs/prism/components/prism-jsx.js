!function(g){var t=g.util.clone(g.languages.javascript),e=/(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source,a=/(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source,s=/(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;function n(t,n){return t=t.replace(/<S>/g,function(){return e}).replace(/<BRACES>/g,function(){return a}).replace(/<SPREAD>/g,function(){return s}),RegExp(t,n)}s=n(s).source,g.languages.jsx=g.languages.extend("markup",t),g.languages.jsx.tag.pattern=n(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source),g.languages.jsx.tag.inside.tag.pattern=/^<\/?[^\s>\/]*/,g.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/,g.languages.jsx.tag.inside.tag.inside["class-name"]=/^[A-Z]\w*(?:\.[A-Z]\w*)*$/,g.languages.jsx.tag.inside.comment=t.comment,g.languages.insertBefore("inside","attr-name",{spread:{pattern:n(/<SPREAD>/.source),inside:g.languages.jsx}},g.languages.jsx.tag),g.languages.insertBefore("inside","special-attr",{script:{pattern:n(/=<BRACES>/.source),alias:"language-javascript",inside:{"script-punctuation":{pattern:/^=(?=\{)/,alias:"punctuation"},rest:g.languages.jsx}}},g.languages.jsx.tag);function o(t){for(var n=[],e=0;e<t.length;e++){var a=t[e],s=!1;"string"!=typeof a&&("tag"===a.type&&a.content[0]&&"tag"===a.content[0].type?"</"===a.content[0].content[0].content?0<n.length&&n[n.length-1].tagName===r(a.content[0].content[1])&&n.pop():"/>"!==a.content[a.content.length-1].content&&n.push({tagName:r(a.content[0].content[1]),openedBraces:0}):0<n.length&&"punctuation"===a.type&&"{"===a.content?n[n.length-1].openedBraces++:0<n.length&&0<n[n.length-1].openedBraces&&"punctuation"===a.type&&"}"===a.content?n[n.length-1].openedBraces--:s=!0),(s||"string"==typeof a)&&0<n.length&&0===n[n.length-1].openedBraces&&(s=r(a),e<t.length-1&&("string"==typeof t[e+1]||"plain-text"===t[e+1].type)&&(s+=r(t[e+1]),t.splice(e+1,1)),0<e&&("string"==typeof t[e-1]||"plain-text"===t[e-1].type)&&(s=r(t[e-1])+s,t.splice(e-1,1),e--),t[e]=new g.Token("plain-text",s,null,s)),a.content&&"string"!=typeof a.content&&o(a.content)}}var r=function(t){return t?"string"==typeof t?t:"string"==typeof t.content?t.content:t.content.map(r).join(""):""};g.hooks.add("after-tokenize",function(t){"jsx"!==t.language&&"tsx"!==t.language||o(t.tokens)})}(Prism);