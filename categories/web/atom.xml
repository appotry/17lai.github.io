<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.17lai.site</id>
    <title>夜法之书 • Posts by &#34;web&#34; category</title>
    <link href="https://blog.17lai.site" />
    <updated>2022-03-23T10:18:00.000Z</updated>
    <category term="Github" />
    <category term="Jekyll" />
    <category term="blog" />
    <category term="Gitlab" />
    <category term="Git" />
    <category term="Crack" />
    <category term="Linux" />
    <category term="hardlink" />
    <category term="bt" />
    <category term="pt" />
    <category term="note" />
    <category term="markdown" />
    <category term="picgo" />
    <category term="wiz" />
    <category term="Joplin" />
    <category term="Typora" />
    <category term="QNAP" />
    <category term="硬盘" />
    <category term="nas" />
    <category term="embeded" />
    <category term="3G" />
    <category term="4G" />
    <category term="3531a" />
    <category term="移植" />
    <category term="嵌入式" />
    <category term="hisilicon" />
    <category term="Driver" />
    <category term="3798M" />
    <category term="MPP" />
    <category term="UNF" />
    <category term="Kernel" />
    <category term="宝塔" />
    <category term="VPS" />
    <category term="建站" />
    <category term="Nginx" />
    <category term="Apache" />
    <category term="MySQL" />
    <category term="Docker" />
    <category term="LAMP" />
    <category term="PHP" />
    <category term="Tomcat" />
    <category term="JSP" />
    <category term="教程" />
    <category term="Rigistry" />
    <category term="email" />
    <category term="https" />
    <category term="ssl" />
    <category term="Debian" />
    <category term="Laptop" />
    <category term="ED2K" />
    <category term="ATI" />
    <category term="WIFI" />
    <category term="Hotkey" />
    <category term="SSD" />
    <category term="HDD" />
    <category term="管理" />
    <category term="PDCA" />
    <category term="5W2H" />
    <category term="SMART" />
    <category term="SWOT" />
    <category term="GROW" />
    <category term="OKR" />
    <category term="WBS" />
    <category term="PT" />
    <category term="BT" />
    <category term="qbittorrent" />
    <category term="transmission" />
    <category term="Emby" />
    <category term="Sonarr" />
    <category term="Jeckett" />
    <category term="Portainer" />
    <category term="Watchtower" />
    <category term="DNSMasq" />
    <category term="DNSCrypt" />
    <category term="启动" />
    <category term="优化" />
    <category term="SSL" />
    <category term="TLS" />
    <category term="隐私" />
    <category term="安全" />
    <category term="linux" />
    <category term="GitBook" />
    <category term="MySql" />
    <category term="Mariadb" />
    <category term="技巧" />
    <category term="MarkDown" />
    <category term="Mermaid" />
    <category term="Nas" />
    <category term="群晖" />
    <category term="hexo" />
    <category term="matery" />
    <category term="cdn" />
    <category term="seo" />
    <category term="web" />
    <category term="http" />
    <category term="css" />
    <category term="js" />
    <category term="3a" />
    <category term="ae" />
    <category term="image" />
    <category term="ai" />
    <category term="face" />
    <category term="ccs" />
    <category term="vim" />
    <category term="ide" />
    <category term="docker" />
    <category term="music" />
    <category term="韩红" />
    <category term="thinkpad" />
    <category term="sound" />
    <category term="speaker" />
    <category term="刮削" />
    <category term="MusicBrainz" />
    <category term="mp3tag" />
    <category term="tmm" />
    <category term="字幕" />
    <category term="emby" />
    <category term="plex" />
    <category term="qnap" />
    <category term="ipv6" />
    <category term="cmake" />
    <category term="develop" />
    <category term="traefik" />
    <category term="proxy" />
    <category term="swarm" />
    <category term="ubuntu" />
    <category term="vscode" />
    <category term="插件" />
    <category term="编码" />
    <category term="mermaid" />
    <category term="plantuml" />
    <category term="mathjax" />
    <category term="CI/CD" />
    <category term="Earthly" />
    <category term="git" />
    <category term="mstream" />
    <category term="selfhost" />
    <category term="中岛美嘉" />
    <category term="node" />
    <category term="jenkins" />
    <category term="shell" />
    <category term="tools" />
    <category term="winrar" />
    <category term="crack" />
    <category term="emoji" />
    <category term="isp" />
    <category term="awb" />
    <category term="mywork" />
    <entry>
        <id>https://blog.17lai.site/posts/80938cfe/</id>
        <title>emoji表情符号</title>
        <link rel="alternate" href="https://blog.17lai.site/posts/80938cfe/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;emoji表情符号是非常流行的表情符号，几乎没有地方都会支持。这里列举出常用的emoji表情不好，方便大家使用与查阅。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h2 id=&#34;常用符号&#34;&gt;常用符号&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;❤❥웃유♋☮✌☏☢☠✔☑♚▲♪✈✞÷↑↓◆◇⊙■□△▽¿─│♥❣♂♀☿Ⓐ✍✉☣☤✘☒♛▼♫⌘☪≈←→◈◎☉★☆⊿※¡━┃♡ღ ツ

☼☁❅♒✎©®™Σ✪✯☭➳ 卐 √↖↗●◐Θ◤◥︻〖〗┄┆℃℉°✿ϟ☃☂✄¢€£∞✫★½✡×↙↘○◑⊕◣◢︼【】┅┇☽☾✚〓

▂▃▄▅▆▇█▉▊▋▌▍▎▏↔↕☽☾ の•▸◂▴▾┈┊①②③④⑤⑥⑦⑧⑨⑩ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩ ㍿ ▓♨♛❖♓☪✙

┉┋☹☺☻ت ヅツッシ Üϡﭢ™℠℗©®♥❤❥❣❦❧♡۵웃유ღ♋♂♀☿☼☀☁☂☄☾☽❄☃☈⊙☉℃℉❅✺ϟ☇♤♧♡♢♠♣

♥♦☜☞☝✍☚☛☟✌✽✾✿❁❃❋❀⚘☑✓✔√☐☒✗✘ ㄨ ✕✖✖⋆✢✣✤✥❋✦✧✩✰✪✫✬✭✮✯❂✡★✱✲✳✴✵✶✷✸✹✺✻✼❄❅❆❇❈❉❊†☨✞✝☥☦☓☩☯☧☬

☸✡♁✙♆。，、＇：∶；?‘’“”〝〞ˆˇ﹕︰﹔﹖﹑•¨….¸;！´？！～—ˉ ｜‖＂〃｀@﹫¡¿﹏﹋﹌︴々﹟#

﹩$﹠&amp;amp;﹪%*﹡﹢﹦﹤‐￣ ¯―﹨ˆ˜﹍﹎+=&amp;lt;＿*-\ˇ~﹉﹊（）〈〉‹›﹛﹜『』〖〗［］《》〔〕{}「」【】︵︷︿︹︽*﹁﹃︻︶︸﹀︺︾ˉ﹂﹄︼☩☨☦✞✛✜✝✙✠✚†‡◉○◌◍◎●◐◑◒◓◔◕◖◗❂☢⊗⊙◘◙◍⅟½⅓⅕⅙⅛⅔⅖⅚⅜¾⅗⅝⅞⅘≂≃≄≅≆≇≈≉≊≋≌

≍≎≏≐≑≒≓≔≕≖≗≘≙≚≛≜≝≞≟≠≡≢≣≤≥≦≧≨≩⊰⊱⋛⋚∫∬∭∮∯∰∱∲∳%℅‰‱㊣㊎㊍㊌㊋㊏㊐㊊㊚㊛㊤㊥

㊦㊧㊨㊒㊞㊑㊒㊓㊔㊕㊖㊗㊘㊜㊝㊟㊠㊡㊢㊩㊪㊫㊬㊭㊮㊯㊰㊙ ㉿ 囍 ♔♕♖♗♘♙♚♛♜♝♞♟ℂℍℕℙℚℝℤℬℰℯℱℊℋℎℐℒℓℳℴ℘ℛℭ℮ℌℑℜℨ♪♫♩♬♭♮♯°øⒶ☮✌☪✡☭✯ 卐 ✐✎✏

✑✒✍✉✁✂✃✄✆✉☎☏➟➡➢➣➤➥➦➧➨➚➘➙➛➜➝➞➸♐➲➳⏎➴➵➶➷➸➹➺➻➼➽←↑→↓↔↕↖↗↘↙↚↛↜↝

↞↟↠↡↢↣↤↥↦↧↨➫➬➩➪➭➮➯➱↩↪↫↬↭↮↯↰↱↲↳↴↵↶↷↸↹↺↻↼↽↾↿⇀⇁⇂⇃⇄⇅⇆⇇⇈⇉⇊⇋⇌⇍⇎⇏⇐⇑⇒⇓⇔⇕

⇖⇗⇘⇙⇚⇛⇜⇝⇞⇟⇠⇡⇢⇣⇤⇥⇦⇧⇨⇩⇪➀➁➂➃➄➅➆➇➈➉➊➋➌➍➎➏➐➑➒➓㊀㊁㊂㊃㊄㊅㊆㊇㊈㊉ⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡ

ⓢⓣⓤⓥⓦⓧⓨⓩ⒜⒝⒞⒟⒠⒡⒢⒣⒤⒥⒦⒧⒨⒩⒪⒫⒬⒭⒮⒯⒰⒱⒲⒳⒴⒵ⅠⅡⅢⅣⅤ

ⅥⅦⅧⅨⅩⅪⅫⅬⅭⅮⅯⅰⅱⅲⅳⅴⅵⅶⅷⅸⅹⅺⅻⅼⅽⅾⅿ┌┍┎┏┐┑┒┓└┕┖┗┘┙┚┛├┝┞┟┠┡┢┣┤┥┦┧┨┩┪┫
┬┭┮┯┰┱┲┳┴┵┶┷┸┹┺┻┼┽
┾┿╀╁╂╃╄╅╆╇╈╉╊╋╌╍╎╏
═║╒╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡╢╣╤╥╦╧╨╩╪╫╬◤◥◄►▶◀◣◢▲

▼◥▸◂▴▾△▽▷◁⊿▻◅▵▿▹◃❏❐❑❒▀▁▂▃▄▅▆▇▉▊▋█▌▍▎▏▐░▒▓▔▕■□▢▣▤▥▦▧

▨▩▪▫▬▭▮▯ ㋀㋁㋂㋃㋄㋅㋆㋇㋈㋉㋊㋋㏠㏡㏢㏣㏤㏥㏦㏧㏨㏩㏪㏫㏬㏭㏮㏯㏰㏱㏲

㏳㏴㏵㏶㏷㏸㏹㏺㏻㏼㏽㏾㍙㍚㍛㍜㍝㍞㍟㍠㍡㍢㍣㍤㍥㍦㍧㍨㍩㍪㍫㍬㍭㍮㍯㍰㍘

☰☲☱☴☵☶☳☷☯&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;特殊符号&#34;&gt;特殊符号&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;♠♣♧♡♥❤❥❣♂♀✲☀☼☾☽◐◑☺☻☎☏✿❀№↑↓←→√×÷★℃℉°◆◇⊙■□△▽¿½☯✡ ㍿卍卐 ♂♀✚〓㎡♪♫♩♬

㊚㊛囍㊒㊖ Φ♀♂‖KaTeX parse error: Expected ‘EOF’, got ‘&amp;amp;’ at position 3: @*&amp;amp;̲#※卍卐 Ψ♫♬♭♩♪♯♮⌒¶∮…&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;编号序号&#34;&gt;编号序号&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;①②③④⑤⑥⑦⑧⑨⑩⑪⑫⑬⑭⑮⑯⑰⑱⑲⑳⓪

❶❷❸❹❺❻❼❽❾❿⓫⓬⓭⓮⓯⓰⓱⓲⓳⓴

㊀㊁㊂㊃㊄㊅㊆㊇㊈㊉㈠㈡㈢㈣㈤㈥㈦㈧㈨㈩⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽⑾⑿⒀⒁⒂⒃⒄⒅⒆⒇

⒈⒉⒊⒋⒌⒍⒎⒏⒐⒑⒒⒓⒔⒕⒖⒗⒘⒙⒚⒛

ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩⅪⅫⅰⅱⅲⅳⅴⅵⅶⅷⅸⅹ

ⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡⓢⓣⓤⓥⓦⓧⓨⓩ

⒜⒝⒞⒟⒠⒡⒢⒣⒤⒥⒦⒧⒨⒩⒪⒫⒬⒭⒮⒯⒰⒱⒲⒳⒴⒵&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;数学符号&#34;&gt;数学符号&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;﹢﹣×÷±/=≌∽≦≧≒ ﹤﹥ ≈≡≠=≤≥&amp;lt;&amp;gt;≮≯∷∶∫∮∝∞∧∨∑∏∪∩∈∵∴⊥∥∠⌒⊙√∟⊿㏒㏑%

‰⅟½⅓⅕⅙⅛⅔⅖⅚⅜¾⅗⅝⅞⅘≂≃≄≅≆≇≈≉≊≋≌≍≎≏≐≑≒≓≔≕≖≗≘≙≚≛≜≝≞≟

≠≡≢≣≤≥≦≧≨≩⊰⊱⋛⋚∫∬∭∮∯∰∱∲∳%℅‰‱øØπ&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;爱心符号&#34;&gt;爱心符号&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;♥❣ღ♠♡♤❤❥&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;标点符号&#34;&gt;标点符号&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;。，、＇：∶；?‘’“”〝〞ˆˇ﹕︰﹔﹖﹑•¨….¸;！´？！～—ˉ ｜‖＂〃｀@﹫¡¿﹏﹋﹌︴

々﹟#﹩$﹠&amp;amp;﹪%*﹡﹢﹦﹤‐￣ ¯―﹨ˆ˜﹍﹎+=&amp;lt;＿*-\ˇ~﹉﹊

（）〈〉‹›﹛﹜『』〖〗［］《》〔〕{}「」【】

︵︷︿︹︽*﹁﹃︻︶︸﹀︺︾ˉ﹂﹄︼❝❞&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;单位符号&#34;&gt;单位符号&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;°′″＄￥〒￠￡％＠℃℉ ﹩﹪‰﹫㎡㏕㎜㎝㎞㏎m³㎎㎏㏄º○¤%$º¹²³&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;货币符号&#34;&gt;货币符号&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;€£Ұ₴$₰¢₤¥₳₲₪₵ 元 ₣₱฿¤₡₮₭₩ރ 円 ₢₥₫₦zł﷼₠₧₯₨Kčर₹ƒ₸ ￠&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;箭头符号（含推导-转换符号）&#34;&gt;箭头符号（含推导&amp;amp;转换符号）&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;↑↓←→↖↗↘↙↔↕➻➼➽➸➳➺➻➴➵➶➷➹▶►▷◁◀◄«

»➩➪➫➬➭➮➯➱⏎➲➾➔➘➙➚➛➜➝➞➟➠➡➢➣➤➥➦➧➨

↚↛↜↝↞↟↠↠↡↢↣↤↤↥↦↧↨⇄⇅⇆⇇⇈⇉⇊⇋⇌⇍⇎⇏⇐⇑⇒⇓⇔⇖⇗⇘⇙

⇜↩↪↫↬↭↮↯↰↱↲↳↴↵↶↷↸↹☇☈↼↽↾↿⇀⇁⇂⇃⇞⇟⇠⇡⇢⇣⇤⇥⇦⇧⇨⇩⇪↺↻⇚⇛♐&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;符号图案&#34;&gt;符号图案&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;✐✎✏✑✒✍✉✁✂✃✄✆✉☎☏☑✓✔√☐☒✗✘ ㄨ ✕✖✖☢☠☣✈★☆✡ 囍㍿ ☯☰☲☱☴☵☶☳☷

☜☞☝✍☚☛☟✌♤♧♡♢♠♣♥♦☀☁☂❄☃♨웃유❖☽☾☪✿♂♀✪✯☭➳ 卍卐 √×■◆●○◐◑✙☺☻

❀⚘♔♕♖♗♘♙♚♛♜♝♞♟♧♡♂♀♠♣♥❤☜☞☎☏⊙◎☺☻☼▧▨♨◐◑↔↕▪▒◊◦▣▤▥▦▩◘◈◇

♬♪♩♭♪ の ★☆→ あぃ￡ Ю〓§♤♥▶¤✲❈✿✲❈➹☀☂☁【】┱┲❣✚✪✣✤✥✦❉❥❦❧❃❂❁❀✄☪☣☢☠☭ღ▶▷◀◁

☀☁☂☃☄★☆☇☈⊙☊☋☌☍ⓛⓞⓥⓔ╬『』∴☀♫♬♩♭♪☆∷﹌の ★◎▶☺☻►◄▧▨♨◐◑↔↕↘▀▄█▌

◦☼♪ の ☆→♧ ぃ￡ ❤▒▬♦◊◦♠♣▣۰•❤•۰►◄▧▨♨◐◑↔↕▪▫☼♦⊙●○①⊕◎Θ⊙¤ ㊣ ★☆♀◆◇◣◢◥▲▼△▽⊿◤◥

✐✌✍✡✓✔✕✖♂♀♥♡☜☞☎☏⊙◎☺☻►◄▧▨♨◐◑↔↕♥♡▪▫☼♦▀▄█▌▐░▒▬♦◊◘◙◦☼♠♣▣▤▥▦▩◘◙◈

♫♬♪♩♭♪✄☪☣☢☠♯♩♪♫♬♭♮☎☏☪♈ºº₪¤큐«»™♂✿♥ 　 ◕‿-｡　｡◕‿◕｡&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;希腊字母&#34;&gt;希腊字母&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ

αβγδεζνξοπρσηθικλμτυφχψω&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;俄语字母&#34;&gt;俄语字母&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвг

деёжзийклмнопрстуфхцчшщъыьэюя&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;汉语拼音&#34;&gt;汉语拼音&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜüêɑńňɡ ㄅㄆㄇㄈㄉ

ㄊㄋㄌㄍㄎㄏㄐㄑㄒㄓㄔㄕㄖㄗㄘㄙㄚㄛㄜㄝㄞ

ㄟㄠㄡㄢㄣㄤㄥㄦㄧㄨㄩ&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;中文字符&#34;&gt;中文字符&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;零壹贰叁肆伍陆柒捌玖拾佰仟万亿吉太拍艾分厘毫微

卍卐卄巜弍弎弐朤氺曱甴囍兀々〆のぁ〡〢〣〤〥〦〧〨〩

㊎㊍㊌㊋㊏㊚㊛㊐㊊㊣㊤㊥㊦㊧㊨㊒㊫㊑㊓㊔㊕㊖㊗㊘㊜㊝㊞㊟㊠㊡㊢㊩㊪㊬㊭㊮㊯㊰

㊀㊁㊂㊃㊄㊅㊆㊇㊈㊉&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;日文符号&#34;&gt;日文符号&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;ぁあぃいぅうぇえぉおかがきぎくぐけげこごさざしじすずせぜそぞただちぢっつづてで

とどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもゃやゅゆょよらりるれろゎ

わゐゑをんゔゕゖァアィイゥウェエォオカガキギクグケゲコゴサザシジスズセゼソゾタ

ダチヂッツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモャヤュユ

ョヨラリルレロヮワヰヱヲンヴヵヶヷヸヹヺ・ーヽヾヿ゠ㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;制表符号&#34;&gt;制表符号&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;─ ━│┃╌╍╎╏┄ ┅┆┇┈ ┉┊┋┌┍┎┏┐┑┒┓└ ┕┖┗ ┘┙┚┛├┝┞┟┠┡┢┣ ┤┥┦┧┨┩┪┫┬ ┭ ┮ ┯ ┰ ┱ ┲ ┳

┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻┼ ┽ ┾ ┿ ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╪ ╫ ╬═║╒╓╔ ╕╖╗╘╙╚ ╛╜╝╞╟╠ ╡╢╣

╤ ╥ ╦ ╧ ╨ ╩ ╳╔ ╗╝╚ ╬ ═ ╓ ╩ ┠ ┨┯ ┷┏ ┓┗ ┛┳ ⊥ ﹃ ﹄┌ ╮ ╭ ╯╰&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;皇冠符号&#34;&gt;皇冠符号&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;♚ 　 ♛ 　 ♝ 　 ♞ 　 ♜ 　 ♟ 　 ♔ 　 ♕ 　 ♗ 　 ♘ 　 ♖ 　 ♟&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;彩色表情符号&#34;&gt;彩色表情符号&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;🌹🍀🍎💰📱🌙🍁🍂🍃🌷💎🔪🔫🏀⚽⚡👄👍🔥&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;常用-emoji-符号&#34;&gt;常用 emoji 符号&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;😀😁😂😃😄😅😆😉😊😋😎😍😘😗😙😚☺😇😐😑😶😏😣😥😮😯😪😫😴😌😛😜😝😒😓😔😕😲😷😖😞😟😤😢😭😦😧😨😬😰😱😳😵😡😠😈👿👹👺💀👻👽👦👧👨👩👴👵👶👱👮👲👳👷👸💂🎅👰👼💆💇🙍🙎🙅🙆💁🙋🙇🙌🙏👤👥🚶🏃👯💃👫👬👭💏💑👪💪👈👉☝👆👇✌✋👌👍👎✊👊👋👏👐✍👣👀👂👃👅👄💋👓👔👕👖👗👘👙👚👛👜👝🎒💼👞👟👠👡👢👑👒🎩🎓💄💅💍🌂🙈🙉🙊🐵🐒🐶🐕🐩🐺🐱😺😸😹😻😼😽🙀😿😾🐈🐯🐅🐆🐴🐎🐮🐂🐃🐄🐷🐖🐗🐽🐏🐑🐐🐪🐫🐘🐭🐁🐀🐹🐰🐇🐻🐨🐼🐾🐔🐓🐣🐤🐥🐦🐧🐸🐊🐢🐍🐲🐉🐳🐋🐬🐟🐠🐡🐙🐚🐌🐛🐜🐝🐞🦋💐🌸💮🌹🌺🌻🌼🌷🌱🌲🌳🌴🌵🌾🌿🍀🍁🍂🍃🌍🌎🌏🌐🌑🌒🌓🌔🌕🌖🌗🌘🌙🌚🌛🌜☀🌝🌞⭐🌟🌠☁⛅☔⚡❄🔥💧🌊💩🍇🍈🍉🍊🍋🍌🍍🍎🍏🍐🍑🍒🍓🍅🍆🌽🍄🌰🍞🍖🍗🍔🍟🍕🍳🍲🍱🍘🍙🍚🍛🍜🍝🍠🍢🍣🍤🍥🍡🍦🍧🍨🍩🍪🎂🍰🍫🍬🍭🍮🍯🍼☕🍵🍶🍷🍸🍹🍺🍻🍴🎪🎭🎨🎰🚣🛀🎫🏆⚽⚾🏀🏈🏉🎾🎱🎳⛳🎣🎽🎿🏂🏄🏇🏊🚴🚵🎯🎮🎲🎷🎸🎺🎻🎬👾🌋🗻🏠🏡🏢🏣🏤🏥🏦🏨🏩🏪🏫🏬🏭🏯🏰💒🗼🗽⛪⛲🌁🌃🌆🌇🌉🌌🎠🎡🎢🚂🚃🚄🚅🚆🚇🚈🚉🚊🚝🚞🚋🚌🚍🚎🚏🚐🚑🚒🚓🚔🚕🚖🚗🚘🚚🚛🚜🚲⛽🚨🚥🚦🚧⚓⛵🚤🚢✈💺🚁🚟🚠🚡🚀🎑🗿🛂🛃🛄🛅💌💎🔪💈🚪🚽🚿🛁⌛⏳⌚⏰🎈🎉🎊🎎🎏🎐🎀🎁📯📻📱📲☎📞📟📠🔋🔌💻💽💾💿📀🎥📺📷📹📼🔍🔎🔬🔭📡💡🔦🏮📔📕📖📗📘📙📚📓📃📜📄📰📑🔖💰💴💵💶💷💸💳✉📧📨📩📤📥📦📫📪📬📭📮✏✒📝📁📂📅📆📇📈📉📊📋📌📍📎📏📐✂🔒🔓🔏🔐🔑🔨🔫🔧🔩🔗💉💊🚬🔮🚩🎌💦💨💣☠♠♥♦♣🀄🎴🔇🔈🔉🔊📢📣💤💢💬💭♨🌀🔔🔕✡✝🔯📛🔰🔱⭕✅☑✔✖❌❎➕➖➗➰➿〽✳✴❇‼⁉❓❔❕❗©®™🎦🔅🔆💯🔠🔡🔢🔣🔤🅰🆎🅱🆑🆒🆓ℹ🆔Ⓜ🆕🆖🅾🆗🅿🆘🆙🆚🈁🈂🈷🈶🈯 🉐 🈹🈚🈲 🉑 🈸🈴🈳 ㊗㊙ 🈺🈵▪▫◻◼◽◾⬛⬜🔶🔷🔸🔹🔺🔻💠🔲🔳⚪⚫🔴🔵♈♉♊♋♌♍♎♏♐♑♒♓⛎💘❤💓💔💕💖💗💙💚💛💜💝💞💟❣🌿🚧💒☎📟💽⬆↗➡↘⬇↙⬅↖↕↔↩↪⤴⤵🔃🔄🔙🔚🔛🔜🔝🔀🔁🔂▶⏩◀⏪🔼⏫🔽⏬📱📶📳📴♻🏧🚮🚰♿🚹🚺🚻🚼🚾⚠🚸⛔🚫🚳🚭🚯🚱🚷🔞&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/bilicard.css&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="web" />
        <category term="emoji" />
        <updated>2022-03-23T10:18:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.17lai.site/posts/68d3867d/</id>
        <title>node 项目从构建到使用 jenkins + docker + nginx + mysql + redis 自动化部署</title>
        <link rel="alternate" href="https://blog.17lai.site/posts/68d3867d/"/>
        <content type="html">&lt;h1&gt;概述&lt;/h1&gt;
&lt;p&gt;这都2019年末了，你还不会 docker吗？ 你 low 爆了，我们作为一枚前端，不能说是要精通使用 docker 完成各种事情，但我觉得必须要学会使用 docker 干下面几件事：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;部署前端应用&lt;/li&gt;
&lt;li&gt;部署nginx&lt;/li&gt;
&lt;li&gt;使用docker-compose部署&lt;/li&gt;
&lt;li&gt;在容器之间建立联系&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Docker 可理解为跑在宿主机上的非常精简、小巧、高度浓缩的虚拟机。 它可以将容器里的进程安稳的在宿主机上运行，之前我也有写过一些关于docker的文章，在这我就不做过多的介绍了，如有需要请自行查看我之前的文章即可，接下来我们通过项目来了解并使用 docker&lt;/p&gt;
&lt;h1&gt;Egg.js ？&lt;/h1&gt;
&lt;p&gt;在这里我使用 &lt;code&gt;egg.js&lt;/code&gt; 来为大家实操一下项目的部署流程。有人会问 &lt;code&gt;egg.js&lt;/code&gt; 是什么？ 我只能回答这是一款专业级的 &lt;code&gt;node&lt;/code&gt; 框架。作为一个有梦想的前端，我们有必要去学习一种后端语言，而作为前端 &lt;code&gt;node&lt;/code&gt; 的学习成本相对来说比较低的。 &lt;code&gt;egg.js&lt;/code&gt; 这个框架在 node 现有框架中也是比较优秀的，如有需要，大家可以自行学习，我们今天的学习主要还是项目的部署流程，在这我就不给大家做过多的介绍。如有需要，请查阅 &lt;a href=&#34;https://link.juejin.cn?target=https%3A%2F%2Feggjs.org%2Fzh-cn%2Fintro%2Findex.html&#34; title=&#34;https://eggjs.org/zh-cn/intro/index.html&#34;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;开始前的准备&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;docker 与 docker-compose 的安装我就不给大家介绍了。在之前的文章中是有的，也比较详细，作为一位开发人员，我认为这点事情难不倒大家&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;初始化项目&#34;&gt;初始化项目&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;$ mkdir egg-example &amp;amp;&amp;amp; cd egg-example
$ npm init egg --type=simple
$ npm i
复制代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;创建需要的文件&#34;&gt;创建需要的文件&lt;/h2&gt;
&lt;p&gt;我们需要在项目根目录创建我们所需要的文件&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;$ touch Dockerfile
$ touch docker-compose.yml
$ setup.sh
复制代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;目录结构&#34;&gt;目录结构&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;egg-project
├── package.json
├── setup.sh (新建)
├── Dockerfile (新建)
├── docker-compose.yml (新建)
├── app
|   ├── router.js
│   ├── controller
│   |   └── home.js
│   ├── service (可选)
│   |   └── user.js
│   ├── middleware (可选)
│   |   └── response_time.js
│   ├── schedule (可选)
│   |   └── my_task.js

...

复制代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;常用指令&#34;&gt;常用指令&lt;/h2&gt;
&lt;p&gt;在开始之前我们要学习下常用的一些指令，看下方：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110127.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1&gt;了解流程&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110133.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1&gt;安装 jenkins&lt;/h1&gt;
&lt;p&gt;在安装jenkins我选择了使用docker-compose&lt;br&gt;
docker-compose 是一个用来把 docker 自动化的东西&lt;br&gt;
有了 docker-compose 你可以把所有繁复的 docker 操作全都一条命令，自动化的完成。&lt;/p&gt;
&lt;h2 id=&#34;首先我们需要在服务器上创建一个目录机构-具体结构个人自行创建&#34;&gt;首先我们需要在服务器上创建一个目录机构 (具体结构个人自行创建)&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;/home/jenkins
     - docker-compose.yml
     - jenkins-home
复制代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;接下来我们来编写-docker-compose-yml-安装jenkins&#34;&gt;接下来我们来编写 docker-compose.yml 安装jenkins&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;version: &#39;3&#39;                                    # 指定 docker-compose.yml 文件的写法格式
services:                                       # 多个容器集合
  docker_jenkins: 
    user: root                                  # 为了避免一些权限问题 在这我使用了root
    restart: always                             # 重启方式
    image: jenkins/jenkins:lts                  # 指定服务所使用的镜像 在这里我选择了 LTS (长期支持)
    container_name: jenkins                     # 容器名称
    ports:                                      # 对外暴露的端口定义
      - &#39;8080:8080&#39;
      - &#39;50000:50000&#39;
    volumes:                                    # 卷挂载路径
      - /home/jenkins/jenkins_home/:/var/jenkins_home   # 这是我们一开始创建的目录挂载到容器内的jenkins_home目录
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker                 # 这是为了我们可以在容器内使用docker命令
      - /usr/local/bin/docker-compose:/usr/local/bin/docker-compose     # 同样的这是为了使用docker-compose命令
复制代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们需要进入到 jenkins 目录下执行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;$ docker-compose up -d
复制代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;p&gt;不出意外你现在可以打开你的服务器地址 &lt;a href=&#34;https://link.juejin.cn?target=http%3A%2F%2Fxxxxxxx&#34; title=&#34;http://xxxxxxx&#34;&gt;http://xxxxxxx&lt;/a&gt;:端口号 就能看到这个界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110139.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开你所创建的jenkins目录进入到jenkins-home&lt;br&gt;
/home/jenkins/jenkins-home&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110148.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入 secrets 目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;$ cat initialAdminPassword
复制代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110209.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后把里面的文本复制出来填到管理员密码中&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110327.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110215.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来需要安装两个插件&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;NodeJS Plugin
Publish Over SSH
复制代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110334.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110221.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后我们滑到最下方&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110228.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110341.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110347.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110235.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1&gt;开始我们的操作&lt;/h1&gt;
&lt;h2 id=&#34;Dockerfile&#34;&gt;Dockerfile&lt;/h2&gt;
&lt;p&gt;我们在开始阶段的时候学过一些常用指令，大家应该一眼就可以看得懂这些命令。 加油！！&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;FROM node:10.0-alpine             # 镜像版本

# 设置时区
RUN apk --update add tzdata \
    &amp;amp;&amp;amp; cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
    &amp;amp;&amp;amp; echo &#34;Asia/Shanghai&#34; &amp;gt; /etc/timezone \
    &amp;amp;&amp;amp; apk del tzdata

# 创建app目录
RUN mkdir -p /usr/src/node-app/egg-santak

# 设置工作目录
WORKDIR /usr/src/node-app/egg-santak

# 拷贝package.json文件到工作目录
# !!重要：package.json需要单独添加。
# Docker在构建镜像的时候，是一层一层构建的，仅当这一层有变化时，重新构建对应的层。
# 如果package.json和源代码一起添加到镜像，则每次修改源码都需要重新安装npm模块，这样木有必要。
# 所以，正确的顺序是: 添加package.json；安装npm模块；添加源代码。
COPY package.json /usr/src/node-app/egg-santak/package.json

# 安装npm依赖(使用淘宝的镜像源)
# 如果使用的境外服务器，无需使用淘宝的镜像源，即改为`RUN npm i`。
RUN npm i --registry=https://registry.npm.taobao.org

# 拷贝所有源代码到工作目录
COPY . /usr/src/node-app/egg-santak

# 暴露容器端口
EXPOSE 7001

# 启动node应用
CMD npm start
复制代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;在服务器中创建我们所需要挂载的数据卷&#34;&gt;在服务器中创建我们所需要挂载的数据卷&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110241.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;# nginx
$ mkdir -p nginx/conf.d nginx/logs

# mysql
$ mkdir mysql

# redis
$ mkdir redis
复制代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后进入 &lt;code&gt;nginx/conf.d&lt;/code&gt; 文件夹中 创建一个后缀为 &lt;code&gt;conf&lt;/code&gt; 的文件&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;$ cd nginx/conf.d
$ touch default.conf
$ vim default.conf
复制代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;写入以下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;server {
  listen 80;
  listen [::]:80;
  server_tokens off;

  root /var/www/html;
  index index.html index.htm;

  # 修改为自己的域名
  server_name api.lovelp.xin;

  # 访问 / 路径时执行反向代理
  location / {
    # 这里 nodejs 是 node 容器名
    proxy_pass http://nodejs:7001;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    # 后端的Web服务器可以通过 X-Forwarded-For 获取用户真实 IP
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # 允许客户端请求的最大单文件字节数
    client_max_body_size 15M;
    # 缓冲区代理缓冲用户端请求的最大字节数
    client_body_buffer_size 128k;
  }
}
复制代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;docker-compose-yml&#34;&gt;docker-compose.yml&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;version: &#39;3&#39;

services:
  santak_redis:
    image: redis:3                  # 指定服务镜像
    container_name: santak_redis    # 容器名称
    restart: always                 # 重启方式
    hostname: redis
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass 123456  --appendonly yes
    volumes:                        # 挂载数据卷
      - /root/redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:                          # 映射端口
      - &#34;6379:6379&#34;     
    networks:                       # 加入指定网络
      - app-network

  santak_nginx:
    image: nginx:stable-alpine      # 指定服务镜像
    container_name: santak_nginx    # 容器名称
    restart: always                 # 重启方式
    ports:                          # 映射端口
      - &#34;80:80&#34;
    volumes:                        # 挂载数据卷
      - /etc/localtime:/etc/localtime
      - /root/nginx/conf.d:/etc/nginx/conf.d
      - /root/nginx/logs:/var/log/nginx
    depends_on:                     # 启动顺序
      - nodejs
    networks:                       # 加入指定网络
      - app-network

  santak_mysql:
    image: mysql:5.7
    container_name: santak_mysql
    restart: always
    ports:                          # 映射端口
      - &#34;3306:3306&#34;
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=lovelp           # 创建lovelp用户
      - MYSQL_PASSWORD=mm123321     # 设置lovelp用户的密码
      - MYSQL_DATABASE=santak       # 创建初始数据库
      - TZ=Asia/Shanghai            # 设置时区
    volumes:                        # 挂载数据卷
      - /root/mysql:/var/lib/mysql  # 为了数据持久化
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:                       # 加入指定网络
      - app-network 

  nodejs:
    build:                          # 这里指的是我们刚刚撸的 Dockerfile 文件
      context: .                    
      dockerfile: Dockerfile
    image: nodejs                   # 镜像名称
    container_name: nodejs          # 容器名称
    restart: always                 # 重启方式
    depends_on:                     # 启动顺序
      - santak_redis
      - santak_mysql
    links:                          # 容器连接
      - santak_redis:santak_redis
      - santak_mysql:santak_mysql
    networks:                       # 加入指定网络
      - app-network

volumes:
  certbot-etc:
  certbot-var:

networks:  # 实现通信
  app-network:
    driver: bridge
复制代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;在项目中的使用&#34;&gt;在项目中的使用&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110359.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;setup-sh&#34;&gt;setup.sh&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;#!/usr/bin/env bash
#image_version=`date +%Y%m%d%H%M`;

# 关闭容器
docker-compose stop || true;
# 删除容器
docker-compose down || true;
# 构建镜像
docker-compose build;
# 启动并后台运行
docker-compose up -d;
# 查看日志
docker logs nodejs;
# 对空间进行自动清理
docker system prune -a -f

复制代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;jenkins 创建项目&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110247.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110248.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110254.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110409.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后我们就可以愉快的 &lt;code&gt;Build Now&lt;/code&gt; 了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110415.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在这里我选择的是手动构建。其实jenkins有很多可配置项，比如自动化构建啥的，兴趣使然，大家自行摸索，谢谢大家&lt;/p&gt;
&lt;h2 id=&#34;整理转载&#34;&gt;整理转载:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://juejin.cn/post/6844904006184091662&#34;&gt;掘金&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/bilicard.css&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="web" />
        <category term="docker" />
        <category term="CI/CD" />
        <category term="node" />
        <category term="jenkins" />
        <updated>2022-03-16T10:04:02.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.17lai.site/posts/cf0f47fd/</id>
        <title>Hexo Markdown以及各种插件功能测试</title>
        <link rel="alternate" href="https://blog.17lai.site/posts/cf0f47fd/"/>
        <content type="html">&lt;h2 id=&#34;Markdown-插件&#34;&gt;Markdown 插件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/markdown-it/markdown-it-abbr&#34;&gt;markdown-it-abbr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/markdown-it/markdown-it-container&#34;&gt;markdown-it-container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/markdown-it/markdown-it-deflist&#34;&gt;markdown-it-deflist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/markdown-it/markdown-it-emoji&#34;&gt;markdown-it-emoji&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/markdown-it/markdown-it-footnote&#34;&gt;markdown-it-footnote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/tatsy/markdown-it-imsize&#34;&gt;markdown-it-imsize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/markdown-it/markdown-it-ins&#34;&gt;markdown-it-ins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/markdown-it/markdown-it-mark&#34;&gt;markdown-it-mark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/rlidwka/markdown-it-regexp&#34;&gt;markdown-it-regexp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/markdown-it/markdown-it-sub&#34;&gt;markdown-it-sub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/markdown-it/markdown-it-sup&#34;&gt;markdown-it-sup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/linsir/markdown-it-task-checkbox&#34;&gt;markdown-it-task-checkbox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;常用标记&#34;&gt;常用标记&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;&lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; 29^th^ =&amp;gt; &lt;span class=&#34;token code-snippet code keyword&#34;&gt;`29&amp;lt;sup&amp;gt;th&amp;lt;/sup&amp;gt;`&lt;/span&gt;
&lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; H&lt;span class=&#34;token strike&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;token content&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;~&lt;/span&gt;&lt;/span&gt;0 =&amp;gt; &lt;span class=&#34;token code-snippet code keyword&#34;&gt;`H&amp;lt;sub&amp;gt;2&amp;lt;/sub&amp;gt;O`&lt;/span&gt;
&lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; ==marked== =&amp;gt; &lt;span class=&#34;token code-snippet code keyword&#34;&gt;`&amp;lt;mark&amp;gt;inserted&amp;lt;/mark&amp;gt;`&lt;/span&gt;
&lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; ++inserted++ =&amp;gt; &lt;span class=&#34;token code-snippet code keyword&#34;&gt;`&amp;lt;ins&amp;gt;inserted&amp;lt;/ins&amp;gt;`&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;29&lt;sup&gt;th&lt;/sup&gt; =&amp;gt; &lt;code&gt;29&amp;lt;sup&amp;gt;th&amp;lt;/sup&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;H&lt;sub&gt;2&lt;/sub&gt;0 =&amp;gt; &lt;code&gt;H&amp;lt;sub&amp;gt;2&amp;lt;/sub&amp;gt;O&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;mark&gt;marked&lt;/mark&gt; =&amp;gt; &lt;code&gt;&amp;lt;mark&amp;gt;inserted&amp;lt;/mark&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;ins&gt;inserted&lt;/ins&gt; =&amp;gt; &lt;code&gt;&amp;lt;ins&amp;gt;inserted&amp;lt;/ins&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;markdown-it-task-checkbox&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/linsir/markdown-it-task-checkbox&#34;&gt;markdown-it-task-checkbox&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;和主题某些css冲突，停用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;&lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; [x] item 1
    &lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; [x] item 1-1
    &lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; [ ] item 1-2
    &lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; [ ] item 1-3
    &lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; [ ] item 1-4
&lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; [ ] item 2
    &lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; [ ] item 2-1
    &lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; [ ] item 2-2
    &lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; [ ] item 2-3
    &lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; [ ] item 2-4&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;[x] item 1
&lt;ul&gt;
&lt;li&gt;[x] item 1-1&lt;/li&gt;
&lt;li&gt;[ ] item 1-2&lt;/li&gt;
&lt;li&gt;[ ] item 1-3&lt;/li&gt;
&lt;li&gt;[ ] item 1-4&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] item 2
&lt;ul&gt;
&lt;li&gt;[ ] item 2-1&lt;/li&gt;
&lt;li&gt;[ ] item 2-2&lt;/li&gt;
&lt;li&gt;[ ] item 2-3&lt;/li&gt;
&lt;li&gt;[ ] item 2-4&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;markdown-it-multimd-table&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/RedBug312/markdown-it-multimd-table&#34;&gt;markdown-it-multimd-table&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;目前仅支持多列合并&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;| 标题1        | 标题2        |
| ------------ | ------------ |
| 合并第一行                ||
| 第二行第一列 | 第二行第二列 |&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;标题1&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;标题2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;合并第一行&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;第二行第一列&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;第二行第二列&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;colspan &lt;code&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;empty cell&lt;/code&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;a&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;b&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;rowspan ‘^’&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;a&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;b&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;^^&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;&lt;span class=&#34;token table&#34;&gt;&lt;span class=&#34;token table-header-row&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-header important&#34;&gt;   Markdown   &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-header important&#34;&gt; Rendered HTML &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;token table-line&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;--------------&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;---------------&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;token table-data-rows&#34;&gt;&lt;/span&gt;&lt;/span&gt;|    &lt;span class=&#34;token italic&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token content&#34;&gt;Italic&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;*&lt;/span&gt;&lt;/span&gt;  | &lt;span class=&#34;token italic&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token content&#34;&gt;Italic&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;*&lt;/span&gt;&lt;/span&gt;      | \
|              |               |
|    - Item 1  | - Item 1      | \
|    - Item 2  | - Item 2      |
|    ```python | ```python       \
|    .1 + .2   | .1 + .2         \
|    ```       | ```           |&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Markdown&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Rendered &lt;abbr title=&#34;Hyper Text Markup Language&#34;&gt;HTML&lt;/abbr&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;Italic&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;Italic&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;\&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;- Item 1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;- Item 1&lt;/td&gt;
&lt;td&gt;\&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;- Item 2&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;- Item 2&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;```python&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;```python \&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;.1 + .2&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;.1 + .2 \&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;```&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;```&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;&lt;span class=&#34;token table&#34;&gt;&lt;span class=&#34;token table-header-row&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-header important&#34;&gt; Task           &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-header important&#34;&gt; Time required &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-header important&#34;&gt; Assigned to   &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-header important&#34;&gt; Current Status &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-header important&#34;&gt; Finished &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-header important&#34;&gt; &lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;token table-line&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;----------------&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;---------------&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;---------------&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;----------------&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;-----------&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;token table-data-rows&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; Calendar Cache &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; &amp;gt; 5 hours  &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; @georgehrke &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; in progress &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; &lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; [x] ok?&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; Object Cache   &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; &amp;gt; 5 hours  &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; @georgehrke &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; in progress &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; [x] item1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;[ ] item2&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; Object Cache   &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; &amp;gt; 5 hours  &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; @georgehrke &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; in progress &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;- [x] item1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;- [ ] item2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; Object Cache   &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; &amp;gt; 5 hours  &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; @georgehrke &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; in progress &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;[x] item1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;[ ] item2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; [x] works
&lt;span class=&#34;token list punctuation&#34;&gt;-&lt;/span&gt; [x] works too&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Task&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Time required&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Assigned to&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Current Status&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Finished&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Calendar Cache&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;gt; 5 hours&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;@georgehrke&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;in progress&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;- [x] ok?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Object Cache&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;gt; 5 hours&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;@georgehrke&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;in progress&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[x] item1 [ ] item2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Object Cache&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;gt; 5 hours&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;@georgehrke&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;in progress&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;- [x] item1- [ ] item2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Object Cache&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;gt; 5 hours&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;@georgehrke&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;in progress&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[x] item1[ ] item2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;[x] works&lt;/li&gt;
&lt;li&gt;[x] works too&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;&lt;span class=&#34;token table&#34;&gt;&lt;span class=&#34;token table-header-row&#34;&gt;&lt;span class=&#34;token table-header important&#34;&gt;Function &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-header important&#34;&gt; MySQL / MariaDB &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-header important&#34;&gt; PostgreSQL &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-header important&#34;&gt; SQLite&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;token table-line&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;:------------&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:-------------&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:-------------&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:-------------&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;token table-data-rows&#34;&gt;&lt;span class=&#34;token table-data&#34;&gt;substr &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; :heavy_check_mark: &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt;  :white_check_mark: &lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token table-data&#34;&gt; :heavy_check_mark:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Function&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;MySQL / MariaDB&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;PostgreSQL&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;SQLite&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;substr&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;✔️&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;✅&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;✔️&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;emoji&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.webfx.com/tools/emoji-cheat-sheet/&#34;&gt;emoji&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;:smile::smirk::sunny:&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;😄😏☀️&lt;/p&gt;
&lt;h3 id=&#34;markdown-it-abbr&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/markdown-it/markdown-it-abbr&#34;&gt;markdown-it-abbr&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;&lt;span class=&#34;token italic&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token content&#34;&gt;[HTML]: Hyper Text Markup Language
&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token url-reference url&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;W3C&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  World&lt;/span&gt; Wide Web Consortium
The HTML specification
is maintained by the W3C.&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;abbr title=&#34;Hyper Text Markup Language&#34;&gt;HTML&lt;/abbr&gt; specification&lt;br&gt;
is maintained by the &lt;abbr title=&#34;World Wide Web Consortium&#34;&gt;W3C&lt;/abbr&gt;.&lt;/p&gt;
&lt;h3 id=&#34;markdown-it-container&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/markdown-it/markdown-it-container&#34;&gt;markdown-it-container&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;::: warning
&lt;span class=&#34;token italic&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token content&#34;&gt;here be dragons&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;*&lt;/span&gt;&lt;/span&gt;
:::&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;here be dragons&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;footnote&#34;&gt;footnote&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;Here is a footnote reference,[^1] and another.[^longnote]

&lt;span class=&#34;token url-reference url&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;^1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; Here&lt;/span&gt; is the footnote.

&lt;span class=&#34;token url-reference url&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;^longnote&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; Here&#39;s&lt;/span&gt; one with multiple blocks.

&lt;span class=&#34;token code keyword&#34;&gt;    Subsequent paragraphs are indented to show that they&lt;/span&gt;
belong to the previous footnote.&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is a footnote reference,&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn1&#34; id=&#34;fnref1&#34;&gt;[1]&lt;/a&gt;&lt;/sup&gt; and another.&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn2&#34; id=&#34;fnref2&#34;&gt;[2]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;belong to the previous footnote.&lt;/p&gt;
&lt;h3 id=&#34;markdown-it-imsize&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/tatsy/markdown-it-imsize&#34;&gt;markdown-it-imsize&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;&lt;span class=&#34;token url&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;[&lt;span class=&#34;token content&#34;&gt;test&lt;/span&gt;](&lt;span class=&#34;token url&#34;&gt;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1220211012022352.png&lt;/span&gt;)&lt;/span&gt;
![test](https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1220211012022352.png =100x200)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1220211012022352.png&#34; alt=&#34;test&#34;&gt;&lt;br&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1220211012022352.png&#34; alt=&#34;test&#34; width=&#34;100&#34; height=&#34;200&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;公式测试&#34;&gt;公式测试&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;采用**&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/MakerGYT/markdown-it-latex2img&#34;&gt;markdown-it-latex2img&lt;/a&gt;**&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://makergyt.github.io/markdown-it-latex2img/&#34;&gt;Demo&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-数学公式&#34;&gt;1 数学公式&lt;/h3&gt;
&lt;h4 id=&#34;1-1-内联公式&#34;&gt;1.1 内联公式&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;开头的&lt;code&gt;$&lt;/code&gt;必须在其右边紧跟一个非空格字符，而结尾的&lt;code&gt;$&lt;/code&gt;必须在其左边紧接一个非空格字符，并且不能紧跟一个数字。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;勾股定理: &lt;img src=&#34;https://math.now.sh?inline=a%5E2%2Bb%5E2%3Dc%5E2&#34; style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;&#34;&gt;&lt;/li&gt;
&lt;li&gt;等差数列求和公式: &lt;img src=&#34;https://math.now.sh?inline=S_%7Bn%7D%3Dn%20a_%7B1%7D%2B%5Cfrac%7Bn%28n-1%29%7D%7B2%7D%20d%2C%20n%20%5Cin%20N%5E%7B*%7D&#34; style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;&#34;&gt;&lt;/li&gt;
&lt;li&gt;牛顿-莱布尼茨公式: &lt;img src=&#34;https://math.now.sh?inline=%5Cint_%7Ba%7D%5E%7Bb%7D%20f%28x%29%20d%20x%3DF(b)-F(a)%3D%5Cleft.F(x)%5Cright%7C_%7Ba%7D%20%5E%7Bb%7D&#34; style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;&#34;&gt;&lt;/li&gt;
&lt;li&gt;二项分布: &lt;img src=&#34;https://math.now.sh?inline=P_%7Bn%7D%28k%29%3DC_%7Bn%7D%5E%7Bk%7D%20p%5E%7Bk%7D%20q%5E%7Bn-k%7D%20%5Cquad%20k%3D0%2C1%2C2%20%5Cldots%20%5Cldots%2C%20n&#34; style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;1-2-块公式&#34;&gt;1.2 块公式&lt;/h4&gt;
&lt;p&gt;正态分布&lt;img src=&#34;https://math.now.sh?inline=X%20%5Csim%20N%28%5Cmu%2C%5Csigma%5E2%29&#34; style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;&#34;&gt;:&lt;/p&gt;
&lt;p style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;&#34;&gt;&lt;img src=&#34;https://math.now.sh?from=f%28x%29%20%3D%20%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%7D%5Csigma%7De%5E%7B-%5Cfrac%7B(x-%5Cmu)%5E2%7D%7B2%5Csigma%5E2%7D%7D%0A&#34;&gt;&lt;/p&gt;&lt;p&gt;斐波那契数列&lt;img src=&#34;https://math.now.sh?inline=A_n%3DA_%7Bn-1%7D%2BA_%7Bn-2%7D&#34; style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;&#34;&gt;,前后两项的比值逐渐收敛到黄金分割比例&lt;/p&gt;
&lt;p style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;&#34;&gt;&lt;img src=&#34;https://math.now.sh?from=%5Clim_%7Bn%5Cto%20%5Cinfty%7D%5Cfrac%7BA_%7Bn-1%7D%7D%7BA_n%7D%3D%5Cfrac%7B%5Csqrt%7B5%7D-1%7D%7B2%7D.%0A&#34;&gt;&lt;/p&gt;&lt;p&gt;因式分解&lt;/p&gt;
&lt;p style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;&#34;&gt;&lt;img src=&#34;https://math.now.sh?from=%5Cbegin%7Bsplit%7D%28x%E2%88%921%29(x%E2%88%923)%26%3Dx%5E2%E2%88%924x%2B3%20%5C%5C%20%0A%26%3Dx%5E2%E2%88%924x%2B4%E2%88%921%20%5C%5C%20%0A%26%3D(x%E2%88%922)%5E2%E2%88%921%0A%5Cend%7Bsplit%7D%0A&#34;&gt;&lt;/p&gt;&lt;p&gt;狄利克雷函数&lt;/p&gt;
&lt;p style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;&#34;&gt;&lt;img src=&#34;https://math.now.sh?from=D%28x%29%3D%0A%5Cbegin%7Bcases%7D%0A1%2C%26%20x%20%5Cin%20Q%20%5C%5C%0A0%2C%26%20x%20%5Cnotin%20Q%0A%5Cend%7Bcases%7D%0A&#34;&gt;&lt;/p&gt;&lt;p&gt;高斯公式&lt;/p&gt;
&lt;p style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;&#34;&gt;&lt;img src=&#34;https://math.now.sh?from=%5Ciiint_%7B%5COmega%7D%5Cleft%28%5Cfrac%7B%5Cpartial%20P%7D%7B%5Cpartial%20x%7D%2B%5Cfrac%7B%5Cpartial%20Q%7D%7B%5Cpartial%20y%7D%2B%5Cfrac%7B%5Cpartial%20R%7D%7B%5Cpartial%20z%7D%5Cright%29%20d%20v%3D%5Ciint_%7B%5CSigma%7D%20P%20d%20y%20d%20z%2BQ%20d%20z%20d%20x%2BR%20d%20x%20d%20y%0A&#34;&gt;&lt;/p&gt;&lt;p&gt;范德蒙行列式&lt;/p&gt;
&lt;p style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;&#34;&gt;&lt;img src=&#34;https://math.now.sh?from=D_%7Bn-1%7D%3D%5Cleft%7C%5Cbegin%7Barray%7D%7Bcccc%7D%0A1%20%26%201%20%26%20%5Cdots%20%26%201%20%5C%5C%0Ax_%7B2%7D%20%26%20x_%7B3%7D%20%26%20%5Cdots%20%26%20x_%7Bn%7D%20%5C%5C%0A%5Cvdots%20%26%20%5Cvdots%20%26%20%26%20%5Cvdots%20%5C%5C%0Ax_%7B2%7D%5E%7Bn-2%7D%20%26%20x_%7B3%7D%5E%7Bn-2%7D%20%26%20%5Cdots%20%26%20x_%7Bn%7D%5E%7Bn-2%7D%0A%5Cend%7Barray%7D%5Cright%7C%3D%5Cprod_%7B2%20%5Cleq%20j%3Ci%20%5Cleq%20n%7D%5Cleft%28x_%7Bi%7D-x_%7Bj%7D%5Cright%29&#34;&gt;&lt;/p&gt;&lt;p&gt;线性方程组&lt;/p&gt;
&lt;p style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;&#34;&gt;&lt;img src=&#34;https://math.now.sh?from=%5Cleft%5C%7B%5Cbegin%7Baligned%7D%0Aa_%7B11%7D%20x_%7B1%7D%2Ba_%7B12%7D%20x_%7B2%7D%2B%5Ccdots%2Ba_%7B1%20n%7D%20x_%7Bn%7D%20%26%3Db_%7B1%7D%20%5C%5C%0Aa_%7B21%7D%20x_%7B1%7D%2Ba_%7B22%7D%20x_%7B2%7D%2B%5Ccdots%2Ba_%7B2%20n%7D%20x_%7Bn%7D%20%26%3Db_%7B2%7D%20%5C%5C%0A%5Ccdots%20%5Ccdots%20%5Ccdots%20%5C%5C%0Aa_%7Bm%201%7D%20x_%7B1%7D%2Ba_%7Bm%202%7D%20x_%7B2%7D%2B%5Ccdots%2Ba_%7Bm%20n%7D%20x_%7Bn%7D%20%26%3Db_%7Bm%7D%0A%5Cend%7Baligned%7D%5Cright.&#34;&gt;&lt;/p&gt;&lt;h3 id=&#34;2-物理公式&#34;&gt;2 物理公式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;牛顿第一定律: &lt;img src=&#34;https://math.now.sh?inline=%5Csum%20%5Cvec%7BF%7D_%7Bi%7D%3D%5Cfrac%7B%5Cmathrm%7Bd%7D%20%5Cvec%7Bv%7D%7D%7B%5Cmathrm%7Bd%7D%20t%7D%3D0&#34; style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;&#34;&gt;&lt;/li&gt;
&lt;li&gt;牛顿第二定律: &lt;img src=&#34;https://math.now.sh?inline=%5Cvec%7BF%7D%3D%5Cfrac%7B%5Cmathrm%7Bd%7D%20m%7D%7B%5Cmathrm%7Bd%7D%20t%7D%20%5Cvec%7Bv%7D%2Bm%20%5Cfrac%7B%5Cmathrm%7Bd%7D%20%5Cvec%7Bv%7D%7D%7B%5Cmathrm%7Bd%7D%20t%7D%3D%5Cfrac%7B%5Cmathrm%7Bd%7D%20m%7D%7B%5Cmathrm%7Bd%7D%20t%7D%20%5Cvec%7Bv%7D%2Bm%20%5Cvec%7Ba%7D%3D%5Cfrac%7B%5Cmathrm%7Bd%7D%20m%7D%7B%5Cmathrm%7Bd%7D%20t%7D%20%5Cvec%7Bv%7D%2Bm%20%5Cfrac%7B%5Cmathrm%7Bd%7D%5E%7B2%7D%20%5Cvec%7Br%7D%7D%7B%5Cmathrm%7Bd%7D%20t%5E%7B2%7D%7D&#34; style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;&#34;&gt;&lt;/li&gt;
&lt;li&gt;牛顿第三定律: &lt;img src=&#34;https://math.now.sh?inline=%5Coverrightarrow%7BF_%7B12%7D%7D%3D-%5Coverrightarrow%7BF_%7B21%7D%7D&#34; style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;&#34;&gt;&lt;/li&gt;
&lt;li&gt;质能守恒: &lt;img src=&#34;https://math.now.sh?inline=E%3Dmc%5E2&#34; style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;万有引力定律: &lt;img src=&#34;https://math.now.sh?inline=F%3D%5Cfrac%7BG%20M%20m%7D%7Br%5E%7B2%7D%7D&#34; style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;&#34;&gt;&lt;/p&gt;
&lt;p style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;&#34;&gt;&lt;img src=&#34;https://math.now.sh?from=G%20%5Cfrac%7Bm%20M%7D%7B%28r%2Bh%29%5E%7B2%7D%7D%3Dm%20%5Cfrac%7B%5Cnu%5E%7B2%7D%7D%7B(r%2Bh)%7D%0A&#34;&gt;&lt;/p&gt;&lt;p&gt;基尔霍夫定律&lt;/p&gt;
&lt;p style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;&#34;&gt;&lt;img src=&#34;https://math.now.sh?from=%5Cleft%5B%5Cfrac%7B%5Cpartial%5Cleft%28%5CDelta_%7Br%7D%20H_%7Bm%7D%5Cright%29%7D%7B%5Cpartial%20T%7D%5Cright%5D_%7Bp%7D%3D%5Csum_%7BB%7D%20v_%7BB%7D%20C_%7Bp%2C%20m%7D(B)%0A&#34;&gt;&lt;/p&gt;&lt;p&gt;热力学第二定律&lt;/p&gt;
&lt;p style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;&#34;&gt;&lt;img src=&#34;https://math.now.sh?from=d%20S%20%5Cgeq%20%5Cfrac%7B%5Cdelta%20Q%7D%7BT%7D%0A&#34;&gt;&lt;/p&gt;&lt;h3 id=&#34;3-化学公式&#34;&gt;3 化学公式&lt;/h3&gt;
&lt;p&gt;离子反应与沉淀: &lt;img src=&#34;https://math.now.sh?inline=%5Cce%7BSO4%5E2-%20%2B%20Ba%5E2%2B%20-%3E%20BaSO4%20v%7D&#34; style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;&#34;&gt;&lt;/p&gt;
&lt;p&gt;氮气氢气合成氨&lt;/p&gt;
&lt;p style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;&#34;&gt;&lt;img src=&#34;https://math.now.sh?from=%5Cce%7BN2%20%2B%203H2%20%3C%3D%3ET%5B%E9%AB%98%E6%B8%A9%E3%80%81%E5%8A%A0%E5%8E%8B%5D%5B%E5%82%AC%E5%8C%96%E5%89%82%5D%202NH3%7D%0A&#34;&gt;&lt;/p&gt;&lt;p&gt;化学平衡常数:&lt;img src=&#34;https://math.now.sh?inline=%5Cmathrm%7BZn%7D%2B2%20%5Cmathrm%7BHCl%7D%28%5Cmathrm%7Baq%7D%29%3D%5Cmathrm%7BH%7D_%7B2%7D%2B%5Cmathrm%7BZnCl%7D_%7B2%7D%20%5Cquad(%5Cmathrm%7Baq%7D)&#34; style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;&#34;&gt;&lt;/p&gt;
&lt;p style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;&#34;&gt;&lt;img src=&#34;https://math.now.sh?from=K%5E%7B%5Ctheta%7D%3D%5Cfrac%7B%5Cleft%5Bp%5Cleft%28%5Cmathrm%7BH%7D_%7B2%7D%5Cright%29%20%2F%20p%5E%7B%5Ctheta%7D%5Cright%5D%5Cleft%5Bc%5Cleft(%5Cmathrm%7BZnCl%7D_%7B2%7D%5Cright)%5Cright%5D%7D%7Bc%5E%7B2%7D(%5Cmathrm%7BHC%7D)%7D%0A&#34;&gt;&lt;/p&gt;&lt;h3 id=&#34;4-生物公式&#34;&gt;4 生物公式&lt;/h3&gt;
&lt;p&gt;光合作用&lt;/p&gt;
&lt;p style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;&#34;&gt;&lt;img src=&#34;https://math.now.sh?from=%5Cce%3C!--swig%EF%BF%BC78--%3E%0A&#34;&gt;&lt;/p&gt;&lt;h3 id=&#34;5-语法参考&#34;&gt;5 语法参考&lt;/h3&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference&#34;&gt;MathJax basic tutorial and quick reference&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;长公式&#34;&gt;长公式&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://math.now.sh/?from=%5Cdef%20%5Clowercase%20%7B%5Calpha%20%5Cbeta%20%5Cgamma%20%5Cdelta%20%5Cepsilon%20%5Czeta%20%5Ceta%20%5Ctheta%20%5Ciota%20%5Ckappa%20%5Clambda%20%5Cmu%20%5Cnu%20%5Comicron%20%5Cpi%20%5Crho%20%5Csigma%20%5Ctau%20%5Cupsilon%20%5Cphi%20%5Cchi%20%5Cpsi%20%5Comega%7D%0A%5Cdef%20%5Cuppercase%20%7BA%20B%20%5CGamma%20%5CDelta%20E%20Z%20E%20%5CTheta%20I%20K%20%5CLambda%20M%20N%20O%20%5CPi%20R%20%5CSigma%20T%20%5CUpsilon%20%5CPhi%20X%20%5CPsi%20%5COmega%7D%0A%5Cdef%20%5Clong%20%7B%5Cuppercase%20%5CLeftrightarrow%20%5Clowercase%7D%0A&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://math.now.sh/?inline=%5Ctext%7Blong%20inline%20mathjax%3A%7D%5Cquad%20%5Clong%20%5Cquad%20%5Clong%20%5Cquad%20%5Clong&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://math.now.sh/?from=%5Ctext%7B%3C-%20long%20displayed%20mathjax%20example%20-%3E%7D%20%5C%5C%0A%5Cbegin%7Bsplit%7D%0A%5Clong%20%5Cquad%20%26%5Clong%20%5C%5C%0A%26%5Clong%20%5Cquad%20%5Clong%0A%5Cend%7Bsplit%7D%0A&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;小括号测试&#34;&gt;小括号测试&lt;/h4&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;$\alpha\beta$

$\alpha_\beta$

$\alpha_\beta = \gamma_\delta$

(abctest)

\(abctest\)

\\(abctest\\)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://math.now.sh?inline=%5Calpha%5Cbeta&#34; style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://math.now.sh?inline=%5Calpha_%5Cbeta&#34; style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://math.now.sh?inline=%5Calpha_%5Cbeta%20%3D%20%5Cgamma_%5Cdelta&#34; style=&#34;filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;&#34;&gt;&lt;/p&gt;
&lt;p&gt;(abctest)&lt;/p&gt;
&lt;p&gt;(abctest)&lt;/p&gt;
&lt;p&gt;\(abctest\)&lt;/p&gt;
&lt;h4 id=&#34;下划线测试&#34;&gt;下划线测试&lt;/h4&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;w^{(l)}*{ij} = w^{(l)}*{ij} - \eta\frac{\partial E(W, b)}{\partial w^{(l)}_{ij}}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://math.now.sh/?from=w%5E%7B%28l%29%7D*%7Bij%7D%20%3D%20w%5E%7B(l)%7D*%7Bij%7D%20-%20%5Ceta%5Cfrac%7B%5Cpartial%20E(W%2C%20b)%7D%7B%5Cpartial%20w%5E%7B(l)%7D_%7Bij%7D%7D%0A&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;CSS测试&#34;&gt;CSS测试&lt;/h2&gt;
&lt;p&gt;文字增加背景色块 &lt;span id=&#34;inline-blue&#34;&gt;站点配置文件&lt;/span&gt;,&lt;br&gt;
&lt;span id=&#34;inline-purple&#34;&gt;主题配置文件&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;&amp;lt;span id=&#34;inline-blue&#34;&amp;gt;站点配置文件&amp;lt;/span&amp;gt;, 
&amp;lt;span id=&#34;inline-purple&#34;&amp;gt;主题配置文件&amp;lt;/span&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;引用边框变色&#34;&gt;引用边框变色&lt;/h3&gt;
&lt;p id=&#34;div-border-left-red&#34;&gt;如果没有安装成功, 那可能就是墙的原因. 建议下载 `Node.js` 直接安装. &lt;/p&gt;
&lt;p id=&#34;div-border-top-blue&#34;&gt;关于更多基本操作和基础知识, 请查阅 [Hexo](https://hexo.io/zh-cn/) 与 [NexT](http://theme-next.iissnan.com/) 官方文档.&lt;/p&gt;  
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;&amp;lt;p id=&#34;div-border-left-red&#34;&amp;gt;如果没有安装成功, 那可能就是墙的原因. 建议下载 `Node.js` 直接安装. &amp;lt;/p&amp;gt;
&amp;lt;p id=&#34;div-border-top-blue&#34;&amp;gt;关于更多基本操作和基础知识, 请查阅 [Hexo](https://hexo.io/zh-cn/) 与 [NexT](http://theme-next.iissnan.com/) 官方文档.&amp;lt;/p&amp;gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;图形边框效果&#34;&gt;图形边框效果&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://git-scm.com/download/win&#34;&gt;&lt;i class=&#34;fa fa-download&#34;&gt;&lt;/i&gt;&lt;span&gt; Download Now&lt;/span&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;&amp;lt;a id=&#34;download&#34; href=&#34;https://git-scm.com/download/win&#34;&amp;gt;&amp;lt;i class=&#34;fa fa-download&#34;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;span&amp;gt; Download Now&amp;lt;/span&amp;gt;
&amp;lt;/a&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更多tips可参考 &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://yangbingdong.com/2017/build-blog-hexo-advanced&#34;&gt;blog&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;在文档中增加图标&#34;&gt;在文档中增加图标&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fa fa-pencil&#34;&gt;&lt;/i&gt;支持Markdown&lt;br&gt;
&lt;i&gt;Hexo 支持 GitHub Flavored Markdown 的所有功能, 甚至可以整合 Octopress 的大多数插件. &lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i class=&#34;fa fa-cloud-upload&#34;&gt;&lt;/i&gt;一件部署&lt;br&gt;
&lt;i&gt;只需一条指令即可部署到Github Pages, 或其他网站&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i class=&#34;fa fa-cog&#34;&gt;&lt;/i&gt;丰富的插件&lt;br&gt;
&lt;i&gt;Hexo 拥有强大的插件系统, 安装插件可以让 Hexo 支持 Jade, CoffeeScript. &lt;/i&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;- &amp;lt;i class=&#34;fa fa-pencil&#34;&amp;gt;&amp;lt;/i&amp;gt;支持Markdown
&amp;lt;i&amp;gt;Hexo 支持 GitHub Flavored Markdown 的所有功能, 甚至可以整合 Octopress 的大多数插件. &amp;lt;/i&amp;gt;
- &amp;lt;i class=&#34;fa fa-cloud-upload&#34;&amp;gt;&amp;lt;/i&amp;gt;一件部署
&amp;lt;i&amp;gt;只需一条指令即可部署到Github Pages, 或其他网站&amp;lt;/i&amp;gt;
- &amp;lt;i class=&#34;fa fa-cog&#34;&amp;gt;&amp;lt;/i&amp;gt;丰富的插件
&amp;lt;i&amp;gt;Hexo 拥有强大的插件系统, 安装插件可以让 Hexo 支持 Jade, CoffeeScript. &amp;lt;/i&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;i class=&#34;fa fa-github&#34;&gt;&lt;/i&gt;&lt;br&gt;
&lt;i class=&#34;fa fa-github fa-lg&#34;&gt;&lt;/i&gt;&lt;br&gt;
&lt;i class=&#34;fa fa-github fa-2x&#34;&gt;&lt;/i&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;`&amp;lt;i class=&#34;fa fa-github&#34;&amp;gt;&amp;lt;/i&amp;gt;`
`&amp;lt;i class=&#34;fa fa-github fa-lg&#34;&amp;gt;&amp;lt;/i&amp;gt;`
`&amp;lt;i class=&#34;fa fa-github fa-2x&#34;&amp;gt;&amp;lt;/i&amp;gt;`&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;图表绘制&#34;&gt;图表绘制&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/JameChou/hexo-tag-mermaid&#34;&gt;hexo-tag-mermaid&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://link.segmentfault.com/?enc=hOwQoD6fIIIe7W28woagTQ%3D%3D.VHuPUTxtKKrWqD9OwRmRWowEiRhfZtrRRPW0tAHaUnugQA9ofUIFaPqb38gbAsyx&#34;&gt;&lt;strong&gt;hexo-tag-plantuml&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hexo-tag-plantuml is a tag plugin for Hexo. It can work with plantuml to draw uml.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在Hexo中绘制uml图。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://link.segmentfault.com/?enc=7CVDHj4WMnK6vHwS3JXOAQ%3D%3D.VqG%2BdxXCAb%2FdHLPgRnzrtjEUBUuK1EhF%2Fo7ev0Banu7ADAa3cS1GF4ROLNNWkriO&#34;&gt;&lt;strong&gt;hexo-filter-flowchart&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Generate flowchart diagrams for Hexo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Mermaid&#34;&gt;Mermaid&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://blog.csdn.net/horsee/category_10772579.html&#34;&gt;Markdown mermaid教程&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;mermaid&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/mermaid-js/mermaid&#34;&gt;mermaid&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/JameChou/hexo-tag-mermaid&#34;&gt;hexo-tag-mermaid&lt;/a&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/two/hexo-tag-plantuml&#34;&gt;hexo-tag-plantuml&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;需要用下面块包裹&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;{% mermaid %}
[内容]
{% endmermaid %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;先来几个演示&lt;/p&gt;
&lt;div class=&#34;mermaid&#34;&gt;
  graph LR 
	source(*.java) --javac--&amp;gt; bytecode(*.class) 
	bytecode --java--&amp;gt; result(程序输出)
&lt;/div&gt;

&lt;div class=&#34;mermaid&#34;&gt;
  graph LR 
	type(type) -.-&amp;gt; type 
	type -.-&amp;gt; object(object) 
	type -.-&amp;gt; A(A) 
	type -.-&amp;gt; int(int) 
	A -.-&amp;gt; a((a)) 
	int -.-&amp;gt; i((i)) 
	object --&amp;gt; type 
	object --&amp;gt; A
&lt;/div&gt;

&lt;h3 id=&#34;flowchart&#34;&gt;flowchart&lt;/h3&gt;
&lt;p&gt;[&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://mermaid-js.github.io/mermaid/#/flowchart&#34;&gt;docs&lt;/a&gt; - &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://mermaidjs.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoiZ3JhcGggVERcbiAgICBBW0hhcmRdIC0tPnxUZXh0fCBCKFJvdW5kKVxuICAgIEIgLS0-IEN7RGVjaXNpb259XG4gICAgQyAtLT58T25lfCBEW1Jlc3VsdCAxXVxuICAgIEMgLS0-fFR3b3wgRVtSZXN1bHQgMl0iLCJtZXJtYWlkIjp7InRoZW1lIjoiZGVmYXVsdCJ9fQ&#34;&gt;live editor&lt;/a&gt;]&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% mermaid %}
graph TD
    A[Christmas] --&amp;gt;|Get money| B(Go shopping)
    B --&amp;gt; C{Let me think}
    C --&amp;gt;|One| D[Laptop]
    C --&amp;gt;|Two| E[iPhone]
    C --&amp;gt;|Three| F[Car]
{% endmermaid %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;mermaid&#34;&gt;
  graph TD
    A[Christmas] --&amp;gt;|Get money| B(Go shopping)
    B --&amp;gt; C{Let me think}
    C --&amp;gt;|One| D[Laptop]
    C --&amp;gt;|Two| E[iPhone]
    C --&amp;gt;|Three| F[Car]
&lt;/div&gt;

&lt;h3 id=&#34;Sequence-diagram&#34;&gt;Sequence &lt;strong&gt;diagram&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;[&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://mermaid-js.github.io/mermaid/#/sequenceDiagram&#34;&gt;docs&lt;/a&gt; - &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://mermaidjs.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG5BbGljZS0-PkpvaG46IEhlbGxvIEpvaG4sIGhvdyBhcmUgeW91P1xubG9vcCBIZWFsdGhjaGVja1xuICAgIEpvaG4tPj5Kb2huOiBGaWdodCBhZ2FpbnN0IGh5cG9jaG9uZHJpYVxuZW5kXG5Ob3RlIHJpZ2h0IG9mIEpvaG46IFJhdGlvbmFsIHRob3VnaHRzIVxuSm9obi0tPj5BbGljZTogR3JlYXQhXG5Kb2huLT4-Qm9iOiBIb3cgYWJvdXQgeW91P1xuQm9iLS0-PkpvaG46IEpvbGx5IGdvb2QhIiwibWVybWFpZCI6eyJ0aGVtZSI6ImRlZmF1bHQifX0&#34;&gt;live editor&lt;/a&gt;]&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% mermaid %}
sequenceDiagram
    loop every day
        Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
        John--&amp;gt;&amp;gt;Alice: Great!
    end
{% endmermaid %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;mermaid&#34;&gt;
  sequenceDiagram
    loop every day
        Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
        John--&amp;gt;&amp;gt;Alice: Great!
    end
&lt;/div&gt;

&lt;h3 id=&#34;Gantt-diagram&#34;&gt;Gantt &lt;strong&gt;diagram&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;[&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://mermaid-js.github.io/mermaid/#/gantt&#34;&gt;docs&lt;/a&gt; - &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://mermaidjs.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoiZ2FudHRcbnNlY3Rpb24gU2VjdGlvblxuQ29tcGxldGVkIDpkb25lLCAgICBkZXMxLCAyMDE0LTAxLTA2LDIwMTQtMDEtMDhcbkFjdGl2ZSAgICAgICAgOmFjdGl2ZSwgIGRlczIsIDIwMTQtMDEtMDcsIDNkXG5QYXJhbGxlbCAxICAgOiAgICAgICAgIGRlczMsIGFmdGVyIGRlczEsIDFkXG5QYXJhbGxlbCAyICAgOiAgICAgICAgIGRlczQsIGFmdGVyIGRlczEsIDFkXG5QYXJhbGxlbCAzICAgOiAgICAgICAgIGRlczUsIGFmdGVyIGRlczMsIDFkXG5QYXJhbGxlbCA0ICAgOiAgICAgICAgIGRlczYsIGFmdGVyIGRlczQsIDFkIiwibWVybWFpZCI6eyJ0aGVtZSI6ImRlZmF1bHQifX0&#34;&gt;live editor&lt;/a&gt;]&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% mermaid %}
gantt
    dateFormat  YYYY-MM-DD
    title Adding GANTT diagram functionality to mermaid

    section A section
    Completed task            :done,    des1, 2014-01-06,2014-01-08
    Active task               :active,  des2, 2014-01-09, 3d
    Future task               :         des3, after des2, 5d
    Future task2               :         des4, after des3, 5d

    section Critical tasks
    Completed task in the critical line :crit, done, 2014-01-06,24h
    Implement parser and jison          :crit, done, after des1, 2d
    Create tests for parser             :crit, active, 3d
    Future task in critical line        :crit, 5d
    Create tests for renderer           :2d
    Add to mermaid                      :1d

    section Documentation
    Describe gantt syntax               :active, a1, after des1, 3d
    Add gantt diagram to demo page      :after a1  , 20h
    Add another diagram to demo page    :doc1, after a1  , 48h

    section Last section
    Describe gantt syntax               :after doc1, 3d
    Add gantt diagram to demo page      : 20h
    Add another diagram to demo page    : 48h
{% endmermaid %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;mermaid&#34;&gt;
  gantt
    dateFormat  YYYY-MM-DD
    title Adding GANTT diagram functionality to mermaid

    section A section
    Completed task            :done,    des1, 2014-01-06,2014-01-08
    Active task               :active,  des2, 2014-01-09, 3d
    Future task               :         des3, after des2, 5d
    Future task2               :         des4, after des3, 5d
    
    section Critical tasks
    Completed task in the critical line :crit, done, 2014-01-06,24h
    Implement parser and jison          :crit, done, after des1, 2d
    Create tests for parser             :crit, active, 3d
    Future task in critical line        :crit, 5d
    Create tests for renderer           :2d
    Add to mermaid                      :1d
    
    section Documentation
    Describe gantt syntax               :active, a1, after des1, 3d
    Add gantt diagram to demo page      :after a1  , 20h
    Add another diagram to demo page    :doc1, after a1  , 48h
    
    section Last section
    Describe gantt syntax               :after doc1, 3d
    Add gantt diagram to demo page      : 20h
    Add another diagram to demo page    : 48h
&lt;/div&gt;

&lt;h3 id=&#34;ER图&#34;&gt;ER图&lt;/h3&gt;
&lt;div class=&#34;mermaid&#34;&gt;
  erDiagram
    CUSTOMER ||--o{ ORDER : places
    CUSTOMER {
        string name
        string custNumber
        string sector
    }
    ORDER ||--|{ LINE-ITEM : contains
    ORDER {
        int orderNumber
        string deliveryAddress
    }
    LINE-ITEM {
        string productCode
        int quantity
        float pricePerUnit
    }
&lt;/div&gt;

&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;erDiagram
    CUSTOMER ||--o{ ORDER : places
    CUSTOMER {
        string name
        string custNumber
        string sector
    }
    ORDER ||--|{ LINE-ITEM : contains
    ORDER {
        int orderNumber
        string deliveryAddress
    }
    LINE-ITEM {
        string productCode
        int quantity
        float pricePerUnit
    }&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;class&#34;&gt;&lt;strong&gt;class&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;[&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://mermaid-js.github.io/mermaid/#/classDiagram&#34;&gt;docs&lt;/a&gt; - &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://mermaidjs.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoiY2xhc3NEaWFncmFtXG5DbGFzczAxIDx8LS0gQXZlcnlMb25nQ2xhc3MgOiBDb29sXG48PGludGVyZmFjZT4-IENsYXNzMDFcbkNsYXNzMDkgLS0-IEMyIDogV2hlcmUgYW0gaT9cbkNsYXNzMDkgLS0qIEMzXG5DbGFzczA5IC0tfD4gQ2xhc3MwN1xuQ2xhc3MwNyA6IGVxdWFscygpXG5DbGFzczA3IDogT2JqZWN0W10gZWxlbWVudERhdGFcbkNsYXNzMDEgOiBzaXplKClcbkNsYXNzMDEgOiBpbnQgY2hpbXBcbkNsYXNzMDEgOiBpbnQgZ29yaWxsYVxuY2xhc3MgQ2xhc3MxMCB7XG4gID4-c2VydmljZT4-XG4gIGludCBpZFxuICBzaXplKClcbn0iLCJtZXJtYWlkIjp7InRoZW1lIjoiZGVmYXVsdCJ9fQ&#34;&gt;live editor&lt;/a&gt;]&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;classDiagram
class Shape{
    &amp;lt;&amp;lt;interface&amp;gt;&amp;gt;
    noOfVertices
    draw()
}
class Color{
    &amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;
    RED
    BLUE
    GREEN
    WHITE
    BLACK
}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;mermaid&#34;&gt;
  classDiagram
class Shape{
    &amp;lt;&lt;interface&gt;&amp;gt;
    noOfVertices
    draw()
}
class Color{
    &amp;lt;&lt;enumeration&gt;&amp;gt;
    RED
    BLUE
    GREEN
    WHITE
    BLACK
}
&lt;/enumeration&gt;&lt;/interface&gt;&lt;/div&gt;

&lt;h3 id=&#34;State&#34;&gt;&lt;strong&gt;State&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;[&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://mermaid-js.github.io/mermaid/#/stateDiagram&#34;&gt;docs&lt;/a&gt; - &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://mermaid-js.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoic3RhdGVEaWFncmFtLXYyXG4gICAgWypdIC0tPiBTdGlsbFxuICAgIFN0aWxsIC0tPiBbKl1cbiAgICBTdGlsbCAtLT4gTW92aW5nXG4gICAgTW92aW5nIC0tPiBTdGlsbFxuICAgIE1vdmluZyAtLT4gQ3Jhc2hcbiAgICBDcmFzaCAtLT4gWypdIiwibWVybWFpZCI6eyJ0aGVtZSI6ImRlZmF1bHQiLCJ0aGVtZVZhcmlhYmxlcyI6eyJiYWNrZ3JvdW5kIjoid2hpdGUiLCJwcmltYXJ5Q29sb3IiOiIjRUNFQ0ZGIiwic2Vjb25kYXJ5Q29sb3IiOiIjZmZmZmRlIiwidGVydGlhcnlDb2xvciI6ImhzbCg4MCwgMTAwJSwgOTYuMjc0NTA5ODAzOSUpIiwicHJpbWFyeUJvcmRlckNvbG9yIjoiaHNsKDI0MCwgNjAlLCA4Ni4yNzQ1MDk4MDM5JSkiLCJzZWNvbmRhcnlCb3JkZXJDb2xvciI6ImhzbCg2MCwgNjAlLCA4My41Mjk0MTE3NjQ3JSkiLCJ0ZXJ0aWFyeUJvcmRlckNvbG9yIjoiaHNsKDgwLCA2MCUsIDg2LjI3NDUwOTgwMzklKSIsInByaW1hcnlUZXh0Q29sb3IiOiIjMTMxMzAwIiwic2Vjb25kYXJ5VGV4dENvbG9yIjoiIzAwMDAyMSIsInRlcnRpYXJ5VGV4dENvbG9yIjoicmdiKDkuNTAwMDAwMDAwMSwgOS41MDAwMDAwMDAxLCA5LjUwMDAwMDAwMDEpIiwibGluZUNvbG9yIjoiIzMzMzMzMyIsInRleHRDb2xvciI6IiMzMzMiLCJtYWluQmtnIjoiI0VDRUNGRiIsInNlY29uZEJrZyI6IiNmZmZmZGUiLCJib3JkZXIxIjoiIzkzNzBEQiIsImJvcmRlcjIiOiIjYWFhYTMzIiwiYXJyb3doZWFkQ29sb3IiOiIjMzMzMzMzIiwiZm9udEZhbWlseSI6IlwidHJlYnVjaGV0IG1zXCIsIHZlcmRhbmEsIGFyaWFsIiwiZm9udFNpemUiOiIxNnB4IiwibGFiZWxCYWNrZ3JvdW5kIjoiI2U4ZThlOCIsIm5vZGVCa2ciOiIjRUNFQ0ZGIiwibm9kZUJvcmRlciI6IiM5MzcwREIiLCJjbHVzdGVyQmtnIjoiI2ZmZmZkZSIsImNsdXN0ZXJCb3JkZXIiOiIjYWFhYTMzIiwiZGVmYXVsdExpbmtDb2xvciI6IiMzMzMzMzMiLCJ0aXRsZUNvbG9yIjoiIzMzMyIsImVkZ2VMYWJlbEJhY2tncm91bmQiOiIjZThlOGU4IiwiYWN0b3JCb3JkZXIiOiJoc2woMjU5LjYyNjE2ODIyNDMsIDU5Ljc3NjUzNjMxMjglLCA4Ny45MDE5NjA3ODQzJSkiLCJhY3RvckJrZyI6IiNFQ0VDRkYiLCJhY3RvclRleHRDb2xvciI6ImJsYWNrIiwiYWN0b3JMaW5lQ29sb3IiOiJncmV5Iiwic2lnbmFsQ29sb3IiOiIjMzMzIiwic2lnbmFsVGV4dENvbG9yIjoiIzMzMyIsImxhYmVsQm94QmtnQ29sb3IiOiIjRUNFQ0ZGIiwibGFiZWxCb3hCb3JkZXJDb2xvciI6ImhzbCgyNTkuNjI2MTY4MjI0MywgNTkuNzc2NTM2MzEyOCUsIDg3LjkwMTk2MDc4NDMlKSIsImxhYmVsVGV4dENvbG9yIjoiYmxhY2siLCJsb29wVGV4dENvbG9yIjoiYmxhY2siLCJub3RlQm9yZGVyQ29sb3IiOiIjYWFhYTMzIiwibm90ZUJrZ0NvbG9yIjoiI2ZmZjVhZCIsIm5vdGVUZXh0Q29sb3IiOiJibGFjayIsImFjdGl2YXRpb25Cb3JkZXJDb2xvciI6IiM2NjYiLCJhY3RpdmF0aW9uQmtnQ29sb3IiOiIjZjRmNGY0Iiwic2VxdWVuY2VOdW1iZXJDb2xvciI6IndoaXRlIiwic2VjdGlvbkJrZ0NvbG9yIjoicmdiYSgxMDIsIDEwMiwgMjU1LCAwLjQ5KSIsImFsdFNlY3Rpb25Ca2dDb2xvciI6IndoaXRlIiwic2VjdGlvbkJrZ0NvbG9yMiI6IiNmZmY0MDAiLCJ0YXNrQm9yZGVyQ29sb3IiOiIjNTM0ZmJjIiwidGFza0JrZ0NvbG9yIjoiIzhhOTBkZCIsInRhc2tUZXh0TGlnaHRDb2xvciI6IndoaXRlIiwidGFza1RleHRDb2xvciI6IndoaXRlIiwidGFza1RleHREYXJrQ29sb3IiOiJibGFjayIsInRhc2tUZXh0T3V0c2lkZUNvbG9yIjoiYmxhY2siLCJ0YXNrVGV4dENsaWNrYWJsZUNvbG9yIjoiIzAwMzE2MyIsImFjdGl2ZVRhc2tCb3JkZXJDb2xvciI6IiM1MzRmYmMiLCJhY3RpdmVUYXNrQmtnQ29sb3IiOiIjYmZjN2ZmIiwiZ3JpZENvbG9yIjoibGlnaHRncmV5IiwiZG9uZVRhc2tCa2dDb2xvciI6ImxpZ2h0Z3JleSIsImRvbmVUYXNrQm9yZGVyQ29sb3IiOiJncmV5IiwiY3JpdEJvcmRlckNvbG9yIjoiI2ZmODg4OCIsImNyaXRCa2dDb2xvciI6InJlZCIsInRvZGF5TGluZUNvbG9yIjoicmVkIiwibGFiZWxDb2xvciI6ImJsYWNrIiwiZXJyb3JCa2dDb2xvciI6IiM1NTIyMjIiLCJlcnJvclRleHRDb2xvciI6IiM1NTIyMjIiLCJjbGFzc1RleHQiOiIjMTMxMzAwIiwiZmlsbFR5cGUwIjoiI0VDRUNGRiIsImZpbGxUeXBlMSI6IiNmZmZmZGUiLCJmaWxsVHlwZTIiOiJoc2woMzA0LCAxMDAlLCA5Ni4yNzQ1MDk4MDM5JSkiLCJmaWxsVHlwZTMiOiJoc2woMTI0LCAxMDAlLCA5My41Mjk0MTE3NjQ3JSkiLCJmaWxsVHlwZTQiOiJoc2woMTc2LCAxMDAlLCA5Ni4yNzQ1MDk4MDM5JSkiLCJmaWxsVHlwZTUiOiJoc2woLTQsIDEwMCUsIDkzLjUyOTQxMTc2NDclKSIsImZpbGxUeXBlNiI6ImhzbCg4LCAxMDAlLCA5Ni4yNzQ1MDk4MDM5JSkiLCJmaWxsVHlwZTciOiJoc2woMTg4LCAxMDAlLCA5My41Mjk0MTE3NjQ3JSkifX0sInVwZGF0ZUVkaXRvciI6ZmFsc2V9&#34;&gt;live editor&lt;/a&gt;]&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% mermaid %}
stateDiagram-v2
    [*] --&amp;gt; Still
    Still --&amp;gt; [*]
    Still --&amp;gt; Moving
    Moving --&amp;gt; Still
    Moving --&amp;gt; Crash
    Crash --&amp;gt; [*]
{% endmermaid %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;mermaid&#34;&gt;
  stateDiagram-v2
    [*] --&amp;gt; Still
    Still --&amp;gt; [*]
    Still --&amp;gt; Moving
    Moving --&amp;gt; Still
    Moving --&amp;gt; Crash
    Crash --&amp;gt; [*]
&lt;/div&gt;

&lt;h3 id=&#34;Pie&#34;&gt;&lt;strong&gt;Pie&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;[&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://mermaid-js.github.io/mermaid/#/pie&#34;&gt;docs&lt;/a&gt; - &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://mermaidjs.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoicGllXG5cIkRvZ3NcIiA6IDQyLjk2XG5cIkNhdHNcIiA6IDUwLjA1XG5cIlJhdHNcIiA6IDEwLjAxIiwibWVybWFpZCI6eyJ0aGVtZSI6ImRlZmF1bHQifX0&#34;&gt;live editor&lt;/a&gt;]&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% mermaid %}
pie
&#34;Dogs&#34; : 386
&#34;Cats&#34; : 85
&#34;Rats&#34; : 15
{% endmermaid %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;mermaid&#34;&gt;
  pie
&#34;Dogs&#34; : 386
&#34;Cats&#34; : 85
&#34;Rats&#34; : 15
&lt;/div&gt;

&lt;h3 id=&#34;User-Journey&#34;&gt;&lt;strong&gt;User Journey&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;[&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://mermaid-js.github.io/mermaid/#/user-journey&#34;&gt;docs&lt;/a&gt; - &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://mermaidjs.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoic3RhdGVEaWFncmFtXG4gICAgWypdIC0tPiBTdGlsbFxuICAgIFN0aWxsIC0tPiBbKl1cbiAgICBTdGlsbCAtLT4gTW92aW5nXG4gICAgTW92aW5nIC0tPiBTdGlsbFxuICAgIE1vdmluZyAtLT4gQ3Jhc2hcbiAgICBDcmFzaCAtLT4gWypdIiwibWVybWFpZCI6eyJ0aGVtZSI6ImRlZmF1bHQifX0&#34;&gt;live editor&lt;/a&gt;]&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% mermaid %}
	  journey
    title My working day
    section Go to work
      Make tea: 5: Me
      Go upstairs: 3: Me
      Do work: 1: Me, Cat
    section Go home
      Go downstairs: 5: Me
      Sit down: 3: Me
{% endmermaid %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;mermaid&#34;&gt;
  journey
 title My working day
 section Go to work
   Make tea: 5: Me
   Go upstairs: 3: Me
   Do work: 1: Me, Cat
 section Go home
   Go downstairs: 5: Me
   Sit down: 3: Me
&lt;/div&gt;

&lt;h2 id=&#34;plant-uml&#34;&gt;plant uml&lt;/h2&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://link.segmentfault.com/?enc=ZnkRBa%2Fre3TQCl7KNJg2Sg%3D%3D.ZEjsSgGk0F1LOYjRqQLWGcsHdjIHjXJJNCwT20OKlas%3D&#34;&gt;&lt;strong&gt;PlantUML&lt;/strong&gt; &lt;/a&gt;是一个允许你快速编写一下图表的组件 :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://link.segmentfault.com/?enc=WnNQQpbhwLLtOvy0iZznAw%3D%3D.ufDzIrmSHLTJOvU%2B%2BrCbHKX7i%2BXDfiAs43p47%2Brd6CPQPzmoRjTx9Yjer2eCPMIx&#34;&gt;Sequence diagram&lt;/a&gt;（时序图）&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://link.segmentfault.com/?enc=swyHFudu0Dv1kgG36K6uKQ%3D%3D.%2F3OTiCZ42cJb5Qx7sx3T0xkD8UzUl2QpmT5nScfRShRBbDCjvTAYmIjQBdcndh5P&#34;&gt;Usecase diagram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://link.segmentfault.com/?enc=y2iylEjbyP1BkiOoSD3aBQ%3D%3D.Uk3N50fH52eqKvi5pR9V2dCwZ2t88GyGCkB56t0bi51SDzK3TAm8q%2F%2BknYaMp6gq&#34;&gt;Class diagram&lt;/a&gt;（类图）&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://link.segmentfault.com/?enc=ZPF3Fm60rmWHTd6iqgefYw%3D%3D.hetxaEZitHOTlwF26EQHW1ze%2BqQe28tO5Zan9A6PQD7tELizzdVt2LCwJ7Wqni8N&#34;&gt;Activity diagram&lt;/a&gt; (here is &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://link.segmentfault.com/?enc=G1AlcTWhXkwCzalwXO04Tw%3D%3D.RKEPVfhovignZnpee9bltjlVeAZ25VKK5bSbzmo2G225h2cQ3wEKM8LyC23GxRLL&#34;&gt;the legacy syntax)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://link.segmentfault.com/?enc=Vxtv5M%2FcCgkpBtyWH8mDCA%3D%3D.xTXdTliRpsnQ8OniXrs1V6YfjTy0nSFbS7l7wqvn0uACpHlTJNL9BlF0xb7vfM4Z&#34;&gt;Component diagram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://link.segmentfault.com/?enc=asRZoWO7I5UQ3wuP84r8hg%3D%3D.vyIPg7GpNKjSjf7e2IS4KO%2Bg6SnD1DLe9DYb9T1CuW2U41s72PgDFuT0hbkp2BO9&#34;&gt;State diagram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://link.segmentfault.com/?enc=WMWDuC4PoXS%2BUq8UK%2B6m6Q%3D%3D.UaRzixgD%2B8x%2BRoBPDjArHXZEVWCpjnRwzoBn9HZDWAgyM2iggTjoxPJrpjuH5nZL&#34;&gt;Object diagram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://link.segmentfault.com/?enc=4QYG%2FOLv5kpCA0Wur4JTBg%3D%3D.Ci3AIvz1ie0I6BCUt8a%2BaklDx8hJvKPujkVdWDGw%2BzDTkfdnBBhY5GhX9mIITaMb&#34;&gt;Deployment diagram&lt;/a&gt;(BETA)&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://link.segmentfault.com/?enc=%2Bi9ecBhjJV%2Fo6bPpIo6zEw%3D%3D.b0HW%2B0h7iKI3LibmVdbEmi77twGMobstSrkBWn2n6AucZmIcrNRI7QEhpDEMrUTR&#34;&gt;Timing diagram&lt;/a&gt;(BETA)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hexo安装hexo-tag-plantuml插件，便能使其绘制的图表在博客上展示，其原理其实使用的是 PlantUML 提供的在线服务, 只是简单地将标签包裹的代码传给服务器, 获取生成的链接, 生成 img标签替换原来的代码区域.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://link.segmentfault.com/?enc=Om2tsztpVQpl48NLQP8wPg%3D%3D.lA5QuvRnDCcbundLA81sGH8MG3E6QjnIJQ6%2BgojZWH8%3D&#34;&gt;plantUML在线编辑网站&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可使用HTML标签将其嵌套&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% plantuml %}
title Relationships - Class Diagram

class Dwelling {
  +Int Windows
  +void LockTheDoor()
}

class Apartment
class House
class Commune
class Window
class Door

Dwelling &amp;lt;|-down- Apartment: Inheritance
Dwelling &amp;lt;|-down- Commune: Inheritance
Dwelling &amp;lt;|-down- House: Inheritance
Dwelling &#34;1&#34; *-up- &#34;many&#34; Window: Composition
Dwelling &#34;1&#34; *-up- &#34;many&#34; Door: Composition
{% endplantuml %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;http://www.plantuml.com/plantuml/svg/XP0z2y8m48Rt_8gZanzaS2qkKWSBJY8uXpQqXybTQ5ABgF_TrhQAuCUMbpptt4V0O3Jij541cNo9peE4n2ZlOOsgg9GL8kjZeur1Ak0Y0EOf1JWWvTpuBfuOSzXoTjoNUirSJQRYDXQkdAg2rHI6lE7Qw-6TiBKrZQaNZlrQZH3FhikhRFz8ldGnf5Jg2eEYJ7y01_S_x37E5oXQH32JjPCGMKNdQ9WmxjoEFNP7-q5tAxonTm00&#34;&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% plantuml %}
[内容]
{% endplantuml %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;时序图&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://plantuml.com/zh/timing-diagram&#34;&gt;时序图&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% plantuml %}
    Bob-&amp;gt;Alice : hello
{% endplantuml %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;http://www.plantuml.com/plantuml/svg/SyfFqhLppCbCJbMmKiX8pSd91m00&#34;&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;Alice -&amp;gt; Bob: Authentication Request
Bob --&amp;gt; Alice: Authentication Response

Alice -&amp;gt; Bob: Another authentication Request
Alice &amp;lt;-- Bob: Another authentication Response&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;http://www.plantuml.com/plantuml/svg/Syp9J4vLqBLJSCfFib9mB2t9ICqhoKnEBCdCprC8IYqiJIqkuGBAAUW2rJY256DHLLoGdrUSoiNbY6fONZvGNP528dP38OfjT7K9g8OO3W00&#34;&gt;
&lt;h3 id=&#34;用例图&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://plantuml.com/zh/use-case-diagram&#34;&gt;用例图&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% plantuml %}
User -&amp;gt; (Start)
User --&amp;gt; (Use the application) : A small label

:Main Admin: ---&amp;gt; (Use the application) : This is\nyet another\nlabel
{% endplantuml %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;类图&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://plantuml.com/zh/class-diagram&#34;&gt;类图&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% plantuml %}
class Object &amp;lt;&amp;lt; general &amp;gt;&amp;gt;
Object &amp;lt;|--- ArrayList

note top of Object : In java, every class\nextends this one.

note &#34;This is a floating note&#34; as N1
note &#34;This note is connected\nto several objects.&#34; as N2
Object .. N2
N2 .. ArrayList

class Foo
note left: On last defined class
{% endplantuml %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;活动图&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://plantuml.com/zh/activity-diagram-beta&#34;&gt;活动图&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;{% plantuml %}
@startuml
start

if (Graphviz 已安装?) then (yes)
  :处理所有\n绘制任务;
else (no)
  :仅处理
  &lt;span class=&#34;token bold&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;token content&#34;&gt;时序图&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;__&lt;/span&gt;&lt;/span&gt; 和 &lt;span class=&#34;token bold&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;token content&#34;&gt;活动&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;__&lt;/span&gt;&lt;/span&gt; 图;
endif

stop
@enduml
{% endplantuml %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuG8pkBWoqnGqt8iI2pBACgiKdcxVz7HTvul5hVQQ2YKPgNaA6fMfnPfS2WfMJvUqF9_GzgopuTcSpfYyvxjdFEtOzcJtxgTT2wsvKdEAKnKqylB12f_iReMe1NBYuvzDt_PqL__JsVlYunMUJke1YMm1Qbe1uixU1zIQbvAPnWLqItu1bmEG0tGO0000&#34;&gt;
&lt;h3 id=&#34;组件图&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://plantuml.com/zh/component-diagram&#34;&gt;组件图&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;{% plantuml %}
@startuml

[First component]
[Another component] as Comp2
component Comp3
component [Last\ncomponent] as Comp4

@enduml
{% endplantuml %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuUAATiiiAYvHICxFBSZFIyqhYUMATipBByb8BK8IKqWiLd06yeouu69WlZ4IFzediRWa9WzJamaNbqDgNWhGDW00&#34;&gt;
&lt;h3 id=&#34;状态图&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://plantuml.com/zh/state-diagram&#34;&gt;状态图&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;{% plantuml %}
@startuml

[&lt;span class=&#34;token italic&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token content&#34;&gt;] --&amp;gt; State1
State1 --&amp;gt; [&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;*&lt;/span&gt;&lt;/span&gt;]
State1 : this is a string
State1 : this is another string

State1 -&amp;gt; State2
State2 --&amp;gt; [*]

@enduml
{% endplantuml %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuUAArefLqDMrKmWkIIn9DUI2K60He0oCQwLGaf5Ph014YGh59KMPUUbOPFBoIp9IYs3oS9EWHXj118pWHdCvfEQb09q00000&#34;&gt;
&lt;h3 id=&#34;对象图&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://plantuml.com/zh/object-diagram&#34;&gt;对象图&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;{% plantuml %}
@startuml PERT
left to right direction
&#39; Horizontal lines: --&amp;gt;, &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;--,&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&amp;lt;--&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&#39; Vertical lines: -&amp;gt;, &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;-,&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
title PERT: Project Name

map Kick.Off {
}
map task.1 {
    Start =&amp;gt; End
}
map task.2 {
    Start =&amp;gt; End
}
map task.3 {
    Start =&amp;gt; End
}
map task.4 {
    Start =&amp;gt; End
}
map task.5 {
    Start =&amp;gt; End
}
Kick.Off --&amp;gt; task.1 : Label 1
Kick.Off --&amp;gt; task.2 : Label 2
Kick.Off --&amp;gt; task.3 : Label 3
task.1 --&amp;gt; task.4
task.2 --&amp;gt; task.4
task.3 --&amp;gt; task.4
task.4 --&amp;gt; task.5 : Label 4
@enduml
{% endplantuml %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;http://www.plantuml.com/plantuml/svg/XP7DQiCm48Jl-nHpwoKEn3yNqvfS0e64r3IbTyMM4oMo5EJjfQNl7iMaIcWD5gn0yosp8tRUiN3ysMgKYxTtqh9Xi8LJ-mEZLavMhAoX9oojKr_MiD3GoiWkHnGL4pn7KNyLlkL3EbRLGqFFhrKGAzQodv6ZTFReVR4HhIHgnHahLPschqs3R_hf1HRTQJhpJ_YplKR4Iu65gHzvFCAJ4PwEy6oOXx3-rxz1Swp5JchC1cWSQ3n0aq0Jkfa5bjBDuA-I_5FIkv85nvJcqjH-kHS0&#34;&gt;
&lt;h3 id=&#34;部署图&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://plantuml.com/zh/deployment-diagram&#34;&gt;部署图&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% plantuml %}
@startuml
actor actor
agent agent
artifact artifact
boundary boundary
card card
cloud cloud
component component
control control
database database
entity entity
file file
folder folder
frame frame
interface  interface
node node
package package
queue queue
stack stack
rectangle rectangle
storage storage
usecase usecase
@enduml
{% endplantuml %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;http://www.plantuml.com/plantuml/svg/FP1B4eGm24JtVGgEubKmGSio1WV9mjiFyRTv_Gho8HaEP_Es5N1oDRe8dgKwNKIqbodAz0f6RJMpdVGA4bkc3gIYBRGJIRTTQp_fiwXLDotq938xZtm8lO9OjVX9Ts1QYb079YrPZEx0PBn5enDBTR6OJ8W-HTKir86TqnfFeIVnQzA4BY9UdrQw29FaNEUuxxFeg_MzJw8TalgqJsAGckFp_W00&#34;&gt;
&lt;h2 id=&#34;URL-卡片&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/toastsgithub/hexo-valkyr-url&#34;&gt;URL 卡片&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&#34;vkr-url-wrapper&#34;&gt;
&lt;style&gt;
.vkr-url-wrapper {
    padding: 10px;
    border-radius: 5px;
    border: 1px solid;
    border-color: #eee #ddd #bbb;
    box-shadow: rgba(0,0,0,.14) 0 1px 3px;
    margin-bottom: 10px;
    display: flex;
}
.vkr-url-wrapper .desc-wrapper &gt; hr {
    margin: 10px 0;
    height: 1px;
}
.vkr-url-wrapper .avatar {
    width: 100px;
    height: 100px;
    border: solid 1px #eee;
    box-shadow: none!important;
    margin: 0;
    margin-right: 10px;
}
.vkr-url-wrapper h2 {
    border: none;
    margin: 0;
    padding: 0;
}
.vkr-url-wrapper .desc-wrapper {
    flex: 1;
}
.vkr-url-wrapper .desc-wrapper a {
    font-size: 22px;
    font-weight: 700;
}
&lt;/style&gt;
    
        &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/toastsgithub/valkyr-ssh&#34;&gt;&lt;img class=&#34;avatar&#34; src=&#34;http://images2.dzmtoast.top/post-cover/github-logo_hub2899c31b6ca7aed8d6a218f0e752fe4_46649_1200x1200_fill_box_center_2.png&#34;&gt;&lt;/a&gt;
    
    &lt;div class=&#34;desc-wrapper&#34;&gt;
        &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/toastsgithub/valkyr-ssh&#34;&gt;valkyr ssh manager&lt;/a&gt;
        &lt;hr&gt;
        &lt;div class=&#34;desc&#34;&gt;valkyr-ssh, a simple commandline tool to help you store ssh login address&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% valkyrurl
[url=https://github.com/toastsgithub/valkyr-ssh]
[title=&#34;valkyr ssh manager&#34;]
[avatar=http://images2.dzmtoast.top/post-cover/github-logo_hub2899c31b6ca7aed8d6a218f0e752fe4_46649_1200x1200_fill_box_center_2.png]
[desc=&#34;valkyr-ssh, a simple commandline tool to help you store ssh login address&#34;]
%}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% valkyrurl [url=http://example.com] [otherOpt=value] %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;avatar&lt;/code&gt; image that describe your link (optional)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;title&lt;/code&gt; title&lt;/li&gt;
&lt;li&gt;&lt;code&gt;desc&lt;/code&gt; description&lt;/li&gt;
&lt;li&gt;&lt;code&gt;url&lt;/code&gt; destination when you click image url or title&lt;/li&gt;
&lt;li&gt;空格要用引号包裹起来！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;BILIBILI卡片&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/MaxChang3/hexo-bilibili-card&#34;&gt;BILIBILI卡片&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&#34;bvideo&#34;&gt;
    &lt;a href=&#34;//www.bilibili.com/video/BV1sr4y1K7Be&#34; target=&#34;_blank&#34;&gt;
        &lt;div class=&#34;bvideo-box&#34;&gt;
            &lt;div class=&#34;bvideo-cover&#34;&gt;
                &lt;div class=&#34;cover-default&#34;&gt;&lt;/div&gt;
                &lt;div class=&#34;bvideo-cover-layer&#34; style=&#34;background-image:url(https://images.weserv.nl/?url=http://i1.hdslb.com/bfs/archive/ee23c0ab56c3e29838f1081a76cf55c5a6199bf0.jpg)&#34;&gt;
                    &lt;i class=&#34;icon-video&#34;&gt;&lt;/i&gt;
                &lt;/div&gt;
                &lt;span class=&#34;duration&#34;&gt;52:09:00&lt;/span&gt;
            &lt;/div&gt;
            &lt;div class=&#34;bvideo-info&#34;&gt;
                &lt;p class=&#34;title&#34;&gt;【PKU】高等数学（全60讲)&lt;/p&gt;
                &lt;p class=&#34;card-status&#34;&gt;
                    &lt;span class=&#34;play-num&#34;&gt;
                        &lt;i class=&#34;fa fa-youtube-play&#34;&gt;&lt;/i&gt;
                        &lt;span&gt;26.6万&lt;/span&gt;&lt;/span&gt;
                    &lt;span&gt;
                        &lt;i class=&#34;fa fa-list-alt&#34;&gt;&lt;/i&gt;
                        &lt;span&gt;148&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;div class=&#34;partition&#34;&gt;
                    &lt;label class=&#34;card-label&#34;&gt;视频&lt;/label&gt;
                    &lt;label class=&#34;up-label&#34;&gt;&lt;/label&gt;
                    &lt;label class=&#34;up-name&#34;&gt;沉迷学习的PickleFermi&lt;/label&gt;
                &lt;/div&gt;
                &lt;div class=&#34;actions hide&#34;&gt;&lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% bilicard your_video_id %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;hexo-github-card&#34;&gt;&lt;strong&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/Gisonrg/hexo-github-card&#34;&gt;hexo-github-card&lt;/a&gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% githubCard user:your_user [repo:your_repo] [width:400] [height:200] [theme:default] [client_id:your_client_id] [client_secret:your_client_secret] [align:text-align_position] %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;{% githubCard user:appotry %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;{% githubCard user:appotry repo:hexo-github-card %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div style=&#34;text-align: center&#34;&gt;
  &lt;div class=&#34;github-card&#34; data-user=&#34;appotry&#34; data-repo=&#34;&#34; data-height=&#34;200&#34; data-width=&#34;400&#34; data-theme=&#34;default&#34; data-target=&#34;&#34; data-client-id=&#34;&#34; data-client-secret=&#34;&#34;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;script src=&#34;/github-card-lib/githubcard.js&#34;&gt;&lt;/script&gt;

&lt;div style=&#34;text-align: center&#34;&gt;
  &lt;div class=&#34;github-card&#34; data-user=&#34;appotry&#34; data-repo=&#34;docker-hexo&#34; data-height=&#34;200&#34; data-width=&#34;400&#34; data-theme=&#34;default&#34; data-target=&#34;&#34; data-client-id=&#34;&#34; data-client-secret=&#34;&#34;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;script src=&#34;/github-card-lib/githubcard.js&#34;&gt;&lt;/script&gt;

&lt;div style=&#34;text-align: center&#34;&gt;
  &lt;div class=&#34;github-card&#34; data-user=&#34;appotry&#34; data-repo=&#34;PTtool&#34; data-height=&#34;200&#34; data-width=&#34;400&#34; data-theme=&#34;default&#34; data-target=&#34;&#34; data-client-id=&#34;&#34; data-client-secret=&#34;&#34;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;script src=&#34;/github-card-lib/githubcard.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;hexo-douban-card&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/TankNee/hexo-douban-card&#34;&gt;hexo-douban-card&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&#34;douban-card-block&#34;&gt;
    &lt;a class=&#34;douban-card&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://movie.douban.com/subject/24745500&#34;&gt;
        &lt;div class=&#34;douban-card-bgimg&#34; style=&#34;background-image: url(&#39;https://images.weserv.nl/?url=https://img2.doubanio.com/view/photo/s_ratio_poster/public/p2194066391.jpg&#39;);&#34;&gt;&lt;/div&gt;
        &lt;div class=&#34;douban-card-left&#34;&gt;
            &lt;div class=&#34;douban-card-img&#34; style=&#34;background-image: url(&#39;https://images.weserv.nl/?url=https://img2.doubanio.com/view/photo/s_ratio_poster/public/p2194066391.jpg&#39;);&#34;&gt;&lt;/div&gt;
            &lt;div class=&#34;douban-card-status&#34;&gt;灯影绰约&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&#34;douban-card-right&#34;&gt;
            &lt;div class=&#34;douban-card-item&#34;&gt;&lt;span&gt;电影名: &lt;/span&gt;&lt;strong&gt;绣春刀(2014)&lt;/strong&gt;&lt;/div&gt;
            &lt;div class=&#34;douban-card-item&#34;&gt;&lt;span&gt;导演: &lt;/span&gt;&lt;span&gt;路阳&lt;/span&gt;&lt;/div&gt;
            &lt;div class=&#34;douban-card-item&#34;&gt;&lt;span&gt;主演: &lt;/span&gt;&lt;span&gt;张震/刘诗诗&lt;/span&gt;&lt;/div&gt;
            &lt;div class=&#34;douban-card-item&#34;&gt;&lt;span&gt;上映时间: &lt;/span&gt;&lt;span&gt;2014-08-07(中国大陆)&lt;/span&gt;&lt;/div&gt;
            &lt;div class=&#34;douban-card-item&#34;&gt;&lt;span&gt;评分: &lt;/span&gt;&lt;span&gt;7.6&lt;/span&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;style&gt;
    .douban-card-block {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    max-height: 400px;
}

.douban-card {
    display: flex;
    margin: 30px 10px;
    padding: 15px;
    border-radius: 15px;
    position: relative;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    color: antiquewhite;
    text-decoration: none;
}

.douban-card:hover {
    text-decoration: none;
}

.douban-card-bgimg {
    position: absolute;
    width: 115%;
    height: 115%;
    filter: blur(15px) brightness(0.6);
    background-size: 100%;
    background-position: center;
    background-repeat: no-repeat;
}

.douban-card-img {
    position: relative;
    height: 130px;
    width: 80px;
    background-size: 100%;
    background-position: center;
    background-repeat: no-repeat;
}

.douban-card-left:hover .douban-card-img {
    filter: blur(5px) brightness(0.6);
    transform: perspective(800px) rotateX(180deg);
}

.douban-card-left .douban-card-img {
    transition: all 500ms ease;
}

.douban-card-left {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.douban-card-left .douban-card-status {
    height: 130px;
    width: 80px;
    text-align: center;
    font-weight: bold;
    position: absolute;
    left: 0;
    top: 30%;
    transform: rotateX(180deg);
    backface-visibility: hidden;
    transition: all 500ms ease;
}

.douban-card-left:hover .douban-card-status {
    transform: perspective(800px) rotateX(0deg);
}

.douban-card-right {
    position: relative;
    display: flex;
    flex-direction: column;
    margin-left: 12px;
    font-size: 16px;
    font-family: &#34;Courier New&#34;, Courier, monospace;
    line-height: 1.3;
    color: antiquewhite;
}

.douban-card-item {
    margin-top: 4px;
}

&lt;/style&gt;
&lt;div class=&#34;douban-card-block&#34;&gt;
    &lt;a class=&#34;douban-card&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://book.douban.com/subject/30376420&#34;&gt;
        &lt;div class=&#34;douban-card-bgimg&#34; style=&#34;background-image: url(&#39;https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s30015279.jpg&#39;);&#34;&gt;
        &lt;/div&gt;
        &lt;div class=&#34;douban-card-left&#34;&gt;
            &lt;div class=&#34;douban-card-img&#34; style=&#34;background-image: url(&#39;https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s30015279.jpg&#39;);&#34;&gt;
            &lt;/div&gt;
            &lt;div class=&#34;douban-card-status&#34;&gt;见字如晤&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&#34;douban-card-right&#34; style=&#34;line-height: 1.7;&#34;&gt;
            &lt;div class=&#34;douban-card-item&#34;&gt;&lt;span&gt;书名: &lt;/span&gt;&lt;strong&gt;一个人生活&lt;/strong&gt;&lt;/div&gt;
            &lt;div class=&#34;douban-card-item&#34;&gt;&lt;span&gt;作者: &lt;/span&gt;&lt;span&gt;[日]谷川俊太郎&lt;/span&gt;&lt;/div&gt;
            &lt;div class=&#34;douban-card-item&#34;&gt;&lt;span&gt;出版年份: &lt;/span&gt;&lt;span&gt;2019-3&lt;/span&gt;&lt;/div&gt;
            &lt;div class=&#34;douban-card-item&#34;&gt;&lt;span&gt;评分: &lt;/span&gt;&lt;span&gt;7.1&lt;/span&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;style&gt;
    .douban-card-block {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    max-height: 400px;
}

.douban-card {
    display: flex;
    margin: 30px 10px;
    padding: 15px;
    border-radius: 15px;
    position: relative;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    color: antiquewhite;
    text-decoration: none;
}

.douban-card:hover {
    text-decoration: none;
}

.douban-card-bgimg {
    position: absolute;
    width: 115%;
    height: 115%;
    filter: blur(15px) brightness(0.6);
    background-size: 100%;
    background-position: center;
    background-repeat: no-repeat;
}

.douban-card-img {
    position: relative;
    height: 130px;
    width: 80px;
    background-size: 100%;
    background-position: center;
    background-repeat: no-repeat;
}

.douban-card-left:hover .douban-card-img {
    filter: blur(5px) brightness(0.6);
    transform: perspective(800px) rotateX(180deg);
}

.douban-card-left .douban-card-img {
    transition: all 500ms ease;
}

.douban-card-left {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.douban-card-left .douban-card-status {
    height: 130px;
    width: 80px;
    text-align: center;
    font-weight: bold;
    position: absolute;
    left: 0;
    top: 30%;
    transform: rotateX(180deg);
    backface-visibility: hidden;
    transition: all 500ms ease;
}

.douban-card-left:hover .douban-card-status {
    transform: perspective(800px) rotateX(0deg);
}

.douban-card-right {
    position: relative;
    display: flex;
    flex-direction: column;
    margin-left: 12px;
    font-size: 16px;
    font-family: &#34;Courier New&#34;, Courier, monospace;
    line-height: 1.3;
    color: antiquewhite;
}

.douban-card-item {
    margin-top: 4px;
}

&lt;/style&gt;
&lt;div class=&#34;douban-card-block&#34;&gt;
	&lt;a class=&#34;douban-card&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://music.douban.com/subject/35099703&#34;&gt;
		&lt;div class=&#34;douban-card-bgimg&#34; style=&#34;background-image: url(&#39;https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/m/public/s33667479.jpg&#39;);&#34;&gt;&lt;/div&gt;
		&lt;div class=&#34;douban-card-left&#34;&gt;
			&lt;div class=&#34;douban-card-img&#34; style=&#34;background-image: url(&#39;https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/m/public/s33667479.jpg&#39;);&#34;&gt;&lt;/div&gt;
            &lt;div class=&#34;douban-card-status&#34;&gt;余音绕梁&lt;/div&gt;
        &lt;/div&gt;
		&lt;div class=&#34;douban-card-right&#34;&gt;
			&lt;div class=&#34;douban-card-item&#34;&gt;&lt;span&gt;音乐名: &lt;/span&gt;&lt;strong&gt;María&lt;/strong&gt;&lt;/div&gt;
			&lt;div class=&#34;douban-card-item&#34;&gt;&lt;span&gt;表演者: &lt;/span&gt;&lt;span&gt;화사/华莎&lt;/span&gt;&lt;/div&gt;
			&lt;div class=&#34;douban-card-item&#34;&gt;&lt;span&gt;发行时间: &lt;/span&gt;&lt;span&gt;2020-06-30&lt;/span&gt;&lt;/div&gt;
			&lt;div class=&#34;douban-card-item&#34;&gt;&lt;span&gt;评分: &lt;/span&gt;&lt;span&gt;8.3&lt;/span&gt;&lt;/div&gt;
		&lt;/div&gt;
	&lt;/a&gt;
&lt;/div&gt;
&lt;style&gt;
    .douban-card-block {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    max-height: 400px;
}

.douban-card {
    display: flex;
    margin: 30px 10px;
    padding: 15px;
    border-radius: 15px;
    position: relative;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    color: antiquewhite;
    text-decoration: none;
}

.douban-card:hover {
    text-decoration: none;
}

.douban-card-bgimg {
    position: absolute;
    width: 115%;
    height: 115%;
    filter: blur(15px) brightness(0.6);
    background-size: 100%;
    background-position: center;
    background-repeat: no-repeat;
}

.douban-card-img {
    position: relative;
    height: 130px;
    width: 80px;
    background-size: 100%;
    background-position: center;
    background-repeat: no-repeat;
}

.douban-card-left:hover .douban-card-img {
    filter: blur(5px) brightness(0.6);
    transform: perspective(800px) rotateX(180deg);
}

.douban-card-left .douban-card-img {
    transition: all 500ms ease;
}

.douban-card-left {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.douban-card-left .douban-card-status {
    height: 130px;
    width: 80px;
    text-align: center;
    font-weight: bold;
    position: absolute;
    left: 0;
    top: 30%;
    transform: rotateX(180deg);
    backface-visibility: hidden;
    transition: all 500ms ease;
}

.douban-card-left:hover .douban-card-status {
    transform: perspective(800px) rotateX(0deg);
}

.douban-card-right {
    position: relative;
    display: flex;
    flex-direction: column;
    margin-left: 12px;
    font-size: 16px;
    font-family: &#34;Courier New&#34;, Courier, monospace;
    line-height: 1.3;
    color: antiquewhite;
}

.douban-card-item {
    margin-top: 4px;
}

&lt;/style&gt;

&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;{% douban movie 24745500 %}

{% douban book 30376420 %}

{% douban music 35099703 %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;插入音乐和视频&#34;&gt;插入音乐和视频&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/MoePlayer/hexo-tag-aplayer&#34;&gt;hexo-tag-aplayer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/MoePlayer/hexo-tag-dplayer&#34;&gt;hexo-tag-dplayer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最近做减法，去掉不必要的功能，只使用下面这个插件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/u2sb/hexo-tag-mmedia&#34;&gt;hexo-tag-mmedia&lt;/a&gt; 推荐使用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;插入音乐&#34;&gt;插入音乐&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md&#34;&gt;官方教程&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;{% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;title&lt;/code&gt; : 曲目标题&lt;/li&gt;
&lt;li&gt;&lt;code&gt;author&lt;/code&gt;: 曲目作者&lt;/li&gt;
&lt;li&gt;&lt;code&gt;url&lt;/code&gt;: 音乐文件 URL 地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;picture_url&lt;/code&gt;: (可选) 音乐对应的图片地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;narrow&lt;/code&gt;: （可选）播放器袖珍风格&lt;/li&gt;
&lt;li&gt;&lt;code&gt;autoplay&lt;/code&gt;: (可选) 自动播放，移动端浏览器暂时不支持此能&lt;/li&gt;
&lt;li&gt;&lt;code&gt;width:xxx&lt;/code&gt;: (可选) 播放器宽度 (默认: 100%)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lrc:xxx&lt;/code&gt;: （可选）歌词文件 URL #### &lt;em&gt;&lt;strong&gt;单曲附带歌词显示&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% aplayer &#34;Hotel California&#34; &#34;Camille and Kennerly&#34; &#34;https://cdn.17lai.site/media/music/Hotel%20California/01%20Hotel%20California.mp3&#34; &#34;https://cdn.17lai.site/media/music/Hotel%20California/Hotel%20California.webp&#34; &#34;lrc:https://cdn.17lai.site/media/music/Hotel%20California/01%20Hotel%20California.lrc&#34; %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;音乐播放列表&#34;&gt;&lt;strong&gt;音乐播放列表&lt;/strong&gt;&lt;/h4&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% aplayerlist %}
{
    &#34;narrow&#34;: false,                          // （可选）播放器袖珍风格
    &#34;autoplay&#34;: true,                         // （可选) 自动播放，移动端浏览器暂时不支持此功能
    &#34;mode&#34;: &#34;random&#34;,                         // （可选）曲目循环类型，有 &#39;random&#39;（随机播放）, &#39;single&#39; (单曲播放), &#39;circulation&#39; (循环播放), &#39;order&#39; (列表播放)， 默认：&#39;circulation&#39; 
    &#34;showlrc&#34;: 3,                             // （可选）歌词显示配置项，可选项有：1,2,3
    &#34;mutex&#34;: true,                            // （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停
    &#34;theme&#34;: &#34;#e6d0b2&#34;,	                      // （可选）播放器风格色彩设置，默认：#b7daff
    &#34;preload&#34;: &#34;metadata&#34;,                    // （可选）音乐文件预载入模式，可选项： &#39;none&#39; &#39;metadata&#39; &#39;auto&#39;, 默认: &#39;auto&#39;
    &#34;listmaxheight&#34;: &#34;513px&#34;,                 // (可选) 该播放列表的最大长度
    &#34;music&#34;: [
        {
            &#34;title&#34;: &#34;CoCo&#34;,
            &#34;author&#34;: &#34;Jeff Williams&#34;,
            &#34;url&#34;: &#34;caffeine.mp3&#34;,
            &#34;pic&#34;: &#34;caffeine.jpeg&#34;,
            &#34;lrc&#34;: &#34;caffeine.txt&#34;
        },
        {
            &#34;title&#34;: &#34;アイロニ&#34;,
            &#34;author&#34;: &#34;鹿乃&#34;,
            &#34;url&#34;: &#34;irony.mp3&#34;,
            &#34;pic&#34;: &#34;irony.jpg&#34;
        }
    ]
}
{% endaplayerlist %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% aplayerlist %}
{
    &#34;narrow&#34;: false,
    &#34;autoplay&#34;: true, 
    &#34;mode&#34;: &#34;random&#34;, 
    &#34;showlrc&#34;: 3, 
    &#34;mutex&#34;: true, 
    &#34;theme&#34;: &#34;#e6d0b2&#34;,
    &#34;preload&#34;: &#34;metadata&#34;, 
    &#34;listmaxheight&#34;: &#34;513px&#34;, 
    &#34;music&#34;: [
        {
            &#34;title&#34;: &#34;Hotel California&#34;,
            &#34;author&#34;: &#34;Camille and Kennerly&#34;,
            &#34;url&#34;: &#34;https://cdn.17lai.site/media/music/Hotel%20California/01%20Hotel%20California.mp3&#34;,
            &#34;pic&#34;: &#34;https://cdn.17lai.site/media/music/Hotel%20California/Hotel%20California.webp&#34;,
            &#34;lrc&#34;: &#34;https://cdn.17lai.site/media/music/Hotel%20California/01%20Hotel%20California.lrc&#34;
        },
        {
            &#34;title&#34;: &#34;Sold Out&#34;,
            &#34;author&#34;: &#34;Diamonds&#34;,
            &#34;url&#34;: &#34;https://cdn.17lai.site/media/music/Diamonds/05%20Sold%20Out.flac&#34;,
            &#34;pic&#34;: &#34;https://cdn.17lai.site/media/music/Diamonds/Diamonds.jpg&#34;
        }
    ]
}
{% endaplayerlist %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;插入视频&#34;&gt;插入视频&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;http://dplayer.js.org/guide.html&#34;&gt;官方教程&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% dplayer key=value ... %}
例：
{% dplayer &#34;url=http://www.nenu.edu.cn/_upload/article/videos/03/5f/7c999eed42e3aadc413d7f851f0e/0f50b3eb-9285-41d2-ac4d-6cc363651aad_B.mp4&#34;  &#34;autoplay=true&#34; &#34;preload=metadata&#34; &#34;hotkey=true&#34; %} &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;有关的选项列表如下:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;选项&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;默认值&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;url&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;必须值&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;视频地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;loop&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;视频循环播放&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;volume&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;0.7&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;播放器音量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;hotkey&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;开启热键&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;autoplay&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;自动播放，移动端浏览器暂时不支持此功能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;logo&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在左上角展示一个 logo，你可以通过 CSS 调整它的大小和位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;mutex&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;该选项开启时，如果同页面有其他播放，该播放器会暂停&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;highlight&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;自定义进度条提示点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;preload&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;视频文件预载入模式，可选项： &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;metadata&lt;/code&gt;, &lt;code&gt;auto&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;theme&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;#ad7a86&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;播放器风格色彩设置&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注：如果使用腾讯视频、优酷视频等在线视频网站的资源，需要先进行视频地址解析，如&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;http://old.flvurl.cn/&#34;&gt;点量视频解析&lt;/a&gt;，获取到实际的视频地址。&lt;/p&gt;
&lt;p&gt;在使用优酷或者腾讯视频时可以直接复制分享代码到文章中，如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;&amp;lt;iframe height=498 width=510 src=&#39;https://player.youku.com/embed/XMjk4ODAyMzIyOA==&#39; frameborder=0 &#39;allowfullscreen&#39;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;dplayer&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% dplayer &#34;url=http://www.nenu.edu.cn/_upload/article/videos/03/5f/7c999eed42e3aadc413d7f851f0e/0f50b3eb-9285-41d2-ac4d-6cc363651aad_B.mp4&#34;  &#34;autoplay=false&#34; &#34;preload=metadata&#34; &#34;hotkey=true&#34; %} &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;iframe&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-html&#34; data-language=&#34;html&#34;&gt;&lt;code class=&#34;language-html&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;iframe&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;498&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;510&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;https://player.youku.com/embed/XMjk4ODAyMzIyOA==&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;frameborder&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;0&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&#39;allowfullscreen&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;iframe&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;hexo-tag-mmedia使用&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/u2sb/hexo-tag-mmedia&#34;&gt;hexo-tag-mmedia&lt;/a&gt;使用&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.u2sb.com/pages/7c33e5/&#34;&gt;官方教程&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;audio&#34;&gt;&lt;strong&gt;audio&lt;/strong&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;此部分请熟读 &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.w3.org/TR/2014/REC-html5-20141028/embedded-content-0.html#the-audio-element&#34;&gt;Audio 相关介绍&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目前主题中不可用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;:&lt;/code&gt; 或 &lt;code&gt;=&lt;/code&gt; 分割。&lt;/li&gt;
&lt;li&gt;所有 &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; 标签的原生参数均可添加，只要能写进去就可以。&lt;/li&gt;
&lt;li&gt;具体能否实现相关标准，取决于客户端浏览器。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedia&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;audio&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;src:a.mp3&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedia&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;audio&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;src:https://baidu.com/a.mp3&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;autoplay:true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;video&#34;&gt;video&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;此部分请熟读 &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.w3.org/TR/2014/REC-html5-20141028/embedded-content-0.html#the-video-element&#34;&gt;Video 相关介绍&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目前主题中不可用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;:&lt;/code&gt; 或 &lt;code&gt;=&lt;/code&gt; 分割。&lt;/li&gt;
&lt;li&gt;所有 &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; 标签的原生参数均可添加，只要能写进去就可以。&lt;/li&gt;
&lt;li&gt;具体能否实现相关标准，取决于客户端浏览器。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedia&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;video&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;src:a.mp4&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedia&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;video&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;src:https://baidu.com/a.mp4&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;autoplay:true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;MetingJS&#34;&gt;&lt;strong&gt;MetingJS&lt;/strong&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;此部分请熟读 &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/metowolf/MetingJS#option&#34;&gt;MetingJS 文档&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;option&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;default&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;id&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;require&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;song id / playlist id / album id / search keyword&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;server&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;require&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;music platform: &lt;code&gt;netease&lt;/code&gt;, &lt;code&gt;tencent&lt;/code&gt;, &lt;code&gt;kugou&lt;/code&gt;, &lt;code&gt;xiami&lt;/code&gt;, &lt;code&gt;baidu&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;type&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;require&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;song&lt;/code&gt;, &lt;code&gt;playlist&lt;/code&gt;, &lt;code&gt;album&lt;/code&gt;, &lt;code&gt;search&lt;/code&gt;, &lt;code&gt;artist&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;auto&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;options&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;music link, support: &lt;code&gt;netease&lt;/code&gt;, &lt;code&gt;tencent&lt;/code&gt;, &lt;code&gt;xiami&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;fixed&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;enable fixed mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;mini&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;enable mini mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;autoplay&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;audio autoplay&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;theme&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;#2980b9&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;main color&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;loop&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;all&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;player loop play, values: ‘all’, ‘one’, ‘none’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;order&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;player play order, values: ‘list’, ‘random’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;preload&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;values: ‘none’, ‘metadata’, ‘auto’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;volume&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;0.7&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;default volume, notice that player will remember user setting, default volume will not work after user set volume themselves&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;mutex&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;prevent to play multiple player at the same time, pause other players when this player start play&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;lrc-type&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;lyric type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;list-folded&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;indicate whether list should folded at first&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;list-max-height&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;340px&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;list max height&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;storage-name&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;metingjs&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;localStorage key that store player setting&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Documentation for APlayer can be found at https://aplayer.js.org/#/home?id=options&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;单曲&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedia&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;meting&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;auto=https://y.qq.com/n/ryqq/songDetail/0005RQAO3FqG5K&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedia&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;meting&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;auto=https://y.qq.com/n/yqq/song/001RGrEX3ija5X.html&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedia&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;meting&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;server=netease&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;	&lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;type=playlist&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;	&lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;id=60198&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;Aplayer&#34;&gt;&lt;strong&gt;Aplayer&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;详细参数表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;参数&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;默认&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;name&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;audio name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;artist&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;audio artist&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;url&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;audio url&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;cover&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;audio cover&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;lrc&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;audio lrc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;theme&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;audio theme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;type&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;auto&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;audio type 可选 ‘auto’, ‘hls’, ‘normal’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;autoplay&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;false&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;autoplay&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;loop&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;‘all’&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;player loop play, values: ‘all’, ‘one’, ‘none’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;order&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;‘list’&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;player play order, values: ‘list’, ‘random’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;volume&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;0.7&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;default volume,&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;tlistMaxHeight&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;list max height&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;不在表格内的参数请使用下面 JSON 类型的参数。&lt;/p&gt;
&lt;p&gt;mmedia 插件允许在 contents 部分使用 JSON 编写配置，由于允许使用 JSON5，此项配置几乎与 APlayer 完全一致。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;单曲&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% mmedia &#34;aplayer&#34; &#34;name:Hotel California&#34; &#34;artist:Camille and Kennerly&#34; &#34;url:https://cdn.17lai.site/media/music/Hotel%20California/01%20Hotel%20California.mp3&#34; &#34;lrc:https://cdn.17lai.site/media/music/Hotel%20California/01%20Hotel%20California.lrc&#34; &#34;cover:https://cdn.17lai.site/media/music/Hotel%20California/Hotel%20California.webp&#34; &#34;volume:0.66&#34; %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/aplayer@1/dist/APlayer.min.css&#34;&gt;&lt;script src=&#34;https://cdn.jsdelivr.net/npm/aplayer@1/dist/APlayer.min.js&#34;&gt;&lt;/script&gt;&lt;div id=&#34;mmedia-oBnLvlpnWCygQCEJ&#34;&gt;&lt;/div&gt;&lt;script&gt; var oBnLvlpnWCygQCEJ_options = JSON.parse(&#39;{\&#34;lrcType\&#34;:3,\&#34;volume\&#34;:0.66,\&#34;autoplay\&#34;:false,\&#34;audio\&#34;:[{\&#34;name\&#34;:\&#34;Hotel California\&#34;,\&#34;artist\&#34;:\&#34;Camille and Kennerly\&#34;,\&#34;url\&#34;:\&#34;https://cdn.17lai.site/media/music/Hotel%20California/01%20Hotel%20California.mp3\&#34;,\&#34;lrc\&#34;:\&#34;https://cdn.17lai.site/media/music/Hotel%20California/01%20Hotel%20California.lrc\&#34;,\&#34;cover\&#34;:\&#34;https://cdn.17lai.site/media/music/Hotel%20California/Hotel%20California.webp\&#34;}]}&#39;); oBnLvlpnWCygQCEJ_options.container = document.getElementById(&#34;mmedia-oBnLvlpnWCygQCEJ&#34;); const ap_oBnLvlpnWCygQCEJ = new APlayer(oBnLvlpnWCygQCEJ_options); &lt;/script&gt;

- **列表**

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/aplayer@1/dist/APlayer.min.css&#34;&gt;&lt;script src=&#34;https://cdn.jsdelivr.net/npm/aplayer@1/dist/APlayer.min.js&#34;&gt;&lt;/script&gt;&lt;div id=&#34;mmedia-RnKstJunbNRqiSrb&#34;&gt;&lt;/div&gt;&lt;script&gt; var RnKstJunbNRqiSrb_options = JSON.parse(&#39;{\&#34;lrcType\&#34;:3,\&#34;volume\&#34;:0.8,\&#34;autoplay\&#34;:false,\&#34;audio\&#34;:[{\&#34;name\&#34;:\&#34;Hotel California\&#34;,\&#34;artist\&#34;:\&#34;Camille and Kennerly\&#34;,\&#34;url\&#34;:\&#34;https://cdn.17lai.site/media/music/Hotel%20California/01%20Hotel%20California.mp3\&#34;,\&#34;cover\&#34;:\&#34;https://cdn.17lai.site/media/music/Hotel%20California/Hotel%20California.webp\&#34;,\&#34;lrc\&#34;:\&#34;https://cdn.17lai.site/media/music/Hotel%20California/01%20Hotel%20California.lrc\&#34;,\&#34;theme\&#34;:\&#34;#ebd0c2\&#34;},{\&#34;name\&#34;:\&#34;Sold Out\&#34;,\&#34;artist\&#34;:\&#34;Diamonds\&#34;,\&#34;url\&#34;:\&#34;https://cdn.17lai.site/media/music/Diamonds/05%20Sold%20Out.flac\&#34;,\&#34;cover\&#34;:\&#34;https://cdn.17lai.site/media/music/Diamonds/Diamonds.jpg\&#34;,\&#34;theme\&#34;:\&#34;#ebd0c2\&#34;},{\&#34;name\&#34;:\&#34;The Final Bell\&#34;,\&#34;artist\&#34;:\&#34;Rocky_Original Motion Picture Score\&#34;,\&#34;url\&#34;:\&#34;https://cdn.17lai.site/media/music/Rocky_%20Original%20Motion%20Picture%20Score/12%20Bill%20Conti%20-%20The%20Final%20Bell.mp3\&#34;,\&#34;cover\&#34;:\&#34;https://cdn.17lai.site/media/music/Rocky_%20Original%20Motion%20Picture%20Score/Rocky_%20Original%20Motion%20Picture%20Score.jpg\&#34;,\&#34;theme\&#34;:\&#34;#ebd0c2\&#34;},{\&#34;name\&#34;:\&#34; Croatian Rhapsody\&#34;,\&#34;artist\&#34;:\&#34;The Piano Player\&#34;,\&#34;url\&#34;:\&#34;https://cdn.17lai.site/media/music/The%20Piano%20Player/11%20Croatian%20Rhapsody.mp3\&#34;,\&#34;cover\&#34;:\&#34;https://cdn.17lai.site/media/music/The%20Piano%20Player/The%20Piano%20Player.jpg\&#34;,\&#34;theme\&#34;:\&#34;#ebd0c2\&#34;}]}&#39;); RnKstJunbNRqiSrb_options.container = document.getElementById(&#34;mmedia-RnKstJunbNRqiSrb&#34;); const ap_RnKstJunbNRqiSrb = new APlayer(RnKstJunbNRqiSrb_options); &lt;/script&gt;
&lt;p&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedias&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;aplayer&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;autoplay:false&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;
{
  &#34;volume&#34;: 0.8,
  &#34;audio&#34;:
  [
    {
      &#34;name&#34;: &#34;name1&#34;,
      &#34;artist&#34;: &#34;artist1&#34;,
      &#34;url&#34;: &#34;url1.mp3&#34;,
      &#34;cover&#34;: &#34;cover1.jpg&#34;,
      &#34;lrc&#34;: &#34;lrc1.lrc&#34;,
      &#34;theme&#34;: &#34;#ebd0c2&#34;
    },
    {
      &#34;name&#34;: &#34;name2&#34;,
      &#34;artist&#34;: &#34;artist2&#34;,
      &#34;url&#34;: &#34;url2.mp3&#34;,
      &#34;cover&#34;: &#34;cover2.jpg&#34;,
      &#34;lrc&#34;: &#34;lrc2.lrc&#34;,
      &#34;theme&#34;: &#34;#46718b&#34;
    }
  ]
}
&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;endmmedias&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;Dplayer&#34;&gt;Dplayer&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;此部分请熟读 &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;http://dplayer.js.org/&#34;&gt;DPlayer 文档&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedia&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;dplayer&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;url:a.mp4&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedias&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;dplayer&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;flv:&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;url:https://dandoc.u2sb.com/video/%E5%AE%89%E8%A3%85/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85.mp4&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;
{
  &#34;contextmenu&#34;:
  [
    {
      text: &#34;custom1&#34;,
      link: &#34;https://github.com/DIYgod/DPlayer&#34;
    }
  ]
}
&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;endmmedias&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedia&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;dplayer&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;url:https://sample-videos.com/video123/mp4/720/big_buck_bunny_720p_1mb.mp4&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% mmedia &#34;dplayer&#34; &#34;url:https://sample-videos.com/video123/mp4/720/big_buck_bunny_720p_1mb.mp4&#34; %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedias&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;dplayer&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;
{
  video: 
  {
    url: &#34;https://sample-videos.com/video123/mp4/720/big_buck_bunny_720p_1mb.mp4&#34;
  }
}
&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;endmmedias&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;哔哩哔哩&#34;&gt;哔哩哔哩&lt;/h4&gt;
&lt;p&gt;详细参数表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;参数&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;默认&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;aid&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;aid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;bvid&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;bvid，与 aid 同时出现时以 bvid 为准&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;page&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;page&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;danmaku&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;true&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否有弹幕 ture or false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;allowfullscreen&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;allowfullscreen&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;允许全屏， allowfullscreen 或 true 允许，其他选项不允许&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;sandbox&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;见 &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.u2sb.com/pages/19d343/#%E9%85%8D%E7%BD%AE&#34;&gt;配置&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;iframe sandbox&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;width&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;100%&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;css 属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;max_width&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;850px&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;css 属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;margin&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;auto&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;css 属性&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;mmedia 插件允许在 contents 部分使用 JSON 编写配置，使用 JSON5 标准。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedia&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;bilibili&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;bvid:BV1fs411S7u7&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;西瓜视频&#34;&gt;西瓜视频&lt;/h4&gt;
&lt;p&gt;详细参数表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;参数&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;默认&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;xid&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;西瓜视频的 ID，就是那一串数字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;id&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;一般情况下不需要填写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;autoplay&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;false&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;autoplay&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;startTime&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;开始时间，秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;allowfullscreen&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;allowfullscreen&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;允许全屏， allowfullscreen 或 true 允许，其他选项不允许&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;sandbox&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;见 &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.u2sb.com/pages/a0c4a7/#%E9%85%8D%E7%BD%AE&#34;&gt;配置&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;iframe sandbox&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;width&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;100%&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;css 属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;max_width&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;850px&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;css 属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;margin&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;auto&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;css 属性&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedia&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;xigua&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;xid=6925997698269053453&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedia&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;xigua&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;xid:6925997698269053453&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;autoplay:true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedia&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;xigua&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;xid=6925997698269053453&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;ArtPlayer&#34;&gt;ArtPlayer&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;此部分请熟读 &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://artplayer.org/document/#/options&#34;&gt;ArtPlayer 文档&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;:&lt;/code&gt; 或 &lt;code&gt;=&lt;/code&gt; 分割。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;详细参数表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;参数&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;默认&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;url&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;url&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;title&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;title&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;poster&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;poster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;type&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;autoplay&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;false&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;video autoplay&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;loop&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;false&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;video loop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;volume&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;0.7&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;default volume&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;style&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;style&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;上面有一个比较特殊的参数 flv，这里单独解释一下，这个参数是用于引入其他 js 文件的，目前支持的有： &lt;code&gt;hls&lt;/code&gt; &lt;code&gt;dash&lt;/code&gt; &lt;code&gt;shaka_dash&lt;/code&gt; &lt;code&gt;flv&lt;/code&gt; &lt;code&gt;webtorrent&lt;/code&gt; ，上述参数可多个一起使用，如果后面带有 js 地址，将直接使用，否则将使用 &lt;code&gt;_config.yml&lt;/code&gt; 配置或插件默认配置，如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedia&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;artplayer&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;flv:&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;url:a.flv&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedias&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;artplayer&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;flv:&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;hls:https://cdn.jsdelivr.net/npm/hls.js/dist/hls.min.js&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;
{
  ...
}
&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;endmmedias&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedia&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;artplayer&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;url:https://dandoc.u2sb.com/video/%E5%AE%89%E8%A3%85/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85.mp4&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-twig&#34; data-language=&#34;twig&#34;&gt;&lt;code class=&#34;language-twig&#34;&gt;&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;mmedias&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;artplayer&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;flv:&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;  &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;
{
  url: &#34;https://dandoc.u2sb.com/video/%E5%AE%89%E8%A3%85/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85.mp4&#34;
}
&lt;span class=&#34;token twig language-twig&#34;&gt;&lt;span class=&#34;token delimiter punctuation&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;token tag-name keyword&#34;&gt;endmmedias&lt;/span&gt; &lt;span class=&#34;token delimiter punctuation&#34;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% mmedia &#34;artplayer&#34; &#34;url:https://sample-videos.com/video123/mp4/720/big_buck_bunny_720p_2mb.mp4&#34; %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% mmedias &#34;artplayer&#34; %}
{
  url: &#34;https://sample-videos.com/video123/mp4/720/big_buck_bunny_720p_2mb.mp4&#34;
}
{% endmmedias %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;xigua&lt;/strong&gt;&lt;/p&gt;
&lt;style&gt;.xgplayer{width: 100%; max-width: 850px; margin: auto}&lt;/style&gt;&lt;div class=&#34;xgplayer&#34;&gt;&lt;iframe class=&#34;xgplayer&#34; id=&#34;mmedia-SRiWSumaucMgkfyr&#34; src=&#34;https://www.ixigua.com/iframe/6925997698269053453?autoplay=0&amp;amp;startTime=undefined&#34; allowfullscreen=&#34;allowfullscreen&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;0&#34; framespacing=&#34;0&#34; sandbox=&#34;allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups&#34;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;script&gt; document.getElementById(&#34;mmedia-SRiWSumaucMgkfyr&#34;).style.height=document.getElementById(&#34;mmedia-SRiWSumaucMgkfyr&#34;).scrollWidth*0.7+&#34;px&#34;;
    window.onresize = function(){
      document.getElementById(&#34;mmedia-SRiWSumaucMgkfyr&#34;).style.height=document.getElementById(&#34;mmedia-SRiWSumaucMgkfyr&#34;).scrollWidth*0.7+&#34;px&#34;;
    }; &lt;/script&gt;

**artplayer**

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/artplayer@3/dist/artplayer.js&#34;&gt;&lt;/script&gt;&lt;div id=&#34;mmedia-AoFRTFsEPUgXFUyJ&#34; style=&#34;width:100%;height:650px;max-width:1200px;center&#34;&gt;&lt;/div&gt;&lt;script&gt; var AoFRTFsEPUgXFUyJ_options = JSON.parse(&#39;{\&#34;style\&#34;:\&#34;width:100%;height:650px;max-width:1200px;center\&#34;,\&#34;autoSize\&#34;:true,\&#34;autoMini\&#34;:true,\&#34;fullscreen\&#34;:true,\&#34;fullscreenWeb\&#34;:true,\&#34;url\&#34;:\&#34;https://sample-videos.com/video123/mp4/720/big_buck_bunny_720p_2mb.mp4\&#34;}&#39;); AoFRTFsEPUgXFUyJ_options.container = &#34;#mmedia-AoFRTFsEPUgXFUyJ&#34;; const art_AoFRTFsEPUgXFUyJ = new Artplayer(AoFRTFsEPUgXFUyJ_options); &lt;/script&gt;
&lt;p&gt;&lt;strong&gt;bilibili&lt;/strong&gt;&lt;/p&gt;
&lt;hr class=&#34;footnotes-sep&#34;&gt;
&lt;section class=&#34;footnotes&#34;&gt;
&lt;ol class=&#34;footnotes-list&#34;&gt;
&lt;li id=&#34;fn1&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;Here is the footnote. &lt;a href=&#34;#fnref1&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn2&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;Here&#39;s one with multiple blocks.&lt;/p&gt;
&lt;p&gt;Subsequent paragraphs are indented to show that they &lt;a href=&#34;#fnref2&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/bilicard.css&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="hexo" />
        <category term="mermaid" />
        <category term="plantuml" />
        <category term="mathjax" />
        <updated>2021-10-20T01:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.17lai.site/posts/465d2738/</id>
        <title>如何使用Traefik V2 在Ubuntu20.04 上面来做 Dockers Containers 的反向代理</title>
        <link rel="alternate" href="https://blog.17lai.site/posts/465d2738/"/>
        <content type="html">&lt;p&gt;How To Use Traefik v2 as a Reverse Proxy for Docker Containers on Ubuntu 20.04&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Traefik 适合配合Dockers swarm 做服务， Dockers portainer 做管理，ELK集群做监控日志。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1420211014200800.png&#34; alt=&#34;Traefik&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;traefik&lt;/code&gt; 与 &lt;code&gt;nginx&lt;/code&gt; 一样，是一款优秀的反向代理工具，或者叫 &lt;code&gt;Edge Router&lt;/code&gt;。至于使用它的原因则基于以下几点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无须重启即可更新配置&lt;/li&gt;
&lt;li&gt;自动的服务发现与负载均衡&lt;/li&gt;
&lt;li&gt;与 &lt;code&gt;docker&lt;/code&gt; 完美集成，基于 &lt;code&gt;container label&lt;/code&gt; 的配置&lt;/li&gt;
&lt;li&gt;漂亮的 &lt;code&gt;dashboard&lt;/code&gt; 界面&lt;/li&gt;
&lt;li&gt;&lt;code&gt;metrics&lt;/code&gt; 的支持，支持对 &lt;code&gt;prometheus&lt;/code&gt; 和 &lt;code&gt;k8s&lt;/code&gt; 集成&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; can be an efficient way to run web applications in production, but you may want to run multiple applications on the same Docker host. In this situation, you’ll need to set up a reverse proxy. This is because you only want to expose ports &lt;code&gt;80&lt;/code&gt; and &lt;code&gt;443&lt;/code&gt; to the rest of the world.&lt;/p&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://traefik.io/&#34;&gt;Traefik&lt;/a&gt; is a Docker-aware reverse proxy that includes a monitoring dashboard. Traefik v1 has been widely used for a while, and &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.digitalocean.com/community/tutorials/how-to-use-traefik-as-a-reverse-proxy-for-docker-containers-on-ubuntu-20-04&#34;&gt;you can follow this earlier tutorial to install Traefik v1&lt;/a&gt;). But in this tutorial, you’ll install and configure Traefik v2, which includes quite a few differences.&lt;/p&gt;
&lt;p&gt;The biggest difference between Traefik v1 and v2 is that &lt;em&gt;frontends&lt;/em&gt; and &lt;em&gt;backends&lt;/em&gt; were removed and their combined functionality spread out across &lt;em&gt;routers&lt;/em&gt;, &lt;em&gt;middlewares&lt;/em&gt;, and &lt;em&gt;services&lt;/em&gt;. Previously a backend did the job of making modifications to requests and getting that request to whatever was supposed to handle it. Traefik v2 provides more separation of concerns by introducing middlewares that can modify requests before sending them to a service. Middlewares make it easier to specify a single modification step that might be used by a lot of different routes so that they can be reused (such as HTTP Basic Auth, which you’ll see later). A router can also use many different middlewares.&lt;/p&gt;
&lt;p&gt;In this tutorial you’ll configure Traefik v2 to route requests to two different web application containers: a &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;http://wordpress.org/&#34;&gt;Wordpress&lt;/a&gt; container and an &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.adminer.org/&#34;&gt;Adminer&lt;/a&gt; container, each talking to a &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.mysql.com/&#34;&gt;MySQL&lt;/a&gt; database. You’ll configure Traefik to serve everything over HTTPS using &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://letsencrypt.org/&#34;&gt;Let’s Encrypt&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;Prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;To complete this tutorial, you will need the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.digitalocean.com/products/linux-distribution/ubuntu/&#34;&gt;One Ubuntu 20.04 server&lt;/a&gt; with a sudo non-root user and a firewall. You can set this up by following our &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-20-04&#34;&gt;Ubuntu 20.04 initial server setup guide&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Docker installed on your server, which you can accomplish by following &lt;strong&gt;Steps 1 and 2&lt;/strong&gt; of &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-20-04&#34;&gt;How to Install and Use Docker on Ubuntu 20.04&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Docker Compose installed using the instructions from &lt;strong&gt;Step 1&lt;/strong&gt; of &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-compose-on-ubuntu-20-04&#34;&gt;How to Install Docker Compose on Ubuntu 20.04&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A domain and three A records, &lt;code&gt;db-admin.your_domain&lt;/code&gt;, &lt;code&gt;blog.your_domain&lt;/code&gt; and &lt;code&gt;monitor.your_domain&lt;/code&gt;. Each should point to the IP address of your server. You can learn how to point domains to DigitalOcean Droplets by reading through &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.digitalocean.com/docs/networking/dns/&#34;&gt;DigitalOcean’s Domains and DNS documentation&lt;/a&gt;. Throughout this tutorial, substitute your domain for &lt;code&gt;your_domain&lt;/code&gt; in the configuration files and examples.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Step-1-—-Configuring-and-Running-Traefik&#34;&gt;Step 1 — Configuring and Running Traefik&lt;/h2&gt;
&lt;p&gt;The Traefik project has an &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://hub.docker.com/_/traefik&#34;&gt;official Docker image&lt;/a&gt;, so you will use that to run Traefik in a Docker container.&lt;/p&gt;
&lt;p&gt;But before you get your Traefik container up and running, you need to create a configuration file and set up an encrypted password so you can access the monitoring dashboard.&lt;/p&gt;
&lt;p&gt;You’ll use the &lt;code&gt;htpasswd&lt;/code&gt; utility to create this encrypted password. First, install the utility, which is included in the &lt;code&gt;apache2-utils&lt;/code&gt; package:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt-get&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; apache2-utils&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then generate the password with &lt;code&gt;htpasswd&lt;/code&gt;. Substitute &lt;code&gt;secure_password&lt;/code&gt; with the password you’d like to use for the Traefik admin user:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;htpasswd -nb admin secure_password&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output from the program will look like this:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;Outputadmin:$apr1$ruca84Hq$mbjdMZBAG.KWn7vfN/SNK/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You’ll use this output in the Traefik configuration file to set up HTTP Basic Authentication for the Traefik health check and monitoring dashboard. Copy the entire output line so you can paste it later.&lt;/p&gt;
&lt;p&gt;To configure the Traefik server, you’ll create two new configuration files called &lt;code&gt;traefik.toml&lt;/code&gt; and &lt;code&gt;traefik_dynamic.toml&lt;/code&gt; using the TOML format. &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/toml-lang/toml&#34;&gt;TOML&lt;/a&gt; is a configuration language similar to INI files, but standardized. &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://docs.traefik.io/providers/overview/&#34;&gt;These files let us configure the Traefik server and various integrations&lt;/a&gt;, or &lt;code&gt;providers&lt;/code&gt;, that you want to use. In this tutorial, you will use three of Traefik’s available providers: &lt;code&gt;api&lt;/code&gt;, &lt;code&gt;docker&lt;/code&gt;, and &lt;code&gt;acme&lt;/code&gt;. The last of these, &lt;code&gt;acme&lt;/code&gt;, supports TLS certificates using Let’s Encrypt.&lt;/p&gt;
&lt;p&gt;Create and open &lt;code&gt;traefik.toml&lt;/code&gt; using &lt;code&gt;nano&lt;/code&gt; or your preferred text editor:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;nano&lt;/span&gt; traefik.toml&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;First, you want to specify the ports that Traefik should listen on using the &lt;code&gt;entryPoints&lt;/code&gt; section of your config file. You want two because you want to listen on port &lt;code&gt;80&lt;/code&gt; and &lt;code&gt;443&lt;/code&gt;. Let’s call these &lt;code&gt;web&lt;/code&gt; (port &lt;code&gt;80&lt;/code&gt;) and &lt;code&gt;websecure&lt;/code&gt; (port &lt;code&gt;443&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Add the following configurations:&lt;/p&gt;
&lt;p&gt;traefik.toml&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-toml&#34; data-language=&#34;toml&#34;&gt;&lt;code class=&#34;language-toml&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;entryPoints&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;entryPoints.web&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;token key property&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;:80&#34;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;entryPoints.web.http.redirections.entryPoint&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
      &lt;span class=&#34;token key property&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;websecure&#34;&lt;/span&gt;
      &lt;span class=&#34;token key property&#34;&gt;scheme&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;https&#34;&lt;/span&gt;

  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;entryPoints.websecure&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;token key property&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;:443&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that you are also automatically redirecting traffic to be handled over TLS.&lt;/p&gt;
&lt;p&gt;Next, configure the Traefik &lt;code&gt;api&lt;/code&gt;, which gives you access to both the API and your dashboard interface. The heading of &lt;code&gt;[api]&lt;/code&gt; is all that you need because the dashboard is then enabled by default, but you’ll be explicit for the time being.&lt;/p&gt;
&lt;p&gt;Add the following code:&lt;/p&gt;
&lt;p&gt;traefik.toml&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-toml&#34; data-language=&#34;toml&#34;&gt;&lt;code class=&#34;language-toml&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;dashboard&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To finish securing your web requests you want to use Let’s Encrypt to generate valid TLS certificates. Traefik v2 supports Let’s Encrypt out of the box and you can configure it by creating a &lt;em&gt;certificates resolver&lt;/em&gt; of the type &lt;code&gt;acme&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Let’s configure your certificates resolver now using the name &lt;code&gt;lets-encrypt&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;traefik.toml&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-toml&#34; data-language=&#34;toml&#34;&gt;&lt;code class=&#34;language-toml&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;certificatesResolvers.lets-encrypt.acme&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;email&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your_email@your_domain&#34;&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;storage&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;acme.json&#34;&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;certificatesResolvers.lets-encrypt.acme.tlsChallenge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This section is called &lt;code&gt;acme&lt;/code&gt; because &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/ietf-wg-acme/acme/&#34;&gt;ACME&lt;/a&gt; is the name of the protocol used to communicate with Let’s Encrypt to manage certificates. The Let’s Encrypt service requires registration with a valid email address, so to have Traefik generate certificates for your hosts, set the &lt;code&gt;email&lt;/code&gt; key to your email address. You then specify that you will store the information that you will receive from Let’s Encrypt in a JSON file called &lt;code&gt;acme.json&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;acme.tlsChallenge&lt;/code&gt; section allows us to specify how Let’s Encrypt can verify that the certificate. You’re configuring it to serve a file as part of the challenge over port &lt;code&gt;443&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Finally, you need to configure Traefik to work with Docker.&lt;/p&gt;
&lt;p&gt;Add the following configurations:&lt;/p&gt;
&lt;p&gt;traefik.toml&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-toml&#34; data-language=&#34;toml&#34;&gt;&lt;code class=&#34;language-toml&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;providers.docker&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;watch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;network&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;web&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;docker&lt;/code&gt; provider enables Traefik to act as a proxy in front of Docker containers. You’ve configured the provider to &lt;code&gt;watch&lt;/code&gt; for new containers on the &lt;code&gt;web&lt;/code&gt; network, which you’ll create soon.&lt;/p&gt;
&lt;p&gt;Our final configuration uses the &lt;code&gt;file&lt;/code&gt; provider. With Traefik v2, static and dynamic configurations can’t be mixed and matched. To get around this, you will use &lt;code&gt;traefik.toml&lt;/code&gt; to define your static configurations and then keep your dynamic configurations in another file, which you will call &lt;code&gt;traefik_dynamic.toml&lt;/code&gt;. Here you are using the &lt;code&gt;file&lt;/code&gt; provider to tell Traefik that it should read in dynamic configurations from a different file.&lt;/p&gt;
&lt;p&gt;Add the following &lt;code&gt;file&lt;/code&gt; provider:&lt;/p&gt;
&lt;p&gt;traefik.toml&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;providers.file&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  filename &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;traefik_dynamic.toml&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Your completed &lt;code&gt;traefik.toml&lt;/code&gt; will look like this:&lt;/p&gt;
&lt;p&gt;traefik.toml&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-toml&#34; data-language=&#34;toml&#34;&gt;&lt;code class=&#34;language-toml&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;entryPoints&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;entryPoints.web&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;token key property&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;:80&#34;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;entryPoints.web.http.redirections.entryPoint&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
      &lt;span class=&#34;token key property&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;websecure&#34;&lt;/span&gt;
      &lt;span class=&#34;token key property&#34;&gt;scheme&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;https&#34;&lt;/span&gt;

  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;entryPoints.websecure&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;token key property&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;:443&#34;&lt;/span&gt;

&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;dashboard&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;

&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;certificatesResolvers.lets-encrypt.acme&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;email&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your_email@your_domain&#34;&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;storage&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;acme.json&#34;&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;certificatesResolvers.lets-encrypt.acme.tlsChallenge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;providers.docker&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;watch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;network&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;web&#34;&lt;/span&gt;

&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;providers.file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;filename&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;traefik_dynamic.toml&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Save and close the file.&lt;/p&gt;
&lt;p&gt;Now let’s create &lt;code&gt;traefik_dynamic.toml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The dynamic configuration values that you need to keep in their own file are the &lt;em&gt;middlewares&lt;/em&gt; and the &lt;em&gt;routers&lt;/em&gt;. To put your dashboard behind a password you need to customize the API’s &lt;em&gt;router&lt;/em&gt; and configure a &lt;em&gt;middleware&lt;/em&gt; to handle HTTP basic authentication. Let’s start by setting up the middleware.&lt;/p&gt;
&lt;p&gt;The middleware is configured on a per-protocol basis and since you’re working with HTTP you’ll specify it as a section chained off of &lt;code&gt;http.middlewares&lt;/code&gt;. Next comes the name of your middleware so that you can reference it later, followed by the type of middleware that it is, which will be &lt;code&gt;basicAuth&lt;/code&gt; in this case. Let’s call your middleware &lt;code&gt;simpleAuth&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Create and open a new file called &lt;code&gt;traefik_dynamic.toml&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;nano&lt;/span&gt; traefik_dynamic.toml&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add the following code. This is where you’ll paste the output from the &lt;code&gt;htpasswd&lt;/code&gt; command:&lt;/p&gt;
&lt;p&gt;traefik_dynamic.toml&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-toml&#34; data-language=&#34;toml&#34;&gt;&lt;code class=&#34;language-toml&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;http.middlewares.simpleAuth.basicAuth&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;users&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;admin:$apr1$ruca84Hq$mbjdMZBAG.KWn7vfN/SNK/&#34;&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To configure the router for the api you’ll once again be chaining off of the protocol name, but instead of using &lt;code&gt;http.middlewares&lt;/code&gt;, you’ll use &lt;code&gt;http.routers&lt;/code&gt; followed by the name of the router. In this case, the &lt;code&gt;api&lt;/code&gt; provides its own named router that you can configure by using the &lt;code&gt;[http.routers.api]&lt;/code&gt; section. You’ll configure the domain that you plan on using with your dashboard also by setting the &lt;code&gt;rule&lt;/code&gt; key using a host match, the entrypoint to use &lt;code&gt;websecure&lt;/code&gt;, and the middlewares to include &lt;code&gt;simpleAuth&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add the following configurations:&lt;/p&gt;
&lt;p&gt;traefik_dynamic.toml&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-toml&#34; data-language=&#34;toml&#34;&gt;&lt;code class=&#34;language-toml&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;http.routers.api&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;rule&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Host(`monitor.your_domain`)&#34;&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;entrypoints&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;websecure&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;middlewares&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;simpleAuth&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;service&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;api@internal&#34;&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;http.routers.api.tls&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;token key property&#34;&gt;certResolver&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;lets-encrypt&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;web&lt;/code&gt; entry point handles port &lt;code&gt;80&lt;/code&gt;, while the &lt;code&gt;websecure&lt;/code&gt; entry point uses port &lt;code&gt;443&lt;/code&gt; for TLS/SSL. You automatically redirect all of the traffic on port &lt;code&gt;80&lt;/code&gt; to the &lt;code&gt;websecure&lt;/code&gt; entry point to force secure connections for all requests.&lt;/p&gt;
&lt;p&gt;Notice the last three lines here configure a &lt;em&gt;service&lt;/em&gt;, enable tls, and configure &lt;code&gt;certResolver&lt;/code&gt; to &lt;code&gt;&#34;lets-encrypt&#34;&lt;/code&gt;. Services are the final step to determining where a request is finally handled. The &lt;code&gt;api@internal&lt;/code&gt; service is a built-in service that sits behind the API that you expose. Just like routers and middlewares, services can be configured in this file, but you won’t need to do that to achieve your desired result.&lt;/p&gt;
&lt;p&gt;Your completed &lt;code&gt;traefik_dynamic.toml&lt;/code&gt; file will look like this:&lt;/p&gt;
&lt;p&gt;traefik_dynamic.toml&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-toml&#34; data-language=&#34;toml&#34;&gt;&lt;code class=&#34;language-toml&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;http.middlewares.simpleAuth.basicAuth&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;users&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;admin:$apr1$ruca84Hq$mbjdMZBAG.KWn7vfN/SNK/&#34;&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;http.routers.api&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;rule&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Host(`monitor.your_domain`)&#34;&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;entrypoints&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;websecure&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;middlewares&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;simpleAuth&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token key property&#34;&gt;service&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;api@internal&#34;&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token table class-name&#34;&gt;http.routers.api.tls&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;token key property&#34;&gt;certResolver&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;lets-encrypt&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Save the file and exit the editor.&lt;/p&gt;
&lt;p&gt;With these configurations in place, you will now start Traefik.&lt;/p&gt;
&lt;h2 id=&#34;Step-2-–-Running-the-Traefik-Container&#34;&gt;Step 2 – Running the Traefik Container&lt;/h2&gt;
&lt;p&gt;In this step you will create a Docker network for the proxy to share with containers. You will then access the Traefik dashboard. The Docker network is necessary so that you can use it with applications that are run using Docker Compose.&lt;/p&gt;
&lt;p&gt;Create a new Docker network called &lt;code&gt;web&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; network create web&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When the Traefik container starts, you will add it to this network. Then you can add additional containers to this network later for Traefik to proxy to.&lt;/p&gt;
&lt;p&gt;Next, create an empty file that will hold your Let’s Encrypt information. You’ll share this into the container so Traefik can use it:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;touch&lt;/span&gt; acme.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Traefik will only be able to use this file if the root user inside of the container has unique read and write access to it. To do this, lock down the permissions on &lt;code&gt;acme.json&lt;/code&gt; so that only the owner of the file has read and write permission.&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt; acme.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once the file gets passed to Docker, the owner will automatically change to the &lt;strong&gt;root&lt;/strong&gt; user inside the container.&lt;/p&gt;
&lt;p&gt;Finally, create the Traefik container with this command:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; run -d &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  -v /var/run/docker.sock:/var/run/docker.sock &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  -v &lt;span class=&#34;token environment constant&#34;&gt;$PWD&lt;/span&gt;/traefik.toml:/traefik.toml &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  -v &lt;span class=&#34;token environment constant&#34;&gt;$PWD&lt;/span&gt;/traefik_dynamic.toml:/traefik_dynamic.toml &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  -v &lt;span class=&#34;token environment constant&#34;&gt;$PWD&lt;/span&gt;/acme.json:/acme.json &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  -p &lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;:80 &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  -p &lt;span class=&#34;token number&#34;&gt;443&lt;/span&gt;:443 &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  --network web &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  --name traefik &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  traefik:v2.2&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This command is a little long. Let’s break it down.&lt;/p&gt;
&lt;p&gt;You use the &lt;code&gt;-d&lt;/code&gt; flag to run the container in the background as a daemon. You then share your &lt;code&gt;docker.sock&lt;/code&gt; file into the container so that the Traefik process can listen for changes to containers. You also share the &lt;code&gt;traefik.toml&lt;/code&gt; and &lt;code&gt;traefik_dynamic.toml&lt;/code&gt; configuration files into the container, as well as &lt;code&gt;acme.json&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Next, you map ports &lt;code&gt;:80&lt;/code&gt; and &lt;code&gt;:443&lt;/code&gt; of your Docker host to the same ports in the Traefik container so Traefik receives all HTTP and HTTPS traffic to the server.&lt;/p&gt;
&lt;p&gt;You set the network of the container to &lt;code&gt;web&lt;/code&gt;, and you name the container &lt;code&gt;traefik&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Finally, you use the &lt;code&gt;traefik:v2.2&lt;/code&gt; image for this container so that you can guarantee that you’re not running a completely different version than this tutorial is written for.&lt;/p&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://docs.docker.com/engine/reference/builder/#entrypoint&#34;&gt;A Docker image’s &lt;code&gt;ENTRYPOINT&lt;/code&gt; is a command that always runs when a container is created from the image&lt;/a&gt;. In this case, the command is the &lt;code&gt;traefik&lt;/code&gt; binary within the container. You can pass additional arguments to that command when you launch the container, but you’ve configured all of your settings in the &lt;code&gt;traefik.toml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;With the container started, you now have a dashboard you can access to see the health of your containers. You can also use this dashboard to visualize the routers, services, and middlewares that Traefik has registered. You can try to access the monitoring dashboard by pointing your browser to &lt;code&gt;https://monitor.your_domain/dashboard/&lt;/code&gt; (the trailing &lt;code&gt;/&lt;/code&gt; is required).&lt;/p&gt;
&lt;p&gt;You will be prompted for your username and password, which are &lt;strong&gt;admin&lt;/strong&gt; and the password you configured in Step 1.&lt;/p&gt;
&lt;p&gt;Once logged in, you’ll see the Traefik interface:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1420211014200207.png&#34; alt=&#34;Empty Traefik dashboard&#34;&gt;&lt;/p&gt;
&lt;p&gt;You will notice that there are already some routers and services registered, but those are the ones that come with Traefik and the router configuration that you wrote for the API.&lt;/p&gt;
&lt;p&gt;You now have your Traefik proxy running, and you’ve configured it to work with Docker and monitor other containers. In the next step you will start some containers for Traefik to proxy.&lt;/p&gt;
&lt;h2 id=&#34;Step-3-—-Registering-Containers-with-Traefik&#34;&gt;Step 3 — Registering Containers with Traefik&lt;/h2&gt;
&lt;p&gt;With the Traefik container running, you’re ready to run applications behind it. Let’s launch the following containers behind Traefik:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A blog using the &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://hub.docker.com/_/wordpress/&#34;&gt;official WordPress image&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A database management server using the &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://hub.docker.com/_/adminer/&#34;&gt;official Adminer image&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You’ll manage both of these applications with Docker Compose using a &lt;code&gt;docker-compose.yml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;Create and open the &lt;code&gt;docker-compose.yml&lt;/code&gt; file in your editor:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;nano&lt;/span&gt; docker-compose.yml&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add the following lines to the file to specify the version and the networks you’ll use:&lt;/p&gt;
&lt;p&gt;docker-compose.yml&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-yaml&#34; data-language=&#34;yaml&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;&lt;span class=&#34;token key atrule&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;3&#34;&lt;/span&gt;

&lt;span class=&#34;token key atrule&#34;&gt;networks&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token key atrule&#34;&gt;web&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;
  &lt;span class=&#34;token key atrule&#34;&gt;internal&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You use Docker Compose version &lt;code&gt;3&lt;/code&gt; because it’s the newest major version of the Compose file format.&lt;/p&gt;
&lt;p&gt;For Traefik to recognize your applications, they must be part of the same network, and since you created the network manually, you pull it in by specifying the network name of &lt;code&gt;web&lt;/code&gt; and setting &lt;code&gt;external&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. Then you define another network so that you can connect your exposed containers to a database container that you won’t expose through Traefik. You’ll call this network &lt;code&gt;internal&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Next, you’ll define each of your &lt;code&gt;services&lt;/code&gt;, one at a time. Let’s start with the &lt;code&gt;blog&lt;/code&gt; container, which you’ll base on the official WordPress image. Add this configuration to the bottom of the file:&lt;/p&gt;
&lt;p&gt;docker-compose.yml&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-yaml&#34; data-language=&#34;yaml&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;

&lt;span class=&#34;token key atrule&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token key atrule&#34;&gt;blog&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; wordpress&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;4.9.8&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;apache
    &lt;span class=&#34;token key atrule&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token key atrule&#34;&gt;WORDPRESS_DB_PASSWORD&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.http.routers.blog.rule=Host(`blog.your_domain`)
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.http.routers.blog.tls=true
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.http.routers.blog.tls.certresolver=lets&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;encrypt
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.port=80
    &lt;span class=&#34;token key atrule&#34;&gt;networks&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; internal
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; web
    &lt;span class=&#34;token key atrule&#34;&gt;depends_on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; mysql&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;environment&lt;/code&gt; key lets you specify environment variables that will be set inside of the container. By not setting a value for &lt;code&gt;WORDPRESS_DB_PASSWORD&lt;/code&gt;, you’re telling Docker Compose to get the value from your shell and pass it through when you create the container. You will define this environment variable in your shell before starting the containers. This way you don’t hard-code passwords into the configuration file.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;labels&lt;/code&gt; section is where you specify configuration values for Traefik. Docker labels don’t do anything by themselves, but Traefik reads these so it knows how to treat containers. Here’s what each of these labels does:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;traefik.http.routers.adminer.rule=Host(`````blog.your_domain`````)&lt;/code&gt; creates a new &lt;em&gt;router&lt;/em&gt; for your container and then specifies the routing rule used to determine if a request matches this container.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;traefik.routers.custom_name.tls=true&lt;/code&gt; specifies that this router should use TLS.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;traefik.routers.custom_name.tls.certResolver=lets-encrypt&lt;/code&gt; specifies that the certificates resolver that you created earlier called &lt;code&gt;lets-encrypt&lt;/code&gt; should be used to get a certificate for this route.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;traefik.port&lt;/code&gt; specifies the exposed port that Traefik should use to route traffic to this container.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With this configuration, all traffic sent to your Docker host on port &lt;code&gt;80&lt;/code&gt; or &lt;code&gt;443&lt;/code&gt; with the domain of &lt;code&gt;blog.your_domain&lt;/code&gt; will be routed to the &lt;code&gt;blog&lt;/code&gt; container.&lt;/p&gt;
&lt;p&gt;You assign this container to two different networks so that Traefik can find it via the &lt;code&gt;web&lt;/code&gt; network and it can communicate with the database container through the &lt;code&gt;internal&lt;/code&gt; network.&lt;/p&gt;
&lt;p&gt;Lastly, the &lt;code&gt;depends_on&lt;/code&gt; key tells Docker Compose that this container needs to start &lt;em&gt;after&lt;/em&gt; its dependencies are running. Since WordPress needs a database to run, you must run your &lt;code&gt;mysql&lt;/code&gt; container before starting your &lt;code&gt;blog&lt;/code&gt; container.&lt;/p&gt;
&lt;p&gt;Next, configure the MySQL service:&lt;/p&gt;
&lt;p&gt;docker-compose.yml&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-yaml&#34; data-language=&#34;yaml&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;&lt;span class=&#34;token key atrule&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;token key atrule&#34;&gt;mysql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; mysql&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5.7&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token key atrule&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;networks&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; internal
    &lt;span class=&#34;token key atrule&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.enable=false&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You’re using the official MySQL 5.7 image for this container. You’ll notice that you’re once again using an &lt;code&gt;environment&lt;/code&gt; item without a value. The &lt;code&gt;MYSQL_ROOT_PASSWORD&lt;/code&gt; and &lt;code&gt;WORDPRESS_DB_PASSWORD&lt;/code&gt; variables will need to be set to the same value to make sure that your WordPress container can communicate with the MySQL. You don’t want to expose the &lt;code&gt;mysql&lt;/code&gt; container to Traefik or the outside world, so you’re only assigning this container to the &lt;code&gt;internal&lt;/code&gt; network. Since Traefik has access to the Docker socket, the process will still expose a router for the &lt;code&gt;mysql&lt;/code&gt; container by default, so you’ll add the label &lt;code&gt;traefik.enable=false&lt;/code&gt; to specify that Traefik should not expose this container.&lt;/p&gt;
&lt;p&gt;Finally, define the Adminer container:&lt;/p&gt;
&lt;p&gt;docker-compose.yml&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-yaml&#34; data-language=&#34;yaml&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;&lt;span class=&#34;token key atrule&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;token key atrule&#34;&gt;adminer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; adminer&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;4.6.3&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;standalone
    &lt;span class=&#34;token key atrule&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.http.routers.adminer.rule=Host(`db&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;admin.your_domain`)
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.http.routers.adminer.tls=true
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.http.routers.adminer.tls.certresolver=lets&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;encrypt
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.port=8080
    &lt;span class=&#34;token key atrule&#34;&gt;networks&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; internal
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; web
    &lt;span class=&#34;token key atrule&#34;&gt;depends_on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; mysql&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This container is based on the official Adminer image. The &lt;code&gt;network&lt;/code&gt; and &lt;code&gt;depends_on&lt;/code&gt; configuration for this container exactly match what you’re using for the &lt;code&gt;blog&lt;/code&gt; container.&lt;/p&gt;
&lt;p&gt;The line &lt;code&gt;traefik.http.routers.adminer.rule=Host(`````db-admin.your_domain`````)&lt;/code&gt; tells Traefik to examine the host requested. If it matches the pattern of &lt;code&gt;db-admin.your_domain&lt;/code&gt;, Traefik will route the traffic to the &lt;code&gt;adminer&lt;/code&gt; container over port &lt;code&gt;8080&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Your completed &lt;code&gt;docker-compose.yml&lt;/code&gt; file will look like this:&lt;/p&gt;
&lt;p&gt;docker-compose.yml&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-yaml&#34; data-language=&#34;yaml&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;&lt;span class=&#34;token key atrule&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;3&#34;&lt;/span&gt;

&lt;span class=&#34;token key atrule&#34;&gt;networks&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token key atrule&#34;&gt;web&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;
  &lt;span class=&#34;token key atrule&#34;&gt;internal&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt;

&lt;span class=&#34;token key atrule&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token key atrule&#34;&gt;blog&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; wordpress&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;4.9.8&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;apache
    &lt;span class=&#34;token key atrule&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token key atrule&#34;&gt;WORDPRESS_DB_PASSWORD&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.http.routers.blog.rule=Host(`blog.your_domain`)
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.http.routers.blog.tls=true
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.http.routers.blog.tls.certresolver=lets&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;encrypt
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.port=80
    &lt;span class=&#34;token key atrule&#34;&gt;networks&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; internal
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; web
    &lt;span class=&#34;token key atrule&#34;&gt;depends_on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; mysql

  &lt;span class=&#34;token key atrule&#34;&gt;mysql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; mysql&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5.7&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token key atrule&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;networks&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; internal
    &lt;span class=&#34;token key atrule&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.enable=false

  &lt;span class=&#34;token key atrule&#34;&gt;adminer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; adminer&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;4.6.3&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;standalone
    &lt;span class=&#34;token key atrule&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token key atrule&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.http.routers.adminer.rule=Host(`db&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;admin.your_domain`)
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.http.routers.adminer.tls=true
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.http.routers.adminer.tls.certresolver=lets&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;encrypt
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; traefik.port=8080
    &lt;span class=&#34;token key atrule&#34;&gt;networks&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; internal
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; web
    &lt;span class=&#34;token key atrule&#34;&gt;depends_on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; mysql&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Save the file and exit the text editor.&lt;/p&gt;
&lt;p&gt;Next, set values in your shell for the &lt;code&gt;WORDPRESS_DB_PASSWORD&lt;/code&gt; and &lt;code&gt;MYSQL_ROOT_PASSWORD&lt;/code&gt; variables:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;WORDPRESS_DB_PASSWORD&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;secure_database_password
&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;secure_database_password&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Substitute &lt;code&gt;secure_database_password&lt;/code&gt; with your desired database password. Remember to use the same password for both &lt;code&gt;WORDPRESS_DB_PASSWORD&lt;/code&gt; and &lt;code&gt;MYSQL_ROOT_PASSWORD&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With these variables set, run the containers using &lt;code&gt;docker-compose&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;docker-compose&lt;/span&gt; up -d&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now watch the Traefik admin dashboard while it populates.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1420211014200110.png&#34; alt=&#34;Populated Traefik dashboard&#34;&gt;&lt;/p&gt;
&lt;p&gt;If you explore the &lt;strong&gt;Routers&lt;/strong&gt; section you will find routers for &lt;code&gt;adminer&lt;/code&gt; and &lt;code&gt;blog&lt;/code&gt; configured with TLS:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1420211014200142.png&#34; alt=&#34;HTTP Routers w/ TLS&#34;&gt;&lt;/p&gt;
&lt;p&gt;Navigate to &lt;code&gt;blog.your_domain&lt;/code&gt;, substituting &lt;code&gt;your_domain&lt;/code&gt; with your domain. You’ll be redirected to a TLS connection and you can now complete the WordPress setup:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1420211014200114.png&#34; alt=&#34;WordPress setup screen&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now access Adminer by visiting &lt;code&gt;db-admin.your_domain&lt;/code&gt; in your browser, again substituting &lt;code&gt;your_domain&lt;/code&gt; with your domain. The &lt;code&gt;mysql&lt;/code&gt; container isn’t exposed to the outside world, but the &lt;code&gt;adminer&lt;/code&gt; container has access to it through the &lt;code&gt;internal&lt;/code&gt; Docker network that they share using the &lt;code&gt;mysql&lt;/code&gt; container name as a hostname.&lt;/p&gt;
&lt;p&gt;On the Adminer login screen, enter &lt;code&gt;root&lt;/code&gt; for &lt;strong&gt;Username&lt;/strong&gt;, enter &lt;code&gt;mysql&lt;/code&gt; for &lt;strong&gt;Server&lt;/strong&gt;, and enter the value you set for &lt;code&gt;MYSQL_ROOT_PASSWORD&lt;/code&gt; for the &lt;strong&gt;Password&lt;/strong&gt;. Leave &lt;strong&gt;Database&lt;/strong&gt; empty. Now press &lt;strong&gt;Login&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Once logged in, you’ll see the Adminer user interface.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1420211014200132.png&#34; alt=&#34;Adminer connected to the MySQL database&#34;&gt;&lt;/p&gt;
&lt;p&gt;Both sites are now working, and you can use the dashboard at &lt;code&gt;monitor.your_domain&lt;/code&gt; to keep an eye on your applications.&lt;/p&gt;
&lt;h2 id=&#34;Conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In this tutorial, you configured Traefik v2 to proxy requests to other applications in Docker containers.&lt;/p&gt;
&lt;p&gt;Traefik’s declarative configuration at the application container level makes it easy to configure more services, and there’s no need to restart the &lt;code&gt;traefik&lt;/code&gt; container when you add new applications to proxy traffic to since Traefik notices the changes immediately through the Docker socket file it’s monitoring.&lt;/p&gt;
&lt;p&gt;To learn more about what you can do with Traefik v2, head over to &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://doc.traefik.io/traefik/&#34;&gt;the official Traefik documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;服务集群&#34;&gt;服务集群&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;k8s 太重了,虽然也有 k3s 之类的轻量级 k8s 解决方案，不过我还是选择了原生的 docker swarm。VPS 安装好 Docker 之后，不需要额外安装软件，就可以马上建立集群。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 集群初始化，节点成为 manager 节点&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; swarm init --advertise-addr&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;x.x.x.x

&lt;span class=&#34;token comment&#34;&gt;# 集群丢失 Leader 时，强制重建集群&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; swarm init --advertise-addr&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;x.x.x.x --force-new-cluster

&lt;span class=&#34;token comment&#34;&gt;# 获取作为 worker 节点加入集群的命令&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; swarm join-token worker

&lt;span class=&#34;token comment&#34;&gt;# 获取作为 manager 节点加入集群的命令&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; swarm join-token manager

&lt;span class=&#34;token comment&#34;&gt;# 加入集群&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; swarm &lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt; --token xxx x.x.x.x:xxx --advertise-addr&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;x.x.x.x
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;参考：-2&#34;&gt;参考：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.digitalocean.com/community/tutorials/how-to-use-traefik-v2-as-a-reverse-proxy-for-docker-containers-on-ubuntu-20-04&#34;&gt;digitalocean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://shanyue.tech/op/traefik.html&#34;&gt;shanyue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/bilicard.css&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="docker" />
        <category term="traefik" />
        <category term="proxy" />
        <category term="swarm" />
        <category term="ubuntu" />
        <updated>2021-10-14T11:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.17lai.site/posts/80906b88/</id>
        <title>http 错误代码表</title>
        <link rel="alternate" href="https://blog.17lai.site/posts/80906b88/"/>
        <content type="html">&lt;p&gt;所有 HTTP 状态代码及其定义。&lt;br&gt;
　代码&amp;nbsp;&amp;nbsp;指示&amp;nbsp;&amp;nbsp;&lt;br&gt;
2xx&amp;nbsp;&amp;nbsp;成功&amp;nbsp;&amp;nbsp;&lt;br&gt;
200&amp;nbsp;&amp;nbsp;正常；请求已完成。&amp;nbsp;&amp;nbsp;&lt;br&gt;
201&amp;nbsp;&amp;nbsp;正常；紧接 POST 命令。&amp;nbsp;&amp;nbsp;&lt;br&gt;
202&amp;nbsp;&amp;nbsp;正常；已接受用于处理，但处理尚未完成。&amp;nbsp;&amp;nbsp;&lt;br&gt;
203&amp;nbsp;&amp;nbsp;正常；部分信息 — 返回的信息只是一部分。&amp;nbsp;&amp;nbsp;&lt;br&gt;
204&amp;nbsp;&amp;nbsp;正常；无响应 — 已接收请求，但不存在要回送的信息。&amp;nbsp;&amp;nbsp;&lt;br&gt;
3xx&amp;nbsp;&amp;nbsp;重定向&amp;nbsp;&amp;nbsp;&lt;br&gt;
301&amp;nbsp;&amp;nbsp;已移动 — 请求的数据具有新的位置且更改是永久的。&amp;nbsp;&amp;nbsp;&lt;br&gt;
302&amp;nbsp;&amp;nbsp;已找到 — 请求的数据临时具有不同 URI。&amp;nbsp;&amp;nbsp;&lt;br&gt;
303&amp;nbsp;&amp;nbsp;请参阅其它 — 可在另一 URI 下找到对请求的响应，且应使用 GET 方法检索此响应。&amp;nbsp;&amp;nbsp;&lt;br&gt;
304&amp;nbsp;&amp;nbsp;未修改 — 未按预期修改文档。&amp;nbsp;&amp;nbsp;&lt;br&gt;
305&amp;nbsp;&amp;nbsp;使用代理 — 必须通过位置字段中提供的代理来访问请求的资源。&amp;nbsp;&amp;nbsp;&lt;br&gt;
306&amp;nbsp;&amp;nbsp;未使用 — 不再使用；保留此代码以便将来使用。&amp;nbsp;&amp;nbsp;&lt;br&gt;
4xx&amp;nbsp;&amp;nbsp;客户机中出现的错误&amp;nbsp;&amp;nbsp;&lt;br&gt;
400&amp;nbsp;&amp;nbsp;错误请求 — 请求中有语法问题，或不能满足请求。&amp;nbsp;&amp;nbsp;&lt;br&gt;
401&amp;nbsp;&amp;nbsp;未授权 — 未授权客户机访问数据。&amp;nbsp;&amp;nbsp;&lt;br&gt;
402&amp;nbsp;&amp;nbsp;需要付款 — 表示计费系统已有效。&amp;nbsp;&amp;nbsp;&lt;br&gt;
403&amp;nbsp;&amp;nbsp;禁止 — 即使有授权也不需要访问。&amp;nbsp;&amp;nbsp;&lt;br&gt;
404&amp;nbsp;&amp;nbsp;找不到 — 服务器找不到给定的资源；文档不存在。&amp;nbsp;&amp;nbsp;&lt;br&gt;
407&amp;nbsp;&amp;nbsp;代理认证请求 — 客户机首先必须使用代理认证自身。&amp;nbsp;&amp;nbsp;&lt;br&gt;
415&amp;nbsp;&amp;nbsp;介质类型不受支持 — 服务器拒绝服务请求，因为不支持请求实体的格式。&amp;nbsp;&amp;nbsp;&lt;br&gt;
5xx&amp;nbsp;&amp;nbsp;服务器中出现的错误&amp;nbsp;&amp;nbsp;&lt;br&gt;
500&amp;nbsp;&amp;nbsp;内部错误 — 因为意外情况，服务器不能完成请求。&amp;nbsp;&amp;nbsp;&lt;br&gt;
501&amp;nbsp;&amp;nbsp;未执行 — 服务器不支持请求的工具。&amp;nbsp;&amp;nbsp;&lt;br&gt;
502&amp;nbsp;&amp;nbsp;错误网关 — 服务器接收到来自上游服务器的无效响应。&amp;nbsp;&amp;nbsp;&lt;br&gt;
503&amp;nbsp;&amp;nbsp;无法获得服务 — 由于临时过载或维护，服务器无法处理请求。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;HTTP&amp;nbsp;400&amp;nbsp;-&amp;nbsp;请求无效&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;401.1&amp;nbsp;-&amp;nbsp;未授权：登录失败&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;401.2&amp;nbsp;-&amp;nbsp;未授权：服务器配置问题导致登录失败&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;401.3&amp;nbsp;-&amp;nbsp;ACL&amp;nbsp;禁止访问资源&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;401.4&amp;nbsp;-&amp;nbsp;未授权：授权被筛选器拒绝&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;401.5&amp;nbsp;-&amp;nbsp;未授权：ISAPI&amp;nbsp;或&amp;nbsp;CGI&amp;nbsp;授权失败&amp;nbsp;&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403&amp;nbsp;-&amp;nbsp;禁止访问&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403&amp;nbsp;-&amp;nbsp;对&amp;nbsp;Internet&amp;nbsp;服务管理器&amp;nbsp;(HTML)&amp;nbsp;的访问仅限于&amp;nbsp;Localhost&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403.1&amp;nbsp;禁止访问：禁止可执行访问&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403.2&amp;nbsp;-&amp;nbsp;禁止访问：禁止读访问&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403.3&amp;nbsp;-&amp;nbsp;禁止访问：禁止写访问&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403.4&amp;nbsp;-&amp;nbsp;禁止访问：要求&amp;nbsp;SSL&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403.5&amp;nbsp;-&amp;nbsp;禁止访问：要求&amp;nbsp;SSL&amp;nbsp;128&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403.6&amp;nbsp;-&amp;nbsp;禁止访问：IP&amp;nbsp;地址被拒绝&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403.7&amp;nbsp;-&amp;nbsp;禁止访问：要求客户证书&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403.8&amp;nbsp;-&amp;nbsp;禁止访问：禁止站点访问&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403.9&amp;nbsp;-&amp;nbsp;禁止访问：连接的用户过多&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403.10&amp;nbsp;-&amp;nbsp;禁止访问：配置无效&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403.11&amp;nbsp;-&amp;nbsp;禁止访问：密码更改&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403.12&amp;nbsp;-&amp;nbsp;禁止访问：映射器拒绝访问&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403.13&amp;nbsp;-&amp;nbsp;禁止访问：客户证书已被吊销&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403.15&amp;nbsp;-&amp;nbsp;禁止访问：客户访问许可过多&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403.16&amp;nbsp;-&amp;nbsp;禁止访问：客户证书不可信或者无效&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;403.17&amp;nbsp;-&amp;nbsp;禁止访问：客户证书已经到期或者尚未生效&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;404.1&amp;nbsp;-&amp;nbsp;无法找到&amp;nbsp;Web&amp;nbsp;站点&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;404&amp;nbsp;-&amp;nbsp;无法找到文件&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;405&amp;nbsp;-&amp;nbsp;资源被禁止&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;406&amp;nbsp;-&amp;nbsp;无法接受&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;407&amp;nbsp;-&amp;nbsp;要求代理身份验证&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;410&amp;nbsp;-&amp;nbsp;永远不可用&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;412&amp;nbsp;-&amp;nbsp;先决条件失败&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;414&amp;nbsp;-&amp;nbsp;请求&amp;nbsp;-&amp;nbsp;URI&amp;nbsp;太长&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;500&amp;nbsp;-&amp;nbsp;内部服务器错误&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;500.100&amp;nbsp;-&amp;nbsp;内部服务器错误&amp;nbsp;-&amp;nbsp;ASP&amp;nbsp;错误&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;500-11&amp;nbsp;服务器关闭&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;500-12&amp;nbsp;应用程序重新启动&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;500-13&amp;nbsp;-&amp;nbsp;服务器太忙&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;500-14&amp;nbsp;-&amp;nbsp;应用程序无效&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;500-15&amp;nbsp;-&amp;nbsp;不允许请求&amp;nbsp;global.asa&amp;nbsp;&lt;br&gt;
Error&amp;nbsp;501&amp;nbsp;-&amp;nbsp;未实现&amp;nbsp;&lt;br&gt;
HTTP&amp;nbsp;502&amp;nbsp;-&amp;nbsp;网关错误&lt;/p&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/bilicard.css&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="web" />
        <category term="http" />
        <updated>2021-10-06T11:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.17lai.site/posts/448f849b/</id>
        <title>1.5 万字 CSS 基础拾遗（核心知识、常见需求）</title>
        <link rel="alternate" href="https://blog.17lai.site/posts/448f849b/"/>
        <content type="html">&lt;h2 id=&#34;1-5-万字-CSS-基础拾遗（核心知识、常见需求）&#34;&gt;1.5 万字 CSS 基础拾遗（核心知识、常见需求）&lt;/h2&gt;
&lt;p&gt;本篇文章围绕了 CSS 的核心知识点和项目中常见的需求来展开。虽然行文偏长，但偏基础，适合初级中级前端阅读，阅读的时候请适当跳过已经掌握的部分。&lt;/p&gt;
&lt;p&gt;这篇文章断断续续写了比较久，也参考了许多优秀的文章，但或许文章里还是存在不好或不对的地方，请多多指教，可以评论里直接提出来哈。&lt;/p&gt;
&lt;p&gt;小tip：后续内容更精彩哦。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912192327.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;核心概念和知识点&#34;&gt;核心概念和知识点&lt;/h2&gt;
&lt;h3 id=&#34;语法&#34;&gt;语法&lt;/h3&gt;
&lt;p&gt;CSS 的核心功能是将 CSS 属性设定为特定的值。一个属性与值的键值对被称为&lt;strong&gt;声明&lt;/strong&gt;（declaration）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;而如果将一个或者多个声明用 &lt;code&gt;{}&lt;/code&gt; 包裹起来后，那就组成了一个&lt;strong&gt;声明块&lt;/strong&gt;（declaration block）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; center&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;声明块如果需要作用到对应的 HTML 元素，那还需要加上&lt;strong&gt;选择器&lt;/strong&gt;。选择器和声明块组成了&lt;strong&gt;CSS 规则集&lt;/strong&gt;（CSS ruleset），常简称为 CSS 规则。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1420210914005346.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;span&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; center&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;“&lt;/p&gt;
&lt;p&gt;规则集中最后一条声明可以省略分号，但是并不建议这么做，因为容易出错。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;CSS 中的&lt;strong&gt;注释&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;/* 单行注释 */&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;/*  
    多行  
    注释  
*/&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在 CSS 文件中，除了注释、CSS 规则集以及 @规则 外，定义的一些别的东西都将被浏览器忽略。&lt;/p&gt;
&lt;h3 id=&#34;规则&#34;&gt;@规则&lt;/h3&gt;
&lt;p&gt;CSS 规则是样式表的主体，通常样式表会包括大量的规则列表。但有时候也需要在样式表中包括其他的一些信息，比如字符集，导入其它的外部样式表，字体等，这些需要专门的语句表示。&lt;/p&gt;
&lt;p&gt;而 @规则 就是这样的语句。CSS 里包含了以下 @规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;@namespace 告诉 CSS 引擎必须考虑XML命名空间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@media, 如果满足媒体查询的条件则条件规则组里的规则生效。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@page, 描述打印文档时布局的变化.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@font-face, 描述将下载的外部的字体。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@keyframes, 描述 CSS 动画的关键帧。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@document, 如果文档样式表满足给定条件则条件规则组里的规则生效。 (推延至 CSS Level 4 规范)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了以上这几个之外，下面还将对几个比较生涩的 @规则 进行介绍。&lt;/p&gt;
&lt;h4 id=&#34;charset&#34;&gt;@charset&lt;/h4&gt;
&lt;p&gt;@charset[1] 用于定义样式表使用的字符集。它必须是样式表中的第一个元素。如果有多个 &lt;code&gt;@charset&lt;/code&gt; 被声明，只有第一个会被使用，而且不能在HTML元素或HTML页面的 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 元素内使用。&lt;/p&gt;
&lt;p&gt;注意：值必须是双引号包裹，且和&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token atrule&#34;&gt;&lt;span class=&#34;token rule&#34;&gt;@charset&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;UTF-8&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;平时写样式文件都没写 @charset 规则，那这个 CSS 文件到底是用的什么字符编码的呢？&lt;/p&gt;
&lt;p&gt;某个样式表文件到底用的是什么字符编码，浏览器有一套识别顺序（优先级由高到低）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;文件开头的 Byte order mark[2] 字符值，不过一般编辑器并不能看到文件头里的 BOM 值；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTP 响应头里的 &lt;code&gt;content-type&lt;/code&gt; 字段包含的 &lt;code&gt;charset&lt;/code&gt; 所指定的值，比如：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Content-Type: text/css; charset=utf-8  &lt;/code&gt;&lt;br&gt;
`&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CSS 文件头里定义的 @charset 规则里指定的字符编码；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 标签里的 charset 属性，该条已在 HTML5 中废除；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;默认是 &lt;code&gt;UTF-8&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;import&#34;&gt;@import&lt;/h4&gt;
&lt;p&gt;@import[3] 用于告诉 CSS 引擎引入一个外部样式表。&lt;/p&gt;
&lt;p&gt;link 和 @import 都能导入一个样式文件，它们有什么区别嘛？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;link 是 HTML 标签，除了能导入 CSS 外，还能导入别的资源，比如图片、脚本和字体等；而 @import 是 CSS 的语法，只能用来导入 CSS；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;link 导入的样式会在页面加载时同时加载，@import 导入的样式需等页面加载完成后再加载；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;link 没有兼容性问题，@import 不兼容 ie5 以下；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;link 可以通过 JS 操作 DOM 动态引入样式表改变样式，而@import不可以。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;supports&#34;&gt;@supports&lt;/h4&gt;
&lt;p&gt;@supports[4] 用于查询特定的 CSS 是否生效，可以结合 not、and 和 or 操作符进行后续的操作。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;/* 如果支持自定义属性，则把 body 颜色设置为变量 varName 指定的颜色 */&lt;/span&gt;  
&lt;span class=&#34;token atrule&#34;&gt;&lt;span class=&#34;token rule&#34;&gt;@supports&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;--foo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; green&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token selector&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
        &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;--varName&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;层叠性&#34;&gt;层叠性&lt;/h3&gt;
&lt;p&gt;层叠样式表，这里的层叠怎么理解呢？其实它是 CSS 中的核心特性之一，用于合并来自多个源的属性值的算法。比如说针对某个 HTML 标签，有许多的 CSS 声明都能作用到的时候，那最后谁应该起作用呢？层叠性说的大概就是这个。&lt;/p&gt;
&lt;p&gt;针对不同源的样式，将按照如下的顺序进行层叠，越往下优先级越高：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;用户代理样式表中的声明(例如，浏览器的默认样式，在没有设置其他样式时使用)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户样式表中的常规声明(由用户设置的自定义样式。由于 Chrome 在很早的时候就放弃了用户样式表的功能，所以这里将不再考虑它的排序。)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;作者样式表中的常规声明(这些是我们 Web 开发人员设置的样式)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;作者样式表中的 !important 声明。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户样式表中的 !important 声明S。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;理解层叠性的时候需要结合 CSS 选择器的优先级以及继承性来理解。比如针对同一个选择器，定义在后面的声明会覆盖前面的；作者定义的样式会比默认继承的样式优先级更高。&lt;/p&gt;
&lt;h3 id=&#34;选择器&#34;&gt;选择器&lt;/h3&gt;
&lt;p&gt;CSS 选择器无疑是其核心之一，对于基础选择器以及一些常用伪类必须掌握。下面列出了常用的选择器。 想要获取更多选择器的用法可以看 MDN CSS Selectors[5]。&lt;/p&gt;
&lt;h4 id=&#34;基础选择器&#34;&gt;基础选择器&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;标签选择器：&lt;code&gt;h1&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;类选择器：&lt;code&gt;.checked&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ID 选择器：&lt;code&gt;#picker&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通配选择器：&lt;code&gt;*&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;属性选择器&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[attr]&lt;/code&gt;：指定属性的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[attr=val]&lt;/code&gt;：属性等于指定值的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[attr*=val]&lt;/code&gt;：属性包含指定值的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[attr^=val]&lt;/code&gt; ：属性以指定值开头的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[attr$=val]&lt;/code&gt;：属性以指定值结尾的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[attr~=val]&lt;/code&gt;：属性包含指定值(完整单词)的元素(不推荐使用)；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[attr|=val]&lt;/code&gt;：属性以指定值(完整单词)开头的元素(不推荐使用)；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;组合选择器&#34;&gt;组合选择器&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;相邻兄弟选择器：&lt;code&gt;A + B&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;普通兄弟选择器：&lt;code&gt;A ~ B&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;子选择器：&lt;code&gt;A &amp;gt; B&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;后代选择器：&lt;code&gt;A B&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;伪类&#34;&gt;伪类&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;条件伪类&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:lang()&lt;/code&gt;：基于元素语言来匹配页面元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:dir()&lt;/code&gt;：匹配特定文字书写方向的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:has()&lt;/code&gt;：匹配包含指定元素的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:is()&lt;/code&gt;：匹配指定选择器列表里的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:not()&lt;/code&gt;：用来匹配不符合一组选择器的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;行为伪类&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:active&lt;/code&gt;：鼠标激活的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:hover&lt;/code&gt;： 鼠标悬浮的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;::selection&lt;/code&gt;：鼠标选中的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;状态伪类&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:target&lt;/code&gt;：当前锚点的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:link&lt;/code&gt;：未访问的链接元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:visited&lt;/code&gt;：已访问的链接元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:focus&lt;/code&gt;：输入聚焦的表单元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:required&lt;/code&gt;：输入必填的表单元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:valid&lt;/code&gt;：输入合法的表单元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:invalid&lt;/code&gt;：输入非法的表单元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:in-range&lt;/code&gt;：输入范围以内的表单元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:out-of-range&lt;/code&gt;：输入范围以外的表单元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:checked&lt;/code&gt;：选项选中的表单元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:optional&lt;/code&gt;：选项可选的表单元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:enabled&lt;/code&gt;：事件启用的表单元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:disabled&lt;/code&gt;：事件禁用的表单元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:read-only&lt;/code&gt;：只读的表单元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:read-write&lt;/code&gt;：可读可写的表单元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:blank&lt;/code&gt;：输入为空的表单元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:current()&lt;/code&gt;：浏览中的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:past()&lt;/code&gt;：已浏览的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:future()&lt;/code&gt;：未浏览的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;结构伪类&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:root&lt;/code&gt;：文档的根元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:empty&lt;/code&gt;：无子元素的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:first-letter&lt;/code&gt;：元素的首字母；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:first-line&lt;/code&gt;：元素的首行；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:nth-child(n)&lt;/code&gt;：元素中指定顺序索引的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:nth-last-child(n)&lt;/code&gt;：元素中指定逆序索引的元素；；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:first-child&lt;/code&gt;：元素中为首的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:last-child&lt;/code&gt; ：元素中为尾的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:only-child&lt;/code&gt;：父元素仅有该元素的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:nth-of-type(n)&lt;/code&gt;：标签中指定顺序索引的标签；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:nth-last-of-type(n)&lt;/code&gt;：标签中指定逆序索引的标签；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:first-of-type&lt;/code&gt; ：标签中为首的标签；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:last-of-type&lt;/code&gt;：标签中为尾标签；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:only-of-type&lt;/code&gt;：父元素仅有该标签的标签；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;伪元素&#34;&gt;伪元素&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;::before&lt;/code&gt;：在元素前插入内容；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;::after&lt;/code&gt;：在元素后插入内容；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;优先级&#34;&gt;优先级&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912192225.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;优先级就是分配给指定的 CSS 声明的一个权重，它由匹配的选择器中的每一种选择器类型的数值决定。为了记忆，可以把权重分成如下几个等级，数值越大的权重越高：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;10000：!important；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;01000：内联样式；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;00100：ID 选择器；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;00010：类选择器、伪类选择器、属性选择器；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;00001：元素选择器、伪元素选择器；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;00000：通配选择器、后代选择器、兄弟选择器；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以看到内联样式（通过元素中 style 属性定义的样式）的优先级大于任何选择器；而给属性值加上 &lt;code&gt;!important&lt;/code&gt; 又可以把优先级提至最高，就是因为它的优先级最高，所以需要谨慎使用它，以下有些使用注意事项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一定要优先考虑使用样式规则的优先级来解决问题而不是 !important；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只有在需要覆盖全站或外部 CSS 的特定页面中使用 !important；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;永远不要在你的插件中使用 !important；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;永远不要在全站范围的 CSS 代码中使用 !important；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;继承性&#34;&gt;继承性&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912192218.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 CSS 中有一个很重要的特性就是子元素会继承父元素对应属性计算后的值。比如页面根元素 html 的文本颜色默认是黑色的，页面中的所有其他元素都将继承这个颜色，当申明了如下样式后，H1 文本将变成橙色。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; orange&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token selector&#34;&gt;h1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; inherit&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设想一下，如果 CSS 中不存在继承性，那么我们就需要为不同文本的标签都设置一下 color，这样一来的后果就是 CSS 的文件大小就会无限增大。&lt;/p&gt;
&lt;p&gt;CSS 属性很多，但并不是所有的属性默认都是能继承父元素对应属性的，那哪些属性存在默认继承的行为呢？一定是那些不会影响到页面布局的属性，可以分为如下几类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;字体相关：&lt;code&gt;font-family&lt;/code&gt;、&lt;code&gt;font-style&lt;/code&gt;、&lt;code&gt;font-size&lt;/code&gt;、&lt;code&gt;font-weight&lt;/code&gt; 等；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文本相关：&lt;code&gt;text-align&lt;/code&gt;、&lt;code&gt;text-indent&lt;/code&gt;、&lt;code&gt;text-decoration&lt;/code&gt;、&lt;code&gt;text-shadow&lt;/code&gt;、&lt;code&gt;letter-spacing&lt;/code&gt;、&lt;code&gt;word-spacing&lt;/code&gt;、&lt;code&gt;white-space&lt;/code&gt;、&lt;code&gt;line-height&lt;/code&gt;、&lt;code&gt;color&lt;/code&gt; 等；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列表相关：&lt;code&gt;list-style&lt;/code&gt;、&lt;code&gt;list-style-image&lt;/code&gt;、&lt;code&gt;list-style-type&lt;/code&gt;、&lt;code&gt;list-style-position&lt;/code&gt; 等；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他属性：&lt;code&gt;visibility&lt;/code&gt;、&lt;code&gt;cursor&lt;/code&gt; 等；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于其他默认不继承的属性也可以通过以下几个属性值来控制继承行为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;inherit&lt;/code&gt;：继承父元素对应属性的计算值；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;initial&lt;/code&gt;：应用该属性的默认值，比如 color 的默认值是 &lt;code&gt;#000&lt;/code&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;unset&lt;/code&gt;：如果属性是默认可以继承的，则取 &lt;code&gt;inherit&lt;/code&gt; 的效果，否则同 &lt;code&gt;initial&lt;/code&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;revert&lt;/code&gt;：效果等同于 &lt;code&gt;unset&lt;/code&gt;，兼容性差。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;文档流&#34;&gt;文档流&lt;/h3&gt;
&lt;p&gt;在 CSS 的世界中，会把内容按照从左到右、从上到下的顺序进行排列显示。正常情况下会把页面分割成一行一行的显示，而每行又可能由多列组成，所以从视觉上看起来就是从上到下从左到右，而这就是 CSS 中的流式布局，又叫文档流。文档流就像水一样，能够自适应所在的容器，一般它有如下几个特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;块级元素默认会占满整行，所以多个块级盒子之间是从上到下排列的；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;内联元素默认会在一行里一列一列的排布，当一行放不下的时候，会自动切换到下一行继续按照列排布；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;如何脱离文档流呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;脱流文档流指节点脱流正常文档流后，在正常文档流中的其他节点将忽略该节点并填补其原先空间。文档一旦脱流，计算其父节点高度时不会将其高度纳入，脱流节点不占据空间。有两种方式可以让元素脱离文档流：浮动和定位。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用浮动（float）会将元素脱离文档流，移动到容器左/右侧边界或者是另一个浮动元素旁边，该浮动元素之前占用的空间将被别的元素填补，另外浮动之后所占用的区域不会和别的元素之间发生重叠；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用绝对定位（&lt;code&gt;position: absolute;&lt;/code&gt;）或者固定定位（&lt;code&gt;position: fixed;&lt;/code&gt;）也会使得元素脱离文档流，且空出来的位置将自动被后续节点填补。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;盒模型&#34;&gt;盒模型&lt;/h3&gt;
&lt;p&gt;在 CSS 中任何元素都可以看成是一个盒子，而一个盒子是由 4 部分组成的：内容（content）、内边距（padding）、边框（border）和外边距（margin）。&lt;/p&gt;
&lt;p&gt;盒模型有 2 种：标准盒模型和 IE 盒模型，本别是由 W3C 和 IExplore 制定的标准。&lt;/p&gt;
&lt;p&gt;如果给某个元素设置如下样式：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;.box&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 200px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 200px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 10px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid #eee&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 10px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;标准盒模型认为：盒子的实际尺寸 = 内容（设置的宽/高） + 内边距 + 边框&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912192143.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;所以 &lt;code&gt;.box&lt;/code&gt; 元素内容的宽度就为 &lt;code&gt;200px&lt;/code&gt;，而实际的宽度则是 &lt;code&gt;width&lt;/code&gt; + &lt;code&gt;padding-left&lt;/code&gt; + &lt;code&gt;padding-right&lt;/code&gt; + &lt;code&gt;border-left-width&lt;/code&gt; + &lt;code&gt;border-right-width&lt;/code&gt; = 200 + 10 + 10 + 1 + 1 = 222。&lt;/p&gt;
&lt;p&gt;IE 盒模型认为：盒子的实际尺寸 = 设置的宽/高 = 内容 + 内边距 + 边框&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912192137.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.box&lt;/code&gt; 元素所占用的实际宽度为 &lt;code&gt;200px&lt;/code&gt;，而内容的真实宽度则是 &lt;code&gt;width&lt;/code&gt; - &lt;code&gt;padding-left&lt;/code&gt; - &lt;code&gt;padding-right&lt;/code&gt; - &lt;code&gt;border-left-width&lt;/code&gt; - &lt;code&gt;border-right-width&lt;/code&gt; = 200 - 10 - 10 - 1 - 1 = 178。&lt;/p&gt;
&lt;p&gt;现在高版本的浏览器基本上默认都是使用标准盒模型，而像 IE6 这种老古董才是默认使用 IE 盒模型的。&lt;/p&gt;
&lt;p&gt;在  CSS3 中新增了一个属性 &lt;code&gt;box-sizing&lt;/code&gt;，允许开发者来指定盒子使用什么标准，它有 2 个值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;content-box&lt;/code&gt;：标准盒模型；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;border-box&lt;/code&gt;：IE 盒模型；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;视觉格式化模型&#34;&gt;视觉格式化模型&lt;/h3&gt;
&lt;p&gt;视觉格式化模型（Visual formatting model）是用来处理和在视觉媒体上显示文档时使用的计算规则。CSS 中一切皆盒子，而视觉格式化模型简单来理解就是规定这些盒子应该怎么样放置到页面中去，这个模型在计算的时候会依赖到很多的因素，比如：盒子尺寸、盒子类型、定位方案（是浮动还是定位）、兄弟元素或者子元素以及一些别的因素。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912192137.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Visual formatting model&lt;/p&gt;
&lt;p&gt;从上图中可以看到视觉格式化模型涉及到的内容很多，有兴趣深入研究的可以结合上图看这个 W3C 的文档 Visual formatting model[6]。所以这里就简单介绍下盒子类型。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912192129.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;盒子类型由 display 决定，同时给一个元素设置 display 后，将会决定这个盒子的 2 个显示类型（display type）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;outer display type（对外显示）：决定了该元素本身是如何布局的，即参与何种格式化上下文；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;inner display type（对内显示）：其实就相当于把该元素当成了容器，规定了其内部子元素是如何布局的，参与何种格式化上下文；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;outer-display-type&#34;&gt;outer display type&lt;/h4&gt;
&lt;p&gt;对外显示方面，盒子类型可以分成 2 类：block-level box（块级盒子） 和 inline-level box（行内级盒子）。&lt;/p&gt;
&lt;p&gt;依据上图可以列出都有哪些块级和行内级盒子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;块级盒子：display 为 block、list-item、table、flex、grid、flow-root 等；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;行内级盒子：display 为 inline、inline-block、inline-table 等；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有块级盒子都会参与 BFC，呈现垂直排列；而所有行内级盒子都参会 IFC，呈现水平排列。&lt;/p&gt;
&lt;p&gt;除此之外，block、inline 和 inline-block 还有什么更具体的区别呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;block&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;占满一行，默认继承父元素的宽度；多个块元素将从上到下进行排列；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置 width/height 将会生效；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置 padding 和 margin 将会生效；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;inline&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;不会占满一行，宽度随着内容而变化；多个 inline 元素将按照从左到右的顺序在一行里排列显示，如果一行显示不下，则自动换行；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置 width/height 将不会生效；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置竖直方向上的 padding 和 margin 将不会生效；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;inline-block&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;是行内块元素，不单独占满一行，可以看成是能够在一行里进行左右排列的块元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置 width/height 将会生效；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置 padding 和 margin 将会生效；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;inner-display-type&#34;&gt;inner display type&lt;/h4&gt;
&lt;p&gt;对内方面，其实就是把元素当成了容器，里面包裹着文本或者其他子元素。container box 的类型依据 display 的值不同，分为 4 种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;block container：建立 BFC 或者 IFC；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;flex container：建立 FFC；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;grid container：建立 GFC;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ruby container：接触不多，不做介绍。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;值得一提的是如果把 img 这种替换元素（replaced element）申明为 block 是不会产生 container box 的，因为替换元素比如 img 设计的初衷就仅仅是通过 src 把内容替换成图片，完全没考虑过会把它当成容器。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CSS 原理 - 你所不知道的 display[7]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;格式化上下文[8]&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;格式化上下文&#34;&gt;格式化上下文&lt;/h3&gt;
&lt;p&gt;格式化上下文（Formatting Context）是 CSS2.1 规范中的一个概念，大概说的是页面中的一块渲染区域，规定了渲染区域内部的子元素是如何排版以及相互作用的。&lt;/p&gt;
&lt;p&gt;不同类型的盒子有不同格式化上下文，大概有这 4 类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;BFC (Block Formatting Context) 块级格式化上下文；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IFC (Inline Formatting Context) 行内格式化上下文；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FFC (Flex Formatting Context) 弹性格式化上下文；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GFC (Grid Formatting Context) 格栅格式化上下文；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中 BFC 和 IFC 在 CSS 中扮演着非常重要的角色，因为它们直接影响了网页布局，所以需要深入理解其原理。&lt;/p&gt;
&lt;h4 id=&#34;BFC&#34;&gt;BFC&lt;/h4&gt;
&lt;p&gt;块格式化上下文，它是一个独立的渲染区域，只有块级盒子参与，它规定了内部的块级盒子如何布局，并且与这个区域外部毫不相干。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912192122.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;图来源于 yachen168&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BFC 渲染规则&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;内部的盒子会在垂直方向，一个接一个地放置；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;盒子垂直方向的距离由 margin 决定，属于同一个 BFC 的两个相邻盒子的 margin 会发生重叠；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每个元素的 margin 的左边，与包含块 border 的左边相接触(对于从左往右的格式化，否则相反)，即使存在浮动也是如此；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BFC 的区域不会与 float 盒子重叠；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BFC 就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算 BFC 的高度时，浮动元素也参与计算。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;如何创建 BFC？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;根元素：html&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;非溢出的可见元素：overflow 不为 visible&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置浮动：float 属性不为 none&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置定位：position 为 absolute 或 fixed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;定义成块级的非块级元素：display: inline-block/table-cell/table-caption/flex/inline-flex/grid/inline-grid&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;BFC 应用场景&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、 自适应两栏布局&lt;/p&gt;
&lt;p&gt;应用原理：BFC 的区域不会和浮动区域重叠，所以就可以把侧边栏固定宽度且左浮动，而对右侧内容触发 BFC，使得它的宽度自适应该行剩余宽度。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912192107.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&amp;lt;div class=&lt;span class=&#34;token string&#34;&gt;&#34;layout&#34;&lt;/span&gt;&amp;gt;  
    &amp;lt;div class=&lt;span class=&#34;token string&#34;&gt;&#34;aside&#34;&lt;/span&gt;&amp;gt;aside&amp;lt;/div&amp;gt;  
    &amp;lt;div class=&lt;span class=&#34;token string&#34;&gt;&#34;main&#34;&lt;/span&gt;&amp;gt;main&amp;lt;/div&amp;gt;  
&amp;lt;/div&amp;gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;.aside&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; left&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 100px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token selector&#34;&gt;.main&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &amp;lt;!-- 触发 BFC --&amp;gt;  
    &lt;span class=&#34;token property&#34;&gt;overflow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; auto&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2、清除内部浮动&lt;/p&gt;
&lt;p&gt;浮动造成的问题就是父元素高度坍塌，所以清除浮动需要解决的问题就是让父元素的高度恢复正常。而用     BFC 清除浮动的原理就是：计算 BFC 的高度时，浮动元素也参与计算。只要触发父元素的 BFC 即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912192102.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;.parent&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;overflow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; hidden&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3、 防止垂直 margin 合并&lt;/p&gt;
&lt;p&gt;BFC 渲染原理之一：同一个 BFC 下的垂直 margin 会发生合并。所以如果让 2 个元素不在同一个 BFC 中即可阻止垂直 margin 合并。那如何让 2 个相邻的兄弟元素不在同一个 BFC 中呢？可以给其中一个元素外面包裹一层，然后触发其包裹层的 BFC，这样一来 2 个元素就不会在同一个 BFC 中了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912192012.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&amp;lt;div class=&lt;span class=&#34;token string&#34;&gt;&#34;layout&#34;&lt;/span&gt;&amp;gt;  
	&amp;lt;div class=&lt;span class=&#34;token string&#34;&gt;&#34;a&#34;&lt;/span&gt;&amp;gt;a&amp;lt;/div&amp;gt;  
    &amp;lt;div class=&lt;span class=&#34;token string&#34;&gt;&#34;contain-b&#34;&lt;/span&gt;&amp;gt;  
        &amp;lt;div class=&lt;span class=&#34;token string&#34;&gt;&#34;b&#34;&lt;/span&gt;&amp;gt;b&amp;lt;/div&amp;gt;  
    &amp;lt;/div&amp;gt;  
&amp;lt;/div&amp;gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;.demo3 .a,  
.demo3 .b&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid #999&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 10px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token selector&#34;&gt;.contain-b&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;overflow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; hidden&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;针对以上 3 个 示例 ，可以结合这个 BFC 应用示例 配合观看更佳。&lt;/p&gt;
&lt;p&gt;参考：CSS 原理 - Formatting Context[9]&lt;/p&gt;
&lt;h4 id=&#34;IFC&#34;&gt;IFC&lt;/h4&gt;
&lt;p&gt;IFC 的形成条件非常简单，块级元素中仅包含内联级别元素，需要注意的是当IFC中有块级元素插入时，会产生两个匿名块将父元素分割开来，产生两个 IFC。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912160820.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IFC 渲染规则&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;子元素在水平方向上一个接一个排列，在垂直方向上将以容器顶部开始向下排列；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;节点无法声明宽高，其中 margin 和 padding 在水平方向有效在垂直方向无效；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;节点在垂直方向上以不同形式对齐；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;能把在一行上的框都完全包含进去的一个矩形区域，被称为该行的线盒（line box）。线盒的宽度是由包含块（containing box）和与其中的浮动来决定；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IFC 中的 line box 一般左右边贴紧其包含块，但 float 元素会优先排列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IFC 中的 line box 高度由 line-height 计算规则来确定，同个 IFC 下的多个 line box 高度可能会不同；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当内联级盒子的总宽度少于包含它们的 line box 时，其水平渲染规则由 text-align 属性值来决定；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当一个内联盒子超过父元素的宽度时，它会被分割成多盒子，这些盒子分布在多个 line box 中。如果子元素未设置强制换行的情况下，inline box 将不可被分割，将会溢出父元素。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;针对如上的 IFC 渲染规则，你是不是可以分析下下面这段代码的 IFC 环境是怎么样的呢？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;p&amp;gt;It can get &amp;lt;strong&amp;gt;very complicated&amp;lt;/storng&amp;gt; once you start looking into it.&amp;lt;/p&amp;gt;   &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912160815.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;对应上面这样一串 HTML 分析如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;p 标签是一个 block container，对内将产生一个 IFC；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由于一行没办法显示完全，所以产生了 2 个线盒（line box）；线盒的宽度就继承了 p 的宽度；高度是由里面的内联盒子的 line-height 决定；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It can get：匿名的内联盒子；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;very complicated：strong 标签产生的内联盒子；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;once you start：匿名的内联盒子；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;looking into it.：匿名的内联盒子。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考：Inline formatting contexts[10]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IFC 应用场景&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;水平居中：当一个块要在环境中水平居中时，设置其为 inline-block 则会在外层产生 IFC，通过 text-align 则可以使其水平居中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;垂直居中：创建一个 IFC，用其中一个元素撑开父元素的高度，然后设置其 vertical-align: middle，其他行内元素则可以在此父元素下垂直居中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;偷个懒，demo 和图我就不做了。&lt;/p&gt;
&lt;h3 id=&#34;层叠上下文&#34;&gt;层叠上下文&lt;/h3&gt;
&lt;p&gt;在电脑显示屏幕上的显示的页面其实是一个三维的空间，水平方向是 X 轴，竖直方向是 Y 轴，而屏幕到眼睛的方向可以看成是 Z 轴。众 HTML 元素依据自己定义的属性的优先级在 Z 轴上按照一定的顺序排开，而这其实就是层叠上下文所要描述的东西。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912160813.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;-w566&lt;/p&gt;
&lt;p&gt;我们对层叠上下文的第一印象可能要来源于 z-index，认为它的值越大，距离屏幕观察者就越近，那么层叠等级就越高，事实确实是这样的，但层叠上下文的内容远非仅仅如此：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;z-index 能够在层叠上下文中对元素的堆叠顺序其作用是必须配合定位才可以；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;除了 z-index 之外，一个元素在 Z 轴上的显示顺序还受层叠等级和层叠顺序影响；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在看层叠等级和层叠顺序之前，我们先来看下如何产生一个层叠上下文，特定的 HTML 元素或者 CSS 属性产生层叠上下文，MDN 中给出了这么一个列表，符合以下任一条件的元素都会产生层叠上下文：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;html 文档根元素&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;声明 position: absolute/relative 且 z-index 值不为 auto 的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;声明 position: fixed/sticky 的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;flex 容器的子元素，且 z-index 值不为 auto；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;grid 容器的子元素，且 z-index 值不为 auto；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;opacity 属性值小于 1 的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mix-blend-mode 属性值不为 normal 的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以下任意属性值不为 none 的元素：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;transform&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;filter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;perspective&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;clip-path&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mask / mask-image / mask-border&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;isolation 属性值为 isolate 的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-webkit-overflow-scrolling 属性值为 touch 的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;will-change 值设定了任一属性而该属性在 non-initial 值时会创建层叠上下文的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;contain 属性值为 layout、paint 或包含它们其中之一的合成值（比如 contain: strict、contain: content）的元素。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;层叠等级&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;层叠等级指节点在三维空间 Z 轴上的上下顺序。它分两种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在同一个层叠上下文中，它描述定义的是该层叠上下文中的层叠上下文元素在 Z 轴上的上下顺序；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在其他普通元素中，它描述定义的是这些普通元素在 Z 轴上的上下顺序；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;普通节点的层叠等级优先由其所在的层叠上下文决定，层叠等级的比较只有在当前层叠上下文中才有意义，脱离当前层叠上下文的比较就变得无意义了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;层叠顺序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在同一个层叠上下文中如果有多个元素，那么他们之间的层叠顺序是怎么样的呢？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912160807.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;以下这个列表越往下层叠优先级越高，视觉上的效果就是越容易被用户看到（不会被其他元素覆盖）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;层叠上下文的 border 和 background&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;z-index &amp;lt; 0 的子节点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;标准流内块级非定位的子节点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;浮动非定位的子节点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;标准流内行内非定位的子节点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;z-index: auto/0 的子节点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;z-index &amp;gt; 0的子节点&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;如何比较两个元素的层叠等级？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在同一个层叠上下文中，比较两个元素就是按照上图的介绍的层叠顺序进行比较。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果不在同一个层叠上下文中的时候，那就需要比较两个元素分别所处的层叠上下文的等级。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果两个元素都在同一个层叠上下文，且层叠顺序相同，则在 HTML 中定义越后面的层叠等级越高。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考：彻底搞懂CSS层叠上下文、层叠等级、层叠顺序、z-index[11]&lt;/p&gt;
&lt;h3 id=&#34;值和单位&#34;&gt;值和单位&lt;/h3&gt;
&lt;p&gt;CSS 的声明是由属性和值组成的，而值的类型有许多种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数值：长度值 ，用于指定例如元素 width、border-width、font-size 等属性的值；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;百分比：可以用于指定尺寸或长度，例如取决于父容器的 width、height 或默认的 font-size；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;颜色：用于指定 background-color、color 等；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;坐标位置：以屏幕的左上角为坐标原点定位元素的位置，比如常见的 background-position、top、right、bottom 和 left 等属性；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;函数：用于指定资源路径或背景图片的渐变，比如 url()、linear-gradient() 等；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而还有些值是需要带单位的，比如 width: 100px，这里的 px 就是表示长度的单位，长度单位除了 px 外，比较常用的还有 em、rem、vw/vh 等。那他们有什么区别呢？又应该在什么时候使用它们呢？&lt;/p&gt;
&lt;h4 id=&#34;px&#34;&gt;px&lt;/h4&gt;
&lt;p&gt;屏幕分辨率是指在屏幕的横纵方向上的像素点数量，比如分辨率 1920×1080 意味着水平方向含有 1920 个像素数，垂直方向含有 1080 个像素数。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912160800.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;而 px 表示的是 CSS 中的像素，在 CSS 中它是绝对的长度单位，也是最基础的单位，其他长度单位会自动被浏览器换算成 px。但是对于设备而言，它其实又是相对的长度单位，比如宽高都为 2px，在正常的屏幕下，其实就是 4 个像素点，而在设备像素比(devicePixelRatio) 为 2 的 Retina 屏幕下，它就有 16 个像素点。所以屏幕尺寸一致的情况下，屏幕分辨率越高，显示效果就越细腻。&lt;/p&gt;
&lt;p&gt;讲到这里，还有一些相关的概念需要理清下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设备像素（Device pixels）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设备屏幕的物理像素，表示的是屏幕的横纵有多少像素点；和屏幕分辨率是差不多的意思。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设备像素比（DPR）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设备像素比表示 1 个 CSS 像素等于几个物理像素。&lt;/p&gt;
&lt;p&gt;计算公式：DPR = 物理像素数 / 逻辑像素数；&lt;/p&gt;
&lt;p&gt;在浏览器中可以通过 window.devicePixelRatio 来获取当前屏幕的 DPR。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;像素密度（DPI/PPI）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;像素密度也叫显示密度或者屏幕密度，缩写为 DPI(Dots Per Inch) 或者 PPI(Pixel Per Inch)。从技术角度说，PPI 只存在于计算机显示领域，而 DPI 只出现于打印或印刷领域。&lt;/p&gt;
&lt;p&gt;计算公式：像素密度 = 屏幕对角线的像素尺寸 / 物理尺寸&lt;/p&gt;
&lt;p&gt;比如，对于分辨率为 750 * 1334 的 iPhone 6 来说，它的像素密度为：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Math.sqrt(750 * 750 + 1334 * 1334) / 4.7 = 326ppi   &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设备独立像素（DIP）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;DIP 是特别针对 Android设备而衍生出来的，原因是安卓屏幕的尺寸繁多，因此为了显示能尽量和设备无关，而提出的这个概念。它是基于屏幕密度而计算的，认为当屏幕密度是 160 的时候，px = DIP。&lt;/p&gt;
&lt;p&gt;计算公式：dip = px * 160 / dpi&lt;/p&gt;
&lt;h4 id=&#34;em&#34;&gt;em&lt;/h4&gt;
&lt;p&gt;em 是 CSS 中的相对长度单位中的一个。居然是相对的，那它到底是相对的谁呢？它有 2 层意思：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在 font-size 中使用是相对于&lt;strong&gt;父元素&lt;/strong&gt;的 font-size 大小，比如父元素 font-size: 16px，当给子元素指定 font-size: 2em 的时候，经过计算后它的字体大小会是 32px；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在其他属性中使用是相对于自身的字体大小，如 width/height/padding/margin 等；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们都知道每个浏览器都会给 HTML 根元素 html 设置一个默认的 font-size，而这个值通常是 16px。这也就是为什么 1em = 16px 的原因所在了。&lt;/p&gt;
&lt;p&gt;em 在计算的时候是会层层计算的，比如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&amp;lt;div&amp;gt;  
    &amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;  
&amp;lt;/div&amp;gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 2em&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token selector&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 2em&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;对于如上一个结构的 HTML，由于根元素 html 的字体大小是 16px，所以 p 标签最终计算出来后的字体大小会是 16 * 2 * 2 = 64px&lt;/p&gt;
&lt;h4 id=&#34;rem&#34;&gt;rem&lt;/h4&gt;
&lt;p&gt;rem(root em) 和 em 一样，也是一个相对长度单位，不过 rem 相对的是 HTML 的根元素 html。&lt;/p&gt;
&lt;p&gt;rem 由于是基于 html 的 font-size 来计算，所以通常用于自适应网站或者 H5 中。&lt;/p&gt;
&lt;p&gt;比如在做 H5 的时候，前端通常会让 UI 给 750px 宽的设计图，而在开发的时候可以基于 iPhone X 的尺寸 375px * 812px 来写页面，这样一来的话，就可以用下面的 JS 依据当前页面的视口宽度自动计算出根元素 html 的基准 font-size 是多少。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;(function (doc, win)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token selector&#34;&gt;var docEl = doc.documentElement,  
        resizeEvt = &#39;orientationchange&#39; in window ? &#39;orientationchange&#39; : &#39;resize&#39;,  
        psdWidth = 750,  // 设计图宽度  
        recalc = function ()&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
            var clientWidth = docEl.clientWidth&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
            if &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; !clientWidth &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; return&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
            &lt;span class=&#34;token selector&#34;&gt;if ( clientWidth &amp;gt;= 640 )&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
                docEl.style.fontSize = 200 * &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; 640 / psdWidth &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; + &lt;span class=&#34;token string&#34;&gt;&#39;px&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
            &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;token selector&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
                docEl.style.fontSize = 200 * &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; clientWidth / psdWidth &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; + &lt;span class=&#34;token string&#34;&gt;&#39;px&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
            &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

    if &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; !doc.addEventListener &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; return&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    // 绑定事件的时候最好配合防抖函数  
    win.&lt;span class=&#34;token function&#34;&gt;addEventListener&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; resizeEvt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;debounce&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;recalc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 1000&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; false &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    doc.&lt;span class=&#34;token function&#34;&gt;addEventListener&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;DOMContentLoaded&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; recalc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; false &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

        &lt;span class=&#34;token selector&#34;&gt;function debounce(func, wait)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
        var timeout&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
        &lt;span class=&#34;token selector&#34;&gt;return function ()&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
            var context = this&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
            var args = arguments&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
            &lt;span class=&#34;token selector&#34;&gt;clearTimeout(timeout)  
            timeout = setTimeout(function()&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
                func.&lt;span class=&#34;token function&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
            &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; wait&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;document&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; window&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;比如当视口是 375px 的时候，经过计算 html 的 font-size 会是 100px，这样有什么好处呢？好处就是方便写样式，比如从设计图量出来的 header 高度是 50px 的，那我们写样式的时候就可以直接写：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;header&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0.5rem&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912160740.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;每个从设计图量出来的尺寸只要除于 100 即可得到当前元素的 rem 值，都不用经过计算，非常方便。偷偷告诉你，如果你把上面那串计算 html 标签 font-size 的 JS 代码中的 200 替换成 2，那在计算 rem 的时候就不需要除于 100 了，从设计图量出多大 px，就直接写多少个 rem。&lt;/p&gt;
&lt;h4 id=&#34;vw-vh&#34;&gt;vw/vh&lt;/h4&gt;
&lt;p&gt;vw 和 vh 分别是相对于屏幕视口宽度和高度而言的长度单位：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1vw = 视口宽度均分成 100 份中 1 份的长度；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1vh = 视口高度均分成 100 份中 1 份的长度；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 JS 中 100vw = window.innerWidth，100vh = window.innerHeight。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912160734.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;vw/vh 的出现使得多了一种写自适应布局的方案，开发者不再局限于 rem 了。&lt;/p&gt;
&lt;p&gt;相对视口的单位，除了 vw/vh 外，还有 vmin 和 vmax：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;vmin：取 vw 和 vh 中值较小的；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;vmax：取 vw 和 vh 中值较大的；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;颜色体系&#34;&gt;颜色体系&lt;/h3&gt;
&lt;p&gt;CSS 中用于表示颜色的值种类繁多，足够构成一个体系，所以这里就专门拿出一个小节来讲解它。&lt;/p&gt;
&lt;p&gt;根据 CSS 颜色草案[12] 中提到的颜色值类型，大概可以把它们分为这几类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;颜色关键字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;transparent 关键字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;currentColor 关键字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RGB 颜色&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HSL 颜色&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;颜色关键字&#34;&gt;颜色关键字&lt;/h4&gt;
&lt;p&gt;颜色关键字（color keywords）是不区分大小写的标识符，它表示一个具体的颜色，比如 white（白），黑（black）等；&lt;/p&gt;
&lt;p&gt;可接受的关键字列表在CSS的演变过程中发生了改变：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CSS 标准 1 只接受 16 个基本颜色，称为 VGA 颜色，因为它们来源于 VGA 显卡所显示的颜色集合而被称为 VGA colors （视频图形阵列色彩）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CSS 标准 2 增加了 orange 关键字。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从一开始，浏览器接受其它的颜色，由于一些早期浏览器是 X11 应用程序，这些颜色大多数是 X11 命名的颜色列表，虽然有一点不同。SVG 1.0 是首个正式定义这些关键字的标准；CSS 色彩标准 3 也正式定义了这些关键字。它们经常被称作扩展的颜色关键字， X11 颜色或 SVG 颜色 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CSS 颜色标准 4 添加可 rebeccapurple 关键字来纪念 web 先锋 Eric Meyer。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如下这张图是 16 个基础色，又叫 VGA 颜色。截止到目前为止 CSS 颜色关键字总共有 146 个，这里可以查看 完整的色彩关键字列表[13]。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912160733.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;VGA 颜色&lt;/p&gt;
&lt;p&gt;需要注意的是如果声明的时候的颜色关键字是错误的，浏览器会忽略它。&lt;/p&gt;
&lt;h4 id=&#34;transparent-关键字&#34;&gt;transparent 关键字&lt;/h4&gt;
&lt;p&gt;transparent 关键字表示一个完全透明的颜色，即该颜色看上去将是背景色。从技术上说，它是带有 alpha 通道为最小值的黑色，是 rgba(0,0,0,0) 的简写。&lt;/p&gt;
&lt;p&gt;透明关键字有什么应用场景呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实现三角形&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面这个图是用 4 条边框填充的正方形，看懂了它你大概就知道该如何用 CSS 写三角形了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912160726.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;border-top-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #ffc107&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;border-right-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #00bcd4&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;border-bottom-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #e26b6b&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;border-left-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #cc7cda&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;border-width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 50px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;border-style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; solid&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;用 transparent 实现三角形的原理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;首先宽高必须是 0px，通过边框的粗细来填充内容；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;那条边需要就要加上颜色，而不需要的边则用 transparent；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;想要什么样姿势的三角形，完全由上下左右 4 条边的中有颜色的边和透明的边的位置决定；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;等腰三角形：设置一条边有颜色，然后紧挨着的 2 边是透明，且宽度是有颜色边的一半；直角三角形：设置一条边有颜色，然后紧挨着的任何一边透明即可。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看下示例：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912160719.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;增大点击区域&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;常常在移动端的时候点击的按钮的区域特别小，但是由于现实效果又不太好把它做大，所以常用的一个手段就是通过透明的边框来增大按钮的点击区域：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;.btn&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 5px solid transparent&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;currentColor-关键字&#34;&gt;currentColor 关键字&lt;/h4&gt;
&lt;p&gt;currentColor 会取当前元素继承父级元素的文本颜色值或声明的文本颜色值，即 computed 后的 color 值。&lt;/p&gt;
&lt;p&gt;比如，对于如下 CSS，该元素的边框颜色会是 red：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;.btn&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid currentColor&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;RGB-A-颜色&#34;&gt;RGB[A] 颜色&lt;/h4&gt;
&lt;p&gt;RGB[A] 颜色是由 R(red)-G(green)-B(blue)-A(alpha) 组成的色彩空间。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912160707.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 CSS 中，它有两种表示形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;十六进制符号；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;函数符；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;十六进制符号&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;RGB 中的每种颜色的值范围是 00~ff，值越大表示颜色越深。所以一个颜色正常是 6 个十六进制字符加上 # 组成，比如红色就是 #ff0000。&lt;/p&gt;
&lt;p&gt;如果 RGB 颜色需要加上不透明度，那就需要加上 alpha 通道的值，它的范围也是 00~ff，比如一个带不透明度为 67% 的红色可以这样写 #ff0000aa。&lt;/p&gt;
&lt;p&gt;使用十六进制符号表示颜色的时候，都是用 2 个十六进制表示一个颜色，如果这 2 个字符相同，还可以缩减成只写 1 个，比如，红色 #f00；带 67% 不透明度的红色 #f00a。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;函数符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当 RGB 用函数表示的时候，每个值的范围是 0~255 或者 0%~100%，所以红色是 rgb(255, 0, 0)， 或者 rgb(100%, 0, 0)。&lt;/p&gt;
&lt;p&gt;如果需要使用函数来表示带不透明度的颜色值，值的范围是 0~1 及其之间的小数或者 0%~100%，比如带 67% 不透明度的红色是 rgba(255, 0, 0, 0.67) 或者 rgba(100%, 0%, 0%, 67%)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“&lt;/p&gt;
&lt;p&gt;需要注意的是 RGB 这 3 个颜色值需要保持一致的写法，要嘛用数字要嘛用百分比，而不透明度的值的可以不用和 RGB 保持一致写法。比如 rgb(100%, 0, 0) 这个写法是无效的；而 rgb(100%, 0%, 0%, 0.67) 是有效的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在第 4 代 CSS 颜色标准中，新增了一种新的函数写法，即可以把 RGB 中值的分隔逗号改成空格，而把 RGB 和 alpha 中的逗号改成 /，比如带 67% 不透明度的红色可以这样写 rgba(255 0 0 / 0.67)。另外还把 rgba 的写法合并到 rgb 函数中了，即 rgb 可以直接写带不透明度的颜色。&lt;/p&gt;
&lt;h4 id=&#34;HSL-A-颜色&#34;&gt;HSL[A] 颜色&lt;/h4&gt;
&lt;p&gt;HSL[A] 颜色是由色相(hue)-饱和度(saturation)-亮度(lightness)-不透明度组成的颜色体系。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912160701.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;色相（H）是色彩的基本属性，值范围是 0~360 或者 0deg~360deg， 0 (或 360) 为红色, 120 为绿色, 240 为蓝色；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;饱和度（S）是指色彩的纯度，越高色彩越纯，低则逐渐变灰，取 0~100% 的数值；0% 为灰色， 100% 全色；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;亮度（L），取 0~100%，0% 为暗，100% 为白；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不透明度（A），取 0&lt;sub&gt;100%，或者0&lt;/sub&gt;1及之间的小数；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;写法上可以参考 RGB 的写法，只是参数的值不一样。&lt;/p&gt;
&lt;p&gt;给一个按钮设置不透明度为 67% 的红色的 color 的写法，以下全部写法效果一致：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #ff0000aa&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #f00a&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;255&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 0.67&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;rgb&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;100% 0% 0% / 67%&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;hsla&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 100%&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 50%&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 67%&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;hsl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;0deg 100% 50% / 67%&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;小提示：在 Chrome DevTools 中可以按住 shift + 鼠标左键可以切换颜色的表示方式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912160642.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;媒体查询&#34;&gt;媒体查询&lt;/h3&gt;
&lt;p&gt;媒体查询是指针对不同的设备、特定的设备特征或者参数进行定制化的修改网站的样式。&lt;/p&gt;
&lt;p&gt;你可以通过给 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 加上 media 属性来指定该样式文件只能对什么设备生效，不指定的话默认是 all，即对所有设备都生效：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&amp;lt;link rel=&lt;span class=&#34;token string&#34;&gt;&#34;stylesheet&#34;&lt;/span&gt; src=&lt;span class=&#34;token string&#34;&gt;&#34;styles.css&#34;&lt;/span&gt; media=&lt;span class=&#34;token string&#34;&gt;&#34;screen&#34;&lt;/span&gt; /&amp;gt;  
&amp;lt;link rel=&lt;span class=&#34;token string&#34;&gt;&#34;stylesheet&#34;&lt;/span&gt; src=&lt;span class=&#34;token string&#34;&gt;&#34;styles.css&#34;&lt;/span&gt; media=&lt;span class=&#34;token string&#34;&gt;&#34;print&#34;&lt;/span&gt; /&amp;gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;都支持哪些设备类型？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;all：适用于所有设备；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;print：适用于在打印预览模式下在屏幕上查看的分页材料和文档；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;screen：主要用于屏幕；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;speech：主要用于语音合成器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意的是：通过 media 指定的  资源尽管不匹配它的设备类型，但是浏览器依然会加载它。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155838.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;除了通过 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 让指定设备生效外，还可以通过 &lt;code&gt;@media&lt;/code&gt; 让 CSS 规则在特定的条件下才能生效。响应式页面就是使用了 @media 才让一个页面能够同时适配 PC、Pad 和手机端。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token atrule&#34;&gt;&lt;span class=&#34;token rule&#34;&gt;@media&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;min-width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1000px&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;媒体查询支持逻辑操作符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;and：查询条件都满足的时候才生效；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;not：查询条件取反；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;only：整个查询匹配的时候才生效，常用语兼容旧浏览器，使用时候必须指定媒体类型；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逗号或者 or：查询条件满足一项即可匹配；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;媒体查询还支持众多的媒体特性[14]，使得它可以写出很复杂的查询条件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;/* 用户设备的最小高度为680px或为纵向模式的屏幕设备 */&lt;/span&gt;  
&lt;span class=&#34;token atrule&#34;&gt;&lt;span class=&#34;token rule&#34;&gt;@media&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;min-height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 680px&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; screen &lt;span class=&#34;token keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;orientation&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; portrait&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;常见需求&#34;&gt;常见需求&lt;/h2&gt;
&lt;h3 id=&#34;自定义属性&#34;&gt;自定义属性&lt;/h3&gt;
&lt;p&gt;之前我们通常是在预处理器里才可以使用变量，而现在 CSS 里也支持了变量的用法。通过自定义属性就可以在想要使用的地方引用它。&lt;/p&gt;
&lt;p&gt;自定义属性也和普通属性一样具有级联性，申明在 :root 下的时候，在全文档范围内可用，而如果是在某个元素下申明自定义属性，则只能在它及它的子元素下才可以使用。&lt;/p&gt;
&lt;p&gt;自定义属性必须通过 &lt;code&gt;--x&lt;/code&gt; 的格式申明，比如：--theme-color: red; 使用自定义属性的时候，需要用 var 函数。比如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;&amp;lt;!-- 定义自定义属性 --&amp;gt;  
:root&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;--theme-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token selector&#34;&gt;&amp;lt;!-- 使用变量 --&amp;gt;  
h1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;--theme-color&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155818.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上图这个是使用 CSS 自定义属性配合 JS 实现的动态调整元素的 box-shadow，具体可以看这个 codepen demo。&lt;/p&gt;
&lt;h3 id=&#34;1px-边框解决方案&#34;&gt;1px 边框解决方案&lt;/h3&gt;
&lt;p&gt;Retina 显示屏比普通的屏幕有着更高的分辨率，所以在移动端的 1px 边框就会看起来比较粗，为了美观通常需要把这个线条细化处理。这里有篇文章列举了 7 中方案可以参考一下：7种方法解决移动端Retina屏幕1px边框问题[15]&lt;/p&gt;
&lt;p&gt;而这里附上最后一种通过伪类和 transform 实现的相对完美的解决方案：&lt;/p&gt;
&lt;p&gt;只设置单条底部边框：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;.scale-1px-bottom&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; relative&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;none&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token selector&#34;&gt;.scale-1px-bottom::after&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; absolute&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;bottom&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #000&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 100%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;-webkit-transform&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;scaleY&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;0.5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;scaleY&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;0.5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;-webkit-transform-origin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;transform-origin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;同时设置 4 条边框：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;.scale-1px&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; relative&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;margin-bottom&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;none&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token selector&#34;&gt;.scale-1px::after&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; absolute&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid #000&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;-webkit-box-sizing&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; border-box&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;box-sizing&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; border-box&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 200%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 200%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;-webkit-transform&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;scale&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;0.5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;scale&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;0.5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;-webkit-transform-origin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; left top&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;transform-origin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; left top&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;清除浮动&#34;&gt;清除浮动&lt;/h3&gt;
&lt;p&gt;什么是浮动：浮动元素会脱离文档流并向左/向右浮动，直到碰到父元素或者另一个浮动元素。&lt;/p&gt;
&lt;p&gt;为什么要清楚浮动，它造成了什么问题？&lt;/p&gt;
&lt;p&gt;因为浮动元素会脱离正常的文档流，并不会占据文档流的位置，所以如果一个父元素下面都是浮动元素，那么这个父元素就无法被浮动元素所撑开，这样一来父元素就丢失了高度，这就是所谓的浮动造成的父元素高度坍塌问题。&lt;/p&gt;
&lt;p&gt;父元素高度一旦坍塌将对后面的元素布局造成影响，为了解决这个问题，所以需要清除浮动，让父元素恢复高度，那该如何做呢？&lt;/p&gt;
&lt;p&gt;这里介绍两种方法：通过 BFC 来清除、通过 clear 来清除。&lt;/p&gt;
&lt;h4 id=&#34;BFC-清除浮动&#34;&gt;BFC 清除浮动&lt;/h4&gt;
&lt;p&gt;前面介绍 BFC 的时候提到过，计算 BFC 高度的时候浮动子元素的高度也将计算在内，利用这条规则就可以清楚浮动。&lt;/p&gt;
&lt;p&gt;假设一个父元素 parent 内部只有 2 个子元素 child，且它们都是左浮动的，这个时候 parent 如果没有设置高度的话，因为浮动造成了高度坍塌，所以 parent 的高度会是 0，此时只要给 parent 创造一个 BFC，那它的高度就能恢复了。&lt;/p&gt;
&lt;p&gt;而产生 BFC 的方式很多，我们可以给父元素设置overflow: auto 来简单的实现 BFC 清除浮动，但是为了兼容 IE 最好用 overflow: hidden。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;.parent {  
    overflow: hidden;  
}  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;通过 overflow: hidden 来清除浮动并不完美，当元素有阴影或存在下拉菜单的时候会被截断，所以该方法使用比较局限。&lt;/p&gt;
&lt;h4 id=&#34;通过-clear-清除浮动&#34;&gt;通过 clear 清除浮动&lt;/h4&gt;
&lt;p&gt;我先把结论贴出来：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;.clearfix {  
    zoom: 1;  
}  
.clearfix::after {  
    content: &#34;&#34;;  
    display: block;  
    clear: both;  
}  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这种写法的核心原理就是通过 ::after 伪元素为在父元素的最后一个子元素后面生成一个内容为空的块级元素，然后通过 clear 将这个伪元素移动到所有它之前的浮动元素的后面，画个图来理解一下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155806.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以结合这个 codepen demo 一起理解上图的 clear 清楚浮动原理。&lt;/p&gt;
&lt;p&gt;上面这个 demo 或者图里为了展示需要所以给伪元素的内容设置为了 ::after，实际使用的时候需要设置为空字符串，让它的高度为 0，从而父元素的高度都是由实际的子元素撑开。&lt;/p&gt;
&lt;p&gt;该方式基本上是现在人人都在用的清除浮动的方案，非常通用。&lt;/p&gt;
&lt;p&gt;参考：CSS中的浮动和清除浮动，梳理一下[16]&lt;/p&gt;
&lt;h3 id=&#34;消除浏览器默认样式&#34;&gt;消除浏览器默认样式&lt;/h3&gt;
&lt;p&gt;针对同一个类型的 HTML 标签，不同的浏览器往往有不同的表现，所以在网站制作的时候，开发者通常都是需要将这些浏览器的默认样式清除，让网页在不同的浏览器上能够保持一致。&lt;/p&gt;
&lt;p&gt;针对清除浏览器默认样式这件事，在很早之前 CSS 大师 Eric A. Meyer 就干过。它就是写一堆通用的样式用来重置浏览器默认样式，这些样式通常会放到一个命名为 reset.css 文件中。比如大师的 reset.css[17] 是这么写的：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;html, body, div, span, applet, object, iframe,  
h1, h2, h3, h4, h5, h6, p, blockquote, pre,  
a, abbr, acronym, address, big, cite, code,  
del, dfn, em, img, ins, kbd, q, s, samp,  
small, strike, strong, sub, sup, tt, var,  
b, u, i, center,  
dl, dt, dd, ol, ul, li,  
fieldset, form, label, legend,  
table, caption, tbody, tfoot, thead, tr, th, td,  
article, aside, canvas, details, embed,   
figure, figcaption, footer, header, hgroup,   
menu, nav, output, ruby, section, summary,  
time, mark, audio, video&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 100%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;font&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; inherit&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;vertical-align&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; baseline&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token comment&#34;&gt;/* HTML5 display-role reset for older browsers */&lt;/span&gt;  
&lt;span class=&#34;token selector&#34;&gt;article, aside, details, figcaption, figure,   
footer, header, hgroup, menu, nav, section&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; block&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token selector&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;line-height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token selector&#34;&gt;ol, ul&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;list-style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; none&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token selector&#34;&gt;blockquote, q&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;quotes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; none&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token selector&#34;&gt;blockquote:before, blockquote:after,  
q:before, q:after&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; none&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token selector&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;border-collapse&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; collapse&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;border-spacing&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;他的这份 reset.css 据说是被使用最广泛的重设样式的方案了。&lt;/p&gt;
&lt;p&gt;除了 reset.css 外，后来又出现了 Normalize.css[18] 。关于 Normalize.css, 其作者 necolas 专门写了一篇文章介绍了它，并谈到了它和 reset.css 的区别。这个是他写那篇文章的翻译版：让我们谈一谈 Normalize.css[19]。&lt;/p&gt;
&lt;p&gt;文章介绍到：Normalize.css 只是一个很小的CSS文件，但它在默认的 HTML 元素样式上提供了跨浏览器的高度一致性。相比于传统的 CSS reset，Normalize.css 是一种现代的、为 HTML5 准备的优质替代方案，现在已经有很多知名的框架和网站在使用它了。&lt;/p&gt;
&lt;p&gt;Normalize.css 的具体样式可以看这里 Normalize.css&lt;/p&gt;
&lt;p&gt;区别于 reset.css，Normalize.css 有如下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;reset.css 几乎为所有标签都设置了默认样式，而 Normalize.css 则是有选择性的保护了部分有价值的默认值；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修复了很多浏览器的 bug，而这是 reset.css 没做到的；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不会让你的调试工具变的杂乱，相反 reset.css 由于设置了很多默认值，所以在浏览器调试工具中往往会看到一大堆的继承样式，显得很杂乱；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Normalize.css 是模块化的，所以可以选择性的去掉永远不会用到的部分，比如表单的一般化；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Normalize.css 有详细的说明文档；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;长文本处理&#34;&gt;长文本处理&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;默认：字符太长溢出了容器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155744.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;字符超出部分换行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1420210914005529.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;字符超出位置使用连字符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155738.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;单行文本超出省略&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1420210914005537.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;多行文本超出省略&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1420210914005552.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看以上这些方案的示例： codepen demo&lt;/p&gt;
&lt;p&gt;有意思的是刚好前两天看到 chokcoco 针对文本溢出也写了一篇文章，主要突出的是对整块的文本溢出处理。啥叫整块文本？比如，下面这种技术标签就是属于整块文本：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155731.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;另外他还对 iOS/Safari 做了兼容处理，感兴趣的可以去阅读下：CSS 整块文本溢出省略特性探究[20]。&lt;/p&gt;
&lt;h3 id=&#34;水平垂直居中&#34;&gt;水平垂直居中&lt;/h3&gt;
&lt;p&gt;让元素在父元素中呈现出水平垂直居中的形态，无非就 2 种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;单行的文本、inline 或者 inline-block 元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;固定宽高的块级盒子；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不固定宽高的块级盒子；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下列到的所有水平垂直居中方案这里写了个 codepen demo，配合示例阅读效果更佳。&lt;/p&gt;
&lt;h4 id=&#34;单行的文本、inline-或-inline-block-元素&#34;&gt;单行的文本、inline 或 inline-block 元素&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;水平居中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;此类元素需要水平居中，则父级元素必须是块级元素(&lt;code&gt;block level&lt;/code&gt;)，且父级元素上需要这样设置样式：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;.parent {  
    text-align: center;  
}  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;垂直居中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;方法一：通过设置上下内间距一致达到垂直居中的效果：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;.single-line {  
    padding-top: 10px;  
    padding-bottom: 10px;  
}  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;方法二：通过设置 &lt;code&gt;height&lt;/code&gt; 和 &lt;code&gt;line-height&lt;/code&gt; 一致达到垂直居中：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;.single-line {  
    height: 100px;  
    line-height: 100px;  
}  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;固定宽高的块级盒子&#34;&gt;固定宽高的块级盒子&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;方法一：absolute + 负 margin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1420210914005614.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法二：absolute + margin auto&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155724.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法三：absolute + calc&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1420210914005620.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;不固定宽高的块级盒子&#34;&gt;不固定宽高的块级盒子&lt;/h4&gt;
&lt;p&gt;这里列了 6 种方法，参考了颜海镜 写的文章 ，其中的两种 line-height 和 writing-mode 方案看后让我惊呼：还有这种操作？学到了学到了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法一：absolute + transform&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155717.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法二：line-height + vertical-align&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1420210914005627.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法三：writing-mode&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1420210914005633.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法四：table-cell&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1420210914005634.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法五：flex&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155710.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法六：grid&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155704.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;常用布局&#34;&gt;常用布局&lt;/h3&gt;
&lt;h4 id=&#34;两栏布局（边栏定宽主栏自适应）&#34;&gt;两栏布局（边栏定宽主栏自适应）&lt;/h4&gt;
&lt;p&gt;针对以下这些方案写了几个示例： codepen demo&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法一：float + overflow（BFC 原理）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1420210914005646.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法二：float + margin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155657.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法三：flex&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1420210914005701.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法四：grid&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155650.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;三栏布局（两侧栏定宽主栏自适应）&#34;&gt;三栏布局（两侧栏定宽主栏自适应）&lt;/h4&gt;
&lt;p&gt;针对以下这些方案写了几个示例： codepen demo&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法一：圣杯布局&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155616.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法二：双飞翼布局&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155643.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法三：float + overflow（BFC 原理）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155556.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法四：flex&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155633.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法五：grid&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155549.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;多列等高布局&#34;&gt;多列等高布局&lt;/h4&gt;
&lt;p&gt;结合示例阅读更佳：codepen demo&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法一：padding + 负margin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1420210914005719.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法二：设置父级背景图片&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155542.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;三行布局（头尾定高主栏自适应）&#34;&gt;三行布局（头尾定高主栏自适应）&lt;/h4&gt;
&lt;p&gt;列了 4 种方法，都是基于如下的 HTML 和 CSS 的，结合示例阅读效果更佳：codepen demo&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&amp;lt;div class=&lt;span class=&#34;token string&#34;&gt;&#34;layout&#34;&lt;/span&gt;&amp;gt;  
    &amp;lt;header&amp;gt;&amp;lt;/header&amp;gt;  
    &amp;lt;main&amp;gt;  
        &amp;lt;div class=&lt;span class=&#34;token string&#34;&gt;&#34;inner&#34;&lt;/span&gt;&amp;gt;&amp;lt;/div&amp;gt;  
    &amp;lt;/main&amp;gt;  
    &amp;lt;footer&amp;gt;&amp;lt;/footer&amp;gt;  
&amp;lt;/div&amp;gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;html,  
body,  
.layout&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 100%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token selector&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token selector&#34;&gt;header,   
footer&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 50px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;token selector&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;token property&#34;&gt;overflow-y&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; auto&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;方法一：calc&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155519.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法二：absolute&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155509.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法三：flex&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155502.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法四：grid&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912155500.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;结了个尾&#34;&gt;结了个尾&lt;/h2&gt;
&lt;p&gt;这是我断断续续写了 2 周完成的文章，算是自己对 CSS 的一个总结，虽然写得很长，但不足以覆盖所有 CSS 的知识，比如动画和一些 CSS3 的新特性就完全没涉及，因为这要写下来估计得有大几万字（其实就是懒 😝 ）。&lt;/p&gt;
&lt;p&gt;码字作图不易，如果喜欢或者对你有丝毫帮助的话，帮忙点个👍 哈，点赞就是我的动力。同时也希望自己能坚持认真的写下去，因为在总结提升自己的同时如果也能帮助更多的前端er，那将会让我感觉很开心。&lt;/p&gt;
&lt;h3 id=&#34;参考资料&#34;&gt;参考资料&lt;/h3&gt;
&lt;p&gt;[1]@charset: &lt;em&gt;https://developer.mozilla.org/zh-CN/docs/Web/CSS/@charset&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[2]Byte order mark: &lt;em&gt;https://en.wikipedia.org/wiki/Byte_order_mark&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[3]@import: &lt;em&gt;https://developer.mozilla.org/zh-CN/docs/Web/CSS/@import&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[4]@supports: &lt;em&gt;https://developer.mozilla.org/zh-CN/docs/Web/CSS/@supports&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[5]MDN CSS Selectors: &lt;em&gt;https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[6]Visual formatting model: &lt;em&gt;https://www.w3.org/TR/CSS2/visuren.html&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[7]CSS 原理 - 你所不知道的 display: &lt;em&gt;https://yachen168.github.io/article/display.html&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[8]格式化上下文: &lt;em&gt;https://ithelp.ithome.com.tw/articles/10223896?sc=pt&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[9]CSS 原理 - Formatting Context: &lt;em&gt;https://yachen168.github.io/article/Formatting-context.html&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[10]Inline formatting contexts: &lt;em&gt;https://www.w3.org/TR/CSS2/visuren.html#inline-formatting&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[11]彻底搞懂CSS层叠上下文、层叠等级、层叠顺序、z-index: &lt;em&gt;https://juejin.cn/post/6844903667175260174&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[12]CSS 颜色草案: &lt;em&gt;https://drafts.csswg.org/css-color-3/&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[13]完整的色彩关键字列表: &lt;em&gt;https://codepen.io/bulandent/pen/gOLovwL&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[14]众多的媒体特性: &lt;em&gt;https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Media_queries#%E5%AA%92%E4%BD%93%E7%89%B9%E6%80%A7&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[15]7种方法解决移动端Retina屏幕1px边框问题: &lt;em&gt;https://www.jianshu.com/p/7e63f5a32636&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[16]CSS中的浮动和清除浮动，梳理一下: &lt;em&gt;https://www.jianshu.com/p/09bd5873bed4&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[17]reset.css: &lt;em&gt;https://meyerweb.com/eric/tools/css/reset/&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[18]Normalize.css: &lt;em&gt;https://github.com/necolas/normalize.css&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[19]让我们谈一谈 Normalize.css: &lt;em&gt;https://jerryzou.com/posts/aboutNormalizeCss/&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[20]CSS 整块文本溢出省略特性探究: &lt;em&gt;https://juejin.cn/post/6938583040469762055&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;From &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://mp.weixin.qq.com/s/UtYENocSsl0R10h8fww7Iw&#34;&gt;https://mp.weixin.qq.com/s/UtYENocSsl0R10h8fww7Iw&lt;/a&gt;&lt;/p&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/bilicard.css&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="web" />
        <category term="http" />
        <category term="ccs" />
        <updated>2021-09-15T11:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.17lai.site/posts/69a052c9/</id>
        <title>浏览器的渲染过程</title>
        <link rel="alternate" href="https://blog.17lai.site/posts/69a052c9/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;通常，我们只需要编写HTML，CSS，JavaScript，浏览器上就能呈现出漂亮的网页了，但是浏览器是如何使用我们的代码在屏幕上渲染像素的呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;首先，请先看一张大图&#34;&gt;&lt;strong&gt;首先，请先看一张大图&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;浏览器将HTML，CSS，JavaScript代码转换成屏幕上所能呈现的实际像素，这期间所经历的一系列步骤，叫做关键渲染路径（Critical Rendering Path）。其中包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;构建对象模型（DOM，CSSOM）&lt;/li&gt;
&lt;li&gt;构建渲染树（RenderTree）&lt;/li&gt;
&lt;li&gt;布局&lt;/li&gt;
&lt;li&gt;渲染&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在构建对象模型到构建渲染树的这一过程，还穿插着JS脚本的加载和执行。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913220512.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-DOMTree的构建&#34;&gt;&lt;strong&gt;1.DOMTree的构建&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;浏览器的渲染从解析HTML文档开始，宏观上，可以分为下面几个步骤：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913220515.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一步（解析）：从网络或者磁盘下读取的HTML原始字节码，通过设置的charset编码，转换成相字符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913220653.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第二步（token化）：通过词法分析器，将字符串解析成Token，Token中会标注出当前的Token是&lt;code&gt;开始标签&lt;/code&gt;，还是&lt;code&gt;结束标签&lt;/code&gt;，或者&lt;code&gt;文本标签&lt;/code&gt;等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913220522.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第三步（生成Nodes并构建DOM树）：浏览器会根据Tokens里记录的&lt;code&gt;开始标签&lt;/code&gt;，&lt;code&gt;结束标签&lt;/code&gt;，将Tokens之间相互串联起来_（带有结束标签的Token不会生成Node）_。&lt;br&gt;
Node包含了这个节点的所有属性。例如&lt;code&gt;&amp;lt;img src=&#34;xxx.png&#34; &amp;gt;&lt;/code&gt;标签最终生成出的节点对象中会保存图片地址等信息。&lt;br&gt;
事实上，在构建DOM树时，不是要等所有的Tokens都转换成Nodes后才开始，而是一边生成Token一边采取&lt;code&gt;深度遍历算法&lt;/code&gt;消耗Token来生成Node，如下图所示：&lt;br&gt;
图中有颜色的小数字代表构建的具体步骤，可以看出，首先生成出&lt;code&gt;html Token&lt;/code&gt;,并消耗Token创建出&lt;code&gt;html 节点对象&lt;/code&gt;，接着生成&lt;code&gt;head Token&lt;/code&gt;并消耗Token创建出&lt;code&gt;head节点对象&lt;/code&gt;......，当所有的Tokens都消耗完了，紧接着DOM树也就构建完了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913220658.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里抛出个小问题，为什么有时在js中访问DOM时浏览器会报错呢？&lt;br&gt;
因为在上述的解析的过程中，如果碰到了&lt;code&gt;script&lt;/code&gt;或者&lt;code&gt;link&lt;/code&gt;标签，就会根据&lt;code&gt;src&lt;/code&gt;对应的地址去加载资源，在&lt;code&gt;script&lt;/code&gt;标签没有设置&lt;code&gt;async/defer&lt;/code&gt;属性时，这个加载过程是&lt;code&gt;下载并执行完全部的代码&lt;/code&gt;，此时，DOM树还没有完全创建完毕，这个时候如果js企图访问script标签后面的DOM元素，浏览器就会抛出&lt;strong&gt;找不到该DOM元素&lt;/strong&gt;的错误。&lt;br&gt;
值得注意的是：从bytes到Tokens的这个过程，浏览器都可以交给其他单独的线程去处理，不会堵塞浏览器的渲染线程。但是后面的部分就都在渲染线程下进行了，也就是我们常说的js单线程环境。&lt;/p&gt;
&lt;h3 id=&#34;2-CSSOMTree的构建&#34;&gt;&lt;strong&gt;2.CSSOMTree的构建&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;DOM会记录页面的内容，但是浏览器还需要知道这些内容该用什么样式去展示，所以还需要构建CSSOMTree。CSSOM的生成过程和DOM的生成过程十分相似，也是：1.解析，2.Token化，3.生成Nodes并构建CSSOMTree：&lt;/p&gt;
&lt;p&gt;假设浏览器收到了下面这样一段css:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 16px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token selector&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;font-weight&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; bold&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token selector&#34;&gt;p span&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;none&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token selector&#34;&gt;span&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token selector&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; right&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最终会生成如下的CSSOMTree:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913220529.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;从图中可以看出，最开始&lt;code&gt;body&lt;/code&gt;有一个样式规则是&lt;code&gt;font-size:16px&lt;/code&gt;，之后，在body这个样式基础上每个子节点还会添加自己单独的样式规则，比如&lt;code&gt;span&lt;/code&gt;又添加了一个样式规则&lt;code&gt;color:red&lt;/code&gt;。正是因为样式这种类似于继承的特性，浏览器设定了一条规则：&lt;strong&gt;CSSOMTree需要等到完全构建后才可以被使用，因为后面的属性可能会覆盖掉前面的设置&lt;/strong&gt;。比如在上面的css代码基础上再添加一行代码&lt;code&gt;p {font-size:12px}&lt;/code&gt;，那么之前设置的&lt;code&gt;16px&lt;/code&gt;将会被覆盖成&lt;code&gt;12px&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;下面是官方给的一种解释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;未构建完的CSSOMTree是不准确的，浏览器必须等到CSSOMTree构建完毕后才能进入下一阶段。&lt;br&gt;
所以，CSS的加载速度与构建CSSOMTree的速度将直接影响首屏渲染速度，因此在默认情况下CSS被视为阻塞渲染的资源，需要将它尽早、尽快地下载到客户端，以便缩短首次渲染的时间。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么回到上面生成DOM时提到的JS问题：&lt;strong&gt;在标签没有设置&lt;code&gt;async/defer&lt;/code&gt;属性时，js会阻塞DOM的生成&lt;/strong&gt;。原因是js会改变DOMTree的内容，如果不阻塞，会出现一边生成DOM内容，一边修改DOM内容的情况，无法确保最终生成的DOMTree是确定唯一的。&lt;/p&gt;
&lt;p&gt;同理，JS也会可以修改CSS样式，影响CSSOMTree最终的结果。而我们前面提到，不完整的CSSOMTree是不可以被使用的，如果JS试图在&lt;strong&gt;浏览器还未完成CSSOMTree的下载和构建&lt;/strong&gt;时去操作CSS样式，浏览器会&lt;strong&gt;暂停脚本的运行和DOM的构建&lt;/strong&gt;，直至浏览器完成了CSSOM的下载和构建。也就是说，&lt;strong&gt;JS脚本的出现会让CSSOM的构建阻塞DOM的构建&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;平时谈及页面性能优化，经常会强调css文件应该放在html文档中的前面引入，js文件应该放在后面引入，这么做的原因是什么呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;举个例子：本来，DOM构建和CSSOM构建是两个过程，井水不犯河水。假设DOM构建完成需要1s，CSSOM构建也需要1s，在DOM构建了0.2s时发现了一个&lt;code&gt;link&lt;/code&gt;标签，此时完成这个操作需要的时间大概是1.2s，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913220540.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;而此时我们在HTML文档的中间插中入了一段JS代码，在DOM构建中间的过程中发现了这个&lt;code&gt;script&lt;/code&gt;标签，假设这段JS代码只需要执行0.0001s，那么完成这个操作需要的时间就会变成：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913220546.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;那如果我们把css放到前面，js放到最后引入时，构建时间会变成：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913220705.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;由此可见，虽然只是插入了小小的一段只运行0.0001s的js代码，不同的引入时机也会严重影响DOMTree的构建速度。&lt;/p&gt;
&lt;p&gt;简而言之，如果在DOM，CSSOM和JavaScript执行之间引入大量的依赖关系，可能会导致浏览器在处理渲染资源时出现大幅度延迟：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当浏览器遇到一个script标签时，DOMTree的构建将被暂停，直至脚本执行完毕&lt;/li&gt;
&lt;li&gt;JavaScript可以查询和修改DOMTree与CSSOMTree&lt;/li&gt;
&lt;li&gt;直至CSSOM构建完毕，JavaScript才会执行&lt;/li&gt;
&lt;li&gt;脚本在文档中的位置很重要&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-渲染树的构建&#34;&gt;&lt;strong&gt;3.渲染树的构建&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;现在，我们已经拥有了完整的DOM树和CSSOM树。DOM 树上每一个节点对应着网页里每一个元素，CSSOM树上每个节点对应着网页里每个元素的样式，并且此时浏览器也可以通过 JavaScript 操作DOM/CSSOM树，动态改变它的结构。但是DOM/CSSOM树本身并不能直接用于排版和渲染，浏览器还会生成另外一棵树：Render树&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913220711.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来我们来谈几条概念&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Render 树上的每一个节点被称为：&lt;code&gt;RenderObject&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RenderObject跟 DOM 节点几乎是一一对应的，当一个&lt;code&gt;可见的 DOM 节点&lt;/code&gt;被添加到 DOM 树上时，内核就会为它生成对应的 RenderOject 添加到 Render 树上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其中，可见的DOM节点不包括：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一些不会体现在渲染输出中的节点（&lt;code&gt;&amp;lt;html&amp;gt;&amp;lt;script&amp;gt;&amp;lt;link&amp;gt;….&lt;/code&gt;），会直接被忽略掉。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过CSS隐藏的节点。例如上图中的&lt;code&gt;span&lt;/code&gt;节点，因为有一个CSS显式规则在该节点上设置了&lt;code&gt;display:none&lt;/code&gt;属性，那么它在生成RenderObject时会被直接忽略掉。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Render 树是衔接浏览器排版引擎和渲染引擎之间的&lt;strong&gt;桥梁&lt;/strong&gt;，它是&lt;strong&gt;排版引擎的输出，渲染引擎的输入&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此时的Render树上，已经包含了网页上所有可见元素的内容和位置信息 排版引擎会根据Render树的内容和结构，准确的计算出元素该在网页上的什么位置。到此，我们已经具备进入布局的一切准备条件，但是通过上面我们知道，布局后面还有一个渲染过程，那么_Render 树是衔接浏览器排版引擎和渲染引擎之间的桥梁，它是排版引擎的输出，渲染引擎的输入。_这句话是什么意思呢？&lt;/p&gt;
&lt;h3 id=&#34;RenderObject-and-RenderLayer&#34;&gt;&lt;strong&gt;RenderObject and RenderLayer&lt;/strong&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;浏览器渲染引擎并不是直接使用Render树进行绘制，为了方便处理&lt;strong&gt;Positioning,Clipping,Overflow-scroll,CSS Transfrom/Opacrity/Animation/Filter,Mask or Reflection,Z-indexing&lt;/strong&gt;等属性，浏览器需要生成另外一棵树：&lt;strong&gt;Layer树&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913220730.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;浏览器会为一些&lt;strong&gt;特定&lt;/strong&gt;的&lt;code&gt;RenderObject&lt;/code&gt;生成对应的&lt;code&gt;RenderLayer&lt;/code&gt;，其中的规则是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是否是页面的根节点 &lt;em&gt;It’s the root object for the page&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;是否有css的一些布局属性（relative absolute or a transform) &lt;em&gt;It has explicit CSS position properties (relative, absolute or a transform)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;是否透明 &lt;em&gt;It is transparent&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;是否有溢出 &lt;em&gt;Has overflow, an alpha mask or reflection&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;是否有css滤镜 &lt;em&gt;Has a CSS filter&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;是否包含一个canvas元素使得节点拥有视图上下文 &lt;em&gt;Corresponds to canvas element that has a 3D (WebGL) context or an accelerated 2D context&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;是否包含一个video元素 &lt;em&gt;Corresponds to a video element&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当满足上面其中一个条件时，这个&lt;code&gt;RrenderObject&lt;/code&gt;就会被浏览器选中生成对应的&lt;code&gt;RenderLayer&lt;/code&gt;。至于那些没有被命运选中的RrenderObject，会从属与父节点的RenderLayer。最终，每个RrenderObject都会直接或者间接的属于一个RenderLayer。&lt;/p&gt;
&lt;p&gt;浏览器渲染引擎在布局和渲染时会遍历整个Layer树，访问每一个&lt;code&gt;RenderLayer&lt;/code&gt;，再遍历从属于这个RenderLayer的 &lt;code&gt;RrenderObject&lt;/code&gt;，将每一个 RenderObject 绘制出来。可以理解为：Layer 树决定了网页绘制的层次顺序，而从属于RenderLayer 的 RrenderObject决定了这个 Layer 的内容，所有的 &lt;code&gt;RenderLayer&lt;/code&gt; 和 &lt;code&gt;RrenderObject&lt;/code&gt; 一起就决定了网页在屏幕上最终呈现出来的内容。&lt;/p&gt;
&lt;h3 id=&#34;4-布局&#34;&gt;&lt;strong&gt;4.布局&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;到目前为止，浏览器计算出了哪些节点是可见的以及它的信息和样式，接下来就需要计算这些节点在设备视口内的确切位置和大小，这个过程我们称之为“布局”。&lt;/p&gt;
&lt;p&gt;布局最后的输出是一个“盒模型”：将所有相对测量值都转换成屏幕上的绝对像素。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913220553.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;5-渲染&#34;&gt;&lt;strong&gt;5.渲染&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;最后，既然我们知道了哪些节点可见、它们的计算样式以及几何信息，我们终于可以将这些信息传递给最后一个阶段：将渲染树中的每个节点转换成屏幕上的实际像素：浏览器通过发出“Paint Setup”和“Paint”事件，将渲染树转换成屏幕上的像素。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913220718.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;至此，我们就能够在浏览器上看到漂亮的网页了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;谈及页面性能优化，我们也常说要尽量减少浏览器的重排和重绘，浏览器重排和重绘时究竟做了哪些工作呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们平时常说的重排，其实就是浏览器计算render树，布局到渲染的这个过程，而重绘就是计算layer树到渲染的这个过程，每当触发一次重绘和重排时，浏览器都需要重新经过一遍上述的计算。很显然，重排会产生比重绘更大的开销，但无论是重排还是重绘，都会给浏览器渲染线程造成很大的负担，所以，我们在实际生产中要严格注意减少重排和重绘的触发。至于如何减少重排和重绘的次数，这里就不多做展开了，详细请听下回分解~&lt;/p&gt;
&lt;h3 id=&#34;总结：-2&#34;&gt;&lt;strong&gt;总结：&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;经过：1.构建对象模型（DOM，CSSOM），2.构建渲染树（RenderTree），3.布局，4.渲染 这几个步骤后，我们就能在浏览器上看到漂亮的网页啦。&lt;/li&gt;
&lt;li&gt;CSS被视为阻塞渲染的资源，应放到代码的头部尽快加载。&lt;/li&gt;
&lt;li&gt;同步的JavaScript会暂停DOMTree的构建，应放到代码的尾部最后加载，或者使用&lt;code&gt;async/defer属性&lt;/code&gt;异步加载JavaScript。&lt;/li&gt;
&lt;li&gt;重排和重绘会给浏览器渲染线程造成很大的负担，尽量减少重排和重绘的触发次数&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;参考文献：&#34;&gt;&lt;strong&gt;参考文献：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//developers.google.com/web/fundamentals/performance/critical-rendering-path/constructing-the-object-model%3Fhl%3Dzh-cn&#34;&gt;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/constructing-the-object-model?hl=zh-cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction%3Fhl%3Dzh-cn&#34;&gt;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction?hl=zh-cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//developers.google.com/web/fundamentals/performance/critical-rendering-path/render-blocking-css%3Fhl%3Dzh-cn&#34;&gt;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-blocking-css?hl=zh-cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzA5NzkwNDk3MQ%3D%3D%26mid%3D2650588806%26idx%3D1%26sn%3D408a54e7c8102fd6944c9a40b119015a%26scene%3D21%23wechat_redirect&#34;&gt;https://mp.weixin.qq.com/s?__biz=MzA5NzkwNDk3MQ==&amp;amp;mid=2650588806&amp;amp;idx=1&amp;amp;sn=408a54e7c8102fd6944c9a40b119015a&amp;amp;scene=21#wechat_redirect&lt;/a&gt;&lt;/p&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/bilicard.css&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="web" />
        <category term="http" />
        <category term="css" />
        <category term="js" />
        <updated>2021-09-13T14:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.17lai.site/posts/656a0abb/</id>
        <title>在浏览器输入 URL 回车之后发生了什么</title>
        <link rel="alternate" href="https://blog.17lai.site/posts/656a0abb/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;这个问题已经是老生常谈了，更是经常被作为面试的压轴题出现，网上也有很多文章，但最近闲的无聊，然后就自己做了一篇笔记，感觉比之前理解更透彻了。&lt;/p&gt;
&lt;p&gt;这篇笔记是我这两天看了数十篇文章总结出来的，所以相对全面一点，但由于我是做前端的，所以会比较重点分析浏览器渲染页面那一部分，至于其他部分我会罗列出关键词，感兴趣的可以自行查阅，&lt;/p&gt;
&lt;p&gt;**注意：**本文的步骤是建立在，请求的是一个简单的 HTTP 请求，没有 HTTPS、HTTP2、最简单的 DNS、没有代理、并且服务器没有任何问题的基础上，尽管这是不切实际的。&lt;/p&gt;
&lt;h2 id=&#34;大致流程&#34;&gt;大致流程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;URL 解析&lt;/li&gt;
&lt;li&gt;DNS 查询&lt;/li&gt;
&lt;li&gt;TCP 连接&lt;/li&gt;
&lt;li&gt;处理请求&lt;/li&gt;
&lt;li&gt;接受响应&lt;/li&gt;
&lt;li&gt;渲染页面&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;一、URL-解析&#34;&gt;一、URL 解析&lt;/h2&gt;
&lt;h3 id=&#34;地址解析：&#34;&gt;&lt;strong&gt;地址解析：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;首先判断你输入的是一个合法的 URL 还是一个待搜索的关键词，并且根据你输入的内容进行自动完成、字符编码等操作。&lt;/p&gt;
&lt;h3 id=&#34;HSTS&#34;&gt;&lt;strong&gt;HSTS&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;由于安全隐患，会使用 HSTS 强制客户端使用 HTTPS 访问页面。详见：&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.barretlee.com/blog/2015/10/22/hsts-intro/&#34;&gt;你所不知道的 HSTS (opens new window)&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;其他操作&#34;&gt;&lt;strong&gt;其他操作&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;浏览器还会进行一些额外的操作，比如安全检查、访问限制（之前国产浏览器限制 996.icu）。&lt;/p&gt;
&lt;h3 id=&#34;检查缓存&#34;&gt;&lt;strong&gt;检查缓存&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913094301.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;二、DNS-查询&#34;&gt;二、DNS 查询&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;基本步骤&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913094305.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-浏览器缓存&#34;&gt;&lt;strong&gt;1. 浏览器缓存&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;浏览器会先检查是否在缓存中，没有则调用系统库函数进行查询。&lt;/p&gt;
&lt;h3 id=&#34;2-操作系统缓存&#34;&gt;&lt;strong&gt;2. 操作系统缓存&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;操作系统也有自己的 DNS 缓存，但在这之前，会向检查域名是否存在本地的 Hosts 文件里，没有则向 DNS 服务器发送查询请求。&lt;/p&gt;
&lt;h3 id=&#34;3-路由器缓存&#34;&gt;&lt;strong&gt;3. 路由器缓存&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;路由器也有自己的缓存。&lt;/p&gt;
&lt;h3 id=&#34;4-ISP-DNS-缓存&#34;&gt;&lt;strong&gt;4. ISP DNS 缓存&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;ISP DNS 就是在客户端电脑上设置的首选 DNS 服务器，它们在大多数情况下都会有缓存。&lt;/p&gt;
&lt;h3 id=&#34;根域名服务器查询&#34;&gt;&lt;strong&gt;根域名服务器查询&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;在前面所有步骤没有缓存的情况下，本地 DNS 服务器会将请求转发到互联网上的根域，下面这个图很好的诠释了整个流程：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913094311.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;根域名服务器：&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://zh.wikipedia.org/wiki/%E6%A0%B9%E7%B6%B2%E5%9F%9F%E5%90%8D%E7%A8%B1%E4%BC%BA%E6%9C%8D%E5%99%A8&#34;&gt;维基百科 (opens new window)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;需要注意的点&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;递归方式：一路查下去中间不返回，得到最终结果才返回信息（浏览器到本地 DNS 服务器的过程）&lt;/li&gt;
&lt;li&gt;迭代方式，就是本地 DNS 服务器到根域名服务器查询的方式。&lt;/li&gt;
&lt;li&gt;什么是 DNS 劫持&lt;/li&gt;
&lt;li&gt;前端 dns-prefetch 优化&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;三、TCP-连接&#34;&gt;三、TCP 连接&lt;/h2&gt;
&lt;p&gt;TCP/IP 分为四层，在发送数据时，每层都要对数据进行封装：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913094325.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-应用层：发送-HTTP-请求&#34;&gt;&lt;strong&gt;1. 应用层：发送 HTTP 请求&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;在前面的步骤我们已经得到服务器的 IP 地址，浏览器会开始构造一个 HTTP 报文，其中包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请求报头（Request Header）：请求方法、目标地址、遵循的协议等等&lt;/li&gt;
&lt;li&gt;请求主体（其他参数）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中需要注意的点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浏览器只能发送 GET、POST 方法，而打开网页使用的是 GET 方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-传输层：TCP-传输报文&#34;&gt;&lt;strong&gt;2. 传输层：TCP 传输报文&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;传输层会发起一条到达服务器的 TCP 连接，为了方便传输，会对数据进行分割（以报文段为单位），并标记编号，方便服务器接受时能够准确地还原报文信息。&lt;/p&gt;
&lt;p&gt;在建立连接前，会先进行 TCP 三次握手。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关于 TCP/IP 三次握手，网上已经有很多段子和图片生动地描述了。&lt;/p&gt;
&lt;p&gt;相关知识点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SYN 泛洪攻击&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;3-网络层：IP-协议查询-Mac-地址&#34;&gt;&lt;strong&gt;3. 网络层：IP 协议查询 Mac 地址&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;将数据段打包，并加入源及目标的 IP 地址，并且负责寻找传输路线。&lt;/p&gt;
&lt;p&gt;判断目标地址是否与当前地址处于同一网络中，是的话直接根据 Mac 地址发送，否则使用路由表查找下一跳地址，以及使用 ARP 协议查询它的 Mac 地址。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：在 OSI 参考模型中 ARP 协议位于链路层，但在 TCP/IP 中，它位于网络层。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;4-链路层：以太网协议&#34;&gt;&lt;strong&gt;4. 链路层：以太网协议&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;以太网协议&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据以太网协议将数据分为以“帧”为单位的数据包，每一帧分为两个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标头：数据包的发送者、接受者、数据类型&lt;/li&gt;
&lt;li&gt;数据：数据包具体内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Mac 地址&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以太网规定了连入网络的所有设备都必须具备“网卡”接口，数据包都是从一块网卡传递到另一块网卡，网卡的地址就是 Mac 地址。每一个 Mac 地址都是独一无二的，具备了一对一的能力。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;广播&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;发送数据的方法很原始，直接把数据通过 ARP 协议，向本网络的所有机器发送，接收方根据标头信息与自身 Mac 地址比较，一致就接受，否则丢弃。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：接收方回应是单播。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;相关知识点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ARP 攻击&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;服务器接受请求&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;接受过程就是把以上步骤逆转过来，参见上图。&lt;/p&gt;
&lt;h2 id=&#34;四、服务器处理请求&#34;&gt;四、服务器处理请求&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;大致流程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913094339.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;HTTPD&#34;&gt;&lt;strong&gt;HTTPD&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;最常见的 HTTPD 有 Linux 上常用的 Apache 和 Nginx，以及 Windows 上的 IIS。&lt;/p&gt;
&lt;p&gt;它会监听得到的请求，然后开启一个子进程去处理这个请求。&lt;/p&gt;
&lt;h3 id=&#34;处理请求&#34;&gt;&lt;strong&gt;处理请求&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;接受 TCP 报文后，会对连接进行处理，对 HTTP 协议进行解析（请求方法、域名、路径等），并且进行一些验证：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;验证是否配置虚拟主机&lt;/li&gt;
&lt;li&gt;验证虚拟主机是否接受此方法&lt;/li&gt;
&lt;li&gt;验证该用户可以使用该方法（根据 IP 地址、身份信息等）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;重定向&#34;&gt;&lt;strong&gt;重定向&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;假如服务器配置了 HTTP 重定向，就会返回一个 &lt;code&gt;301&lt;/code&gt;永久重定向响应，浏览器就会根据响应，重新发送 HTTP 请求（重新执行上面的过程）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关于更多：&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.cnblogs.com/workest/p/3891321.html&#34;&gt;详见这篇文章 (opens new window)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;URL-重写&#34;&gt;&lt;strong&gt;URL 重写&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;然后会查看 URL 重写规则，如果请求的文件是真实存在的，比如图片、html、css、js 文件等，则会直接把这个文件返回。&lt;/p&gt;
&lt;p&gt;否则服务器会按照规则把请求重写到 一个 REST 风格的 URL 上。&lt;/p&gt;
&lt;p&gt;然后根据动态语言的脚本，来决定调用什么类型的动态文件解释器来处理这个请求。&lt;/p&gt;
&lt;p&gt;以 PHP 语言的 MVC 框架举例，它首先会初始化一些环境的参数，根据 URL 由上到下地去匹配路由，然后让路由所定义的方法去处理请求。&lt;/p&gt;
&lt;h2 id=&#34;五、浏览器接受响应&#34;&gt;五、浏览器接受响应&lt;/h2&gt;
&lt;p&gt;浏览器接收到来自服务器的响应资源后，会对资源进行分析。&lt;/p&gt;
&lt;p&gt;首先查看 Response header，根据不同状态码做不同的事（比如上面提到的重定向）。&lt;/p&gt;
&lt;p&gt;如果响应资源进行了压缩（比如 gzip），还需要进行解压。&lt;/p&gt;
&lt;p&gt;然后，对响应资源做缓存。&lt;/p&gt;
&lt;p&gt;接下来，根据响应资源里的 &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types&#34;&gt;MIME (opens new window)&lt;/a&gt; 类型去解析响应内容（比如 HTML、Image 各有不同的解析方式）。&lt;/p&gt;
&lt;h2 id=&#34;六、渲染页面&#34;&gt;六、渲染页面&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;浏览器内核&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913094432.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;不同的浏览器内核，渲染过程也不完全相同，但大致流程都差不多。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基本流程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913094347.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-HTML-解析&#34;&gt;&lt;strong&gt;1. HTML 解析&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;首先要知道浏览器解析是从上往下一行一行地解析的。&lt;/p&gt;
&lt;p&gt;解析的过程可以分为四个步骤：&lt;/p&gt;
&lt;h4 id=&#34;1-解码（encoding）&#34;&gt;&lt;strong&gt;1. 解码（encoding）&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;传输回来的其实都是一些二进制字节数据，浏览器需要根据文件指定编码（例如 UTF-8）转换成字符串，也就是 HTML 代码。&lt;/p&gt;
&lt;h4 id=&#34;2-预解析（pre-parsing）&#34;&gt;&lt;strong&gt;2. 预解析（pre-parsing）&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;预解析做的事情是提前加载资源，减少处理时间，它会识别一些会请求资源的属性，比如&lt;code&gt;img&lt;/code&gt;标签的&lt;code&gt;src&lt;/code&gt;属性，并将这个请求加到请求队列中。&lt;/p&gt;
&lt;h4 id=&#34;3-符号化（Tokenization）&#34;&gt;&lt;strong&gt;3. 符号化（Tokenization）&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;符号化是词法分析的过程，将输入解析成符号，HTML 符号包括，开始标签、结束标签、属性名和属性值。&lt;/p&gt;
&lt;p&gt;它通过一个状态机去识别符号的状态，比如遇到&lt;code&gt;&amp;lt;&lt;/code&gt;，&lt;code&gt;&amp;gt;&lt;/code&gt;状态都会产生变化。&lt;/p&gt;
&lt;h4 id=&#34;4-构建树（tree-construction）&#34;&gt;&lt;strong&gt;4. 构建树（tree construction）&lt;/strong&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：符号化和构建树是并行操作的，也就是说只要解析到一个开始标签，就会创建一个 DOM 节点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在上一步符号化中，解析器获得这些标记，然后以合适的方法创建&lt;code&gt;DOM&lt;/code&gt;对象并把这些符号插入到&lt;code&gt;DOM&lt;/code&gt;对象中。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913094354.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;浏览器容错进制&#34;&gt;&lt;strong&gt;浏览器容错进制&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;你从来没有在浏览器看过类似&#34;语法无效&#34;的错误，这是因为浏览器去纠正错误的语法，然后继续工作。&lt;/p&gt;
&lt;h4 id=&#34;事件&#34;&gt;&lt;strong&gt;事件&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;当整个解析的过程完成以后，浏览器会通过&lt;code&gt;DOMContentLoaded&lt;/code&gt;事件来通知&lt;code&gt;DOM&lt;/code&gt;解析完成。&lt;/p&gt;
&lt;h3 id=&#34;2-CSS-解析&#34;&gt;2. CSS 解析&lt;/h3&gt;
&lt;p&gt;一旦浏览器下载了 CSS，CSS 解析器就会处理它遇到的任何 CSS，根据&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://drafts.csswg.org/css-syntax-3/&#34;&gt;语法规范 (opens new window)&lt;/a&gt;解析出所有的 CSS 并进行标记化，然后我们得到一个规则表。&lt;/p&gt;
&lt;h4 id=&#34;CSS-匹配规则&#34;&gt;&lt;strong&gt;CSS 匹配规则&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;在匹配一个节点对应的 CSS 规则时，是按照从右到左的顺序的，例如：&lt;code&gt;div p { font-size :14px }&lt;/code&gt;会先寻找所有的&lt;code&gt;p&lt;/code&gt;标签然后判断它的父元素是否为&lt;code&gt;div&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;所以我们写 CSS 时，尽量用 id 和 class，千万不要过度层叠。&lt;/p&gt;
&lt;h3 id=&#34;3-渲染树&#34;&gt;3. 渲染树&lt;/h3&gt;
&lt;p&gt;其实这就是一个 DOM 树和 CSS 规则树合并的过程。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：渲染树会忽略那些不需要渲染的节点，比如设置了&lt;code&gt;display:none&lt;/code&gt;的节点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;计算&#34;&gt;&lt;strong&gt;计算&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;通过计算让任何尺寸值都减少到三个可能之一：&lt;code&gt;auto&lt;/code&gt;、百分比、px，比如把&lt;code&gt;rem&lt;/code&gt;转化为&lt;code&gt;px&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;级联&#34;&gt;&lt;strong&gt;级联&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;浏览器需要一种方法来确定哪些样式才真正需要应用到对应元素，所以它使用一个叫做&lt;code&gt;specificity&lt;/code&gt;的公式，这个公式会通过：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;标签名、class、id&lt;/li&gt;
&lt;li&gt;是否内联样式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!important&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然后得出一个权重值，取最高的那个。&lt;/p&gt;
&lt;h4 id=&#34;渲染阻塞&#34;&gt;&lt;strong&gt;渲染阻塞&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;当遇到一个&lt;code&gt;script&lt;/code&gt;标签时，DOM 构建会被暂停，直至脚本完成执行，然后继续构建 DOM 树。&lt;/p&gt;
&lt;p&gt;但如果 JS 依赖 CSS 样式，而它还没有被下载和构建时，浏览器就会延迟脚本执行，直至 CSS Rules 被构建。&lt;/p&gt;
&lt;p&gt;所有我们知道：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS 会阻塞 JS 执行&lt;/li&gt;
&lt;li&gt;JS 会阻塞后面的 DOM 解析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了避免这种情况，应该以下原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS 资源排在 JavaScript 资源前面&lt;/li&gt;
&lt;li&gt;JS 放在 HTML 最底部，也就是 &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt;前&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外，如果要改变阻塞模式，可以使用 defer 与 async，详见：&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/xiaoyu2er/blog/issues/8&#34;&gt;这篇文章 (opens new window)&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;布局与绘制&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;确定渲染树种所有节点的几何属性，比如：位置、大小等等，最后输入一个盒子模型，它能精准地捕获到每个元素在屏幕内的准确位置与大小。&lt;/p&gt;
&lt;p&gt;然后遍历渲染树，调用渲染器的 paint() 方法在屏幕上显示其内容。&lt;/p&gt;
&lt;h3 id=&#34;5-合并渲染层&#34;&gt;&lt;strong&gt;5. 合并渲染层&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;把以上绘制的所有图片合并，最终输出一张图片。&lt;/p&gt;
&lt;h3 id=&#34;6-回流与重绘&#34;&gt;&lt;strong&gt;6. 回流与重绘&lt;/strong&gt;&lt;/h3&gt;
&lt;h4 id=&#34;回流-reflow&#34;&gt;&lt;strong&gt;回流(reflow)&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;当浏览器发现某个部分发现变化影响了布局时，需要倒回去重新渲染，会从&lt;code&gt;html&lt;/code&gt;标签开始递归往下，重新计算位置和大小。&lt;/p&gt;
&lt;p&gt;reflow 基本是无法避免的，因为当你滑动一下鼠标、resize 窗口，页面就会产生变化。&lt;/p&gt;
&lt;h4 id=&#34;重绘-repaint&#34;&gt;&lt;strong&gt;重绘(repaint)&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;改变了某个元素的背景色、文字颜色等等不会影响周围元素的位置变化时，就会发生重绘。&lt;/p&gt;
&lt;p&gt;每次重绘后，浏览器还需要合并渲染层并输出到屏幕上。&lt;/p&gt;
&lt;p&gt;回流的成本要比重绘高很多，所以我们应该尽量避免产生回流。&lt;/p&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;display:none&lt;/code&gt; 会触发回流，而 &lt;code&gt;visibility:hidden&lt;/code&gt; 只会触发重绘。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;JavaScript 编译执行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;大致流程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913094359.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以分为三个阶段：&lt;/p&gt;
&lt;h5 id=&#34;1-词法分析&#34;&gt;&lt;strong&gt;1. 词法分析&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;JS 脚本加载完毕后，会首先进入语法分析阶段，它首先会分析代码块的语法是否正确，不正确则抛出“语法错误”，停止执行。&lt;/p&gt;
&lt;p&gt;几个步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分词，例如将&lt;code&gt;var a = 2&lt;/code&gt;，，分成&lt;code&gt;var&lt;/code&gt;、&lt;code&gt;a&lt;/code&gt;、&lt;code&gt;=&lt;/code&gt;、&lt;code&gt;2&lt;/code&gt;这样的词法单元。&lt;/li&gt;
&lt;li&gt;解析，将词法单元转换成抽象语法树（AST）。&lt;/li&gt;
&lt;li&gt;代码生成，将抽象语法树转换成机器指令。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;2-预编译&#34;&gt;&lt;strong&gt;2. 预编译&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;JS 有三种运行环境：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全局环境&lt;/li&gt;
&lt;li&gt;函数环境&lt;/li&gt;
&lt;li&gt;eval&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每进入一个不同的运行环境都会创建一个对应的执行上下文，根据不同的上下文环境，形成一个函数调用栈，栈底永远是全局执行上下文，栈顶则永远是当前执行上下文。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建执行上下文&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;创建执行上下文的过程中，主要做了以下三件事：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建变量对象
&lt;ul&gt;
&lt;li&gt;参数、函数、变量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;建立作用域链
&lt;ul&gt;
&lt;li&gt;确认当前执行环境是否能访问变量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;确定 This 指向&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;3-执行&#34;&gt;&lt;strong&gt;3. 执行&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;JS 线程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913094406.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;虽然 JS 是单线程的，但实际上参与工作的线程一共有四个：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其中三个只是协助，只有 JS 引擎线程是真正执行的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;JS 引擎线程：也叫 JS 内核，负责解析执行 JS 脚本程序的主线程，例如 V8 引擎&lt;/li&gt;
&lt;li&gt;事件触发线程：属于浏览器内核线程，主要用于控制事件，例如鼠标、键盘等，当事件被触发时，就会把事件的处理函数推进事件队列，等待 JS 引擎线程执行&lt;/li&gt;
&lt;li&gt;定时器触发线程：主要控制&lt;code&gt;setInterval&lt;/code&gt;和&lt;code&gt;setTimeout&lt;/code&gt;，用来计时，计时完毕后，则把定时器的处理函数推进事件队列中，等待 JS 引擎线程。&lt;/li&gt;
&lt;li&gt;HTTP 异步请求线程：通过 XMLHttpRequest 连接后，通过浏览器新开的一个线程，监控 readyState 状态变更时，如果设置了该状态的回调函数，则将该状态的处理函数推进事件队列中，等待 JS 引擎线程执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注：浏览器对同一域名的并发连接数是有限的，通常为 6 个。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;宏任务&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同步任务：按照顺序执行，只有前一个任务完成后，才能执行后一个任务&lt;/li&gt;
&lt;li&gt;异步任务：不直接执行，只有满足触发条件时，相关的线程将该异步任务推进任务队列中，等待 JS 引擎主线程上的任务执行完毕时才开始执行，例如异步 Ajax、DOM 事件，setTimeout 等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;微任务&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;微任务是 ES6 和 Node 环境下的，主要 API 有：&lt;code&gt;Promise&lt;/code&gt;，&lt;code&gt;process.nextTick&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;微任务的执行在宏任务的同步任务之后，在异步任务之前。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1320210913094407.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代码例子&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以上代码输出顺序为：1,3,5,4,2&lt;/p&gt;
&lt;h2 id=&#34;参考文档&#34;&gt;参考文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/skyline75489/what-happens-when-zh_CN&#34;&gt;what-happens-when-zh_CN (opens new window)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://alistapart.com/article/tags-to-dom/&#34;&gt;Tags to DOM (opens new window)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://heyingye.github.io/2018/04/16/%E5%BD%BB%E5%BA%95%E7%90%86%E8%A7%A3%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/&#34;&gt;彻底理解浏览器的缓存机制 (opens new window)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.html5rocks.com/zh/tutorials/internals/howbrowserswork/#The_rendering_engine&#34;&gt;浏览器的工作原理：新式网络浏览器幕后揭秘 (opens new window)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://blog.fundebug.com/2019/01/03/understand-browser-rendering/&#34;&gt;深入浅出浏览器渲染原理 (opens new window)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://heyingye.github.io/2018/03/19/js%E5%BC%95%E6%93%8E%E7%9A%84%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89/#%E9%A2%84%E7%BC%96%E8%AF%91%E9%98%B6%E6%AE%B5&#34;&gt;js 引擎的执行过程（一） (opens new window)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;还有一些找不到了。。。。。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From: &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://4ark.me/post/b6c7c0a2.html&#34;&gt;4ark.me&lt;/a&gt;&lt;/p&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/bilicard.css&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="web" />
        <category term="http" />
        <updated>2021-09-13T01:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.17lai.site/posts/ec2cad2/</id>
        <title>ESNI和加密DNS - 保护信息隐私的最后一块拼图</title>
        <link rel="alternate" href="https://blog.17lai.site/posts/ec2cad2/"/>
        <content type="html">&lt;p&gt;随着&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.ietf.org/blog/tls13/&#34;&gt;TLS1.3&lt;/a&gt;的发布，让该协议成为有史以来最安全、也是最复杂的TLS协议。在该协议之中，有很多的对于以往协议安全漏洞的修复，包括废弃RSA启用新的秘钥交换机制PSK等等。而&lt;code&gt;Encrypted SNI&lt;/code&gt;作为一个&lt;code&gt;TLS1.3&lt;/code&gt;的扩展协议用来防止传统的HTTPS流量受到ISP或者陌生网络环境的窥探以及一些网络审查。在过去，由于&lt;code&gt;HTTPS&lt;/code&gt;协议之中&lt;code&gt;Server Name Indication - SNI&lt;/code&gt;的使用，我们的HTTPS流量经常被窥探我们所访问站点的域名&lt;/p&gt;
&lt;h3 id=&#34;那么什么是SNI？⌗&#34;&gt;那么什么是SNI？&lt;a href=&#34;#%E9%82%A3%E4%B9%88%E4%BB%80%E4%B9%88%E6%98%AFsni&#34;&gt;⌗&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;服务器名称指示（英语：Server Name Indication，简称SNI）是一个扩展的TLS计算机联网协议，在该协议下，在握手过程开始时客户端告诉它正在连接的服务器要连接的主机名称。这允许服务器在相同的IP地址和TCP端口号上呈现多个证书，并且因此允许在相同的IP地址上提供多个安全（HTTPS）网站（或其他任何基于TLS的服务），而不需要所有这些站点使用相同的证书。它与HTTP/1.1基于名称的虚拟主机的概念相同，但是用于HTTPS。所需的主机名未加密， 因此窃听者可以查看请求的网站 为了使SNI协议起作用，绝大多数访问者必须使用实现它的Web浏览器。使用未实现SNI浏览器的用户将被提供默认证书，因此很可能会收到证书警告&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;SNI协议示意图&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/08/2820210828144946.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TLS1.3完整握手流程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/08/2820210828144904.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;为了弥补缺陷因应运而生的ESNI⌗&#34;&gt;为了弥补缺陷因应运而生的ESNI&lt;a href=&#34;#%E4%B8%BA%E4%BA%86%E5%BC%A5%E8%A1%A5%E7%BC%BA%E9%99%B7%E5%9B%A0%E5%BA%94%E8%BF%90%E8%80%8C%E7%94%9F%E7%9A%84esni&#34;&gt;⌗&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在上述过程之中，存在的问题就是，在ClientHello环节中，TLS会在这个位置以&lt;strong&gt;明文&lt;/strong&gt;的形式讲要请求的Host写在数据包之中，如果在网络路由中有任何的监听节点，那么用户所访问网站的域名将暴露无遗，这将是巨大的用户隐私泄露: &lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/08/2820210828144907.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;所以在最新的关于&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://tools.ietf.org/html/draft-rescorla-tls-esni-00&#34;&gt;ESNI的草案&lt;/a&gt;中，&lt;code&gt;IETF&lt;/code&gt;重新设计了一种加密的Client Hello机制，从而修复了这个问题: &lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/08/2820210828144915.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不过这里问题又来了，之前服务器和客户端并没有事先交换任何数据啊，这个加密的凭证从何而来啊？？？&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;依靠安全DNS的ESNI⌗&#34;&gt;依靠安全DNS的ESNI&lt;a href=&#34;#%E4%BE%9D%E9%9D%A0%E5%AE%89%E5%85%A8dns%E7%9A%84esni&#34;&gt;⌗&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;上一个问题没有难倒工程师们，他们设计了这样一个办法。首先让网站提供者在DNS提供商上公布一个记录，这个记录包含着一个&lt;code&gt;公钥&lt;/code&gt;，这个公钥由网站提供者生成，其&lt;code&gt;私钥&lt;/code&gt;存储在Web服务器等待着被Web程序读取。如此，当用户想通过TLS1.3协议访问这个域名的时候，首先读取这个公开的公钥，在用公钥加密其想访问的&lt;code&gt;域名Host&lt;/code&gt;，装在&lt;code&gt;Client Hello&lt;/code&gt;里面发送给目标服务器，目标服务器再用自己的私钥解密，从而和用户建立HTTPS链接，这样就不会暴露Host信息 这时候有人会想，如果有人某Wall想给你的DNS偷天换日，那会不会很不安全啊,请继续向下看&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;ESNI&lt;/code&gt;的实现草案之中，里面要求&lt;code&gt;安全加密的DNS&lt;/code&gt;&lt;strong&gt;是推荐的&lt;/strong&gt;。大家都知道我们的DNS查询一般是&lt;code&gt;TCP&lt;/code&gt;报文或者是&lt;code&gt;UDP&lt;/code&gt;报文，本身它是不加密的，所以如果有人想在篡改你的DNS是相对简单的，大家可能都知道我们伟大的妨炎蔷会使用DNS污染的方式干扰一些网站的正常访问。正式由于DNS的非加密性，DNS也成为了审查信息的利器。此时加密的DNS势在必行&lt;/p&gt;
&lt;h3 id=&#34;DNS-over-TLS-DoT-and-DNS-over-HTTPS-DoH-⌗&#34;&gt;DNS over TLS (DoT) and DNS over HTTPS (DoH)&lt;a href=&#34;#dns-over-tls-dot-and-dns-over-https-doh&#34;&gt;⌗&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;于是出现了这两种新型的DNS查询方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DNS over HTTPS (DoH)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;DNS Over HTTPS (DOH) 是一个进行安全化的域名解析的方案，当前尚处于实验性阶段。其意义在于以加密的HTTPS协议进行DNS解析请求，避免原始DNS协议中用户的DNS解析请求被窃听或者修改的问题（例如中间人攻击）来达到保护用户隐私的目的。 Google及Mozilla基金会正在测试这一协议，作为其提高网络安全性的努力的一部分。 当前，该方案由IETF支持，其规范文档以 RFC 8484 的名义发布。2018年9月5日发布的Firefox 62正式版加入了这项功能，但需要用户手动开启 DNS Over HTTPS利用HTTP协议的GET命令发出经由JSON等编码的DNS解析请求。较于传统的DNS协议，此处的HTTP协议通信处于具有加密作用的SSL/TLS协议（两者统称作HTTPS）的保护之下。但是，由于其基于HTTPS，而HTTPS本身需要经由多次数据来回传递才能完成协议初始化，其域名解析耗时较原DNS协议会显著增加。 传统的DNS协议形成于互联网早期，直接基于UDP或TCP协议，且彼时未虑及现代安全性的需要，未利用密码学等手段进行加密或验证。因而，其无法抵御现代互联网常见的DNS投毒污染等攻击手段或监听。虽然后来的DNSSEC方案通过电子签名进行验证，强化了DNS的安全性，并能够抵御DNS投毒污染等篡改通信的手段，但其对于中间网络设备进行的监听仍然没有抵御能力（随后，监听者可以通过获取的通信数据知晓用户访问了哪一域名，而域名往往与具体的网站相关系）。此外，DNSSEC的起效要求现有的大量DNS解析服务的提供商（常为互联网服务提供商或第三方大型互联网机构）对已有的DNS服务器进行大范围修改等问题，其推进进程并不理想。而对于DNS Over HTTPS，在正确部署服务端并妥善配置客户端的前提下，互联网服务提供商或其它中间网络设备无法解密（亦即无法获知请求的实际内容）或者篡改已经加密的HTTPS通信，故其能够有效保护互联网用户的安全及隐私；另一方面，其基于已经成熟并已广泛部署的HTTPS协议，客户端进行利用较为方便。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;DNS over TLS (DoT)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;DNS over TLS (DoT) 是通过传输层安全协议（TLS）来加密并打包域名系统（DNS）的安全协议。此协议旨在防止中间人攻击与控制DNS数据以保护用户隐私。 RFC 7858及RFC 8310定义了DNS over TLS。 截至2018年，Cloudflare、Quad9与CleanBrowsing均向大众提供支持DNS over TLS的公共DNS解析服务。2018年4月，Google宣布Android P将包含对DNS over TLS的支持。PowerDNS的DNSDist也宣布在其最新的1.3.0版本中添加了对DNS over TLS的支持。BIND用户也可以通过stunnel代理提供DNS over TLS服务。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;手动配置⌗&#34;&gt;手动配置&lt;a href=&#34;#%E6%89%8B%E5%8A%A8%E9%85%8D%E7%BD%AE&#34;&gt;⌗&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Firefox所在的Mozilla宣布从&lt;code&gt;Firefox 62&lt;/code&gt;版本之后开始支持&lt;code&gt;ESNI&lt;/code&gt;，默认没有开启，需要用户手动配置打开，那么我们现在试验一下 这里Firefox的解决方案是使用&lt;code&gt;DNS over HTTPS (DoH)&lt;/code&gt;和&lt;code&gt;ESNI&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装&lt;code&gt;Firefox Nightly&lt;/code&gt;版本，这个版本是预发布版本，使得开发这和即可门可以提前尝鲜到新功能。&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.mozilla.org/zh-CN/firefox/nightly/all/&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在浏览器地址栏输入&lt;code&gt;about:config&lt;/code&gt;并回车，打开配置页面，在搜索位置搜索&lt;code&gt;network.trr.mode&lt;/code&gt;，这个是打开浏览器对于&lt;code&gt;DoH&lt;/code&gt;的支持，将此项的数值修改为3（&lt;code&gt;0&lt;/code&gt;对应的是不开启此功能；&lt;code&gt;1&lt;/code&gt;对应的是交由浏览器选择&lt;code&gt;DoH&lt;/code&gt;与传统方式那种更快；&lt;code&gt;2&lt;/code&gt;代表优先使用加密DNS查询，如果失败则回落到普通DNS查询；&lt;code&gt;3&lt;/code&gt;代表只使用加密DNS查询；&lt;code&gt;5&lt;/code&gt;代表明确的关闭此功能）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;继续搜索&lt;code&gt;network.trr.uri&lt;/code&gt;，将此项的值修改为&lt;code&gt;https://mozilla.cloudflare-dns.com/dns-query&lt;/code&gt;，这个是默认的&lt;code&gt;DoH&lt;/code&gt;查询地址，当然我们也可以使用诸如&lt;code&gt;https://1.1.1.1/dns-query&lt;/code&gt;、&lt;code&gt;https://dns.google.com/experimental&lt;/code&gt;这样的地址，我们可以事先&lt;code&gt;ping&lt;/code&gt;检测一下对比哪个延迟更低来使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（可选）搜索&lt;code&gt;network.trr.bootstrapAddress&lt;/code&gt;，讲此值修改位第三步的DNS域名的&lt;code&gt;IP&lt;/code&gt;。此举是为了避免使用操作系统DNS查询域名受到劫持，一般来说这些DNS的&lt;code&gt;IP&lt;/code&gt;是不会变的&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/08/2820210828145006.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;
&lt;p&gt;将&lt;code&gt;network.security.esni.enabled&lt;/code&gt;设置为&lt;code&gt;true&lt;/code&gt;,此举为了打开浏览器对于ESNI的支持（感谢&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://github.com/chenIshi&#34;&gt;chenlshi&lt;/a&gt;同学的提醒，在原版的文章中我不小心遗漏了这个关键的步骤）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;完成配置后重启浏览器，再打开&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://encryptedsni.com/&#34;&gt;在线验证页面验证&lt;/a&gt;来查询你的浏览器是否完全支持&lt;code&gt;ESNI&lt;/code&gt;功能，如果出现如图说明配置成功了&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/08/2820210828144924.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;验证⌗&#34;&gt;验证&lt;a href=&#34;#%E9%AA%8C%E8%AF%81&#34;&gt;⌗&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;为了验证是否真的加密了&lt;code&gt;Client Hello&lt;/code&gt;，我们使用&lt;code&gt;Wireshark&lt;/code&gt;进行网络抓包 由于这个特性仍在试验阶段，并没有太多站点支持这个特性，&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://cloudflare.com/&#34;&gt;CloudFlare&lt;/a&gt;是第一个全站支持&lt;code&gt;ESNI&lt;/code&gt;的网站，这里我们使用&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://blog.cloudflare.com/&#34;&gt;blog.cloudflare.com&lt;/a&gt;来做测试：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先打开&lt;code&gt;Wireshark&lt;/code&gt;的抓包功能，然后开启&lt;code&gt;Chrome&lt;/code&gt;浏览器打开上述网址，页面加载完后停止抓包，在得到的结果中查询协议为&lt;code&gt;TLS1.3&lt;/code&gt;和报文为&lt;code&gt;Client Hello&lt;/code&gt;的报文，通过观察发现域名的Host果然被以明文形式写在数据包中（参见&lt;code&gt;Server_Name&lt;/code&gt;字段）：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/08/2820210828144932.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;然后打开&lt;code&gt;Firefox Nightly&lt;/code&gt;浏览器重复上述操作，这次发现在整个数据包中根本找不到&lt;code&gt;Server_Name&lt;/code&gt;字段，说明&lt;code&gt;Host&lt;/code&gt;已经被加密：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/08/2820210828144933.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;目前来说，我查阅了相关的关键词，仍然没有任何一篇教程有介绍如何在自己的服务器上支持&lt;code&gt;ESNI&lt;/code&gt;，同时我也看到在&lt;code&gt;Nginx&lt;/code&gt;的论坛里面有人呼吁尽快支持&lt;code&gt;ESNI&lt;/code&gt;，所以我推测这个功能仍然在试验期，还没有被这两个Web软件所支持，起劲为止我也没有查阅到任何的Web软件预计支持此项功能。这项扩展已经进入&lt;code&gt;IETF&lt;/code&gt;的草案阶段，可以预见到，在不就的将来，这项技术可以普及开来，为我们的网络隐私保驾护航 目前来说，有了&lt;code&gt;HTTPS&lt;/code&gt;+&lt;code&gt;TLS1.3&lt;/code&gt;+&lt;code&gt;ESNI&lt;/code&gt;+&lt;code&gt;DoH/DoT&lt;/code&gt;的加持，我们的网络隐私的到了极大的保障，最后还有一个问题是访问服务器&lt;code&gt;IP&lt;/code&gt;的泄露仍然无法被避免，迫于&lt;code&gt;IP协议&lt;/code&gt;设计的机制，他目前还不能被解决。不过我相信，随着网技术不断的趋于保护个人隐私和更快速的发展方向，这个问题可以最终被解决&lt;/p&gt;
&lt;p&gt;From: &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://blog.hackerchai.com/post/encrypted-sni-anti-censorship/&#34;&gt;hackerchai&lt;/a&gt;&lt;/p&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/bilicard.css&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="SSL" />
        <category term="TLS" />
        <category term="隐私" />
        <category term="安全" />
        <updated>2021-09-06T01:25:00.000Z</updated>
    </entry>
</feed>
