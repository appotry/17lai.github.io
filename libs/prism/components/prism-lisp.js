(function(e){function r(e){return RegExp(/(\()/.source+"(?:"+e+")"+/(?=[\s\)])/.source)}function a(e){return RegExp(/([\s([])/.source+"(?:"+e+")"+/(?=[\s)])/.source)}var t=/(?!\d)[-+*/~!@$%^=<>{}\w]+/.source;var n="&"+t;var s="(\\()";var o="(?=\\))";var i="(?=\\s)";var u=/(?:[^()]|\((?:[^()]|\((?:[^()]|\((?:[^()]|\((?:[^()]|\([^()]*\))*\))*\))*\))*\))*/.source;var l={heading:{pattern:/;;;.*/,alias:["comment","title"]},comment:/;.*/,string:{pattern:/"(?:[^"\\]|\\.)*"/,greedy:true,inside:{argument:/[-A-Z]+(?=[.,\s])/,symbol:RegExp("`"+t+"'")}},"quoted-symbol":{pattern:RegExp("#?'"+t),alias:["variable","symbol"]},"lisp-property":{pattern:RegExp(":"+t),alias:"property"},splice:{pattern:RegExp(",@?"+t),alias:["symbol","variable"]},keyword:[{pattern:RegExp(s+"(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)"+i),lookbehind:true},{pattern:RegExp(s+"(?:append|by|collect|concat|do|finally|for|in|return)"+i),lookbehind:true}],declare:{pattern:r(/declare/.source),lookbehind:true,alias:"keyword"},interactive:{pattern:r(/interactive/.source),lookbehind:true,alias:"keyword"},boolean:{pattern:a(/nil|t/.source),lookbehind:true},number:{pattern:a(/[-+]?\d+(?:\.\d*)?/.source),lookbehind:true},defvar:{pattern:RegExp(s+"def(?:const|custom|group|var)\\s+"+t),lookbehind:true,inside:{keyword:/^def[a-z]+/,variable:RegExp(t)}},defun:{pattern:RegExp(s+/(?:cl-)?(?:defmacro|defun\*?)\s+/.source+t+/\s+\(/.source+u+/\)/.source),lookbehind:true,greedy:true,inside:{keyword:/^(?:cl-)?def\S+/,arguments:null,function:{pattern:RegExp("(^\\s)"+t),lookbehind:true},punctuation:/[()]/}},lambda:{pattern:RegExp(s+"lambda\\s+\\(\\s*(?:&?"+t+"(?:\\s+&?"+t+")*\\s*)?\\)"),lookbehind:true,greedy:true,inside:{keyword:/^lambda/,arguments:null,punctuation:/[()]/}},car:{pattern:RegExp(s+t),lookbehind:true},punctuation:[/(?:['`,]?\(|[)\[\]])/,{pattern:/(\s)\.(?=\s)/,lookbehind:true}]};var p={"lisp-marker":RegExp(n),varform:{pattern:RegExp(/\(/.source+t+/\s+(?=\S)/.source+u+/\)/.source),inside:l},argument:{pattern:RegExp(/(^|[\s(])/.source+t),lookbehind:true,alias:"variable"},rest:l};var d="\\S+(?:\\s+\\S+)*";var c={pattern:RegExp(s+u+o),lookbehind:true,inside:{"rest-vars":{pattern:RegExp("&(?:body|rest)\\s+"+d),inside:p},"other-marker-vars":{pattern:RegExp("&(?:aux|optional)\\s+"+d),inside:p},keys:{pattern:RegExp("&key\\s+"+d+"(?:\\s+&allow-other-keys)?"),inside:p},argument:{pattern:RegExp(t),alias:"variable"},punctuation:/[()]/}};l["lambda"].inside.arguments=c;l["defun"].inside.arguments=e.util.clone(c);l["defun"].inside.arguments.inside.sublist=c;e.languages.lisp=l;e.languages.elisp=l;e.languages.emacs=l;e.languages["emacs-lisp"]=l})(Prism);