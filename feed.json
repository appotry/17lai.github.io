{
    "version": "https://jsonfeed.org/version/1",
    "title": "夜法之书",
    "description": "~软件驱动世界~",
    "home_page_url": "https://blog.17lai.site",
    "items": [
        {
            "id": "https://blog.17lai.site/posts/ab63eb8f/",
            "url": "https://blog.17lai.site/posts/ab63eb8f/",
            "title": "自建全套开源Devops开发系统",
            "date_published": "2022-05-09T05:00:25.000Z",
            "content_html": "<blockquote>\n<p>国内的Devops云平台动辄封号，删库，屏蔽，还多次发生数据泄密，项目被云平台克隆事件，国内云平台devops已死！数据安全没法保证，自建私有Devops平台才靠谱。这里采用开源项目建立一个完善的低成本Devops系统，基本运行良好！</p>\n</blockquote>\n<blockquote>\n<p>目标：单节点，以最低成本，最低消耗，使用开源软件实现一个可用的DevOps！满足中小企业的研发、测试、运维需求。并对后续如何扩展本套DevOps系统做了项目，成本，路线升级规划，可以一直扩展到业界最前沿最大系统。</p>\n<p>整套系统已经跑起来很长时间了！单节点Nas服务器，32G内存，共运行了约80个Docker，优化到平均负载10以下。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/14/20220514113906.webp\" alt=\"devops\"></p>\n<span id=\"more\"></span>\n<h2 id=\"Devops框架图解\">Devops框架图解</h2>\n<blockquote>\n<p>下面系统大多可以做负载平衡，多节点备份，可以扩展为一个高可用，大中央平台。</p>\n<p>珍爱生命，使用<code>Docker</code>！</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/09/20220509132230.webp\" alt=\"自建Devops.drawio\"></p>\n<h2 id=\"开源云平台生死连问\">开源云平台生死连问</h2>\n<blockquote>\n<p>珍爱生命，不建议使用国内云平台。</p>\n</blockquote>\n<p>什么是大教堂？</p>\n<p>什么是集市？</p>\n<p>什么是信任链？</p>\n<p>什么是开源生态？</p>\n<p>为什么要做开源生态？</p>\n<p>怎么做开源生态？</p>\n<p>开源生态的土壤肥力维护如何做？</p>\n<p>这些问题没想明白，没想到如何做的是没法做开源的。</p>\n<p>国内平台连种子嫩芽都要收割，到处收费，动辄删库，屏蔽，封号，注定做不了开源生态。</p>\n<h2 id=\"Consul自动负载均衡\"><code>Consul</code>自动负载均衡</h2>\n<blockquote>\n<p>基于服务自动发现和注册的负载均衡，负载均衡的方式没有变，只是多了一些<strong>外围组件</strong>，当然这些组件对 <code>Client</code> 是不可见的，<code>client</code> 依然只能看到 <code>Nginx</code> 入口，访问方式也没变化。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/29/20220429190914-1.webp\" alt=\"Consul\"></p>\n<h2 id=\"Github仓库备份\"><code>Github</code>仓库备份</h2>\n<blockquote>\n<p>最优秀的资源，大多只在短时间内出现！</p>\n<p>平时多备份你重要的仓库，以及你使用的仓库的重要上下游仓库！</p>\n</blockquote>\n<blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry/docker-github-backup\">github-backup Githb</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/lnxd/github-backup\">github-backup Dockerhub</a></li>\n</ul>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">githubback</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> lnxd/github<span class=\"token punctuation\">-</span>backup\n  <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"githubback\"</span>\n  <span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> githubback\n  <span class=\"token comment\"># ports:</span>\n    <span class=\"token comment\"># - \"80:80\"</span>\n  <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"${USERDIR}/githubback/data:/home/docker/backups:rw\"</span>\n  <span class=\"token key atrule\">env_file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> .env\n  <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> HTTP_PROXY=http<span class=\"token punctuation\">:</span>//<span class=\"token punctuation\">[</span>ip<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>port<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">-</span> HTTPS_PROXY=http<span class=\"token punctuation\">:</span>//<span class=\"token punctuation\">[</span>ip<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>port<span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"配置要求\">配置要求</h2>\n<p>个人Nas配置</p>\n<blockquote>\n<ul>\n<li>cpu j4125 4 核 14nm 2.00 GHz ~2.70 GHz</li>\n<li>SSD sata 接口的 读写 500MB/S</li>\n<li>32G DDR4. 2x16G 双通道</li>\n</ul>\n</blockquote>\n<p>上图中介绍的系统都是上面配置的单服务器中可以运行的。</p>\n<p>如何以最低的配置，最少的内存运行起来最多的功能才是本文的追求，花费更多金钱去满足极少数情况的高压力是钱多的没处花。</p>\n<ul>\n<li><code>8G</code>内存的nas 就可以运行 <code>gitea + drone</code> ，<code>zentao</code> 想用就用</li>\n<li><code>gitlab</code> 要跑起来至少要2核 <code>8G</code> 内存，<code>jenkins</code> 也是内存 <code>cpu</code> 占用大户。大于 <code>16G</code> 内存时考虑上这个</li>\n<li>4核 <code>32G</code> 内存的nas，图片中介绍的可以全都跑起来！</li>\n</ul>\n<h2 id=\"可靠性\">可靠性</h2>\n<p><code>ELK</code>集群监控对于单服务器来说完全多余，<code>netdata</code>监控也不错，<code>portainer</code>就够用了，以后为了节约资源，<code>portainer</code>说不定也会被干掉，大多数时候命令行监控就够了。少于200节点<code>K8S</code>就是多余的。</p>\n<h3 id=\"数据安全\">数据安全</h3>\n<blockquote>\n<p>云平台把数据交给别人，赌别人的道德不会私自偷拿你的数据？真是想多了。</p>\n<p>某垄断社交平台内部有专门的团队分析客户的数据，看有什么有价值的没有，是很多年前就爆出来的消息。</p>\n<p>自建<code>DevOps</code>成本其实相当的低！</p>\n</blockquote>\n<p>整套系统可以从少到多，从小到大，慢慢优化，扩展的。硬件成本也是随着需求变化而变化的，随着业务扩展而增加成本，一开始单节点单服务器就可以满足要求了，后面业务增加慢慢扩展为集群，k8s 等。</p>\n<p>数据，代码是公司核心资产与竞争力的公司，上云赌别人的人品就是找死。你注册账户的时候，就同意了，无论别人随意删除你的数据，或者窃取你的数据都是不用付任何责任的，再说，整个系统数据都在别人手上，你要维权也没有证据。</p>\n<h3 id=\"备份\">备份</h3>\n<ul>\n<li><code>UPS</code>电源，防止意外断电</li>\n<li><code>rsync</code> 备份，对于大多数人，已经够用了</li>\n<li>文件系统快照</li>\n<li>离线每日，或者每周冷备份</li>\n<li>大系统，多台服务器的时候可以用多节点集群备灾。<code>nginx</code>,<code>harbor</code>，<code>gitlab</code>，<code>elasticsearch</code>等都可以使用集群</li>\n</ul>\n<h2 id=\"扩展性\">扩展性</h2>\n<blockquote>\n<p>上面说的都可以单服务器搞定。多台服务器的时候可以用多节点集群备灾。<code>nginx</code>,<code>harbor</code>，<code>gitlab</code>，<code>elasticsearch</code>等都可以使用集群。</p>\n<p>多于200节点，大于3台服务器以后考虑上<code>K8S</code>。ELK监控之类的这时候可以上了。<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/Tencent/bk-sops\">蓝鲸智云标准运维</a>这时候也可以考虑了。</p>\n<p>再次扩大的时候可以考虑<code>Proxmox VE（PVE）</code> + <code>ceph</code></p>\n<p>更大的系统，或者对外提供云平台服务的时候可以考虑上<code>OpenStack</code></p>\n</blockquote>\n<h2 id=\"项目介绍\">项目介绍</h2>\n<h3 id=\"ELK\">ELK</h3>\n<blockquote>\n<p>消耗资源很多，至少上百节点以上再考虑上这个</p>\n<p><code>portainer</code> -&gt; <code>netdata </code>-&gt; <code>ELK</code>，<code>zabbix </code></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/08/0520210805165405.png\" alt=\"\"></p>\n<h3 id=\"cacti\"><a target=\"_blank\" rel=\"noopener\" href=\"https://www.cacti.net/\">cacti</a></h3>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"Cacti\" data-repo=\"\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"Cacti\" data-repo=\"cacti\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<h3 id=\"zabbix\">zabbix</h3>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"zabbix\" data-repo=\"\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"zabbix\" data-repo=\"zabbix\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<h3 id=\"ansible\">ansible</h3>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"ansible\" data-repo=\"\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"ansible\" data-repo=\"ansible\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<h3 id=\"CMDB\">CMDB</h3>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"netbox-community\" data-repo=\"netbox\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"open-cmdb\" data-repo=\"cmdb\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<h3 id=\"PVE\">PVE</h3>\n<blockquote>\n<p>Proxmox VE（PVE）</p>\n</blockquote>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"proxmox\" data-repo=\"\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<h3 id=\"CEPH\"><a target=\"_blank\" rel=\"noopener\" href=\"https://ceph.io/\">CEPH</a></h3>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"ceph\" data-repo=\"\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"ceph\" data-repo=\"ceph\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<h3 id=\"OpenStack\">OpenStack</h3>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"openstack\" data-repo=\"\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"openstack\" data-repo=\"openstack\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<h2 id=\"其它项目\">其它项目</h2>\n<blockquote>\n<p>大家还有啥好项目建议？</p>\n</blockquote>\n<h3 id=\"onedev\">onedev</h3>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/theonedev/onedev\">onedev</a> 是替代<code>Gitlab</code>的极佳候补，看文档介绍，潜力无限！</p>\n<div style=\"text-align: center\">\n  <div class=\"github-card\" data-user=\"theonedev\" data-repo=\"onedev\" data-height=\"200\" data-width=\"400\" data-theme=\"default\" data-target=\"\" data-client-id=\"\" data-client-secret=\"\"></div>\n</div>\n<script src=\"/github-card-lib/githubcard.js\"></script>\n\n<h2 id=\"系列教程-16\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Devops系列</strong> <a href=\"https://blog.17lai.site/categories/devops/atom.xml\"><strong>Devops 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/ab63eb8f/\">自建全套开源Devops开发系统</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d32a07a7/\">Git介绍以及分支模型图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/39563241/\">三万字无坑搭建基于Docker+K8S+GitLab/SVN+Jenkins+Harbor持续集成交付环境</a></li>\n<li><a href=\"https://blog.17lai.site/posts/3437994a/\">DevOps系列---【Jenkinsfile+Dockerfile+nginx+vue】</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f4c3ad41/\">项目开发管理工具推荐</a></li>\n<li><a href=\"https://blog.17lai.site/posts/acc13b70/\">Gitlab的安装及使用教程完全版</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d08eb7b/\">Gitlab的安装及使用</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "docker",
                "devops",
                "框架",
                "图解"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/db7bf49b/",
            "url": "https://blog.17lai.site/posts/db7bf49b/",
            "title": "视频图书和音乐完全自动化管理框架图解",
            "date_published": "2022-05-09T03:37:48.000Z",
            "content_html": "<blockquote>\n<p>音视频，音乐和图书管理全过程自动化解决方案框架图解！结构化你的音视频、音乐和图书资源。所有过程一张图搞定！</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"框架自动化构架图解\">框架自动化构架图解</h2>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/09/20220509113832.webp\" alt=\"自动化框架构架\"></p>\n<h2 id=\"相关文章\">相关文章</h2>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/2b9325d0/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/music.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/2b9325d0/\">私人在线音乐服务器搭建与使用介绍</a>\n        <hr>\n        <div class=\"desc\">私人在线音乐服务器搭建与使用介绍！Mstream Docker 部署， rclone 挂载 webdav 网盘。 cloudflare parterner加速。</div>\n    </div>\n</div>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/9912bd5d/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/emby.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/9912bd5d/\">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a>\n        <hr>\n        <div class=\"desc\">jackett 作为种子源，sonarr剧集管理，bt下载，qbittorrent主力下载，使用iyuu转移辅种，emby，jellyfin做海报墙，sunfinder自动下载字幕。基本算是完美打通全流程自动追剧。bt种子文件命名规则SxxExx的自动识别下载，国内的资源手动查找下载，自动推送到emby刮削好。结合本地DNS管理，DNS去广告，Nginx 反向代理去端口访问，形成一个完整解决方案。</div>\n    </div>\n</div>\n<h2 id=\"图书、音乐、视频三剑客！-3\">图书、音乐、视频三剑客！</h2>\n<blockquote>\n<p>结构化自己的图书，音乐，和视频！</p>\n</blockquote>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/dc1c8194/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/book.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/dc1c8194/\">如何建立自己的私人图书馆</a>\n        <hr>\n        <div class=\"desc\">图书管理员似乎是个非常有前途的职业，远的有孔子，游学之前当图书管理员，近的有本朝开国毛教员，也当了很长时间图书管理员。我们也可以自己做个私人电子图书馆，单个管理员，说不定很有前途？</div>\n    </div>\n</div>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/3847ad58/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/music.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/3847ad58/\">如何使用media Go,MusicBrainz,Mp3tag工具刮削音乐 整理音乐资料库</a>\n        <hr>\n        <div class=\"desc\">音乐文件则是将歌名、歌手、专辑、发行时间、歌词、封面图等信息写入文件标签，称为ID3 Tag 。它能够在MP3中附加曲子的演出者、作者以及其它类别资讯，方便众多乐曲的管理。</div>\n    </div>\n</div>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/e6d40157/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/emby.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/e6d40157/\">如何使用tinyMediaManager刮削电影和电视剧，动画，并自动下载字幕</a>\n        <hr>\n        <div class=\"desc\">tinyMediaManager是最好用的视频刮削工具，可以刮削电影，动画，电视剧。使用TinyMediaManager生成nfo元数据文件，多媒体软件解析生成海报墙展示丰富的影片信息，配合Emby，Plex使用体验绝佳</div>\n    </div>\n</div>\n<h2 id=\"相关资源\">相关资源</h2>\n<blockquote>\n<p>更多相关资源可以到下面网址查看</p>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/repositories\">DockerHub</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry\">Github</a></li>\n</ul>\n</blockquote>\n<h3 id=\"nas-tools\">nas-tools</h3>\n<blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/jxxghp/nas-tools\">nas-tools Github</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/repository/docker/jxxghp/nas-tools\">nas-tools DockerHub</a></li>\n</ul>\n</blockquote>\n<p>推荐一下这个，作者相当勤奋，更新速度非常快！最重要的是它是国人开发，对中文支持很好！有问题提Issue，作者回复也很快！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/09/20220509115933.webp\" alt=\"nas-tools\"></p>\n<h4 id=\"功能：\">功能：</h4>\n<h5 id=\"1、资源检索\">1、资源检索</h5>\n<ul>\n<li>PT站聚合<code>RSS</code>订阅，实现资源自动追新。</li>\n<li>通过微信、Telegram或者WEB界面聚合检索资源并择优，最新热门一键搜索或者订阅。</li>\n<li>在豆瓣中标记，后台自动检索，未出全的自动加入<code>RSS</code>追更。</li>\n</ul>\n<h5 id=\"2、媒体识别和重命名\">2、媒体识别和重命名</h5>\n<ul>\n<li>监控下载软件，下载完成后自动识别真实名称，硬链接到媒体库并重命名。</li>\n<li>对目录进行监控，文件变化时自动识别媒体信息硬链接到媒体库并重命名。</li>\n<li>支持国产剧集，支持动漫，改名后<code>Emby/Jellyfin/Plex</code> 100%搜刮。</li>\n</ul>\n<h5 id=\"3、消息服务\">3、消息服务</h5>\n<ul>\n<li>支持<code>ServerChan</code>、微信、<code>Telegram</code>、<code>Bark</code>等图文消息通知，直接在手机上控制。</li>\n</ul>\n<h5 id=\"4、其它\">4、其它</h5>\n<ul>\n<li>自动签到、<code>Emby/Jellyfin/Plex</code>播放状态通知等等。</li>\n</ul>\n<h4 id=\"安装\">安装</h4>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.4\"</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nastools</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> jxxghp/nas<span class=\"token punctuation\">-</span>tools<span class=\"token punctuation\">:</span>latest\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> nastools\n    <span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> nastools\n    <span class=\"token comment\"># ports:</span>\n      <span class=\"token comment\"># - 3000:3000        # 默认的webui控制端口</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/nastools/config<span class=\"token punctuation\">:</span>/config   <span class=\"token comment\"># 冒号左边请修改为你想保存配置的路径</span>\n      <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span>/Download<span class=\"token punctuation\">:</span>/share/Download\n      <span class=\"token comment\">#- /你的媒体目录:/你想设置的容器内能见到的目录   # 媒体目录，多个目录需要分别映射进来</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> PUID=$<span class=\"token punctuation\">{</span>PUID<span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">-</span> PGID=$<span class=\"token punctuation\">{</span>PGID<span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">-</span> TZ=$<span class=\"token punctuation\">{</span>TZ<span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">-</span> UMASK=022 <span class=\"token comment\"># 掩码权限，默认000，可以考虑设置为022</span>\n     <span class=\"token comment\">#- REPO_URL=https://ghproxy.com/https://github.com/jxxghp/nas-tools.git  </span>\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"参数配置\">参数配置</h4>\n<p>新版参数基本都可以在web界面配置。</p>\n<p>也可以直接修改配置文件，配置文件中有非常详细的注释！请认真查看配置文件中的文本注释！</p>\n<p>配置文件位置，基于docker路径<code>/config/config.yaml</code></p>\n<p>配置文件模板，可以仓库下面链接文件</p>\n<p><code>https://github.com/jxxghp/nas-tools/blob/master/config/config.yaml</code></p>\n<h3 id=\"硬链接工具\">硬链接工具</h3>\n<blockquote>\n<ul>\n<li><strong><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry/PTtool\">Github appotry/PTtool</a></strong></li>\n</ul>\n</blockquote>\n<h3 id=\"nginx-docker\">nginx docker</h3>\n<blockquote>\n<ul>\n<li><strong><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry\">Github appotry</a>/<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/appotry/nginx-purge-docker\">nginx-purge-docker</a></strong></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/repository/docker/bloodstar/nginx-purge\">nginx DockerHub</a></li>\n</ul>\n</blockquote>\n<h3 id=\"prowlarr\">prowlarr</h3>\n<blockquote>\n<p>最早是玩<code>sonarr</code>、<code>radarr</code>，然后找到i相关的全家桶，见下图</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/09/20220509122743.webp\" alt=\"prowlarr\"></p>\n<blockquote>\n<p>发现各种资源，结构化，<code>Github</code>上面都有很完善的解决方案，但大都对中文支持不好。而且各种上下游资源也是越来越丰富，看看<code>prowlarr</code>支持的<code>app</code>，基本覆盖你的所有所需！<code>Whisparr</code>项目的介绍惊呆了我😄</p>\n<p>国人也有一些好项目，<code> IYUU</code>，<code>nas-tools</code>等。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/09/20220509122740.webp\" alt=\"prowlarr\"></p>\n<h3 id=\"FlareSolverr\"><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/FlareSolverr/FlareSolverr\">FlareSolverr</a></h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run -d <span class=\"token punctuation\">\\</span>\n  --name<span class=\"token operator\">=</span>flaresolverr <span class=\"token punctuation\">\\</span>\n  -p <span class=\"token number\">8191</span>:8191 <span class=\"token punctuation\">\\</span>\n  -e <span class=\"token assign-left variable\">LOG_LEVEL</span><span class=\"token operator\">=</span>info <span class=\"token punctuation\">\\</span>\n  --restart unless-stopped <span class=\"token punctuation\">\\</span>\n  ghcr.io/flaresolverr/flaresolverr:latest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>如果成功启动，访问<code>ip:8191</code>将看到如下信息</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n<span class=\"token property\">\"msg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"FlareSolverr is ready!\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"v2.2.4\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"userAgent\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mozilla/5.0 (X11; Linux x86_64; rv:94.0) Gecko/20100101 Firefox/94.0\"</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "pt",
                "nas",
                "docker",
                "emby"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/dc1c8194/",
            "url": "https://blog.17lai.site/posts/dc1c8194/",
            "title": "如何建立自己的私人图书馆",
            "date_published": "2022-05-02T14:39:37.000Z",
            "content_html": "<blockquote>\n<p>继刮削音乐，刮削电影、电视剧、动画等视频之后的第三季，刮削图书！</p>\n<p>结构化自己的图书，方便自己随时查阅，是提高自己各种能力的重要辅助手段！把各方面知识都结构化，可以极大的扩展你的思维，放飞你的思想，让你以更清晰的目光看待这个世界!</p>\n<p>友情提示：中国法规是不允许私人做电子出版的！<mark>自用可以，公开访问是违法的</mark>！</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"操作指南\">操作指南</h2>\n<p>Web界面的<code>Calibre</code>作为阅读界面，支持<code>OPDS</code>接口，可以手机访问！</p>\n<p><code>PC </code>版的<code>Calibrez</code>作为电子书导入，转移，和管理的工具更方便！</p>\n<p>注意不要同时在web和PC端操作数据库，很容易导致数据库出bug。</p>\n<p>虽然<code>pc calibre</code>有数据库恢复功能，大部分时间都可以成功恢复数据库，但是偶尔也有不能恢复的时候！</p>\n<h2 id=\"安装Docker\">安装Docker</h2>\n<blockquote>\n<p>更多平台Docker安装介绍，请看这里</p>\n<p><a href=\"https://blog.17lai.site/posts/40300608/#Hexo-Docker%E7%8E%AF%E5%A2%83%E4%BD%BF%E7%94%A8%E7%AF%87\">Hexo Docker环境使用篇</a></p>\n</blockquote>\n<h3 id=\"1、安装docker\">1、安装docker</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -fsSL https://get.docker.com <span class=\"token operator\">|</span> <span class=\"token function\">sh</span> <span class=\"token operator\">&amp;&amp;</span> systemctl <span class=\"token builtin class-name\">enable</span> --now <span class=\"token function\">docker</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"2、安装docker-compose\">2、安装docker-compose</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p /usr/local/lib/docker/cli-plugins\n<span class=\"token function\">curl</span> -SL https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -s<span class=\"token variable\">`</span></span>-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -m<span class=\"token variable\">`</span></span> -o /usr/local/lib/docker/cli-plugins/docker-compose\n<span class=\"token function\">chmod</span> +x /usr/local/lib/docker/cli-plugins/docker-compose<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3、运行bookstack\">3、运行bookstack</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> compose up -d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"4、查看日志\">4、查看日志</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> logs -f calibre<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"CalibreWeb\">CalibreWeb</h2>\n<blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/technosoft2000/calibre-web\">Github</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.github.com/Technosoft2000/docker-calibre-web\">Dockerhub</a></li>\n<li><code>Calibre</code>相关的<code>Docker</code>很多，这是其中界面很漂亮的一个版本</li>\n<li>注意这个<code>Docker</code>安装需要访问<code>Github</code>下载相关文件！注意你的网络是否正常</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/03/20220503001726.webp\" alt=\"technosoft2000/calibre-web\"></p>\n<p>视频详细<code>Calibre web</code>讲解</p>\n<style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class=\"bbplayer\"><iframe class=\"bbplayer\" id=\"mmedia-gMYcjhLSjNIObaBO\" src=\"https://player.bilibili.com/player.html?bvid=bv12v411W7Pw&amp;page=1&amp;high_quality=1&amp;danmaku=true\" allowfullscreen=\"allowfullscreen\" scrolling=\"no\" border=\"0\" frameborder=\"0\" framespacing=\"0\" sandbox=\"allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups\"></iframe></div><script> document.getElementById(\"mmedia-gMYcjhLSjNIObaBO\").style.height=document.getElementById(\"mmedia-gMYcjhLSjNIObaBO\").scrollWidth*0.76+\"px\";\n    window.onresize = function(){\n      document.getElementById(\"mmedia-gMYcjhLSjNIObaBO\").style.height=document.getElementById(\"mmedia-gMYcjhLSjNIObaBO\").scrollWidth*0.76+\"px\";\n    }; </script>\n<p><strong>Compose 安装示例</strong></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">calibre</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> technosoft2000/calibre<span class=\"token punctuation\">-</span>web\n  <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> calibre\n  <span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> calibre\n  <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n  <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/Calibre/web/config<span class=\"token punctuation\">:</span>/calibre<span class=\"token punctuation\">-</span>web/config\n    <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/Calibre/web/kindlegen<span class=\"token punctuation\">:</span>/calibre<span class=\"token punctuation\">-</span>web/kindlegen\n    <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/Calibre/web/app<span class=\"token punctuation\">:</span>/calibre<span class=\"token punctuation\">-</span>web/app\n    <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/Calibre/books<span class=\"token punctuation\">:</span>/books\n\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n   <span class=\"token punctuation\">-</span> 8283<span class=\"token punctuation\">:</span><span class=\"token number\">8083</span>\n  <span class=\"token key atrule\">env_file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> .env\n  <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> PUID=$<span class=\"token punctuation\">{</span>PUID<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">-</span> PGID=$<span class=\"token punctuation\">{</span>PGID<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">-</span> TZ=$<span class=\"token punctuation\">{</span>TZ<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">-</span> USE_CONFIG_DIR=true\n    <span class=\"token punctuation\">-</span> SET_CONTAINER_TIMEZONE=true<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"talebook\">talebook</h2>\n<blockquote>\n<ul>\n<li>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://www.github.com/talebook/talebook\">Github</a></p>\n</li>\n<li>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://hub.docker.com/r/talebook/talebook\">Dockerhub</a></p>\n</li>\n<li>\n<p>Tips: 国人开发的，个人感觉更适合作为图书管理的界面</p>\n</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/03/20220503001726-1.webp\" alt=\"talebook/talebook\"></p>\n<p><strong>Compose 安装示例</strong></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">talebook</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> talebook/talebook\n  <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> talebook\n  <span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> talebook\n  <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token datetime number\">90:80</span>\n  <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">{</span>USERDIR<span class=\"token punctuation\">}</span>/talebook/data<span class=\"token punctuation\">:</span>/data\n  <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> PUID=$<span class=\"token punctuation\">{</span>PUID<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">-</span> PGID=$<span class=\"token punctuation\">{</span>PGID<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">-</span> TZ=$<span class=\"token punctuation\">{</span>TZ<span class=\"token punctuation\">}</span>\n  <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">public_access</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">aliases</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> talebook <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"Calibre\">Calibre</h2>\n<blockquote>\n<p><code>Pc</code>版的<code>Calibre</code>用来做数据库管理，有各种插件支持，是最方便的。</p>\n<p>主页：<a target=\"_blank\" rel=\"noopener\" href=\"https://calibre-ebook.com/\">calibre-ebook</a></p>\n<p>下载：<a target=\"_blank\" rel=\"noopener\" href=\"https://calibre-ebook.com/download\">download</a></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/03/20220503001726-2.webp\" alt=\"Calibre\"></p>\n<h3 id=\"刮削插件安装\">刮削插件安装</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/03/20220503001726-3.webp\" alt=\"Calibre首选项\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/03/20220503001726-4.webp\" alt=\"Calibre插件\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/03/20220503001726-5.webp\" alt=\"安装Calibre插件\"></p>\n<blockquote>\n<p>豆瓣刮削插件这里下载安装</p>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/fugary/calibre-douban/releases\">Github</a></li>\n<li>官方地址 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/fugary/calibre-douban/releases/download/v1.0.5/NewDouban.zip\">Github 下载地址</a></li>\n<li>本站自建加速地址 <a target=\"_blank\" rel=\"noopener\" href=\"https://onebox.17lai.site/ODE5/NewDouban.zip\">onebox.17lai.site加速下载</a> 更新到1.05 如果打不开，多刷新几次！</li>\n</ul>\n</blockquote>\n<h3 id=\"添加书库\">添加书库</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/03/20220503013543.webp\" alt=\"添加书库\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/03/20220503013546.webp\" alt=\"添加书库\"></p>\n<h3 id=\"图书刮削\">图书刮削</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/03/20220503001726-6.webp\" alt=\"下载元数据\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/03/20220503001726-7.webp\" alt=\"检查元数据\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/03/20220503001726-8.webp\" alt=\"检查元数据\"></p>\n<p>检查完毕就可以点击确认</p>\n<h3 id=\"数据库转移\">数据库转移</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/03/20220503001726-9.webp\" alt=\"数据库转移\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/03/20220503001726-10.webp\" alt=\"数据库转移\"></p>\n<blockquote>\n<p>这里最好建立一个临时书库作为转移和刮削预备用，防止意外崩溃导致数据库损坏或丢失！</p>\n<p>你可以和你的好友之间共享或者转移某个书库。</p>\n<p>图书太多，刮削太耗时间，合作刮削建立书库才是正途！</p>\n</blockquote>\n<h3 id=\"Calibre数据库恢复\"><code>Calibre</code>数据库恢复</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/03/20220503001726-11.webp\" alt=\"数据库恢复\"></p>\n<h2 id=\"图书、音乐、视频三剑客！-2\">图书、音乐、视频三剑客！</h2>\n<blockquote>\n<p>结构化自己的图书，音乐，和视频！</p>\n</blockquote>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/dc1c8194/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/book.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/dc1c8194/\">如何建立自己的私人图书馆</a>\n        <hr>\n        <div class=\"desc\">图书管理员似乎是个非常有前途的职业，远的有孔子，游学之前当图书管理员，近的有本朝开国毛教员，也当了很长时间图书管理员。我们也可以自己做个私人电子图书馆，单个管理员，说不定很有前途？</div>\n    </div>\n</div>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/3847ad58/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/music.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/3847ad58/\">如何使用media Go,MusicBrainz,Mp3tag工具刮削音乐 整理音乐资料库</a>\n        <hr>\n        <div class=\"desc\">音乐文件则是将歌名、歌手、专辑、发行时间、歌词、封面图等信息写入文件标签，称为ID3 Tag 。它能够在MP3中附加曲子的演出者、作者以及其它类别资讯，方便众多乐曲的管理。</div>\n    </div>\n</div>\n<div class=\"vkr-url-wrapper\">\n<style>\n.vkr-url-wrapper {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid;\n    border-color: #eee #ddd #bbb;\n    box-shadow: rgba(0,0,0,.14) 0 1px 3px;\n    margin-bottom: 10px;\n    display: flex;\n}\n.vkr-url-wrapper .desc-wrapper > hr {\n    margin: 10px 0;\n    height: 1px;\n}\n.vkr-url-wrapper .avatar {\n    width: 100px;\n    height: 100px;\n    border: solid 1px #eee;\n    box-shadow: none!important;\n    margin: 0;\n    margin-right: 10px;\n}\n.vkr-url-wrapper h2 {\n    border: none;\n    margin: 0;\n    padding: 0;\n}\n.vkr-url-wrapper .desc-wrapper {\n    flex: 1;\n}\n.vkr-url-wrapper .desc-wrapper a {\n    font-size: 22px;\n    font-weight: 700;\n}\n</style>\n    \n        <a href=\"https://blog.17lai.site/posts/e6d40157/\"><img class=\"avatar\" src=\"https://blog.17lai.site/medias_webp/cover/emby.webp\"></a>\n    \n    <div class=\"desc-wrapper\">\n        <a href=\"https://blog.17lai.site/posts/e6d40157/\">如何使用tinyMediaManager刮削电影和电视剧，动画，并自动下载字幕</a>\n        <hr>\n        <div class=\"desc\">tinyMediaManager是最好用的视频刮削工具，可以刮削电影，动画，电视剧。使用TinyMediaManager生成nfo元数据文件，多媒体软件解析生成海报墙展示丰富的影片信息，配合Emby，Plex使用体验绝佳</div>\n    </div>\n</div>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "刮削",
                "calibre",
                "douban",
                "book"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/ba4ef326/",
            "url": "https://blog.17lai.site/posts/ba4ef326/",
            "title": "QNAP添加man pages",
            "date_published": "2022-04-21T11:04:33.000Z",
            "content_html": "<blockquote>\n<p>默认<code>QNAP</code>是不带<code>man</code>命令的，但是，作为一个<code>Linux</code>重度用户怎么能忍？得想办法安装man啊！经过一番努力，最终成功安装man pages!</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/2120220421192048.svg\" alt=\"\"></p>\n<h2 id=\"需求\">需求</h2>\n<p>默认<code>QNAP</code>是不带<code>man</code>命令的，但是，作为一个<code>Linux</code>重度用户怎么能忍？</p>\n<blockquote>\n<p>得想办法安装man啊！</p>\n</blockquote>\n<h2 id=\"验证\">验证</h2>\n<p>先试一下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># man</span>\n-sh: man: <span class=\"token builtin class-name\">command</span> not found<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>基本可以死心了。</p>\n<p>看看busybox版本</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># /bin/busybox </span>\nBusyBox v1.24.1 <span class=\"token punctuation\">(</span><span class=\"token number\">2022</span>-03-24 03:13:07 CST<span class=\"token punctuation\">)</span> multi-call binary.\nBusyBox is copyrighted by many authors between <span class=\"token number\">1998</span>-2015.\nLicensed under GPLv2. See <span class=\"token builtin class-name\">source</span> distribution <span class=\"token keyword\">for</span> detailed\ncopyright notices.\n\nUsage: busybox <span class=\"token punctuation\">[</span>function <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\n   or: busybox --list\n   or: <span class=\"token keyword\">function</span> <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>.\n\n        BusyBox is a multi-call binary that combines many common Unix\n        utilities into a single executable.  Most people will create a\n        <span class=\"token function\">link</span> to busybox <span class=\"token keyword\">for</span> each <span class=\"token keyword\">function</span> they wish to use and BusyBox\n        will act like whatever it was invoked as.\n\nCurrently defined functions:\n        <span class=\"token punctuation\">[</span>, <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>, addgroup, adduser, arping, ash, awk, base64, basename, bunzip2, bzcat, bzip2, cat, chattr, chgrp, chmod, chown,\n        chroot, chvt, cksum, clear, cmp, cp, cpio, crond, crontab, cut, date, dc, dd, deallocvt, delgroup, deluser, depmod, df,\n        diff, dirname, dmesg, dnsdomainname, dos2unix, du, echo, egrep, env, expr, false, fdisk, fgrep, find, free, fsync, getty,\n        grep, groups, gunzip, gzip, halt, hd, head, hexdump, hostname, hwclock, id, ifconfig, init, insmod, install, ip, ipaddr,\n        iplink, iproute, iprule, iptunnel, kill, killall, killall5, klogd, less, linuxrc, ln, logger, login, logread, ls, lsattr,\n        lsmod, lspci, md5sum, mkdir, mknod, mktemp, modprobe, more, mount, mv, nameif, netstat, nslookup, openvt, passwd, pidof,\n        ping, ping6, pivot_root, poweroff, printf, ps, pwd, rdate, readlink, realpath, reboot, renice, reset, resize, rm, rmdir,\n        rmmod, route, sed, seq, sh, sha1sum, sleep, sort, split, start-stop-daemon, stat, strings, swapoff, swapon, switch_root,\n        sync, sysctl, syslogd, tail, tar, taskset, tee, telnet, test, tftp, time, top, touch, tr, traceroute, traceroute6, true,\n        tty, umount, uname, uniq, unix2dos, unzip, uptime, usleep, vi, watch, wc, wget, which, whoami, xargs, yes, zcat<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以看到内置<code>busybox</code>不支持<code>man</code>的。</p>\n<h2 id=\"寻找解决方案\">寻找解决方案</h2>\n<p>去看看官方<code>Busybox</code>是否支持</p>\n<blockquote>\n<p><strong>Busybox</strong> : https://busybox.net/downloads/BusyBox.html</p>\n</blockquote>\n<p>发现是支持<code>man</code>的，只是<code>QNAP</code>没有编译进去。</p>\n<h2 id=\"解决思路\">解决思路</h2>\n<ul>\n<li>给<code>QNAP</code>提需求单？ 是一个选择，但是太慢了，想官方内置，不知道等到猴年马月了。</li>\n<li><code>QNAP</code>似乎开发了底层SDK，记得有下载过，还没有仔细研究怎么使用。不过记得有附带编译工具链，自己动手编译一个<code>busybox</code>版本替代系统内置的，应该也是可行的。</li>\n</ul>\n<h2 id=\"去看看别人有啥解决方案？\">去看看别人有啥解决方案？</h2>\n<blockquote>\n<p>Optware has man but only for the optware installed packages (if supplied) and or manually added files in the man folder.</p>\n<p>https://forum.qnap.com/viewtopic.php?t=49961</p>\n</blockquote>\n<p>柳暗花明又一村， <code>entware</code> 支持<code>man pages</code>，可以直接安装了。</p>\n<blockquote>\n<p>插入<code>entware</code>安装方法：</p>\n<p>打开<code>App Center</code>，源选择刚添加的<code>Qnapclub</code>，点击搜索框输入<code>entware</code>，选<code>Entware-std 1.03</code></p>\n</blockquote>\n<p>一条命令解决：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">opkg <span class=\"token function\">install</span> man-db man-pages<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>安装完之后验证：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># man fopen</span>\nFOPEN<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>                                            Linux Programmer's Manual                                            FOPEN<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\nNAME\n       fopen, fdopen, freopen - stream <span class=\"token function\">open</span> functions\n\nSYNOPSIS\n       <span class=\"token comment\">#include &lt;stdio.h&gt;</span>\n\n       FILE *fopen<span class=\"token punctuation\">(</span>const char *restrict pathname, const char *restrict mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       FILE *fdopen<span class=\"token punctuation\">(</span>int fd, const char *mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       FILE *freopen<span class=\"token punctuation\">(</span>const char *restrict pathname, const char *restrict mode,\n                     FILE *restrict stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   Feature Test Macro Requirements <span class=\"token keyword\">for</span> glibc <span class=\"token punctuation\">(</span>see feature_test_macros<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">))</span>:\n\n       fdopen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>:\n           _POSIX_C_SOURCE\n\nDESCRIPTION\n       The fopen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">function</span> opens the <span class=\"token function\">file</span> whose name is the string pointed to by pathname and associates a stream with it.\n\n       The  argument mode points to a string beginning with one of the following sequences <span class=\"token punctuation\">(</span>possibly followed by additional char‐\n       acters, as described below<span class=\"token punctuation\">)</span>:\n\n       r      Open text <span class=\"token function\">file</span> <span class=\"token keyword\">for</span> reading.  The stream is positioned at the beginning of the file.\n\n       r+     Open <span class=\"token keyword\">for</span> reading and writing.  The stream is positioned at the beginning of the file.\n\n       w      Truncate <span class=\"token function\">file</span> to zero length or create text <span class=\"token function\">file</span> <span class=\"token keyword\">for</span> writing.  The stream is positioned at  the  beginning  of  the\n              file.\n\n       w+     Open  <span class=\"token keyword\">for</span> reading and writing.  The <span class=\"token function\">file</span> is created <span class=\"token keyword\">if</span> it does not exist, otherwise it is truncated.  The stream is\n              positioned at the beginning of the file.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>问题就这么解决了。</p>\n<blockquote>\n<p>一个问题，我有很多其它手册，想要安装，怎么办？</p>\n</blockquote>\n<h2 id=\"安装其它man手册\">安装其它<code>man</code>手册</h2>\n<p>已经有了<code>man</code>命令，只要把手册安装到<code>entware man</code>命令目录中就行了。</p>\n<p>找到<code>enteware man</code>手册目录。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /share/CACHEDEV3_DATA/.qpkg/Entware\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -name <span class=\"token string\">\"*man*\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<blockquote>\n<p>TIPS：<code>CACHEDEV3_DATA/.qpkg</code>这个是安装qpkg软件的磁盘。<code>CACHEDEV3</code>似乎是表示第三块插入机器的磁盘。</p>\n</blockquote>\n<p>结果输出：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./bin/catman\n./bin/go/misc/chrome/gophertool/manifest.json\n./bin/go/pkg/linux_amd64/cmd/vendor/github.com/ianlancetaylor/demangle.a\n./bin/go/src/cmd/compile/internal/types2/testdata/manual.go2\n./bin/go/src/cmd/go/internal/modconv/testdata/dockerman.glide\n./bin/go/src/cmd/go/internal/modconv/testdata/dockerman.out\n./bin/go/src/cmd/go/internal/modconv/testdata/govmomi.vmanifest\n./bin/go/src/cmd/go/internal/modconv/vmanifest.go\n./bin/go/src/cmd/go/testdata/script/mod_convert_vendor_manifest.txt\n./bin/go/src/cmd/go/testdata/script/mod_list_command_line_arguments.txt\n./bin/go/src/cmd/go/testdata/script/mod_download_too_many_redirects.txt\n./bin/go/src/cmd/go/testdata/script/gccgo_mangle.txt\n./bin/go/src/cmd/vendor/github.com/google/pprof/internal/driver/commands.go\n./bin/go/src/cmd/vendor/github.com/ianlancetaylor/demangle\n./bin/go/src/cmd/vendor/github.com/ianlancetaylor/demangle/demangle.go\n./bin/go/src/compress/bzip2/huffman.go\n./bin/go/src/compress/flate/huffman_bit_writer.go\n./bin/go/src/compress/flate/huffman_bit_writer_test.go\n./bin/go/src/compress/flate/huffman_code.go\n./bin/go/src/compress/flate/testdata/huffman-null-max.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-null-max.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-null-max.golden\n./bin/go/src/compress/flate/testdata/huffman-null-max.in\n./bin/go/src/compress/flate/testdata/huffman-null-max.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-null-max.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-pi.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-pi.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-pi.golden\n./bin/go/src/compress/flate/testdata/huffman-pi.in\n./bin/go/src/compress/flate/testdata/huffman-pi.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-pi.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.golden\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.in\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-rand-1k.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.golden\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.in\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-rand-limit.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-rand-max.golden\n./bin/go/src/compress/flate/testdata/huffman-rand-max.in\n./bin/go/src/compress/flate/testdata/huffman-shifts.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-shifts.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-shifts.golden\n./bin/go/src/compress/flate/testdata/huffman-shifts.in\n./bin/go/src/compress/flate/testdata/huffman-shifts.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-shifts.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-text-shift.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-text-shift.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-text-shift.golden\n./bin/go/src/compress/flate/testdata/huffman-text-shift.in\n./bin/go/src/compress/flate/testdata/huffman-text-shift.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-text-shift.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-text.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-text.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-text.golden\n./bin/go/src/compress/flate/testdata/huffman-text.in\n./bin/go/src/compress/flate/testdata/huffman-text.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-text.wb.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-zero.dyn.expect\n./bin/go/src/compress/flate/testdata/huffman-zero.dyn.expect-noinput\n./bin/go/src/compress/flate/testdata/huffman-zero.golden\n./bin/go/src/compress/flate/testdata/huffman-zero.in\n./bin/go/src/compress/flate/testdata/huffman-zero.wb.expect\n./bin/go/src/compress/flate/testdata/huffman-zero.wb.expect-noinput\n./bin/go/src/go/parser/performance_test.go\n./bin/go/src/go/printer/performance_test.go\n./bin/go/src/go/types/testdata/manual.go2\n./bin/go/src/image/jpeg/huffman.go\n./bin/go/src/vendor/golang.org/x/net/http2/hpack/huffman.go\n./bin/go/test/bench/go1/mandel_test.go\n./bin/go/test/abi/many_int_input.go\n./bin/go/test/abi/many_int_input.out\n./bin/go/test/abi/many_intstar_input.go\n./bin/go/test/abi/many_intstar_input.out\n./bin/man\n./bin/mandb\n./bin/manpath\n./etc/man_db.conf\n./lib/opkg/info/man-db.conffiles\n./lib/opkg/info/man-db.control\n./lib/opkg/info/man-pages.list\n./lib/opkg/info/man-db.list\n./lib/opkg/info/man-pages.control\n./lib/opkg/info/man-pages.postinst\n./lib/python3.10/encodings/__pycache__/hp_roman8.cpython-310.opt-1.pyc\n./lib/python3.10/encodings/__pycache__/hp_roman8.cpython-310.opt-2.pyc\n./lib/python3.10/encodings/__pycache__/mac_roman.cpython-310.opt-2.pyc\n./lib/python3.10/encodings/__pycache__/mac_roman.cpython-310.pyc\n./lib/python3.10/encodings/__pycache__/hp_roman8.cpython-310.pyc\n./lib/python3.10/encodings/__pycache__/mac_romanian.cpython-310.pyc\n./lib/python3.10/encodings/__pycache__/mac_roman.cpython-310.opt-1.pyc\n./lib/python3.10/encodings/__pycache__/mac_romanian.cpython-310.opt-1.pyc\n./lib/python3.10/encodings/__pycache__/mac_romanian.cpython-310.opt-2.pyc\n./lib/python3.10/encodings/hp_roman8.pyc\n./lib/python3.10/encodings/mac_roman.pyc\n./lib/python3.10/encodings/mac_romanian.pyc\n./lib/tcl8.5/encoding/macRoman.enc\n./lib/tcl8.5/encoding/macRomania.enc\n./lib/groff/groffer/man.pl\n./lib/man-db\n./lib/man-db/libman-2.10.2.so\n./lib/man-db/libman.so\n./lib/man-db/libmandb-2.10.2.so\n./lib/man-db/libmandb.so\n./lib/man-db/manconv\n./share/zoneinfo/Asia/Amman\n./share/zoneinfo/Asia/Kathmandu\n./share/zoneinfo/Asia/Katmandu\n./share/doc/man-db\n./share/doc/man-db/man-db-manual.ps\n./share/doc/man-db/man-db-manual.txt\n./share/groff/1.22.4/tmac/man.tmac\n./share/groff/1.22.4/tmac/mandoc.tmac\n./share/groff/site-tmac/man.local\n./share/man\n./share/man/man1\n./share/man/man1/man-recode.1\n./share/man/man1/man.1\n./share/man/man1/manconv.1\n./share/man/man1/manpath.1\n./share/man/man5\n./share/man/man5/manpath.5\n./share/man/man8\n./share/man/man8/catman.8\n./share/man/man8/mandb.8\n./share/man/man2\n./share/man/man3\n./share/man/man4\n./share/man/man6\n./share/man/man7\n./share/man/man7/man-pages.7\n./share/man/man7/man.7\n./var/cache/man<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>很显然，路径就在<code>/share/CACHEDEV3_DATA/.qpkg/Entware/share//man/</code>中了。</p>\n<p>那么，安装完<code>entware</code>之后，其它的man 手册放到 <code>/share/CACHEDEV3_DATA/.qpkg/Entware/share/man</code>这个目录中就行了。</p>\n<p>把<code>gh git</code>等手册放进去。再次验证</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">man</span> gh\nGH<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>                                                   GitHub CLI manual                                                   GH<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\nNAME\n       gh - GitHub CLI\n\nSYNOPSIS\n       gh <span class=\"token operator\">&lt;</span>command<span class=\"token operator\">&gt;</span> <span class=\"token operator\">&lt;</span>subcommand<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span>flags<span class=\"token punctuation\">]</span>\n\nDESCRIPTION\n       Work seamlessly with GitHub from the <span class=\"token builtin class-name\">command</span> line.\n\nCORE COMMANDS\n       gh-auth<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Authenticate gh and <span class=\"token function\">git</span> with GitHub\n\n       gh-browse<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Open the repository <span class=\"token keyword\">in</span> the browser\n\n       gh-codespace<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Connect to and manage your codespaces\n\n       gh-gist<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Manage gists\n\n       gh-issue<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Manage issues\n\n       gh-pr<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Manage pull requests\n\n       gh-release<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Manage releases\n\n       gh-repo<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n              Manage repositories\n\nACTIONS COMMANDS<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>完美收工！</p>\n<p>可能需要注意的地方，注意<code>man</code>手册的权限<code>644</code>，如果手册copy进去了，发现使用不了。运行下面命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> <span class=\"token number\">644</span> -R /share/CACHEDEV3_DATA/.qpkg/Entware/share/man<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"安装更多的man-pages\">安装更多的<code>man pages</code></h2>\n<blockquote>\n<ul>\n<li><code>Git</code>手册下载地址： https://mirrors.edge.kernel.org/pub/software/scm/git/</li>\n<li>中文<code>man</code>手册： https://github.com/man-pages-zh/manpages-zh</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>PS: 中文<code>man</code>手册有不少依赖需要解决，在<code>Docker</code>中已经可以查询中文<code>man</code>了，<code>qnap</code>中试了下，解决依赖搞得头大，暂时就<code>docker</code>中用中文<code>man</code>好了</p>\n</blockquote>\n<p>真正收工了！</p>\n<h2 id=\"附录\">附录</h2>\n<h3 id=\"man介绍\">man介绍</h3>\n<p>man命令并非仅仅能查看命令或者函数的介绍，在linux中，有丰富的帮助手册信息，并且每一个手册都有一个编号。编号和对应内容如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">编号</th>\n<th style=\"text-align:left\">代表内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">可执行程序或shell命令，如ls</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">系统调用，如chdir</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">库函数，如printf</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">设备或特殊文件，如tty</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\">配置文件格式或约定</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">6</td>\n<td style=\"text-align:left\">游戏</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">7</td>\n<td style=\"text-align:left\">杂项</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">8</td>\n<td style=\"text-align:left\">管理命令，通常只有root用户可以使用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">9</td>\n<td style=\"text-align:left\">内核例程</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">n</td>\n<td style=\"text-align:left\">内置命令，如cd</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"常用快捷键\">常用快捷键</h3>\n<blockquote>\n<p><strong>手册内容</strong></p>\n<p>多数手册包含以下几部分内容：</p>\n<ul>\n<li>NAME 功能的简单描述</li>\n<li>SYNOPSIS 语法格式</li>\n<li>DESCRIPTION 描述</li>\n<li>OPTIONS 选项</li>\n<li>ERRORS 描述出错场景，<strong>这在排查错误时很有帮助</strong></li>\n<li>NOTES 注意事项</li>\n<li>FILES 相关文件，例如对于man命令的FILES部分内容显示了它的配置文件位置等信息</li>\n<li>EXAMPLES 使用示例，会提供一些简单的示例</li>\n<li>BUGS 存在的bug，<strong>当遇到奇怪的问题时，不妨看看当前命令是否有已知的bug</strong></li>\n</ul>\n<p><strong>基本查看</strong></p>\n<p>手册的查看和less查看文本类似，可以参考《文本查看篇》或查看less命令的使用，这里介绍基本操作：</p>\n<ul>\n<li>空格 向下翻页</li>\n<li>Home 回到第一页</li>\n<li>End 跳到最后一页</li>\n<li>/string 向前搜索string字符串</li>\n<li>?string 向后搜索string字符串</li>\n<li>n 下一个匹配字符</li>\n<li>N 上一个匹配字符</li>\n<li>q 退出</li>\n</ul>\n</blockquote>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "qnap",
                "nas",
                "embeded",
                "man"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/d32a07a7/",
            "url": "https://blog.17lai.site/posts/d32a07a7/",
            "title": "Git介绍以及分支模型图解",
            "date_published": "2022-04-19T12:07:16.000Z",
            "content_html": "<blockquote>\n<p>不废话，直接上图。</p>\n<p>由 Drawio 绘制</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1920220419221343.svg\" alt=\"git使用\"></p>\n<h2 id=\"GIT架构\"><strong>GIT架构</strong></h2>\n<p>GIT的架构，可以分为几个部分：</p>\n<ul>\n<li>本地工作区(working directory)</li>\n<li>暂存区(stage area, 又称为索引区, index)、</li>\n<li>本地仓库(local repository)、</li>\n<li>远程仓库副本</li>\n<li>远程仓库(remote repository)。</li>\n</ul>\n<p><strong>工作区(working directory)</strong> 简言之就是你工作的区域。对于git而言，就是的本地工作目录。工作区的内容会包含提交到暂存区和版本库(当前提交点)的内容，同时也包含自己的修改内容。</p>\n<p><strong>暂存区(stage area, 又称为索引区index)</strong> 是git中一个非常重要的概念。是我们把修改提交版本库前的一个过渡阶段。查看GIT自带帮助手册的时候，通常以index来表示暂存区。在工作目录下有一个.git的目录，里面有个index文件，存储着关于暂存区的内容。git add命令将工作区内容添加到暂存区。</p>\n<p><strong>本地仓库(local repository)</strong> 版本控制系统的仓库，存在于本地。当执行git commit命令后，会将暂存区内容提交到仓库之中。在工作区下面有.git的目录，这个目录下的内容不属于工作区，里面便是仓库的数据信息，暂存区相关内容也在其中。</p>\n<p><strong>远程版本库(remote repository)</strong> 与本地仓库概念基本一致，不同之处在于一个存在远程，可用于远程协作，一个却是存在于本地。通过push/pull可实现本地与远程的交互；</p>\n<p><strong>远程仓库副本</strong> 可以理解为存在于本地的远程仓库缓存。如需更新，可通过git fetch/pull命令获取远程仓库内容。使用fech获取时，并未合并到本地仓库，此时可使用git merge实现远程仓库副本与本地仓库的合并。</p>\n<h2 id=\"git介绍\"><code>.git</code>介绍</h2>\n<p><code>.git</code>目录下各个文件中所存放的内容信息：</p>\n<ul>\n<li>\n<p><strong>HEAD</strong> 当前所在位置，其实就是工作区的在版本库中的那个提交点，最终会指向一个40位的HASH值；</p>\n</li>\n<li>\n<p><strong>config</strong> 当前版本库的专有配置文件，如使用命令git config user.name poloxue便会记录在此文件；</p>\n</li>\n<li>\n<p><strong>description</strong> 被gitweb (Github的原型)用来显示对repo的描述。</p>\n</li>\n<li>\n<p><strong>hooks</strong> git有可自动运行在 git 任有意义阶段的脚本hooks, 如commit/release/pull/push等状态之前或者之后。个人思考的一个用处，如pre-push可以用来强制进行代码检查。</p>\n</li>\n<li>\n<p><strong>index</strong> 存放暂存区(stage area)的相关信息；</p>\n</li>\n<li>\n<p><strong>info/exclue</strong> 可以做到和.gitignore相同的事情，用于排除不要包含进版本库的文件。区别就是，此文件不会被共享。</p>\n</li>\n<li>\n<p><strong>refs/heads</strong> 目录下有关于本地仓库的所有分支；</p>\n</li>\n<li>\n<p><strong>refs/remote</strong> 目录下有关于远程仓库的所有分支；</p>\n</li>\n<li>\n<p><strong>object</strong> 目录下存放的就是实际的数据文件</p>\n</li>\n</ul>\n<h2 id=\"附录-2\"><strong>附录</strong></h2>\n<p><a href=\"http%3A//www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">Git 教程</a></p>\n<p><a href=\"https%3A//git-scm.com/book/zh/v2\">Git book</a></p>\n<h2 id=\"系列教程-15\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Devops系列</strong> <a href=\"https://blog.17lai.site/categories/devops/atom.xml\"><strong>Devops 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/ab63eb8f/\">自建全套开源Devops开发系统</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d32a07a7/\">Git介绍以及分支模型图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/39563241/\">三万字无坑搭建基于Docker+K8S+GitLab/SVN+Jenkins+Harbor持续集成交付环境</a></li>\n<li><a href=\"https://blog.17lai.site/posts/3437994a/\">DevOps系列---【Jenkinsfile+Dockerfile+nginx+vue】</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f4c3ad41/\">项目开发管理工具推荐</a></li>\n<li><a href=\"https://blog.17lai.site/posts/acc13b70/\">Gitlab的安装及使用教程完全版</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d08eb7b/\">Gitlab的安装及使用</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "git",
                "devops",
                "drowio"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/ac0df556/",
            "url": "https://blog.17lai.site/posts/ac0df556/",
            "title": "PMBOK指南（第6版）",
            "date_published": "2022-04-17T10:50:15.000Z",
            "content_html": "<blockquote>\n<p>PMBOK 只是一套悬在空中的方法论，要想具体落地还需要具体的行业知识。两条腿，缺一不可！瘸腿项目管理有还不如没有，由部门管理或者研发兼任也行。PMBOK 是基础中的基础知识，了解总是没有坏处的。是常识，不懂就没法做，但要做项目管理，光PMBOK远远不够。<br>\nPMBOK 远不如华为的 IPD 端到端管理体系来的接地气，实用！<br>\n一整套匹配的管理工具，平台。Jira 或禅道，SVN/Git，Gitlab, confluence/xwiki，jenkins，nexus，sonarqube，docker，harbor，openldap等等。推荐本地私有化部署！管理方法和工具，最终一定是要落地的，没法结合企业实际落地的管理一定是财务负担！<br>\n有效的管理 = <strong><code>[ 管理收益 - 管理成本 &gt;= 0 ]</code></strong><br>\n负面的管理 = <strong><code>[ 管理收益 - 管理成本 &lt;= 0 ]</code></strong></p>\n</blockquote>\n<p><img src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/appotry/cloudimg/main/data/2022/04/1720220417191300.png\" alt=\"\"></p>\n<p><strong>可以看到项目管理其实只是企业管理中很小的一部分</strong></p>\n<h2 id=\"1-引论\">1 引论</h2>\n<h2 id=\"1-2-基本要素\">1.2 基本要素</h2>\n<h3 id=\"1-2-1-项目\">1.2.1 项目</h3>\n<p>项目是为创造独特的产品、服务或成果而进行的临时性工作。</p>\n<p><strong>独特的产品、服务或成果</strong></p>\n<ul>\n<li>开展项目是为了通过可交付成果达成目标。</li>\n<li>可交付成果指的是在某一个过程、阶段或项目完成时，必须产出的任何独特性并可核实的产品、成果或服务能力，可以是有形的，也可以是无形的。</li>\n<li>一个独特的产品，可能是其他产品的组成部分、某个产品的升级版或修正版，也可能其本身就是新的最终产品；</li>\n<li>一种独特的服务或提供某种服务的能力；</li>\n<li>一项独特的成果，例如某个结果或文件；</li>\n<li>一个或多个产品、服务或成果的独特组合。</li>\n<li>某些项目可交付成果和活动中可能存在重复的元素，但这种重复并不会改变项目本质上的独特性。</li>\n</ul>\n<p><strong>临时性工作</strong></p>\n<ul>\n<li>项目的“临时性”是指项目有明确的起点和终点。</li>\n<li>“临时性”并不意味着项目的持续时间短。</li>\n<li>虽然项目是临时的，但是项目产生的可交付成果可能会在项目的终止后依然存在。</li>\n</ul>\n<p>项目驱动变革</p>\n<ul>\n<li>从商业角度来看，项目旨在推动组织从一个状态转到另一个状态，从而达成特定目标。</li>\n<li>在项目开始之前，通常将此时的组织描述为“当前状态”，项目驱动变革是为了获得期望的结果，即“将来状态”。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417172027.png\" alt=\"\"></p>\n<p><strong>项目创造商业价值</strong></p>\n<ul>\n<li>项目的商业价值指特定项目的成果能够为相关方带来的效益。</li>\n<li>项目带来的效益可以是有形的（货币资产、市场份额等）、无形的（品牌认知度、荣誉等）或两者兼有之。</li>\n</ul>\n<p><strong>项目启动背景</strong></p>\n<ul>\n<li>符合法规、法律或社会要求；</li>\n<li>满足相关方的要求或需求；</li>\n<li>执行、变更业务或技术战略；</li>\n<li>创造、改进或修复产品、过程或服务。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417172027-1.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417172027-2.png\" alt=\"\"></p>\n<p>如何将示例因素归入一个或多个基本因素类别</p>\n<h3 id=\"1-2-2-项目管理的重要性\">1.2.2 项目管理的重要性</h3>\n<p>项目管理就是将知识、技能、工具与技术应用于项目活动，以满足项目的要求。项目管理通过合理运用与整合特定项目所需的项目管理过程得以实现。项目管理使组织能够有效且高效地开展项目。</p>\n<ul>\n<li>达成业务目标；</li>\n<li>满足相关方的期望；</li>\n<li>提高可预测性；</li>\n<li>提高成功的概率；</li>\n<li>在适当的时间交付正确的产品；</li>\n<li>解决问题和争议；</li>\n<li>及时应对风险；</li>\n<li>优化组织资源的使用；</li>\n<li>识别、挽救或终止失败项目；</li>\n<li>管理制约因素（例如范围、质量、进度、成本、资源）；</li>\n<li>平衡制约因素对项目的影响（例如范围扩大可能会增加成本或延长进度）；</li>\n<li>以更好的方式管理变更。</li>\n</ul>\n<h3 id=\"1-2-3-项目、项目集、项目组合以及运营管理之间的关系\">1.2.3 项目、项目集、项目组合以及运营管理之间的关系</h3>\n<h4 id=\"1-2-3-1-概述\">1.2.3.1 概述</h4>\n<p>项目集：项目集是一组相互关联且被协调管理的项目、子项目集和项目集活动，以便获得分别管理所无法获得的利益。项目集不是大项目，大项目指规模特别大的项目。</p>\n<p>项目组合：项目组合是指为实现战略目标而组合在一起的项目、项目集、子项目组合和运营工作。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417172027-3.png\" alt=\"\"></p>\n<p>项目集、项目、共享资源和相关方之间的关系</p>\n<p>从组织的角度看项目、项目集和项目组合管理：</p>\n<ul>\n<li>项目集和项目管理的重点在于以“正确”的方式开展项目集和项目；</li>\n<li>项目组合管理则注重于开展“正确”的项目集和项目。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417172027-4.png\" alt=\"\"></p>\n<p>项目组合、项目集与项目组合管理的比较</p>\n<h4 id=\"1-2-3-2-项目集管理\">1.2.3.2 项目集管理</h4>\n<p>项目集管理指在项目集中应用知识、技能与原则来实现项目集的目标，获得分别管理项目集组成部分所无法实现的利益和控制。</p>\n<p>项目集管理注重项目与项目以及项目与项目集之间的依赖关系。</p>\n<h4 id=\"1-2-3-3-项目组合管理\">1.2.3.3 项目组合管理</h4>\n<p>项目组合管理是指为了实现战略目标而对一个或多个项目组合进行的集中管理。</p>\n<p>项目组合中的项目集或项目不一定彼此依赖或直接相关。</p>\n<p>项目组合管理的目的：</p>\n<ul>\n<li>指导组织的投资决策；</li>\n<li>选择项目集与项目的最佳组合方式，以达成战略目标；</li>\n<li>提供决策透明度；</li>\n<li>确定团队和实物资源分配的优先顺序；</li>\n<li>提高实现预期投资回报的可能性；</li>\n<li>实现对所有组成部分的综合风险的集中式管理；</li>\n<li>确定项目组合符合组织战略。</li>\n</ul>\n<h4 id=\"1-2-3-5-运营与项目管理\">1.2.3.5 运营与项目管理</h4>\n<p>项目与运营会在产品生命周期的不同时点交叉，例如：</p>\n<ul>\n<li>在新产品开发、产品升级或提高产量时；</li>\n<li>在改进运营或产品开发流程时；</li>\n<li>在产品生命周期结束阶段；</li>\n<li>在每个收尾阶段。</li>\n</ul>\n<h3 id=\"1-2-4-指南的组成部分\">1.2.4 指南的组成部分</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417172027-5.png\" alt=\"\"></p>\n<p>PMBOK指南关键组成部分的描述</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417172027-6.png\" alt=\"\"></p>\n<p>PMBOK指南关键组成部分在项目中的相互关系</p>\n<h3 id=\"1-2-4-1项目和开发生命周期\">1.2.4.1项目和开发生命周期</h3>\n<p>项目生命周期指项目从启动到完成开始到结束所经历的一系列阶段。</p>\n<p>项目生命周期内通常有一个或多个阶段与产品、服务或成果的开发相关，这些阶段成为<strong>开发生命周期</strong>。开发生命周期可以是预测型、迭代型、增量型、适应型或混合型的模式。</p>\n<p><strong>预测型</strong>：在生命周期早期阶段确定项目范围、时间和成本。</p>\n<p><strong>迭代型</strong>：范围通常于项目生命周期的早期确定，但时间及成本估算将随着项目团队对产品理解的不断深入而定期修改。迭代方法是通过一系列重复的循环活动来开发产品，而增量方法是渐进地增加产品的功能。</p>\n<p><strong>增量型</strong>：通过在预定的时间区间内渐进增加产品功能的一系列迭代来产出可交付成果。</p>\n<p><strong>适应型</strong>：也称为敏捷或变更驱动型，详细范围在迭代开始之前就得到了定义和批准。</p>\n<p><strong>混合型</strong>：预测型和适应型的组合。</p>\n<h4 id=\"1-2-4-2-项目阶段\">1.2.4.2 项目阶段</h4>\n<p><strong>项目阶段</strong>是一组具有逻辑关系的项目活动的集合，通常以一个或多个可交付成果的完成为结束。</p>\n<p>生命周期的各个阶段可以通过各种不同的属性来描述。</p>\n<p>属性可能包括（但不限于）：名称、数量、持续时间、资源需求、项目进入某一阶段的准入标准、项目完成某一阶段的退出标准。</p>\n<p>项目分为多个阶段的方式有助于更好地掌控项目管理，同时还提供了评估项目绩效并在后续阶段采取必要的纠正或预防措施的机会。</p>\n<h4 id=\"1-2-4-3-阶段关口\">1.2.4.3 阶段关口</h4>\n<p><strong>阶段关口</strong>设立在阶段结束点，在该时点，把项目及进展与各种项目文件及业务文件（项目商业论证、项目章程、项目管理计划、效益管理计划）进行比较，并根据比较结果做出决定，以便：</p>\n<ul>\n<li>进入下个阶段；</li>\n<li>整改后进入下个阶段；</li>\n<li>结束项目；</li>\n<li>停留在当前阶段；</li>\n<li>重复阶段或某个要素。</li>\n</ul>\n<h4 id=\"1-2-4-4-项目管理过程\">1.2.4.4 项目管理过程</h4>\n<p>项目生命周期是通过一系列项目管理活动进行的，即项目管理过程。每个项目管理过程通过合适的项目管理工具和技术将一个或多个输入转化成一个或多个输出。一个过程的输出通常成为以下二者之一：另一个过程的输入；项目或项目阶段的可交付成果。</p>\n<p>过程通常分三类：</p>\n<ul>\n<li>仅开展一次或仅在项目预定义点开展的过程，如制定章程；</li>\n<li>根据需要定期开展的过程，如需要采购时开展采购过程；</li>\n<li>在整个项目期间持续开展的过程，如开展监控过程。</li>\n</ul>\n<h4 id=\"1-2-4-5-项目管理过程组\">1.2.4.5 项目管理过程组</h4>\n<ul>\n<li><strong>启动过程组</strong>：定义一个新项目或现有项目的一个新阶段，授权开始该项目/阶段的一组过程；</li>\n<li><strong>规划过程组</strong>：明确项目范围，优化目标，为实现目标制定行动方案的一组过程；</li>\n<li><strong>执行过程组</strong>：完成项目管理计划中确定的工作，以满足项目要求的一组过程；</li>\n<li>监控过程组：跟踪、审查和调整项目进展与绩效，识别必要的计划变更并启动相应变更的一组过程；</li>\n<li><strong>收尾过程组</strong>：正式完成或结束项目、阶段或合同所执行的过程。<br>\n*注意：过程组和项目阶段是不同的。</li>\n</ul>\n<h4 id=\"1-2-4-6-项目管理知识领域\">1.2.4.6 项目管理知识领域</h4>\n<p><strong>项目整合管理</strong>：为识别、定义、组合、统一和协调各项目管理过程组的各个过程和活动而开展的过程与活动。<br>\n<strong>项目范围管理</strong>：确保项目做且只做所需的全部工作以成功完成项目的各个过程。<br>\n<strong>项目进度管理</strong>：管理项目按时完成所需的各个过程。<br>\n<strong>项目成本管理</strong>：为使项目在批准的预算内完成而对成本进行规划、估算、预算、融资、筹资、管理和控制的各个过程。<br>\n<strong>项目质量管理</strong>：把组织的质量政策应用于规划、管理、控制项目和产品质量要求，以满足相关方的期望的各个过程。<br>\n<strong>项目资源管理</strong>：识别、获取和管理所需资源以完成项目的各个过程。<br>\n<strong>项目沟通管理</strong>：为确保项目信息及时且恰当地规划、收集、生成、发布、存储、检索、管理、控制、监督和最终处置所需的各个过程。<br>\n<strong>项目风险管理</strong>：包含规划风险管理、识别风险、开展风险分析、规划风险应对、实施风险应对和监督风险的各个过程。<br>\n<strong>项目采购管理</strong>：从项目团队外部采购或获取所需产品、服务或成果的各个过程。<br>\n<strong>项目干系人管理</strong>：识别影响或受项目影响的人员、团队或组织，分析相关方对项目的期望和影响，制定合适的管理策略来有效调动相关方参与项目决策和执行。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417172027-7.png\" alt=\"\"></p>\n<h4 id=\"1-2-4-7-项目管理数据和信息\">1.2.4.7 项目管理数据和信息</h4>\n<ul>\n<li><strong>工作绩效数据</strong>：在执行项目工作的过程中，从每个正在执行的活动中收集到的原始观察结果和测量值。例如工作完成百分比、质量和技术绩效测量结果、进度计划活动的开始和结束日期、变更请求的数量、缺陷的数量、实际成本和实际持续时间等。</li>\n<li><strong>工作绩效信息</strong>：从各控制过程收集，并结合相关背景和跨领域关系进行整合分析而得到的绩效数据。绩效信息的例子包括可交付成果的状态、变更请求的落实情况及预测的完工尚需估算。</li>\n<li><strong>工作绩效报告</strong>：为制定决策、提出问题、采取行动或引起关注，而汇编工作绩效信息所形成的实物或电子项目文件。例如状况报告、备忘录、论证报告、信息札记、电子仪表盘、推荐意见和情况更新。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417172027-8.png\" alt=\"\"></p>\n<h3 id=\"1-2-5-裁剪\">1.2.5 裁剪</h3>\n<p>由于每个项目都是独特的，所以在实际应用时，应把项目管理裁剪成适合于特定项目，应选择恰当的项目管理过程、输入、工具、技术、输出和生命周期阶段以管理项目。</p>\n<h3 id=\"1-2-6-项目管理商业文件\">1.2.6 项目管理商业文件</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417172027-9.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417172027-10.png\" alt=\"\"></p>\n<p>需求评估与关键业务/项目文件的相互关系</p>\n<h4 id=\"1-2-6-1-项目商业论证\">1.2.6.1 项目商业论证</h4>\n<p>项目商业论证指文档化的经济可行性研究报告，用来对尚缺乏充分定义的所选方案的收益进行有效性论证，是启动后续项目管理活动的依据。商业论证列出了项目启动的目标和理由。在商业论证之前，通常需要进行需求评估，包含了解业务目的和目标、问题及机会，并提出处理建议。</p>\n<p>商业论证可能包括（但不限于）记录一下内容：</p>\n<ul>\n<li>业务需要\n<ul>\n<li>确定促进采取行动的动机；</li>\n<li>情况说明，记录了待处理的业务问题或机会，包含能够为组织创造的价值；</li>\n<li>确定受影响的相关方；</li>\n<li>确定范围。</li>\n</ul>\n</li>\n<li>形势分析\n<ul>\n<li>确定组织战略、目的和目标；</li>\n<li>确保问题的根本原因或机会的触发因素；</li>\n<li>分析项目所需能力与组织现有能力之间的差距；</li>\n<li>识别已知风险；</li>\n<li>识别成功的关键因素；</li>\n<li>确定可能用于评估各种行动方案的决策准则；</li>\n<li>建立一些可选方案，用以处理业务问题或机会。可选方案指组织可能采取的备选行动方案。</li>\n</ul>\n</li>\n<li>推荐\n<ul>\n<li>对所推荐方案的说明；</li>\n<li>说明书的内容可能包含（但不限于）：\n<ul>\n<li>对潜在方案的分析结果；</li>\n<li>潜在方案的制约因素、假设、风险和依赖关系；</li>\n<li>成功标准。</li>\n<li>一种实施方法，可能包括（但不限于）：</li>\n<li>里程碑；</li>\n<li>依赖关系；</li>\n<li>角色与职责。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>评估\n<ul>\n<li>对如何测量项目所交付的效益的说明。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-2-6-2-项目效益管理计划\">1.2.6.2 项目效益管理计划</h4>\n<p><strong>项目效益管理计划</strong>描述了项目实现效益的方式和时间，以及应制定的效益衡量机制。项目效益指为发起组织和项目预期收益方创造价值的行动、行为、产品、服务或成果的结果。</p>\n<p>项目效益管理计划可能包括（但不限于）记录一下内容：</p>\n<ul>\n<li>目标效益（例如预计通过项目实施可以创造的有形价值和无形价值；财物价值体现为净现值）；</li>\n<li>战略一致性（例如项目效益与组织业务战略的一致程度）；</li>\n<li>实现效益的时限（例如阶段效益、短期效益、长期效益和持续效益）；</li>\n<li>效益责任人（例如在计划确定的整个时限内负责监督、记录和报告已实现效益的负责人）；</li>\n<li>测量指标（例如用于显示已实现效益的直接测量值和间接测量值）；</li>\n<li>假设（例如预计存在或显而易见的因素）；</li>\n<li>风险（例如实现效益的风险）。<br>\n*注意：项目效益管理计划的制定和维护是一项迭代活动。</li>\n</ul>\n<h4 id=\"1-2-6-3-项目章程和项目管理计划\">1.2.6.3 项目章程和项目管理计划</h4>\n<p>项目章程是由项目发起人发布的，正式批准项目成立，并授权项目经理动用组织资源开展活动的文件。</p>\n<p>项目管理计划是描述如何执行、监督和控制项目的一份文件。</p>\n<h4 id=\"1-2-6-4-项目成功标准\">1.2.6.4 项目成功标准</h4>\n<p>确定项目是否成功是项目管理中最常见的挑战之一。</p>\n<p><strong>时间、成本、范围和质量等项目管理测量指标历来被视为确定项目是否成功的最重要的因素。</strong></p>\n<p>最近，从业者和学者提出，确定项目是否成功还应考虑项目目标的实现情况。</p>\n<p>关于项目成功的定义和最重要的因素，项目相关方可能有不同的看法。明确记录项目目标并选择可测量的目标是项目成功的关键。主要相关方和项目经理应思考以下三个问题：</p>\n<p><strong>怎样才是项目成功？<br>\n如何评估项目成功？<br>\n哪些因素会影响项目成功？</strong></p>\n<p>主要相关方和项目经理应就这些问题达成共识并予以记录。</p>\n<p>项目成功可能涉及与组织战略和业务成果交付有关的其他标准。这些项目目标可能包括（但不限于）：</p>\n<ul>\n<li>完成项目效益管理计划；</li>\n<li>达到商业论证中记录的已商定的财务测量指标。这些财务测量指标可能包括（但不限于）：</li>\n<li>净现值 (NPV)；</li>\n<li>投资回报率 (ROI)；</li>\n<li>内部报酬率 (IRR)；</li>\n<li>回收期 (PBP)；</li>\n<li>效益成本比率 (BCR)。</li>\n<li>达到商业论证的非财务目标；</li>\n<li>完成组织从“当前状态”转到“将来状态”；</li>\n<li>履行合同条款和条件；</li>\n<li>达到组织战略、目的和目标；</li>\n<li>使相关方满意；</li>\n<li>可接受的客户/最终用户的采纳度；</li>\n<li>将可交付成果整合到组织的运营环境中；</li>\n<li>满足商定的交付质量；</li>\n<li>遵循治理规则；</li>\n<li>满足商定的其他成功标准或准则（例如过程产出率）。</li>\n<li>为了取得项目成功，项目团队必须能够正确评估项目状况，平衡项目要求，并与相关方保持积极主动的沟通。</li>\n</ul>\n<p>但在业务环境中，如果项目能够与组织的战略方向持续保持一致，那么项目成功的概率就会显著提高。</p>\n<p>有可能一个项目从范围/进度/预算来看是成功的，但从商业角度来看并不成功。这是因为业务需要和市场环境在项目完成之前发生了变化。</p>\n<h2 id=\"2-项目运行环境\">2.项目运行环境</h2>\n<h2 id=\"2-1-概述\">2.1 概述</h2>\n<p>项目所处的环境可能对项目的开展产生有利或不利的影响。这些影响的两大主要来源为事业环境因素 (EEF) 和组织过程资产 (OPA)。</p>\n<ul>\n<li>事业环境因素源于项目外部（往往是企业外部）的环境，事业环境因素可能对整个企业、项目组合、项目集或项目产生影响。</li>\n<li>组织过程资产源于组织内部，可能来自组织自身、项目组合、项目集、其他项目或这些的组合。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417172558.png\" alt=\"\"></p>\n<p>项目影响</p>\n<h2 id=\"2-2-事业环境因素\">2.2 事业环境因素</h2>\n<p>事业环境因素（EEFs）是指项目团队不能控制的，将对项目产生影响、限制或指令作用的各种条件。这些条件可能来自于组织的内部和外部。</p>\n<h3 id=\"2-2-1-组织内部的事业环境因素\">2.2.1 组织内部的事业环境因素</h3>\n<ul>\n<li>组织文化、结构和治理，例如：愿景、使命、价值观、制度等；</li>\n<li>设施和资源的地理分布；</li>\n<li>基础设施；</li>\n<li>信息技术软件；</li>\n<li>资源可用性，例如合同和采购制约因素；</li>\n<li>员工能力。</li>\n</ul>\n<h3 id=\"2-2-2-组织外部的事业环境因素\">2.2.2 组织外部的事业环境因素</h3>\n<ul>\n<li>市场条件，例如：竞争对手、市场份额等；</li>\n<li>社会和文化影响与问题，例如：政治氛围；</li>\n<li>法律限制；</li>\n<li>商业数据库，例如风险数据库等；</li>\n<li>学术研究；</li>\n<li>政府或行业标准；</li>\n<li>财务考虑因素，例如：关税、利率等；</li>\n<li>物理环境要素，例如工作环境等。</li>\n</ul>\n<h2 id=\"2-3-组织过程资产\">2.3 组织过程资产</h2>\n<p>组织过程资产是执行组织所持有并使用的计划、过程、政策、程序和知识库，会影响对具体项目的管理。组织过程资产包含来自任何项目执行组织的，可用于执行或治理项目的任何工件、实践或知识，还包括来自组织以往项目的经验教育和历史信息，可能还包括完成的进度计划、风险数据和挣值数据。</p>\n<p>组织过程资产主要分两类：</p>\n<ul>\n<li>过程、政策和程序；</li>\n<li>组织知识库。</li>\n</ul>\n<h3 id=\"2-3-1-过程、政策和程序\">2.3.1 过程、政策和程序</h3>\n<p>组织用于执行项目工作的流程与程序，包括（但不限于）：</p>\n<ul>\n<li>启动和规划\n<ul>\n<li>指南和标准，用于裁剪组织标准流程和程序以满足项目的特定要求；</li>\n<li>特定的组织标准，例如人力资源政策；</li>\n<li>产品和项目生命周期，以及方法和程序；</li>\n<li>模板，例如项目管理计划、项目文件、报告格式等；</li>\n<li>预先批准的供应商清单和各种合同协议类型。</li>\n</ul>\n</li>\n<li>执行和监控\n<ul>\n<li>变更控制程序，包括修改组织标准、政策、计划和程序等所须遵循的步骤，以及如何批准和确认变更；</li>\n<li>跟踪矩阵；</li>\n<li>财务控制程序，例如定期报告、支付审查等；</li>\n<li>问题与缺陷管理程序，例如定义问题和缺陷控制等；</li>\n<li>资源的可用性控制和分配管理；</li>\n<li>组织对沟通的要求，例如可用的沟通技术、许可的沟通媒介等；</li>\n<li>确定工作优先顺序、批准工作与签发工作授权的程序；</li>\n<li>模板，例如问题日志，变更日志；</li>\n<li>标准化的指南、工作提示、建议书评价准则和绩效测量准则；</li>\n<li>产品、服务或成果的核实和确认程序。</li>\n</ul>\n</li>\n<li>收尾\n<ul>\n<li>项目收尾指南或要求，例如项目评价、项目审计、成果验收等。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-3-2-组织知识库\">2.3.2 组织知识库</h3>\n<p>组织用来存取信息的知识库，包含（但不限于）：</p>\n<ul>\n<li>配置管理知识库，包括软件和硬件组件版本以及所有执行组织的标准、政策、程序和任何项目文件的基准；</li>\n<li>财务数据库，包括人工时、实际成本、预算等方面的信息；</li>\n<li>历史信息与经验教训知识库，例如从以往风险管理活动中获取的信息等；</li>\n<li>问题与缺陷管理数据库，包括问题与缺陷的状态、控制信息、解决方案以及相关行动的结果；</li>\n<li>测量指标数据库，用来收集与提供过程和产品的测量数据；</li>\n<li>以往项目的项目档案。</li>\n</ul>\n<h2 id=\"2-4-组织系统\">2.4 组织系统</h2>\n<p>单个组织内多种因素的交互影响创造出一个独特的系统，会对在该系统内运行的项目造成影</p>\n<p>响。组织系统是动态的、能优化的。</p>\n<p>系统因素包括（但不限于）：</p>\n<ul>\n<li>管理要素\n<ul>\n<li>管理要素是组织中的关键职能或一般管理原则。</li>\n</ul>\n</li>\n<li>治理框架\n<ul>\n<li>项目集和项目管理的常见治理框架，涉及四个治理领域：一致性、风险、绩效和沟通。各个领域都具备以下职能部门：监督、控制、整合与决策。</li>\n</ul>\n</li>\n<li>组织结构类型\n<ul>\n<li>组织需要权衡两个关键变量之后才可确定合适的组织结构类型。这两个变量指可以采用的组织结构类型以及针对特定组织如何优化组织结构类型的方式。</li>\n</ul>\n</li>\n</ul>\n<p>组织对项目的影响</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417172558-1.png\" alt=\"\"></p>\n<h4 id=\"2-4-4-3-项目管理办公室\">2.4.4.3 项目管理办公室</h4>\n<p>项目管理办公室 (PMO) 是对与项目相关的治理过程进行标准化，并促进资源、方法论、工具和技术共享的一个组织结构。PMO 的职责范围可大可小，从提供项目管理支持服务，到直接管理一个或多个项目。</p>\n<p>PMO 有几种不同类型，它们对项目的控制和影响程度各不相同，例如：</p>\n<ul>\n<li>支持型。支持型 PMO 担当顾问的角色，向项目提供模板、最佳实践、培训，以及来自其他项目的信息和经验教训。这种类型的 PMO 其实就是一个项目资源库，对项目的控制程度很低。</li>\n<li>控制型。控制型 PMO 不仅给项目提供支持，而且通过各种手段要求项目服从，这种类型的 PMO对项目的控制程度属于中等。服从可能包括：</li>\n<li>采用项目管理框架或方法论；</li>\n<li>使用特定的模板、格式和工具；</li>\n<li>服从治理。</li>\n<li>指令型。指令型 PMO 直接管理和控制项目。项目经理由 PMO 指定并向其报告。这种类型的 PMO对项目的控制程度很高。<br>\n项目管理办公室可能会承担整个组织范围的职责，在支持战略调整和创造组织价值方面发挥重要的作用。PMO 从组织战略项目中获取数据和信息，进行综合分析，评估如何实现更高级别的战略目标的。PMO 在组织的项目组合、项目集、项目与组织考评体系（如平衡计分卡）之间建立联系。</li>\n</ul>\n<p>除了被集中管理以外，PMO 所支持和管理的项目不一定彼此关联。PMO 的具体形式、职能和结构取决于所在组织的需要。</p>\n<p>为了保证项目符合组织的业务目标，PMO 可能有权在每个项目的生命周期中充当重要相关方和关键决策者。PMO 可以：</p>\n<ul>\n<li>\n<p>提出建议；</p>\n</li>\n<li>\n<p>领导知识传递；</p>\n</li>\n<li>\n<p>终止项目；</p>\n</li>\n<li>\n<p>根据需要采取其他行动。<br>\nPMO 的一个主要职能是通过各种方式向项目经理提供支持，这些方式包括（但不限于）：</p>\n</li>\n<li>\n<p>对 PMO 所辖的全部项目的共享资源进行管理；</p>\n</li>\n<li>\n<p>识别和制定项目管理方法、最佳实践和标准；</p>\n</li>\n<li>\n<p>指导、辅导、培训和监督；</p>\n</li>\n<li>\n<p>通过项目审计，监督对项目管理标准、政策、程序和模板的遵守程度；</p>\n</li>\n<li>\n<p>制定和管理项目政策、程序、模板和其他共享的文件（组织过程资产）；</p>\n</li>\n<li>\n<p>对跨项目的沟通进行协调。</p>\n</li>\n</ul>\n<h2 id=\"3-项目经理的角色\">3.项目经理的角色</h2>\n<h2 id=\"3-2-项目经理的定义\">3.2 项目经理的定义</h2>\n<p>项目经理的角色不同于职能经理或运营经理，项目经理是由执行组织委派，领导团队实现项目目标的个人。</p>\n<h2 id=\"3-3-项目经理的影响力范围\">3.3 项目经理的影响力范围</h2>\n<h3 id=\"3-3-1-概述\">3.3.1 概述</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173057.png\" alt=\"\"></p>\n<p>项目经理的影响力范围示例</p>\n<h3 id=\"3-3-2-项目\">3.3.2 项目</h3>\n<ul>\n<li>项目经理需要领导项目团队实现项目目标和相关方的期望。</li>\n<li>项目经理需要利用可用资源，以平衡相互竞争的项目制约因素。</li>\n<li>项目经理还充当项目发起人、团队成员与其他相关方之间的沟通者，包括提供指导和展示项目成功的愿景。</li>\n<li>项目经理需要使用软技能（例如人际关系技能和人员管理技能）来平衡项目相关方之间相互冲突和竞争的目标，以达成共识。</li>\n</ul>\n<p>与团队和发起人等相关方沟通的能力适用于项目的各个方面，包括（但不限于）以下各个方面：</p>\n<ul>\n<li>通过多种方法（例如口头、书面和非口头）培养完善的技能；</li>\n<li>创建、维护和遵循沟通计划和进度计划；</li>\n<li>以可预见且一致的方式进行沟通；</li>\n<li>寻求了解项目相关方的沟通需求；</li>\n<li>以简练、清晰、完整、简单、相关和经过裁剪的方式进行沟通；</li>\n<li>包含重要的正面和负面消息；</li>\n<li>合并反馈渠道；</li>\n<li>人际关系技能，即通过项目经理的影响力范围拓展广泛的人际网络。</li>\n</ul>\n<h3 id=\"3-3-3-组织\">3.3.3 组织</h3>\n<p>项目经理需要积极地与其他项目经理互动。其他独立项目或同一项目集的其他项目可能会对项目</p>\n<p>造成影响，原因包括（但不限于）：</p>\n<ul>\n<li>对相同资源的需求；</li>\n<li>资金分配的优先顺序；</li>\n<li>可交付成果的接受或发布；</li>\n<li>项目与组织的目的和目标的一致性。</li>\n</ul>\n<h3 id=\"3-3-4-行业\">3.3.4 行业</h3>\n<p>项目经理应时刻关注行业的最新发展趋势，获得并思考这一信息对当前项目是否有影响或可用。这些趋势包括（但不限于）：</p>\n<ul>\n<li>产品和技术开发；</li>\n<li>新兴且正在变化的市场空间；</li>\n<li>标准（例如项目管理标准、质量管理标准等）；</li>\n<li>技术支持工具；</li>\n<li>影响当前项目的经济力量；</li>\n<li>影响项目管理学科的各种力量；</li>\n<li>过程改进和可持续发展战略。</li>\n</ul>\n<h2 id=\"3-4-项目经理的胜任力\">3.4 项目经理的胜任力</h2>\n<h3 id=\"3-4-1-概述\">3.4.1 概述</h3>\n<p>PMI人才三角：</p>\n<ul>\n<li>技术项目管理</li>\n<li>领导力</li>\n<li>战略和商务管理</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173057-1.png\" alt=\"\"></p>\n<h3 id=\"3-4-2-技术项目管理技能\">3.4.2 技术项目管理技能</h3>\n<p>技术项目管理技能指有效运用管理知识实现项目集或项目的预期成果的能力。包括（但不限于）：</p>\n<ul>\n<li>重点关注所管理的各个项目的关键技术项目管理要素。简单来说，就是随时准备好合适的资料。最主要的是：\n<ul>\n<li>项目成功的关键因素；</li>\n<li>进度计划；</li>\n<li>指定的财务报告；</li>\n<li>问题日志。</li>\n</ul>\n</li>\n<li>针对每个项目裁剪传统和敏捷工具、技术和方法。</li>\n<li>花时间制定完整的计划并谨慎排定优先顺序。</li>\n<li>管理项目要素，包括（但不限于）进度、成本、资源和风险。</li>\n</ul>\n<h3 id=\"3-4-3-战略和商务管理技能\">3.4.3 战略和商务管理技能</h3>\n<p>战略和商务管理技能包括纵览组织概况并有效协商和执行有利于战略调整和创新的决策和行动的能力。战略和商务管理技能可能还包括发展和运用相关的产品和行业专业知识，这些业务知识也称为领域知识。</p>\n<p>项目经理应掌握足够的业务知识，以便能够：</p>\n<ul>\n<li>\n<p>向其他人解释关于项目的必要商业信息；</p>\n</li>\n<li>\n<p>与项目发起人、团队和主题专家合作制定合适的项目交付策略；</p>\n</li>\n<li>\n<p>以实现项目商业价值最大化的方式执行策略。<br>\n对项目经理而言，对项目主题的了解越多越好，至少应能够向其他人说明关于组织的以下方面：</p>\n</li>\n<li>\n<p>战略</p>\n</li>\n<li>\n<p>使命</p>\n</li>\n<li>\n<p>目的和目标</p>\n</li>\n<li>\n<p>产品和服务</p>\n</li>\n<li>\n<p>运营（例如位置、类型、技术）</p>\n</li>\n<li>\n<p>市场和市场条件，例如客户、市场状况</p>\n</li>\n<li>\n<p>竞争（例如竞争什么、竞争地位）</p>\n</li>\n</ul>\n<p>为确保一致性，项目经理应将以下关于组织的知识和信息运用到项目中：</p>\n<ul>\n<li>战略</li>\n<li>使命</li>\n<li>目的和目标</li>\n<li>优先级</li>\n<li>策略</li>\n<li>产品或服务（例如可交付成果）</li>\n</ul>\n<p>战略和商业技能有助于项目经理确定应为其项目考虑哪些商业因素。这些因素包括（但不限于）：</p>\n<ul>\n<li>风险和问题；</li>\n<li>财务影响；</li>\n<li>成本效益分析，包括各种可选方案；</li>\n<li>商业价值；</li>\n<li>效益预期实现情况和战略；</li>\n<li>范围、预算、进度和质量。</li>\n</ul>\n<h3 id=\"3-4-4-领导力技能\">3.4.4 领导力技能</h3>\n<h4 id=\"3-4-4-1-人际交往\">3.4.4.1 人际交往</h4>\n<p>项目经理应研究人的行为和动机，应尽力成为一个好的领导者，因为领导力对组织项目是否成功至关重要。项目经理需要运用领导力技能和品质与所有项目相关方合作，包括项目团队、团队指导和项目发起人。</p>\n<h4 id=\"3-4-4-2-领导者的品质和技能\">3.4.4.2 领导者的品质和技能</h4>\n<p>领导者的品质和技能包含（但不限于）：</p>\n<ul>\n<li>有远见（例如帮助描述项目的产品、目的和目标）；</li>\n<li>积极乐观；</li>\n<li>乐于合作；</li>\n<li>通过以下方式管理关系和冲突：\n<ul>\n<li>建立信任；</li>\n<li>解决顾虑；</li>\n<li>寻求共识；</li>\n<li>平衡相互竞争和对立的目标；</li>\n<li>运用说服、协商、妥协和解决冲突的技能；</li>\n<li>发展和培养个人及专业网络；</li>\n<li>以长远的眼光把人际关系看成与项目本身同样重要；</li>\n<li>持续发展和运用政治敏锐性。</li>\n</ul>\n</li>\n<li>通过以下方式进行沟通：\n<ul>\n<li>花大量的时间沟通；</li>\n<li>管理期望；</li>\n<li>诚恳地接受反馈；</li>\n<li>提出建议性的反馈；</li>\n<li>询问和倾述。</li>\n</ul>\n</li>\n<li>尊重他人（帮助他人保持独立自主）、谦恭有礼、友善待人、诚实可信、忠诚可靠、遵守职业道德；</li>\n<li>展现出诚信正直和文化敏感性，果断、勇敢，能够解决问题；</li>\n<li>适时称赞他人；</li>\n<li>终身学习，以结果和行动为导向；</li>\n<li>关注重要的事情，包括：\n<ul>\n<li>通过必要的审查和调整，不断调整工作优先级；</li>\n<li>寻求并采用适用于团队和项目的优先级排序方法；</li>\n<li>区分高层级战略优先级，尤其是与项目成功的关键因素相关的事项；</li>\n<li>对项目的主要制约因素保持警惕；</li>\n<li>在战术优先级上保持灵活；</li>\n<li>能够从大量信息中筛选出最重要的信息。</li>\n</ul>\n</li>\n<li>以整体和系统的角度来看待项目，同等对待内部和外部因素；</li>\n<li>能够运用批判性思维并将自己视为变革推动者；</li>\n<li>能够创建高效的团队、以服务为导向、展现出幽默的一面，与团队成员有效地分享乐趣。</li>\n</ul>\n<h4 id=\"3-4-4-3-政治、权力和办好事情\">3.4.4.3 政治、权力和办好事情</h4>\n<p>领导和管理的最终目的是办好事情。这些技能和品质有助于项目经理实现项目目的和目标。很多</p>\n<p>技能和品质归根究底就是处理政治的能力。政治涉及影响、谈判、自主和权力。政治及其相关要素不局限于“好”与“不好”以及“正面”与“负面”之分。项目经理对组织运行方式的了解越多，就越有可能获得成功。</p>\n<p>权力的种类包括（但不限于）：</p>\n<ul>\n<li>地位（有时称为正式的、权威的、合法权力的，例如组织或团队授予的正式职位）；</li>\n<li>信息（例如对信息收集或分发的控制）；</li>\n<li>参考（例如因为他人的尊重和赞赏，获得的信任）；</li>\n<li>情境（例如在特别危机等特殊情况下获得的权力）；</li>\n<li>个性或魅力（例如魅力、吸引力）；</li>\n<li>关系（例如参与人际交往、联系和结盟）；</li>\n<li>专家（例如拥有的技能和信息、经验、培训、教育、证书）；</li>\n<li>奖励相关的（例如能够给予表扬、金钱或其他奖励）；</li>\n<li>处罚或强制力（例如给予纪律处分或施加负面后果的能力）；</li>\n<li>迎合（例如运用奉承或其他常用手段赢得青睐或合作）；</li>\n<li>施加压力（例如限制选择或活动自由，以符合预期的行动）；</li>\n<li>愧疚（例如强加的义务或责任感）；</li>\n<li>说服力（例如能够提供论据，使他人执行预期的行动方案）；</li>\n<li>回避（例如拒绝参与）。</li>\n</ul>\n<h3 id=\"3-4-5-领导力与管理之比较\">3.4.5 领导力与管理之比较</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173057-2.png\" alt=\"\"></p>\n<h2 id=\"3-5-执行整合\">3.5 执行整合</h2>\n<p>执行项目整合时，项目经理承担双重角色：</p>\n<ul>\n<li>项目经理扮演重要角色，与项目发起人携手合作，来理解战略目标，并确保项目目标和成果与项目组合、项目集以及业务领域保持一致。项目经理以这种方式帮助实现战略层面的整合与执行。</li>\n<li>在项目层面上，项目经理负责指导团队关注真正重要的事务并协同工作。为此，项目经理需要整合过程、知识和人员。</li>\n</ul>\n<h2 id=\"4-项目整合管理\">4.项目整合管理</h2>\n<p>项目整合管理包括对隶属于项目管理过程组的各个过程和项目管理活动进行识别、定义、组合、统一和协调的各个过程。项目整合管理包括进行以下选择：</p>\n<ul>\n<li>资源分配；</li>\n<li>平衡竞争性需求；</li>\n<li>研究各种备选方法；</li>\n<li>为实现项目目标而裁剪过程；</li>\n<li>管理各个项目管理知识领域之间的依赖关系。<br>\n项目整合管理过程包括：</li>\n</ul>\n<p><strong>4.1 制定项目章程</strong> — 编写一份正式批准项目并授权项目经理在项目活动中使用组织资源的文件的过程。</p>\n<p><strong>4.2 制定项目管理计划</strong> — 定义、准备和协调项目计划的所有组成部分，并把它们整合为一份综合项目管理计划的过程。</p>\n<p><strong>4.3 指导与管理项目工作</strong> — 为实现项目目标而领导和执行项目管理计划中所确定的工作，并实施已批准变更的过程。</p>\n<p><strong>4.4 管理项目知识</strong> — 使用现有知识并生成新知识，以实现项目目标，并且帮助组织学习的过程。</p>\n<p><strong>4.5 监控项目工作</strong> — 跟踪、审查和报告整体项目进展，以实现项目管理计划中确定的绩效目标的过程。</p>\n<p><strong>4.6 实施整体变更控制</strong> — 审查所有变更请求，批准变更，管理对可交付成果、组织过程资产、项目文件和项目管理计划的变更，并对变更处理结果进行沟通的过程。</p>\n<p><strong>4.7 结束项目或阶段</strong> — 终结项目、阶段或合同的所有活动的过程。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173329.png\" alt=\"\"></p>\n<p>项目整合管理概述</p>\n<p><strong>项目整合管理的核心概念</strong></p>\n<h2 id=\"项目整合管理指的是：\">项目整合管理指的是：</h2>\n<ul>\n<li>确保产品、服务或成果的交付日期，项目生命周期以及效益管理计划这些方面保持一致；</li>\n<li>编制项目管理计划以实现项目目标；</li>\n<li>确保创造合适的只是并运用到项目中，并从项目中获取必要的知识；</li>\n<li>管理项目管理计划中活动的绩效和变更；</li>\n<li>做出针对影响项目的关键变更的综合决策；</li>\n<li>测量和监督项目进展，并采取适当措施以实现项目目标；</li>\n<li>收集关于已实现的成果的数据，分析数据以获取信息，并与相关方分享信息；</li>\n<li>完成全部项目工作，正式关闭各个阶段、合同以及整个项目；</li>\n<li>管理可能需要的阶段过渡。</li>\n</ul>\n<p><strong>项目整合管理的发展趋势和新兴实践</strong></p>\n<p>项目整合管理知识领域要求整合所有其他知识领域的成果。与整合管理过程相关的发展趋势包括（但不限于）：</p>\n<ul>\n<li>使用自动化工具；</li>\n<li>使用可视化工具；</li>\n<li>项目知识管理，项目人员的流动性和不稳定性越来越高，就要求采用更严格的过程，在整个项目生命周期中积累知识和其他相关方识别和解决问题的能力。</li>\n<li>增加项目经理的职责，比如被要求接入启动和结束项目，如开展项目商业论证和效益管理。</li>\n<li>混合型方法，比如采用敏捷或其他迭代做法，为开展需求管理而采用商业分析技术等。</li>\n</ul>\n<p><strong>裁剪时需要考虑的因素</strong></p>\n<p>裁剪时应考虑的因素包括（但不限于）：</p>\n<ul>\n<li>项目生命周期</li>\n<li>开发生命周期</li>\n<li>管理方法</li>\n<li>知识管理</li>\n<li>变更</li>\n<li>治理</li>\n<li>经验教训</li>\n<li>效益</li>\n</ul>\n<p><strong>在敏捷或适应型环境中需要考虑的因素</strong></p>\n<p>迭代和敏捷方法能够促进团队成员以相关领域专家的身份参与整合管理。团队成员自行决定计划及其组件的整合方式。</p>\n<p>在适应型环境下，《整合管理的核心概念》中所述的对项目经理的期望保持不变，但把对具体产品的规划和交付授权给团队来控制。项目经理的关注点在于营造一个合作型的决策氛围，并确保团队有能力应对变更。</p>\n<h2 id=\"4-1-制定项目章程\">4.1 制定项目章程</h2>\n<p><strong>制定项目章程是编写一份正式批准项目并授权项目经理在项目活动中使用组织资源的文件的过程。本过程的主要作用是，明确项目与组织战略目标之间的直接联系，确立项目的正式地位，并展示组织对项目的承诺</strong>。</p>\n<p><strong>项目章程一旦被批准，就标志着项目的正式启动。</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173329-1.png\" alt=\"\"></p>\n<p>制定项目章程：输入、工具与技术和输出</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173329-2.png\" alt=\"\"></p>\n<p>制定项目章程：数据流向图</p>\n<h3 id=\"4-1-1-制定项目章程：输入\">4.1.1 制定项目章程：输入</h3>\n<p>制定项目章程的输入包括：</p>\n<ul>\n<li>商业文件\n<ul>\n<li>商业论证。经批准的商业论证或类似文件是最常用于制定项目章程的商业文件。商业论证从商业视角描述必要的信息。\n<ul>\n<li>市场需求</li>\n<li>组织需要</li>\n<li>客户要求</li>\n<li>技术进步</li>\n<li>法律要求</li>\n<li>生态影响</li>\n<li>社会需要</li>\n</ul>\n</li>\n<li>效益管理计划</li>\n</ul>\n</li>\n<li>协议\n<ul>\n<li>协议用于定义启动项目的初衷。协议有多种形式，包含合同、谅解备忘录、服务水平协议、协议书、意向书、口头协议、电子邮件或其他书面协议。</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>政府或行业标准；</li>\n<li>法律法规要求和（或）制约因素；</li>\n<li>市场条件；</li>\n<li>组织文化和政治氛围；</li>\n<li>组织治理框架；</li>\n<li>相关方的期望和风险临界值。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>组织的标准政策、流程和程序；</li>\n<li>项目组合、项目集和项目的治理框架；</li>\n<li>监督和报告方法；</li>\n<li>模板（项目章程模板）；</li>\n<li>历史信息和经验教训知识库。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-1-2-制定项目章程：工具与技术\">4.1.2 制定项目章程：工具与技术</h3>\n<p>制定项目章程的工具和技术包含：</p>\n<ul>\n<li>专家判断：专家判断是基于某应用领域、知识领域、学科和行业等的专业知识而做出的，关于当前活动的合理判断，这些专业知识可来自具有专业学历、知识、技能、经验或培训经理的任何小组或个人。\n<ul>\n<li>组织战略；</li>\n<li>效益管理；</li>\n<li>关于项目所在的行业以及项目关注的领域的技术知识；</li>\n<li>持续时间和成本估算；</li>\n<li>风险识别。</li>\n</ul>\n</li>\n<li>数据收集\n<ul>\n<li>头脑风暴</li>\n<li>焦点小组</li>\n<li>访谈</li>\n</ul>\n</li>\n<li>人际关系与团队技能\n<ul>\n<li>冲突管理</li>\n<li>引导</li>\n<li>会议管理</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"4-1-3-制定项目章程：输出\">4.1.3 制定项目章程：输出</h3>\n<p>制定项目章程的输出包括：</p>\n<ul>\n<li>项目章程：项目章程是由项目启动者或发起人发布的，正式批准项目成立，并授权项目经理使用组织资源开展项目活动的文件。它记录了关于项目和项目预期要交付的产品、服务或成果的高层级信息，例如：\n<ul>\n<li>项目目的；</li>\n<li>可测量的项目目标和相关的成功标准；</li>\n<li>高层级需求；</li>\n<li>高层级项目描述、边界定义以及主要可交付成果；</li>\n<li>整体项目风险；</li>\n<li>总体里程碑进度计划；</li>\n<li>预先批准的财务资源；</li>\n<li>关键相关方名单；</li>\n<li>项目审批要求；</li>\n<li>项目退出标准；</li>\n<li>委派的项目经理及其职责和职权；</li>\n<li>发起人或其他批准项目章程的人员的姓名和职权。</li>\n</ul>\n</li>\n<li>假设日志\n<ul>\n<li>通常，在项目启动之前编制商业论证时，识别高层级的战略和运营假设条件与制约因素。这些假设条件与制约因素应纳入项目章程。较低层级的活动和任务假设条件在项目期间随着诸如定义技术规范、估算、进度和风险等活动的开展而生成。假设日志用于记录整个项目生命周期中的所有假设条件和制约因素。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-2-制定项目管理计划\">4.2 制定项目管理计划</h2>\n<p>制定项目管理计划是定义、准备和协调项目计划的所有组成部分，并把它们整合为一份综合项目</p>\n<p>管理计划的过程。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173329-3.png\" alt=\"\"></p>\n<p>制定项目管理计划：输入、工具与技术和输出</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173329-4.png\" alt=\"\"></p>\n<p>制定项目管理计划：数据流向图</p>\n<p>*注意点</p>\n<p>项目管理计划应基准化，即，至少应规定项目的范围、时间和成本方面的基准，以便据此考核项目执行情况和管理项目绩效。在确定基准之前，可能要对项目管理计划进行多次更新，且这些更新无需遵循正式流程。但是，一旦确定了基准，就只能通过实施整体变更控制过程进行更新。在这种情况下，如果需要进行变更，应提出变更请求以待决定。</p>\n<h3 id=\"4-2-1-制定项目管理计划：输入\">4.2.1 制定项目管理计划：输入</h3>\n<p>制定项目管理计划的输入包含：</p>\n<ul>\n<li>项目章程\n<ul>\n<li>项目团队把项目章程作为初始项目规划的起始点。项目章程所包含的信息种类和数量因项目的复杂程度和已知的信息而异。在项目章程中至少应该定义项目的高层级信息，供将来在项目管理计划的各个组成部分中进一步细化。</li>\n</ul>\n</li>\n<li>其他过程的输出\n<ul>\n<li>其他规划过程所输出的子计划和基准都是本过程的输入。此外，对这些子计划和基准的变更都可能导致对项目管理计划的相应更新。</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>政府或行业标准；</li>\n<li>法律法规要求和制约因素；</li>\n<li>垂直市场和专门领域的项目管理知识体系；</li>\n<li>组织的结构、文化、管理实践和可持续性；</li>\n<li>组织治理框架；</li>\n<li>基础设施。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>组织的标准政策、流程和程序；</li>\n<li>项目管理计划模板\n<ul>\n<li>根据项目的特定要求而裁剪组织的标准流程的指南和标准；</li>\n<li>项目收尾指南或要求，如产品确认及验收标准。</li>\n</ul>\n</li>\n<li>变更控制程序；</li>\n<li>监督和报告方法、风险控制程序以及沟通要求；</li>\n<li>以往类似项目的相关信息；</li>\n<li>历史信息和经验教训知识库。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-2-2-制定项目管理计划：工具与技术\">4.2.2 制定项目管理计划：工具与技术</h3>\n<p>制定项目管理计划的工具与技术包含：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>根据项目需要裁剪项目管理过程，包括这些过程间的依赖关系和相互影响，以及这些过程的主要输入和输出；</li>\n<li>根据需要制定项目管理计划的附加组成部分；</li>\n<li>确定这些过程所需的工具与技术；</li>\n<li>编制应包括在项目管理计划中的技术与管理细节；</li>\n<li>确定项目所需的资源与技能水平；</li>\n<li>定义项目的配置管理级别；</li>\n<li>确定哪些项目文件受制于正式的变更控制过程；</li>\n<li>确定项目工作的优先级，确保把项目资源在合适的时间分配到合适的工作。</li>\n</ul>\n</li>\n<li>数据收集\n<ul>\n<li>头脑风暴</li>\n<li>核对单</li>\n<li>焦点小组</li>\n<li>访谈</li>\n</ul>\n</li>\n<li>人际关系与团队技能\n<ul>\n<li>冲突管理</li>\n<li>引导</li>\n<li>会议管理</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"4-2-3-制定项目管理计划：输出\">4.2.3 制定项目管理计划：输出</h3>\n<p>制定项目管理计划的输出包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>子管理计划\n<ul>\n<li><strong>范围管理计划</strong>：确定如何定义、制定、监督、控制和确认项目范围。</li>\n<li><strong>需求管理计划</strong>：确定如何分析、记录和管理需求。</li>\n<li><strong>进度管理计划</strong>：为编制、监督和控制项目进度建立准则并确定活动。</li>\n<li><strong>成本管理计划</strong>：确定如何规划、安排和控制成本。</li>\n<li><strong>质量管理计划</strong>：确定在项目中如何实施组织的质量政策、方法和标准。</li>\n<li><strong>资源管理计划</strong>：指导如何对项目资源进行分类、分配、管理和释放。</li>\n<li><strong>沟通管理计划</strong>：确定项目信息将如何、何时、由谁来进行管理和传播。</li>\n<li><strong>风险管理计划</strong>：确定如何安排与实施风险管理活动。</li>\n<li><strong>采购管理计划</strong>：确定项目团队将如何从执行组织外部获取货物和服务。</li>\n<li><strong>相关方参与计划</strong>：确定如何根据相关方的需求、利益和影响让他们参与项目决策和执行。</li>\n</ul>\n</li>\n<li>基准\n<ul>\n<li><strong>范围基准</strong>：经过批准的范围说明书、工作分解结构（WBS）和相应的WBS词典，用作比较依据。</li>\n<li><strong>进度基准</strong>：经过批准的进度模型，用作与实际结果进行比较的依据。</li>\n<li><strong>成本基准</strong>：经过批准的、按时间段分配的项目预算，用作与实际结果进行比较的依据。</li>\n</ul>\n</li>\n<li>其他组件\n<ul>\n<li><strong>变更管理计划</strong>：描述在整个项目期间如何正式审批和采纳变更请求。</li>\n<li><strong>配置管理计划</strong>：描述如何记录和更新项目的特定信息，以及该记录和更新哪些信息，以保持产品、服务或成果的一致性和（或）有效性。</li>\n<li><strong>绩效测量基准</strong>：经过整合的项目范围、进度和成本计划，用作项目执行的比较依据，以测量和管理项目绩效。</li>\n<li><strong>项目生命周期</strong></li>\n<li><strong>开发方法</strong>：描述产品、服务或成果的开发方法，例如预测、迭代、敏捷或混合型模式。</li>\n<li><strong>管理审查</strong>：确定项目经理和有关相关方审查项目进展的时间点，以考核绩效是否符合预期，或者确定是否有必要采取预防或纠正措施。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173329-5.png\" alt=\"\"></p>\n<p>项目管理计划和项目文件</p>\n<h2 id=\"4-3-指导与管理项目工作\">4.3 指导与管理项目工作</h2>\n<p>指导和管理项目工作是为实现项目目标而领导和执行项目管理计划中所确定的工作，并实施已批准变更的过程。本过程的主要作用是对项目工作和可交付成果开展综合管理，以提高项目成功的可能性。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173329-6.png\" alt=\"\"></p>\n<p>指导与管理项目工作：输入、工具与技术和输出</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173329-7.png\" alt=\"\"></p>\n<p>指导与管理项目工作：数据流向图</p>\n<h3 id=\"4-3-1-指导与管理项目文件：输入\">4.3.1 指导与管理项目文件：输入</h3>\n<p>指导与管理项目文件的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>变更日志</li>\n<li>经验教训登记册</li>\n<li>里程碑清单</li>\n<li>项目沟通记录</li>\n<li>项目进度计划</li>\n<li>需求跟踪矩阵</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n</ul>\n</li>\n<li>批准的变更请求\n<ul>\n<li>批准的变更请求是实施整体变更控制过程的输出，包括经项目经理或变更控制委员会(CCB)（必要时）审查和批准的变更请求。批准的变更请求可能是纠正措施、预防措施或缺陷补救，并由项目团队纳入项目进度计划付诸实施。</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织的结构、文化、管理实践和可持续性；</li>\n<li>基础设施（如现有的设施和固定资产）；</li>\n<li>相关方的风险临界值（如允许的成本超支百分比）。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>组织的标准政策、流程和程序；</li>\n<li>问题与缺陷管理程序，用于定义问题与缺陷控制、问题与缺陷识别及其解决，以及行动事项跟踪；</li>\n</ul>\n</li>\n<li>问题与缺陷管理数据库，包括历史问题与缺陷状态、问题和缺陷解决情况，以及行动事项的结果；</li>\n<li>绩效测量数据库，用来收集与提供过程和产品的测量数据；</li>\n<li>变更控制和风险控制程序；</li>\n<li>以往项目的项目信息（如范围、成本、进度与绩效测量基准，项目日历，项目进度网络图，风险登记册，风险报告以及经验教训知识库）。</li>\n</ul>\n<h3 id=\"4-3-2-指导与管理项目工作：工具与技术\">4.3.2 指导与管理项目工作：工具与技术</h3>\n<p>指导与管理项目工作的工具与技术包括：</p>\n<ul>\n<li>专辑判断</li>\n<li>项目管理信息系统</li>\n<li>会议</li>\n</ul>\n<h3 id=\"4-3-3-指导与管理项目工作：输出\">4.3.3 指导与管理项目工作：输出</h3>\n<p>指导与管理项目工作的输出包括：</p>\n<ul>\n<li>可交付成果</li>\n<li>工作绩效数据\n<ul>\n<li>问题日志</li>\n<li>问题类型</li>\n<li>问题提出者和提出时间</li>\n<li>问题描述</li>\n<li>问题优先级</li>\n<li>由谁负责解决问题</li>\n<li>目标解决日期</li>\n<li>问题状态</li>\n<li>最终解决情况</li>\n</ul>\n</li>\n<li>变更请求\n<ul>\n<li>纠正措施</li>\n<li>预防措施</li>\n<li>缺陷补救</li>\n<li>更新</li>\n</ul>\n</li>\n<li>项目管理计划更新</li>\n<li>项目文件更新\n<ul>\n<li>活动清单</li>\n<li>假设日志</li>\n<li>经验教训登记册</li>\n<li>需求文件</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>组织过程资产更新</li>\n</ul>\n<h2 id=\"4-4-管理项目知识\">4.4 管理项目知识</h2>\n<p>管理项目知识是使用现有知识并生成新知识，以实现项目目标，并且帮助组织学习的过程。本过程的主要作用是，利用已有的组织知识来创造或改进项目成果，并且使当前项目创造的知识可用于支持组织运营和未来的项目或阶段。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173329-8.png\" alt=\"\"></p>\n<p>管理项目知识：输入、工具与技术和输出</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173329-9.png\" alt=\"\"></p>\n<p>管理项目知识：数据流向图</p>\n<p>知识通常分为“显性知识”（易使用文字、图片和数字进行编撰的知识）和“隐性知识”（个体知识以及难以明确表达的知识，如信念、洞察力、经验和“诀窍”）两种。知识管理指管理显性和隐性知识，旨在重复使用现有知识并生成新知识。有助于达成这两个目的的关键活动是知识分享和知识集成（不同领域的知识、情境知识和项目管理知识）。</p>\n<p>从组织的角度来看，知识管理指的是确保项目团队和其他相关方的技能、经验和专业知识在项目开始之前、开展期间和结束之后得到运用。因为知识存在于人们的思想中，且无法强迫人们分享自己的知识或关注他人的知识，所以，知识管理最重要的环节就是营造一种相互信任的氛围，激励人们分享知识或关注他人的知识。如果不激励人们分享知识或关注他人的知识，即便最好的知识管理工具和技术也无法发挥作用。在实践中，联合使用知识管理工具和技术（用于人际互动）以及信息管理工具和技术（用于编撰显性知识）来分享知识。</p>\n<h3 id=\"4-4-1-管理项目知识：输入\">4.4.1 管理项目知识：输入</h3>\n<p>管理项目知识的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>项目团队派工单</li>\n<li>资源分解结构</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>可交付成果</li>\n<li>事业环境因素\n<ul>\n<li>组织文化、相关方文化和客户文化</li>\n<li>设施和资源的地理分布</li>\n<li>组织中的知识专家</li>\n<li>法律法规要求或制约因素</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>组织的标准政策、流程和程序</li>\n<li>人事管理制度</li>\n<li>组织对沟通的要求</li>\n<li>正式的知识分享和信息分享程序</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-4-2-管理项目知识：工具与技术\">4.4.2 管理项目知识：工具与技术</h3>\n<p>管理项目知识需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>知识管理；</li>\n<li>信息管理；</li>\n<li>组织学习；</li>\n<li>知识和信息管理工具；</li>\n<li>来自其他项目的相关信息。</li>\n</ul>\n</li>\n<li>知识管理\n<ul>\n<li>人际交往，包括非正式的社交和在线社交。可以进行开放式提问（如“谁知道……？”）的在线论坛有助于与专家进行知识分享对话；</li>\n<li>实践社区（有时称为“兴趣社区”或“社区”）和特别兴趣小组；</li>\n<li>会议，包括使用通信技术进行互动的虚拟会议；</li>\n<li>工作跟随和跟随指导；</li>\n<li>讨论论坛，如焦点小组；</li>\n<li>知识分享活动，如专题讲座和会议；</li>\n<li>研讨会，包括问题解决会议和经验教训总结会议；</li>\n<li>讲故事；</li>\n<li>创造力和创意管理技术；</li>\n<li>知识展会和茶座；</li>\n<li>交互式培训。</li>\n</ul>\n</li>\n<li>信息管理\n<ul>\n<li>编撰显性知识的方法，例如，如何确定经验教训登记册的条目；</li>\n<li>经验教训登记册；</li>\n<li>图书馆服务；</li>\n<li>信息收集，例如搜索网络和阅读已发表的文章；</li>\n<li>项目管理信息系统 (PMIS)。</li>\n</ul>\n</li>\n<li>人际关系与团队技能\n<ul>\n<li>积极倾听</li>\n<li>引导</li>\n<li>领导力</li>\n<li>人际交往</li>\n<li>政治意识</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-4-3-管理项目知识：输出\">4.4.3 管理项目知识：输出</h3>\n<p>管理项目知识的输出包括：</p>\n<ul>\n<li>经验教训登记册</li>\n<li>经验教训登记册可以包含情况的类别和描述，经验教训登记册还可包括与情况相关的影响、建议和行动方案。经验教训登记册可以记录遇到的挑战、问题、意识到的风险和机会，或其他适用的内容。</li>\n<li>项目管理计划更新</li>\n<li>组织过程资产更新</li>\n</ul>\n<h2 id=\"4-5-监控项目工作\">4.5 监控项目工作</h2>\n<p>监控项目工作是跟踪、审查和报告整体项目进展，以实现项目管理计划中确定的绩效目标的过程。本过程的主要作用是，让相关方了解项目的当前状态并认可为处理绩效问题而采取的行动，以及通过成本和进度预测，让相关方了解未来项目状态。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173329-10.png\" alt=\"\"></p>\n<p>监控项目工作：输入、工具与技术和输出</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173329-11.png\" alt=\"\"></p>\n<p>监控项目工作：数据流向图</p>\n<p>监督是贯穿于整个项目的项目管理活动之一，包括收集、测量和分析测量结果，以及预测趋势，</p>\n<p>以便推动过程改进。持续的监督使项目管理团队能洞察项目的健康状况，并识别须特别关注的任何方面。控制包括制定纠正或预防措施或重新规划，并跟踪行动计划的实施过程，以确定它们能否有效解决问题。监控项目工作过程关注：</p>\n<ul>\n<li>把项目的实际绩效与项目管理计划进行比较；</li>\n<li>定期评估项目绩效，决定是否需要采取纠正或预防措施，并推荐必要的措施；</li>\n<li>检查单个项目风险的状态；</li>\n<li>在整个项目期间，维护一个准确且及时更新的信息库，以反映项目产品及相关文件的情况；</li>\n<li>为状态报告、进展测量和预测提供信息；</li>\n<li>做出预测，以更新当前的成本与进度信息；</li>\n<li>监督已批准变更的实施情况；</li>\n<li>如果项目是项目集的一部分，还应向项目集管理层报告项目进展和状态；</li>\n<li>确保项目与商业需求保持一致。</li>\n</ul>\n<h3 id=\"4-5-1-监控项目工作：输入\">4.5.1 监控项目工作：输入</h3>\n<p>监控项目工作的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>假设日志。假设日志包含会影响项目的假设条件和制约因素的信息。</li>\n<li>估算依据。估算依据说明不同估算是如何得出的，用于决定如何应对偏差。</li>\n<li>成本预测。成本预测基于项目以往的绩效，用于确定项目是否仍处于预算的公差区间内，并识别任何必要的变更。</li>\n<li>问题日志。问题日志用于记录和监督由谁负责在目标日期内解决特定问题。</li>\n<li>经验教训登记册。经验教训登记册可能包含应对偏差的有效方式以及纠正措施和预防措施。</li>\n<li>里程碑清单。里程碑清单列出特定里程碑的实现日期，用于检查是否达到计划的里程碑。</li>\n<li>质量报告。质量报告包含质量管理问题，针对过程、项目和产品的改善建议，纠正措施建议（包括返工、缺陷或漏洞补救、100% 检查等），以及在控制质量过程中发现的情况的概述。</li>\n<li>风险登记册。风险登记册提供在项目执行过程中发生的各种威胁和机会的相关信息。</li>\n<li>风险报告。风险报告提供关于整体项目风险和单个风险的信息。</li>\n<li>进度预测。进度预测基于项目以往的绩效，用于确定项目是否仍处于进度的公差区间内，并识别任何必要的变更。</li>\n</ul>\n</li>\n<li>工作绩效信息\n<ul>\n<li>在工作执行过程中收集工作绩效数据，再交由控制过程做进一步分析。将工作绩效数据与项目管理计划组件、项目文件和其他项目变量比较之后生成工作绩效信息。通过这种比较可以了解项目的执行情况。</li>\n</ul>\n</li>\n<li>协议</li>\n<li>事业环境因素\n<ul>\n<li>项目管理信息系统，例如进度、成本、资源工具、绩效指标、数据库、项目记录和财务数据；</li>\n<li>基础设施（如现有设施、设备、组织通讯渠道）；</li>\n<li>相关方的期望和风险临界值；</li>\n<li>政府或行业标准（如监管机构条例、产品标准、质量标准和工艺标准）。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>组织的标准政策、流程和程序；</li>\n<li>财务控制程序（如必需的费用与支付审查、会计编码及标准合同条款等）；</li>\n<li>监督和报告方法；</li>\n<li>问题管理程序，用于定义问题控制、问题识别及其解决，以及行动事项跟踪；</li>\n<li>缺陷管理程序，用于定义缺陷控制、缺陷识别及其解决，以及行动事项跟踪；</li>\n<li>组织知识库，尤其是过程测量和经验教训知识库。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-5-2-监控项目工作：工具与技术\">4.5.2 监控项目工作：工具与技术</h3>\n<p>监控项目工作所需要的工具和技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>挣值分析；</li>\n<li>数据的解释和情境化；</li>\n<li>持续时间和成本的估算技术；</li>\n<li>趋势分析；</li>\n<li>关于项目所在的行业以及项目关注的领域的技术知识；</li>\n<li>风险管理；</li>\n<li>合同管理。</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>备选方案分析。备选方案分析用于在出现偏差时选择要执行的纠正措施或纠正措施和预防措施的组合。</li>\n<li>成本效益分析。成本效益分析有助于在项目出现偏差时确定最节约成本的纠正措施。</li>\n<li>挣值分析。挣值分析对范围、进度和成本绩效进行了综合分析。</li>\n<li>根本原因分析。根本原因分析关注识别问题的主要原因，它可用于识别出现偏差的原因以及项目经理为达成项目目标应重点关注的领域。</li>\n<li>趋势分析。趋势分析根据以往结果预测未来绩效，它可以预测项目的进度延误，提前让项目经理意识到，按照既定趋势发展，后期进度可能出现的问题。应该在足够早的项目时间进行趋势分析，使项目团队有时间分析和纠正任何异常。可以根据趋势分析的结果，提出必要的预防措施建议。</li>\n<li>偏差分析。偏差分析审查目标绩效与实际绩效之间的差异（或偏差），可涉及持续时间估算、成本估算、资源使用、资源费率、技术绩效和其他测量指标。</li>\n</ul>\n</li>\n<li>决策</li>\n<li>会议</li>\n</ul>\n<h3 id=\"4-5-3-监控项目工作：输出\">4.5.3 监控项目工作：输出</h3>\n<p>监控项目工作的输出包括：</p>\n<ul>\n<li>工作绩效报告</li>\n<li>变更请求\n<ul>\n<li>纠正措施</li>\n<li>预防措施</li>\n<li>缺陷补救</li>\n</ul>\n</li>\n<li>项目管理计划更新</li>\n<li>项目文件更新\n<ul>\n<li>成本预测</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n<li>进度预测</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-6-实施整体变更控制\">4.6 实施整体变更控制</h2>\n<p>实施整体变更控制是审查所有变更请求、批准变更，管理对可交付成果、项目文件和项目管理计划的变更，并对变更处理结果进行沟通的过程。本过程审查对项目文件、可交付成果或项目管理计划的所有变更请求，并决定对变更请求的处置方案。本过程的主要作用是确保对项目中已记录在案的变更做综合评审。如果不考虑变更对整体项目目标或计划的影响就开展变更，往往会加剧整体项目风险。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173329-12.png\" alt=\"\"></p>\n<p>实施整体变更控制：输入、工具与技术和输出</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173329-13.png\" alt=\"\"></p>\n<p>实施整体变更控制：数据流向图</p>\n<p>在基准确定之前，变更无需正式受控于实施整体变更控制过程。一旦确定了项目基准，就必须通过本过程来处理变更请求。依照常规，每个项目的配置管理计划应规定哪些项目工件受控于配置控制程序。对配置要素的任何变更都应该提出变更请求，并经过正式控制。</p>\n<p>尽管也可以口头提出，但所有变更请求都必须以书面形式记录，并纳入变更管理和（或）配置管</p>\n<p>理系统中。在批准变更之前，可能需要了解变更对进度的影响和对成本的影响。在变更请求可能影响任一项目基准的情况下，都需要开展正式的整体变更控制过程。每项记录在案的变更请求都必须由一位责任人批准、推迟或否决，这个责任人通常是项目发起人或项目经理。应该在项目管理计划或组织程序中指定这位责任人，必要时，应该由变更控制委员会（CCB）来开展实施整体变更控制过程。CCB是一个正式组成的团体，负责审查、评价、批准、推迟或否决项目变更，以及记录和传达变更处理决定。</p>\n<p>变更请求得到批准后，可能需要新编（或修订）成本估算、活动排序、进度日期、资源需求和（或）风险应对方案分析，这些变更可能要求调整项目管理计划和其他项目文件。某些特定的变更请求，在 CCB 批准之后，可能还需要得到客户或发起人的批准，除非他们本身就是 CCB 的成员。</p>\n<h3 id=\"4-6-1-实施整体变更控制：输入\">4.6.1 实施整体变更控制：输入</h3>\n<p>实施整体变更控制的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>配置管理计划</li>\n<li>范围基准</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>估算依据</li>\n<li>需求跟踪矩阵</li>\n<li>风险报告</li>\n</ul>\n</li>\n<li>工作绩效报告</li>\n<li>变更请求</li>\n<li>事业环境因素\n<ul>\n<li>法律限制，例如国家或地区法规；</li>\n<li>政府或行业标准（如产品标准、质量标准、安全标准和工艺标准）；</li>\n<li>法律法规要求和（或）制约因素；</li>\n<li>组织治理框架（通过安排人员、制定政策和确定过程，以结构化的方式实施控制、指导和协调，以实现组织的战略和运营目标）；</li>\n<li>合同和采购制约因素。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>变更控制程序，包括修改组织标准、政策、计划和程序或任一项目文件所须遵循的步骤，以及如何批准和确认变更；</li>\n<li>批准与签发变更的程序；</li>\n<li>配置管理知识库，包括组织标准、政策、程序和项目文件的各种版本及基准。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-6-2-实施整体变更控制：工具与技术\">4.6.2 实施整体变更控制：工具与技术</h3>\n<p>实施整体变更控制所需要的工具与技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>变更控制工具\n<ul>\n<li><strong>识别配置项</strong>。识别与选择配置项，从而为定义与核实产品配置、标记产品和文件、管理变更和明确责任提供基础。</li>\n<li><strong>记录并报告配置项状态</strong>。关于各个配置项的信息记录和报告。</li>\n<li><strong>进行配置项核实与审计</strong>。通过配置核实与审计，确保项目的配置项组成的正确性，以及相应的变更都被登记、评估、批准、跟踪和正确实施，从而确保配置文件所规定的功能要求都已实现。</li>\n<li><strong>识别变更</strong>。识别并选择过程或项目文件的变更项。</li>\n<li><strong>记录变更</strong>。将变更记录为合适的变更请求。</li>\n<li><strong>做出变更决定</strong>。审查变更，批准、否决、推迟对项目文件、可交付成果或基准的变更或做出其他决定。</li>\n<li><strong>跟踪变更</strong>。确认变更被登记、评估、批准、跟踪并向相关方传达最终结果。</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li><strong>备选方案分析</strong>。该技术用于评估变更请求，并决定哪些请求可接受、应否决或需修改。</li>\n<li><strong>成本效益分析</strong>。该分析有助于确定变更请求是否值得投入相关成本。</li>\n</ul>\n</li>\n<li>决策\n<ul>\n<li>投票</li>\n<li>独裁型决策制定</li>\n<li>多标准决策分析</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"4-6-3-实施整体变更控制：输出\">4.6.3 实施整体变更控制：输出</h3>\n<p>实施整体变更控制的输出包括：</p>\n<ul>\n<li>批准的变更请求</li>\n<li>项目管理计划更新</li>\n<li>项目文件更新</li>\n</ul>\n<h2 id=\"4-7-结束项目或阶段\">4.7 结束项目或阶段</h2>\n<p>结束项目或阶段是终结项目、阶段或合同的所有活动的过程。本过程的主要作用是，存档项目或阶段信息，完成计划的工作，释放组织团队资源以展开新的工作。它仅开展一次或仅在项目的预定义点开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173329-14.png\" alt=\"\"></p>\n<p>结束项目或阶段：输入、工具与技术和输出</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173329-15.png\" alt=\"\"></p>\n<p>结束项目或阶段：数据流向图</p>\n<p>在结束项目时，项目经理需要回顾项目管理计划，确保所有项目工作都已完成以及项目目标均已实现。项目或阶段行政收尾所需的必要活动包括（但不限于）：</p>\n<ul>\n<li>为达到阶段或项目的完工或退出标准所必须的行动和活动，例如：\n<ul>\n<li>确保所有文件和可交付成果都已是最新版本，且所有问题都已得到解决；</li>\n<li>确认可交付成果已交付给客户并已获得客户的正式验收；</li>\n<li>确保所有成本都已记入项目成本账；</li>\n<li>关闭项目账户；</li>\n<li>重新分配人员；</li>\n<li>处理多余的项目材料；</li>\n<li>重新分配项目设施、设备和其他资源；</li>\n<li>根据组织政策编制详尽的最终项目报告。</li>\n</ul>\n</li>\n<li>为关闭项目合同协议或项目阶段合同协议所必须开展的活动，例如\n<ul>\n<li>确认卖方的工作已通过正式验收；</li>\n<li>最终处置未决索赔；</li>\n<li>更新记录以反映最后的结果；</li>\n<li>存档相关信息供未来使用。</li>\n</ul>\n</li>\n<li>为完成下列工作所必须开展的活动：\n<ul>\n<li>收集项目或阶段记录；</li>\n<li>审计项目成败；</li>\n<li>管理知识分享和传递；</li>\n<li>总结经验教训；</li>\n<li>存档项目信息以供组织未来使用。</li>\n</ul>\n</li>\n<li>为向下一个阶段，或者向生产和（或）运营部门移交项目的产品、服务或成果所必须开展的行动和活动。</li>\n<li>收集关于改进或更新组织政策和程序的建议，并将它们发送给相应的组织部门。</li>\n<li>测量相关方的满意程度。<br>\n如果项目在完工前就提前终止，结束项目或阶段过程还需要制定程序，来调查和记录提前终止的</li>\n</ul>\n<p>原因。为了实现上述目的，项目经理应该引导所有合适的相关方参与本过程。</p>\n<h3 id=\"4-7-1-结束项目或阶段：输入\">4.7.1 结束项目或阶段：输入</h3>\n<p>结束项目或阶段的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>估算依据</li>\n<li>变更日志</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>里程碑清单</li>\n<li>项目沟通记录</li>\n<li>质量控制测量结果</li>\n<li>质量报告</li>\n<li>需求文件</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n</ul>\n</li>\n<li>验收的可交付成果</li>\n<li>商业文件</li>\n<li>协议</li>\n<li>采购文档</li>\n<li>组织过程资产\n<ul>\n<li>项目或阶段收尾指南或要求（如经验教训、项目终期审计、项目评价、产品确认、验收标准、合同收尾、资源重新分配、团队绩效评估，以及知识传递）；</li>\n<li>配置管理知识库，包括组织标准、政策、程序和项目文件的各种版本及基准。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-7-2-结束项目或阶段：工具与技术\">4.7.2 结束项目或阶段：工具与技术</h3>\n<p>结束项目或阶段所需要的工具与技术包含：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>管理控制；</li>\n<li>审计；</li>\n<li>法规与采购；</li>\n<li>法律法规。</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>文件分析，评估现有文件有助于总结经验教训和分享知识，以改进未来项目和组织资产。</li>\n<li>回归分析，该技术分析作用于项目结果的不同项目变量之间的相互关系，以提高未来项目的绩效。</li>\n<li>趋势分析，趋势分析可用于确认组织所用模式的有效性，并且为了未来项目而进行相应的模式调整。</li>\n<li>偏差分析，偏差分析可通过比较最初计划目标与最终结果来改进组织的测量指标。</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"4-7-3-结束项目或阶段：输出\">4.7.3 结束项目或阶段：输出</h3>\n<p>结束项目或阶段的输出包含：</p>\n<ul>\n<li>项目文件更新</li>\n<li>最终产品、服务或成果移交</li>\n<li>最终报告\n<ul>\n<li>项目或阶段的概述；</li>\n<li>范围目标、范围的评估标准，以及证明达到完工标准的证据；</li>\n<li>质量目标、项目和产品质量的评估标准、相关核实信息和实际里程碑交付日期以及偏差原因；</li>\n<li>成本目标，包括可接受的成本区间、实际成本，以及产生任何偏差的原因；</li>\n<li>最终产品、服务或成果的确认信息的总结。</li>\n<li>进度计划目标包括成果是否实现项目所预期的效益。如果在项目结束时未能实现效益，则指出效益实现程度并预计未来实现情况。</li>\n<li>关于最终产品、服务或成果如何满足商业计划所述业务需求的概述。如果在项目结束时未能满足业务需求，则指出需求满足程度并预计业务需求何时能够得到满足。</li>\n<li>关于项目过程中发生的风险或问题及其解决情况的概述。</li>\n</ul>\n</li>\n<li>组织过程资产更新\n<ul>\n<li>项目文件</li>\n<li>运营和支持文件</li>\n<li>项目或阶段收尾文件</li>\n<li>经验教训知识库</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-项目范围管理\">5.项目范围管理</h2>\n<p>项目范围管理包括确保项目做且只做所需的全部工作，以成功完成项目的各个过程。管理项目范围主要在于定义和控制哪些工作应该包括在项目内，哪些不应该包括在项目内。</p>\n<p>项目范围管理过程包括：</p>\n<p><strong>5.1 规划范围管理</strong> — 为记录如何定义、确认和控制项目范围及产品范围，而创建范围管理计划的过程。</p>\n<p><strong>5.2 收集需求</strong> — 为实现项目目标而确定、记录并管理相关方的需要和需求的过程。</p>\n<p><strong>5.3 定义范围</strong> — 制定项目和产品详细描述的过程。</p>\n<p><strong>5.4 创建 WBS</strong> — 将项目可交付成果和项目工作分解为较小的、更易于管理的组件的过程。</p>\n<p><strong>5.5 确认范围</strong> — 正式验收已完成的项目可交付成果的过程。</p>\n<p><strong>5.6 控制范围</strong> — 监督项目和产品的范围状态，管理范围基准变更的过程。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173729.png\" alt=\"\"></p>\n<p><strong>范围的含义：</strong></p>\n<ul>\n<li><strong>产品范围</strong>：某项产品、服务或成果所具有的特征和功能。</li>\n<li><strong>项目范围</strong>：为交付具有规定特性与功能的产品、服务或成果而必须完成的工作。项目范围有时也包括产品范围。</li>\n</ul>\n<p>在项目范围管理过程中，收集、记录和管理相关方需求。项目范围管理的发展趋势和新兴实践包括（但不限于）注重与商业分析专业人士的合作，以便：</p>\n<ul>\n<li>确定问题并识别商业需要；</li>\n<li>识别并推荐能够满足这些需要的可行解决方案；</li>\n<li>收集、记录并管理相关方需求，以满足商业和项目目标；</li>\n<li>推动项目集或项目的产品、服务或最终成果的成功应用 。</li>\n</ul>\n<p>需求管理过程结束于需求关闭，即把产品、服务或成果移交给接收方，以便长期测量、监控、实现和维持效益。</p>\n<p><strong>裁剪时需要考虑的因素</strong></p>\n<p>因为每个项目都是独特的，所以项目经理需要裁剪项目范围管理过程。裁剪时应考虑的因素包括（但不限于）：</p>\n<ul>\n<li><strong>知识和需求管理</strong>。组织是否拥有正式或非正式的知识和需求管理体系？为了在未来项目中重复使用需求，项目经理应建立哪些指南？</li>\n<li><strong>确认和控制</strong>。组织是否拥有正式或非正式的与确认和控制相关的政策、程序和指南？</li>\n<li><strong>开发方法</strong>。组织是否采用敏捷方法管理项目？开发方法属于迭代型还是增量型？是否采用预测型方法？混合型方法是否有效？</li>\n<li><strong>需求的稳定性</strong>。项目中是否存在需求不稳定的领域？是否有必要采用精益、敏捷或其他适应型技术来处理不稳定的需求，直至需求稳定且定义明确？</li>\n<li><strong>治理</strong>。组织是否拥有正式或非正式的审计和治理政策、程序和指南</li>\n</ul>\n<p><strong>在敏捷或适应型环境中需要考虑的因素</strong></p>\n<p>对于需求不断变化、风险大或不确定性高的项目，在项目开始时通常无法明确项目的范围，而需要在项目期间逐渐明确。敏捷方法特意在项目早期缩短定义和协商范围的时间，并为持续探索和明确范围而延长创建相应过程的时间。在许多情况下，不断涌现的需求往往导致真实的业务需求与最初所述的业务需求之间存在差异。因此，敏捷方法有目的地构建和审查原型，并通过发布多个版本来明确需求。这样一来，范围会在在整个项目期间被定义和再定义。在敏捷方法中，把需求列入未完项。</p>\n<h2 id=\"5-1-规划范围管理\">5.1 规划范围管理</h2>\n<p>规划范围管理是为记录如何定义、确认和控制项目范围及产品范围，而创建范围管理计划的过程。本过程的主要作用是，在整个项目期间对如何管理范围提供指南和方向。本过程仅开展一次或仅在项目的预定义点开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173729-1.png\" alt=\"\"></p>\n<p>规划范围管理：输入、工具与技术和输出</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173729-2.png\" alt=\"\"></p>\n<p>规划范围管理：数据流向图</p>\n<h3 id=\"5-1-1-规划范围管理：输入\">5.1.1 规划范围管理：输入</h3>\n<p>规划范围管理的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划\n<ul>\n<li>质量管理计划</li>\n<li>项目生命周期描述</li>\n<li>开发方法</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织文化</li>\n<li>基础设施</li>\n<li>人事管理制度</li>\n<li>市场条件</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>政策和程序</li>\n<li>历史信息和经验教训知识库</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-1-2-规划范围管理：工具与技术\">5.1.2 规划范围管理：工具与技术</h3>\n<p>规划范围管理需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>以往类似项目</li>\n<li>特定行业、学科和应用领域的信息</li>\n</ul>\n</li>\n<li>数据分析</li>\n<li>会议</li>\n</ul>\n<h3 id=\"5-1-3-规划范围管理：输出\">5.1.3 规划范围管理：输出</h3>\n<p>规划范围管理的输出包括：</p>\n<ul>\n<li>范围管理计划\n<ul>\n<li>制定项目范围说明书</li>\n<li>根据详细项目范围说明书创建WBS</li>\n<li>确定如何审批和维护范围基准</li>\n<li>正式验收已完成的项目可交付成果</li>\n</ul>\n</li>\n<li>需求管理计划\n<ul>\n<li>如何规划、跟踪和报告各种需求活动；</li>\n<li>配置管理活动，例如如何启动变更，如何分析其影响，如何进行追溯、跟踪和报告，以及如何变更审批权限；</li>\n<li>需求优先级排序过程；</li>\n<li>测量指标及使用这些指标的理由；</li>\n<li>反映哪些需求属性将被列入跟踪矩阵的跟踪结构。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-2-收集需求\">5.2 收集需求</h2>\n<p>收集需求是为实现目标而确定、记录并管理相关方的需要和需求的过程。本过程的主要作用是，为定义产品范围和项目范围奠定基础，且仅开展一次或仅在项目的预定义点开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173729-3.png\" alt=\"\"></p>\n<p>收集需求：输入、工具与技术和输出</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173729-4.png\" alt=\"\"></p>\n<p>收集需求：数据流向图</p>\n<h3 id=\"5-2-1-收集需求：输入\">5.2.1 收集需求：输入</h3>\n<p>收集需求的需求包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划\n<ul>\n<li>范围管理计划</li>\n<li>需求管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>经验教训登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>商业文件</li>\n<li>协议</li>\n<li>事业环境因素\n<ul>\n<li>组织文化</li>\n<li>基础设施</li>\n<li>人事管理制度</li>\n<li>市场条件</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>政策和程序</li>\n<li>包含以往项目信息的历史信息和经验教训知识库</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-2-2-收集需求：工具与技术\">5.2.2 收集需求：工具与技术</h3>\n<p>收集需求需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>商业分析</li>\n<li>需求获取</li>\n<li>需求分析</li>\n<li>需求文件</li>\n<li>以往类似项目的项目需求</li>\n<li>图解技术</li>\n<li>引导</li>\n<li>冲突管理</li>\n</ul>\n</li>\n<li>数据收集\n<ul>\n<li>头脑风暴</li>\n<li>访谈</li>\n<li>焦点小组</li>\n<li>问卷调查</li>\n<li>标杆对照</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>协议</li>\n<li>商业计划</li>\n<li>业务流程或接口文档</li>\n<li>业务规则库</li>\n<li>现行流程</li>\n<li>市场文献</li>\n<li>问题日志</li>\n<li>政策和程序</li>\n<li>法规文件</li>\n<li>建议邀请书</li>\n<li>用例</li>\n</ul>\n</li>\n<li>决策\n<ul>\n<li>投票</li>\n<li>独裁型决策执行</li>\n<li>多标准决策分析</li>\n</ul>\n</li>\n<li>数据表现\n<ul>\n<li>亲和图：用来对大量创意进行分组的技术，以便进一步审查和分析</li>\n<li>思维导图：把从头脑风暴中获得的创意整合成一张图，用以反映创意之间的共性和差异，激发新创意</li>\n</ul>\n</li>\n<li>人际关系与团队技能\n<ul>\n<li>名义小组技术，名义小组技术是用于促进头脑风暴的一种技术，通过投票排列最有用的创意，以便进一步开展头脑风暴或优先排序。名义小组技术是一种结构化的头脑风暴形式，由四个步骤组成：\n<ul>\n<li>向小组提出一个问题或难题。每个人在沉思后写出自己的想法。</li>\n<li>主持人在活动挂图上记录所有人的想法。</li>\n<li>集体讨论各个想法，直到全体成员清晰理解。</li>\n<li>个人私下投票决出各种想法的优先排序，通常采用 5 分制，1 分最低，5 分最高。为减少想法数量、集中关注想法，可进行数轮投票。每轮投票后，都将清点选票，选出得分靠前的那些想法。</li>\n</ul>\n</li>\n<li>观察和交谈</li>\n<li>引导，引导与主题研讨会结合使用，把主要相关方召集在一起定义产品需求。研讨会可用于快速定义跨职能需求并协调相关方的需求差异。因为具有群体互动的特点，有效引导的研讨会有助于参与者之间建立信任、改进关系、改善沟通，从而有利于相关方达成一致意见。此外，与分别召开会议相比，研讨会能够更早发现并更快解决问题。适合采用引导技能的情境包括（但不限于）：\n<ul>\n<li>联合应用设计或开发 (JAD)。JAD 会议适用于软件开发行业。这种研讨会注重把业务主题专家和开发团队集中在一起，以收集需求和改进软件开发过程。</li>\n<li>质量功能展开 (QFD)。制造行业则采用 QFD 这种引导技能来帮助确定新产品的关键特征。QFD从收集客户需要（又称“客户声音”）开始，然后客观地对这些需要进行分类和排序，并为实现这些需要而设定目标。</li>\n<li>用户故事。用户故事是对所需功能的简短文字描述，经常产生于需求研讨会。用户故事描述哪个相关方将从功能中受益（角色），他需要实现什么（目标），以及他期望获得什么利益（动机）。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>系统交互图，系统交互图是范围模型的一个例子，它是对产品范围的可视化描绘，显示业务系统（过程、设备、计算机系统等）及其与人和其他系统（行动者）之间的交互方式。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173729-5.png\" alt=\"\"></p>\n<ul>\n<li>原型法，原型法是指在实际制造预期产品之前，先造出该产品的模型，并据此征求对需求的早期反馈。原型包括微缩产品、计算机生成的二维和三维模型、实体模型或模拟。因为原型是有形的实物，它使得相关方可以体验最终产品的模型，而不是仅限于讨论抽象的需求描述。原型法支持渐进明细的理念，需要经历从模型创建、用户体验、反馈收集到原型修改的反复循环过程。在经过足够的反馈循环之后，就可以通过原型获得足够的需求信息，从而进入设计或制造阶段。故事板是一种原型技术，通过一系列的图像或图示来展示顺序或导航路径。故事板用于各种行业的各种项目中，如电影、广告、教学设计，以及敏捷和其他软件开发项目。在软件开发中，故事板使用实体模型来展示网页、屏幕或其他用户界面的导航路径。</li>\n</ul>\n<h3 id=\"5-2-3-收集需求：输出\">5.2.3 收集需求：输出</h3>\n<p>收集需求的输出包括：</p>\n<ul>\n<li>需求文件\n<ul>\n<li>业务需求</li>\n<li>相关方需求</li>\n<li>解决方案需求\n<ul>\n<li>功能需求</li>\n<li>非功能需求</li>\n</ul>\n</li>\n<li>过渡和就绪需求</li>\n<li>项目需求</li>\n<li>质量需求</li>\n</ul>\n</li>\n<li>需求跟踪矩阵：需求跟踪矩阵是把产品需求从其来源连接到能满足需求的可交付成果的一种表格。使用需求跟踪矩阵，把每个需求与业务目标或项目目标联系起来，有助于确保每个需求都具有商业价值。\n<ul>\n<li>\n<p>业务需要、机会、目的和目标；</p>\n</li>\n<li>\n<p>项目目标；</p>\n</li>\n<li>\n<p>项目范围和 WBS 可交付成果；</p>\n</li>\n<li>\n<p>产品设计；</p>\n</li>\n<li>\n<p>产品开发；</p>\n</li>\n<li>\n<p>测试策略和测试场景；</p>\n</li>\n<li>\n<p>高层级需求到详细需求。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173729-6.png\" alt=\"\"></p>\n<p>需求跟踪矩阵示例</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-3-定义范围\">5.3 定义范围</h2>\n<p>定义范围是制定项目和产品详细描述的过程。本过程的主要作用是，描述产品、服务或成果的边界和验收标准。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173729-7.png\" alt=\"\"></p>\n<p>定义范围：输入、工具与技术和输出</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173729-8.png\" alt=\"\"></p>\n<p>定义范围：数据流向图</p>\n<h3 id=\"5-3-1-定义范围：输入\">5.3.1 定义范围：输入</h3>\n<p>定义范围的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>需求文件</li>\n<li>风险登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织文化</li>\n<li>基础设施</li>\n<li>人事管理制度</li>\n<li>市场条件</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>用于制定项目范围说明书的政策、程序和模板</li>\n<li>以往项目的项目档案</li>\n<li>以往阶段或项目的经验教训</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-3-2-定义范围：工具与技术\">5.3.2 定义范围：工具与技术</h3>\n<p>定义范围需要的工具与技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>数据分析</li>\n<li>决策</li>\n<li>人际关系与团队技能</li>\n<li>产品分析\n<ul>\n<li>产品分解</li>\n<li>需求分析</li>\n<li>系统分析</li>\n<li>系统工程</li>\n<li>价值分析</li>\n<li>价值工程</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-3-3-定义范围：输出\">5.3.3 定义范围：输出</h3>\n<p>定义范围的输出包括：</p>\n<ul>\n<li>项目范围说明书：项目范围说明书是对项目范围、主要可交付成果、假设条件和制约因素的描述。它记录了整个范围，包括项目和产品范围；详细描述了项目的可交付成果；还代表项目相关方之间就项目范围所达成的共识。为便于管理相关方的期望，项目范围说明书可明确指出哪些工作不属于本项目范围。\n<ul>\n<li>产品范围描述</li>\n<li>可交付成果</li>\n<li>验收标准</li>\n<li>项目的除外责任：识别排除在项目之外的内容</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-4-创建WBS\">5.4 创建WBS</h2>\n<p>创建工作分解结构（WBS）是把项目可交付成果和项目工作分解成较小、更易于管理的组件的过程。本过程的主要作用是，为所要交付的内容提供架构，它仅开展一次或仅在项目的预定义点开展。</p>\n<p>WBS 是对项目团队为实现项目目标、创建所需可交付成果而需要实施的全部工作范围的层级分解。WBS 组织并定义了项目的总范围，代表着经批准的当前项目范围说明书中所规定的工作。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173729-9.png\" alt=\"\"></p>\n<p>创建 WBS：输入、工具与技术和输出</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173729-10.png\" alt=\"\"></p>\n<p>创建 WBS：数据流向图</p>\n<h3 id=\"5-4-1-创建WBS：输入\">5.4.1 创建WBS：输入</h3>\n<p>创建WBS的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>项目范围说明书</li>\n<li>需求文件</li>\n</ul>\n</li>\n<li>事业环境因素</li>\n<li>组织过程资产\n<ul>\n<li>用于创建WBS的政策、程序和模板</li>\n<li>以往项目的项目档案</li>\n<li>以往项目的经验教训</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-4-2-创建WBS：工具与技术\">5.4.2 创建WBS：工具与技术</h3>\n<p>创建WBS需要的工具和技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>分解：分解是一种把项目范围和项目可交付成果逐步划分为更小、更便于管理的组成部分的技术；工作包是 WBS 最低层的工作，可对其成本和持续时间进行估算和管理。分解的程度取决于所需的控制程度，以实现对项目的高效管理；工作包的详细程度则因项目规模和复杂程度而异。\n<ul>\n<li>识别和分析可交付成果及相关工作；</li>\n<li>确定 WBS 的结构和编排方法；</li>\n<li>自上而下逐层细化分解；</li>\n<li>为 WBS 组成部分制定和分配标识编码；</li>\n<li>核实可交付成果分解的程度是否恰当。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173729-11.png\" alt=\"\"></p>\n<p>WBS示例</p>\n<h3 id=\"5-4-3-创建WBS：输出\">5.4.3 创建WBS：输出</h3>\n<p>创建WBS的输出包括：</p>\n<ul>\n<li>范围基准\n<ul>\n<li>项目范围说明书</li>\n<li>WBS</li>\n<li>工作包：WBS 的最低层级是带有独特标识号的工作包。这些标识号为进行成本、进度和资源信息的逐层汇总提供了层级结构，构成账户编码。每个工作包都是控制账户的一部分，而控制账户则是一个管理控制点。在该控制点上，把范围、预算和进度加以整合，并与挣值相比较，以测量绩效。控制账户拥有两个或更多工作包，但每个工作包只与一个控制账户关联。</li>\n<li>规划包：一个控制账户可以包含一个或多个规划包，其是一种低于控制账户而高于工作包的工作分解结构组件，工作内容已知，但详细的进度活动未知。</li>\n<li>WBS词典</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>需求文件</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-5-确认范围\">5.5 确认范围</h2>\n<p>确认范围是正式验收已完成的项目可交付成果的过程。本过程的主要作用是，使验收过程具有客观性；同时通过确认每个可交付成果，来提高最终产品、服务或成果获得验收的可能性。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173729-12.png\" alt=\"\"></p>\n<p>确认范围：输入、工具与技术和输出</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173729-13.png\" alt=\"\"></p>\n<p>确认范围：数据流向图</p>\n<h3 id=\"5-5-1-确认范围：输入\">5.5.1 确认范围：输入</h3>\n<p>确认范围的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>范围管理计划</li>\n<li>需求管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>质量报告</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n</ul>\n</li>\n<li>核实的可交付成果</li>\n<li>工作绩效数据</li>\n</ul>\n<h3 id=\"5-5-2-确认范围：工具与技术\">5.5.2 确认范围：工具与技术</h3>\n<p>确认范围需要的工具与技术包括：</p>\n<ul>\n<li>检查</li>\n<li>决策</li>\n</ul>\n<h3 id=\"5-5-3-确认范围：输出\">5.5.3 确认范围：输出</h3>\n<p>确认范围的输出包括：</p>\n<ul>\n<li>验收的可交付成果</li>\n<li>工作绩效信息</li>\n<li>变更请求</li>\n<li>项目文件更新</li>\n</ul>\n<h2 id=\"5-6-控制范围\">5.6 控制范围</h2>\n<p>控制范围是监督项目和产品的范围状态，管理范围基准变更的过程。本过程的主要作用是，在整个项目期间保持对项目基准的维护，且需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173729-14.png\" alt=\"\"></p>\n<p>控制范围：输入、工具与技术和输出</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417173729-15.png\" alt=\"\"></p>\n<p>控制范围：数据流向图</p>\n<h3 id=\"5-6-1-控制范围：输入\">5.6.1 控制范围：输入</h3>\n<p>控制范围的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>范围管理计划</li>\n<li>需求管理计划</li>\n<li>变更管理计划</li>\n<li>配置管理计划</li>\n<li>范围基准</li>\n<li>绩效测量基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n</ul>\n</li>\n<li>工作绩效数据</li>\n<li>组织过程资产\n<ul>\n<li>现有的、正式和非正式的，与范围控制相关的政策、程序和指南</li>\n<li>可用的监督和报告的方法和模板</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-6-2-控制范围：工具与技术\">5.6.2 控制范围：工具与技术</h3>\n<p>控制范围需要的工具与技术包括：</p>\n<ul>\n<li>数据分析\n<ul>\n<li>偏差分析</li>\n<li>趋势分析</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-6-3-控制范围：输出\">5.6.3 控制范围：输出</h3>\n<p>控制范围的输出包括：</p>\n<ul>\n<li>工作绩效信息</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>范围管理计划</li>\n<li>范围基准</li>\n<li>进度基准</li>\n<li>成本基准</li>\n<li>绩效测量基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>经验教训登记册</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-项目进度管理\">6.项目进度管理</h2>\n<p>项目进度管理包括为管理项目按时完成所需的各个过程。其过程包括：</p>\n<p><strong>6.1 规划进度管理</strong> — 为规划、编制、管理、执行和控制项目进度而制定政策、程序和文档的过程。</p>\n<p><strong>6.2 定义活动</strong> — 识别和记录为完成项目可交付成果而需采取的具体行动的过程。</p>\n<p><strong>6.3 排列活动顺序</strong> — 识别和记录项目活动之间的关系的过程。</p>\n<p><strong>6.4 估算活动持续时间</strong> — 根据资源估算的结果，估算完成单项活动所需工作时段数的过程。</p>\n<p><strong>6.5 制定进度计划</strong> — 分析活动顺序、持续时间、资源需求和进度制约因素，创建项目进度模型，从而落实项目执行和监控的过程。</p>\n<p><strong>6.6 控制进度</strong> — 监督项目状态，以更新项目进度和管理进度基准变更的过程。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641.png\" alt=\"\"></p>\n<p>项目进度管理概述</p>\n<p><strong>项目进度管理的核心概念</strong></p>\n<p>通过项目进度规划制定详尽的计划，说明项目如何以及何时交付项目范围中定义的产品、服务和成果，并作为一种用于沟通和管理相关方期望的工具，以及报告绩效的基础。</p>\n<p>项目管理团队选择进度计划方法，例如关键路径法或敏捷方法。之后，项目管理团队将项目特定数据，如活动、计划日期、持续时间、资源、依赖关系和制约因素等输入进度计划编制工具，以创建项目进度模型。这件工作的成果就是项目进度计划。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-1.png\" alt=\"\"></p>\n<p>进度规划工作概述</p>\n<p><strong>具有未完项的迭代型进度计划</strong></p>\n<p>这是一种基于适应型生命周期的滚动式规划，例如敏捷的产品开发方法。这种方法将需求记录在用户故事中，然后在建造之前按优先级排序并优化用户故事，最后在规定的时间盒内开发产品功能。这一方法通常用于向客户交付增量价值，或多个团队并行开发大量内部关联较小的功能。适应型生命周期在产品开发中的应用越来越普遍，很多项目都采用这种进度计划方法。这种方法的好处在于，它允许在整个开发生命周期期间进行变更。</p>\n<p><strong>按需进度计划</strong></p>\n<p>这种方法通常用于看板体系，基于制约理论和来自精益生产的拉动式进度计划概念，根据团队的交付能力来限制团队正在开展的工作。按需进度计划方法不依赖于以前为产品开发或产品增量制定的进度计划，而是在资源可用时立即从未完项和工作序列中提取出来开展。按需进度计划方法经常用于此类项目：在运营或持续环境中以增量方式研发产品，且任务的规模或范围相对类似，或者，可以按照规模或范围对任务进行组合的项目。</p>\n<p><strong>裁剪考虑因素</strong></p>\n<p>由于每个项目都是独特的，因此项目经理可能需要裁剪项目进度管理过程。裁剪时应考虑的因素包括（但不限于）：</p>\n<ul>\n<li>生命周期方法。哪种生命周期方法最适合制定详细的进度计划</li>\n<li>资源可用性。影响资源可持续时间的因素是什么（如可用资源与其生产效率之间的相关性）</li>\n<li>项目维度。项目复杂性、技术不确定性、产品新颖度、速度或进度跟踪要求（如挣值、完成百分比、“红黄绿”停止信号灯指示）如何影响预期的控制水平</li>\n<li>技术支持。是否采用技术来制定、记录、传递、接收和存储项目进度模型的信息以及该技术是否易于获取</li>\n</ul>\n<h2 id=\"6-1-规划进度管理\">6.1 规划进度管理</h2>\n<p>规划进度管理是为控制、编制、管理、执行和控制项目进度而制定政策、程序和文档的过程。本过程的主要作用是，为如何在整个项目期间管理项目进度提供指南和方向。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-2.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-3.png\" alt=\"\"></p>\n<h3 id=\"6-1-1-规划进度管理：输入\">6.1.1 规划进度管理：输入</h3>\n<p>规划进度管理的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划\n<ul>\n<li>范围管理计划</li>\n<li>开发方法监督和报告</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织文化和结构</li>\n<li>团队资源可用性、技能以及物流资源可用性</li>\n<li>进度计划软件</li>\n<li>指南和标准，用于裁剪组织标准过程和程序以满足项目的特定要求</li>\n<li>商业数据库</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>历史信息和经验教训知识库</li>\n<li>现有与制定进度计划以及管理和控制进度相关的正式和非正式的程序、程序和时间</li>\n<li>模板和表格</li>\n<li>监督和报告工具</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-1-2-规划进度管理：工具与技术\">6.1.2 规划进度管理：工具与技术</h3>\n<p>规划进度管理需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>进度计划的编制、管理和控制</li>\n<li>进度计划方法</li>\n<li>进度项目软件</li>\n<li>进度计划软件项目所在特定行业</li>\n</ul>\n</li>\n<li>数据分析</li>\n<li>会议</li>\n</ul>\n<h3 id=\"6-1-3-规划进度管理：输出\">6.1.3 规划进度管理：输出</h3>\n<p>规划进度管理的输出包括：</p>\n<ul>\n<li><strong>进度管理计划</strong>：进度管理计划是项目管理计划的组成部分，为编制、监督和控制项目进度建立准则和明确活动。根据项目需要，进度管理计划可以是正式或非正式的，非常详细或高度概括的，其中应包括合适的控制临界值。\n<ul>\n<li><strong>项目进度模型制定</strong>。需要规定用于制定项目进度模型的进度规划方法论和工具。</li>\n<li><strong>进度计划的发布和迭代长度</strong>。使用适应型生命周期时，应指定固定时间的发布时段、阶段和迭代。固定时间段指项目团队稳定地朝着目标前进的持续时间，它可以推动团队先处理基本功能，然后在时间允许的情况下再处理其他功能，从而尽可能减少范围蔓延。</li>\n<li><strong>准确度</strong>。准确度定义了需要规定活动持续时间估算的可接受区间，以及允许的应急储备数量。</li>\n<li><strong>计量单位</strong>。需要规定每种资源的计量单位，例如，用于测量时间的人时数、人天数或周数，用于计量数量的米、升、吨、千米或立方码。</li>\n<li><strong>组织程序链接</strong>。工作分解结构为进度管理计划提供了框架，保证了与估算及相应进度计划的协调性。</li>\n<li><strong>项目进度模型维护</strong>。需要规定在项目执行期间，将如何在进度模型中更新项目状态，记录项目进展。</li>\n<li><strong>控制临界值</strong>。可能需要规定偏差临界值，用于监督进度绩效。它是在需要采取某种措施前，允许出现的最大差异。临界值通常用偏离基准计划中的参数的某个百分数来表示。</li>\n<li><strong>绩效测量规则</strong>。需要规定用于绩效测量的挣值管理（EVM）规则或其他测量规则。例如，进度管理计划可能规定：\n<ul>\n<li>确定完成百分比的规则；</li>\n<li>EVM 技术，如基准法、固定公式法、完成百分比法等；</li>\n<li>进度绩效测量指标，如进度偏差（SV）和进度绩效指数（SPI），用来评价偏离原始进度基准的程度。</li>\n</ul>\n</li>\n<li><strong>报告格式</strong>。需要规定各种进度报告的格式和编制频率。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-2-定义活动\">6.2 定义活动</h2>\n<p>定义活动是识别和记录为完成项目可交付成果而须必须采取的具体行动的过程。本过程的主要作用是，将工作包分解为进度活动，作为对项目工作进行进度估算、规划、执行、监督和控制的基础。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-4.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-5.png\" alt=\"\"></p>\n<h3 id=\"6-2-1-定义活动：输入\">6.2.1 定义活动：输入</h3>\n<p>定义活动的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>进度管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织文化和结构</li>\n<li>商业数据库中发布的商业信息</li>\n<li>项目管理信息系统</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>经验教训知识库，其中包含以往类似项目的活动清单等历史信息</li>\n<li>标准化的流程</li>\n<li>以往项目中包含标准活动清单或部分活动清单的模板</li>\n<li>现有与活动规划相关的正式和非正式的政策、程序和指南，如进度规划方法论，在编制活动定义时应考虑这些因素</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-2-2-定义活动：工具与技术\">6.2.2 定义活动：工具与技术</h3>\n<p>定义活动需要的工具和技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>分解</li>\n<li>滚动式规划：滚动式规划是一种迭代式的规划技术，即详细规划近期要完成的工作，同时在较高层级上粗略规划远期工作。它是一种渐进明细的规划方式，适用于工作包、规划包以及采用敏捷或瀑布式方法的发布规划。</li>\n<li>会议</li>\n</ul>\n<h3 id=\"6-2-3-定义活动：输出\">6.2.3 定义活动：输出</h3>\n<p>定义活动的输出包括：</p>\n<ul>\n<li>活动清单：活动清单包含项目所需的进度活动</li>\n<li>活动属性：活动属性是指每项活动所具有的多重属性，用来扩充对活动的描述</li>\n<li>里程碑清单</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-3-排列活动顺序\">6.3 排列活动顺序</h2>\n<p>排列活动顺序是识别和记录项目活动之间的关系的过程，本过程的主要作用是定义工作之间的逻辑顺序，以便在既定的所有项目制约因素下获得最高的效率。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-6.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-7.png\" alt=\"\"></p>\n<h3 id=\"6-3-1-排列活动顺序：输入\">6.3.1 排列活动顺序：输入</h3>\n<p>排列活动顺序的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>进度管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>活动属性</li>\n<li>活动清单</li>\n<li>假设日志</li>\n<li>里程碑清单</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>政府或行业标准</li>\n<li>项目管理信息系统</li>\n<li>进度规划工具</li>\n<li>组织的工作授权系统</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>项目组织和项目集规划，以及项目之间的依赖关系与关联</li>\n<li>现有与活动规划相关的正式和非正式的政策、程序和指南，如进度计划方法论，在确定逻辑关系时应考虑这些因素；</li>\n<li>有助于加快项目活动网络图编制的各种模板；模板中也会包括有助于排列活动顺序的，与活动属性有关的信息；</li>\n<li>经验教训知识库，其中包含有助于优化排序过程的历史信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-3-2-排列活动顺序：工具与技术\">6.3.2 排列活动顺序：工具与技术</h3>\n<p>排列活动顺序需要的工具和技术包括：</p>\n<ul>\n<li><strong>紧前关系绘图法</strong>：紧前关系绘图法（PDM）是创建进度模型的一种技术，用节点表示活动，用一种或多种逻辑关系连接活动，以显示活动的实施顺序。PDM 包括四种依赖关系或逻辑关系。紧前活动是在进度计划的逻辑路径中，排在某个活动前面的活动。紧后活动是在进度计划的逻辑路径中，排在某个活动后面的活动。\n<ul>\n<li><strong>完成到开始（FS）</strong>。只有紧前活动完成，紧后活动才能开始的逻辑关系。例如，只有完成装配PC 硬件（紧前活动），才能开始在 PC 上安装操作系统（紧后活动）。</li>\n<li><strong>完成到完成（FF）</strong>。只有紧前活动完成，紧后活动才能完成的逻辑关系。例如，只有完成文件的编写（紧前活动），才能完成文件的编辑（紧后活动）。</li>\n<li><strong>开始到开始（SS）</strong>。只有紧前活动开始，紧后活动才能开始的逻辑关系。例如，开始地基浇灌（紧前活动）之后，才能开始混凝土的找平（紧后活动）。</li>\n<li><strong>开始到完成（SF）</strong>。只有紧前活动开始，紧后活动才能完成的逻辑关系。例如，只有启动新的应付账款系统（紧前活动），才能关闭旧的应付账款系统（紧后活动）。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-8.png\" alt=\"\"></p>\n<ul>\n<li>\n<p><strong>确定和整合依赖关系</strong></p>\n<ul>\n<li><strong>强制性依赖关系</strong>。强制性依赖关系是法律或合同要求的或工作的内在性质决定的依赖关系，强制性依赖关系往往与客观限制有关。例如，在建筑项目中，只有在地基建成后，才能建立地面结构；在电子项目中，必须先把原型制造出来，然后才能对其进行测试。强制性依赖关系又称硬逻辑关系或硬依赖关系。技术性依赖关系并非都是强制性的。在活动排序过程中，项目团队应明确哪些关系是强制性依赖关系，不应把强制性依赖关系和进度计划编制工具中的进度制约因素相混淆。</li>\n<li><strong>选择性依赖关系</strong>。选择性依赖关系有时又称首选逻辑关系、优先逻辑关系或软逻辑关系。便还有其他依赖关系可用，选择性依赖关系应基于具体应用领域的最佳实践或项目的某些特殊性质对活动顺序的要求来创建。例如，根据普遍公认的最佳实践，在建筑施工期间，应该先完成给排水施工，再开始电气施工。 这个顺序并不是强制性的。虽然两项工作可以同时(并行)开展，但是按先后顺序开展可以降低整体项目风险。应该对选择性依赖关系进行全面记录，因为它们会影响总浮动时间，并限制后续的进度安排。如果打算进行快速跟进，则应当审查相应的选择性依赖关系，并考虑是否需要调整或去除。在排列活动顺序过程中，项目团队应明确哪些依赖关系属于选择性依赖关系。</li>\n<li><strong>外部依赖关系</strong>。外部依赖关系是项目活动与非项目活动之间的依赖关系，这些依赖关系往往不在项目团队的控制范围内。例如，软件项目的测试活动取决于外部硬件的到货；建筑项目的现场准备，可能要在政府的环境听证会之后才能开始。在排列活动顺序过程中，项目管理团队应明确哪些依赖关系属于外部依赖关系。</li>\n<li><strong>内部依赖关系</strong>。内部依赖关系是项目活动之间的紧前关系，通常在项目团队的控制之中。例如，只有机器组装完毕，团队才能对其测试，这是一个内部的强制性依赖关系。在排列活动顺序过程中，项目管理团队应明确哪些依赖关系属于内部依赖关系。</li>\n</ul>\n</li>\n<li>\n<p><strong>提前量和滞后量</strong></p>\n<ul>\n<li>提前量是相对于紧前活动，紧后活动可以提前的时间量。例如，在新办公大楼建设项目中，绿化施工可以在尾工清单编制完成前 2 周开始，这就是带 2 周提前量的完成到开始的关系，如图 6-10 所示。在进度计划软件中，提前量往往表示为负滞后量。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-9.png\" alt=\"\"></p>\n<ul>\n<li>滞后量是相对于紧前活动，紧后活动需要推迟的时间量。例如，对于一个大型技术文档，编写小组可以在编写工作开始后 15 天，开始编辑文档草案，这就是带 15 天滞后量的开始到开始关系，如图 6-10 所示。在图 6-11 的项目进度网络图中，活动 H 和活动 I 之间就有滞后量，表示为SS+10（带10 天滞后量的开始到开始关系），虽然图中并没有用精确的时间刻度来表示滞后的量值。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-10.png\" alt=\"\"></p>\n<ul>\n<li>项目管理信息系统</li>\n</ul>\n<h3 id=\"6-3-3-排列活动顺序：输出\">6.3.3 排列活动顺序：输出</h3>\n<p>排列活动顺序的输出包括：</p>\n<ul>\n<li>项目进度网络图：项目进度网络图是表示项目进度活动之间的逻辑关系（也叫依赖关系）的图形。项目进度网络图可手工或借助项目管理软件来绘制，可包括项目的全部细节，也可只列出一项或多项概括性活动。项目进度网络图应附有简要文字描述，说明活动排序所使用的基本方法。在文字描述中，还应该对任何异常的活动序列做详细说明。</li>\n<li>项目文件更新\n<ul>\n<li>活动属性</li>\n<li>活动清单</li>\n<li>假设日志</li>\n<li>里程碑清单</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-4-估算活动持续时间\">6.4 估算活动持续时间</h2>\n<p>估算活动持续时间是根据资源估算的结果，估算完成单项活动所需工作时段数的过程。本过程的主要作用是，确定完成每个活动所需花费的时间量。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-11.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-12.png\" alt=\"\"></p>\n<p><strong>估算活动持续时间依据的信息包括：工作范围、所需资源类型与技能水平、估算的资源数量和资源日历，而可能影响持续时间估算的其他因素包括对持续时间受到的约束、相关人力投入、资源类型（如固定持续时间、固定人力投入或工作、固定资源数量）以及所采用的进度网络分析技术</strong>。应该由项目团队中最熟悉具体活动的个人或小组提供持续时间估算所需的各种输入，对持续时间的估算也应该渐进明细，取决于输入数据的数量和质量。</p>\n<p>在本过程中，应该首先估算出完成活动所需的工作量和计划投入该活动的资源数量，然后结合项目日历和资源日历，据此估算出完成活动所需的工作时段数（活动持续时间）。在许多情况下，预计可用的资源数量以及这些资源的技能熟练程度可能会决定活动的持续时间，更改分配到活动的主导性资源通常会影响持续时间，但这不是简单的“直线”或线性关系。有时候，因为工作的特性（即受到持续时间的约束、相关人力投入或资源数量），无论资源分配如何（如 24 小时应力测试），都需要花预定的时间才能完成工作。估算持续时间时需要考虑的其他因素包括：</p>\n<ul>\n<li><strong>收益递减规律</strong>。在保持其他因素不变的情况下，增加一个用于确定单位产出所需投入的因素（如资源）会最终达到一个临界点，在该点之后的产出或输出会随着增加这个因素而递减。</li>\n<li><strong>资源数量</strong>。增加资源数量，使其达到初始数量的两倍不一定能缩短一半的时间，因为这样做可能会因风险而造成持续时间增加；在某些情况下，如果增加太多活动资源，可能会因知识传递、学习曲线、额外合作和其他相关因素而造成持续时间增加。</li>\n<li><strong>技术进步</strong>。在确定持续时间估算时，这个因素也可能发挥重要作用。例如，通过采购最新技术，制造工厂可以提高产量，而这可能会影响持续时间和资源需求。</li>\n<li><strong>员工激励</strong>。项目经理还需要了解“学生综合征”（即拖延症）和帕金森定律，前者指出，人们只有在最后一刻，即快到期限时才会全力以赴；后者指出，只要还有时间，工作就会不断扩展，直到用完所有的时间。<br>\n应该把活动持续时间估算所依据的全部数据与假设都记录在案。</li>\n</ul>\n<h3 id=\"6-4-1-估算活动持续时间：输入\">6.4.1 估算活动持续时间：输入</h3>\n<ul>\n<li>估算活动持续时间的输入包括：项目管理计划\n<ul>\n<li>进度管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>活动属性</li>\n<li>活动清单</li>\n<li>假设日志</li>\n<li>经验教训登记册</li>\n<li>里程碑清单</li>\n<li>项目团队派工单</li>\n<li>资源分解结构</li>\n<li>资源日历</li>\n<li>资源需求</li>\n<li>风险登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>持续时间估算数据库和其他参考数据</li>\n<li>生产率测量指标</li>\n<li>发布的商业信息</li>\n<li>团队成员的所在地</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>关于持续时间的历史信息</li>\n<li>项目日历</li>\n<li>估算政策</li>\n<li>进度规划方法论</li>\n<li>经验教训知识库</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-4-2-估算活动持续时间：工具与技术\">6.4.2 估算活动持续时间：工具与技术</h3>\n<p>估算活动持续时间需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>进度计划的编制、管理和控制</li>\n<li>有关估算的专业知识</li>\n<li>学科或应用知识</li>\n</ul>\n</li>\n<li><strong>类比估算</strong>：类比估算是一种使用相似活动或项目的历史数据，来估算当前活动或项目的持续时间或成本的技术。类比估算以过去类似项目的参数值（如持续时间、预算、规模、重量和复杂性等）为基础，来估算未来项目的同类参数或指标。</li>\n<li><strong>参数估算</strong>：参数估算是一种基于历史数据和项目参数，使用某种算法来计算成本或持续时间的估算技术。它是指利用历史数据之间的统计关系和其他变量（如建筑施工中的平方英尺），来估算诸如成本、预算和持续时间等活动参数。</li>\n<li><strong>三点估算</strong>：通过考虑估算中的不确定性和风险，可以提高持续时间估算的准确性。使用三点估算有助于界定活动持续时间的近似区间：\n<ul>\n<li><strong>最可能时间 ( tM)</strong>。基于最可能获得的资源、最可能取得的资源生产率、对资源可用时间的现实预计、资源对其他参与者的可能依赖关系及可能发生的各种干扰等，所估算的活动持续时间。</li>\n<li><strong>最乐观时间 (tO)</strong>。基于活动的最好情况所估算的活动持续时间。</li>\n<li><strong>最悲观时间 (tP)</strong>。基于活动的最差情况所估算的持续时间。</li>\n<li>基于持续时间在三种估算值区间内的假定分布情况，可计算期望持续时间 tE。一个常用公式为三角分布：tE = (tO + tM + tP) / 3。</li>\n</ul>\n</li>\n<li><strong>自下而上估算</strong>：自下而上估算是一种估算项目持续时间或成本的方法，通过从下到上逐层汇总 WBS 组成部分的估算而得到项目估算。如果无法以合理的可信度对活动持续时间进行估算，则应将活动中的工作进一步细化，然后估算具体的持续时间，接着再汇总这些持续时间估算，得到每个活动的持续时间。活动之间可能存在或不存在会影响资源利用的依赖关系；如果存在，就应该对相应的资源使用方式加以说明，并记录在活动资源需求中。</li>\n<li>数据分析\n<ul>\n<li><strong>备选方案分析</strong>：备选方案分析用于比较不同的资源能力或技能水平、进度压缩技术、不同工具（手动和自动），以及关于资源的创建、租赁或购买决策。这有助于团队权衡资源、成本和持续时间变量，以确定完成项目工作的最佳方式。</li>\n<li><strong>储备分析</strong>：储备分析用于确定项目所需的应急储备量和管理储备。在进行持续时间估算时，需考虑应急储备（有时称为“进度储备”），以应对进度方面的不确定性。应急储备是包含在进度基准中的一段持续时间，用来应对已经接受的已识别风险。应急储备与“已知 — 未知”风险相关，需要加以合理估算，用于完成未知的工作量。应急储备可取活动持续时间估算值的某一百分比或某一固定的时间段，亦可把应急储备从各个活动中剥离出来并汇总。随着项目信息越来越明确，可以动用、减少或取消应急储备，应该在项目进度文件中清楚地列出应急储备。也可以估算项目进度管理所需要的管理储备量。管理储备是为管理控制的目的而特别留出的项目预算，用来应对项目范围中不可预见的工作。管理储备用来应对会影响项目的“未知-未知”风险，它不包括在进度基准中，但属于项目总持续时间的一部分。依据合同条款，使用管理储备可能需要变更进度基准。</li>\n</ul>\n</li>\n<li>决策</li>\n<li>会议</li>\n</ul>\n<h3 id=\"6-4-3-估算活动持续时间：输出\">6.4.3 估算活动持续时间：输出</h3>\n<p>估算活动持续时间的输出包括：</p>\n<ul>\n<li>持续时间估算：持续时间估算是对完成某项活动、阶段或项目所需的工作时段数的定量评估，其中并不包括任何滞后量，但可指出一定的变动区间。</li>\n<li>估算依据：持续时间估算所需的支持信息的数量和种类，因应用领域而异。不论其详细程度如何，支持性文件都应该清晰、完整地说明持续时间估算是如何得出的。\n<ul>\n<li>关于估算依据的文件</li>\n<li>关于全部假设条件的文件</li>\n<li>关于各种已知制约因素的文件</li>\n<li>对估算区间的说明，以指出预期持续时间的所在区间</li>\n<li>对最终估算的置信水平的说明</li>\n<li>有关影响估算的单个项目风险的文件</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>活动属性</li>\n<li>假设日志</li>\n<li>经验教训登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-5-制定进度计划\">6.5 制定进度计划</h2>\n<p>制定进度计划是分析活动顺序、持续时间、资源需求和进度制约因素，创建进度模型，从而落实项目执行和监控的过程。本过程的主要作用是，为完成项目活动而制定具有计划日期的进度模型。本过程需要在整个项目活动期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-13.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-14.png\" alt=\"\"></p>\n<p>制定可行的项目进度计划是一个反复进行的过程。基于获取的最佳信息，使用进度模型来确定各项目活动和里程碑的计划开始日期和计划完成日期。编制进度计划时，需要审查和修正持续时间估算、资源估算和进度储备，以制定项目进度计划，并在经批准后作为基准用于跟踪项目进度。关键步骤包括定义项目里程碑、识别活动并排列活动顺序，以及估算持续时间。一旦活动的开始和完成日期得到确定，通常就需要由分配至各个活动的项目人员审查其被分配的活动。之后，项目人员确认开始和完成日期与资源日历没有冲突，也与其他项目或任务没有冲突，从而确认计划日期的有效性。然后要分析进度计划，确定是否存在逻辑关系冲突，以及在批准进度计划并将其作为基准之前是否需要资源平衡。还需要在整个项目期间不断修订和维护项目进度模型，确保进度计划一直切实可行。</p>\n<h3 id=\"6-5-1-制定进度计划：输入\">6.5.1 制定进度计划：输入</h3>\n<p>制定进度计划的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>进度管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>活动属性</li>\n<li>活动清单</li>\n<li>假设日志</li>\n<li>估算依据</li>\n<li>持续时间估算</li>\n<li>经验教训</li>\n<li>里程碑清单</li>\n<li>项目进度网络图</li>\n<li>项目团队派工单</li>\n<li>资源日历</li>\n<li>资源需求</li>\n<li>风险登记册</li>\n</ul>\n</li>\n<li>协议</li>\n<li>事业环境因素\n<ul>\n<li>政府或行业标准</li>\n<li>沟通渠道</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>进度计划方法论</li>\n<li>项目日历</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-5-2-制定进度计划：工具与技术\">6.5.2 制定进度计划：工具与技术</h3>\n<p>制定进度计划需要的工具与技术包括：</p>\n<ul>\n<li><strong>进度网络分析</strong>：进度网络分析是创建项目进度模型的一种综合技术。</li>\n<li><strong>关键路径法</strong>：关键路径法用于在进度模型中估算项目最短工期，确定逻辑网络路径的进度灵活性大小。这种进度网络分析技术在不考虑任何资源限制的情况下，沿进度网络路径使用顺推与逆推法，计算出所有活动的最早开始、最早结束、最晚开始和最晚法完成日期</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-15.png\" alt=\"\"></p>\n<ul>\n<li>资源优化：资源优化用于调整活动的开始和完成日期，以调整计划使用的资源，使其等于或少于可用的资源。资源优化技术是根据资源供需情况，来调整进度模型的技术。\n<ul>\n<li>资源平衡：为了在资源需求与资源供给之间取得平衡，根据资源制约因素对开始日期和完成日期进行调整的一种技术。</li>\n<li>资源平滑：对进度模型中的活动进行调整，从而使项目资源需求不超过预定的资源限制的一种技术。相对于资源平衡而言，资源平滑不会改变项目关键路径，完工日期也不会延迟。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-16.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>数据分析</p>\n<ul>\n<li>假设情景分析</li>\n<li>模拟：模拟是把单个项目风险和不确定性的其他来源模型化，以评估它们对项目目标的潜在影响。最常见的模拟技术是蒙特卡罗分析，它利用风险和其他不确定性来源计算整个项目可能的进度结果。</li>\n</ul>\n</li>\n<li>\n<p>提前量和滞后量</p>\n</li>\n<li>\n<p>进度压缩</p>\n<ul>\n<li>\n<p>赶工</p>\n</li>\n<li>\n<p>快速跟进</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-17.png\" alt=\"\"></p>\n</li>\n</ul>\n</li>\n<li>\n<p>项目管理信息系统</p>\n</li>\n<li>\n<p>敏捷发布规划：敏捷发布规划基于项目路线图和产品发展愿景，提供了高度概括的发布进度时间轴（通常是 3 到 6个月）。同时，敏捷发布规划还确定了发布的迭代或冲刺次数，使产品负责人和团队能够决定需要开发的内容，并基于业务目标、依赖关系和障碍因素确定达到产品放行所需的时间。</p>\n</li>\n</ul>\n<h3 id=\"6-5-3-制定进度计划：输出\">6.5.3 制定进度计划：输出</h3>\n<p>制定进度计划的输出包括：</p>\n<ul>\n<li><strong>进度基准</strong>：进度基准是经过批准的进度模型，只有通过正式的变更控制程序才能进行变更，用作与实际结果进行比较的依据。经相关方接受和批准，进度基准包含基准开始日期和基准结束日期。在监控过程中，将用实际开始和完成日期与批准的基准日期进行比较，以确定是否存在偏差。进度基准是项目管理计划的组成部分。</li>\n<li><strong>项目进度计划</strong>\n<ul>\n<li>横道图（甘特图）</li>\n<li>里程碑图</li>\n<li>项目进度网络图</li>\n</ul>\n</li>\n<li><strong>进度数据</strong>：项目进度模型中的进度数据是用以描述和控制进度计划的信息集合。进度数据至少包括进度里程碑、进度活动、活动属性，以及已知的全部假设条件与制约因素，而所需的其他数据因应用领域而异。</li>\n<li>项目日历</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>进度管理计划</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>活动属性</li>\n<li>假设日志</li>\n<li>持续时间估算</li>\n<li>经验教训登记册</li>\n<li>资源需求</li>\n<li>风险登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-6-控制进度\">6.6 控制进度</h2>\n<p>控制进度是监督项目状态，以更新项目进度和管理进度基准变更的过程。本过程的主要作用是在整个项目期间保持对进度基准的维护，且需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-18.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-19.png\" alt=\"\"></p>\n<p>控制进度作为实施整体变更控制过程的一部分，关注如下内容：</p>\n<ul>\n<li>判断项目进度的当前状态；</li>\n<li>对引起进度变更的因素施加影响；</li>\n<li>重新考虑必要的进度储备；</li>\n<li>判断项目进度是否已经发生变更；</li>\n<li>在变更实际发生时对其进行管理。</li>\n</ul>\n<p>如果采用敏捷方法，控制进度要关注如下内容：</p>\n<ul>\n<li>通过比较上一个时间周期中已交付并验收的工作总量与已完成的工作估算值，来判断项目进度的当前状态；</li>\n<li>实施回顾性审查（定期审查，记录经验教训），以便纠正与改进过程（如果需要的话）；</li>\n<li>对剩余工作计划（未完项）重新进行优先级排序；</li>\n<li>确定在每段既定的迭代时间（约定的工作周期持续时间，通常是两周或一个月）内可交付成果的生成、核实和验收的速度；</li>\n<li>确定项目进度已经发生变更；</li>\n<li>在变更实际发生时对其进行管理。<br>\n将工作外包时，定期向承包商和供应商了解里程碑的状态更新是确保工作按商定进度计划进行的一种途径，有助于确保进度受控。同时，应执行进度状态评审和巡检，确保承包商报告准确且完整。</li>\n</ul>\n<h3 id=\"6-6-1-控制进度：输入\">6.6.1 控制进度：输入</h3>\n<p>控制进度的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>进度管理计划</li>\n<li>进度基准</li>\n<li>范围基准</li>\n<li>绩效测量基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>项目日历</li>\n<li>项目进度计划</li>\n<li>资源日历</li>\n<li>进度数据</li>\n</ul>\n</li>\n<li>工作绩效数据</li>\n<li>组织过程资产\n<ul>\n<li>现有与进度控制有关的正式和非正式的政策、程序和指南</li>\n<li>进度控制工具</li>\n<li>可用的监督和报告方法</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-6-2-控制进度：工具与技术\">6.6.2 控制进度：工具与技术</h3>\n<p>控制进度需要的工具与技术包括：</p>\n<ul>\n<li>\n<p>数据分析</p>\n<ul>\n<li>挣值分析</li>\n<li>迭代燃尽图：这类图用于追踪迭代未完项中尚待完成的工作。它基于迭代规划中确定的工作，分析与理想燃尽图的偏差。可使用预测趋势线来预测迭代结束时可能出现的偏差，并据此在迭代期间采取合理行动。在燃尽图中，先用对角线表示理想的燃尽情况，再每天画出实际剩余工作，最后基于剩余工作计算出趋势线以预测完成情况。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174641-20.png\" alt=\"\"></p>\n<ul>\n<li>绩效审查</li>\n<li>趋势分析</li>\n<li>偏差分析</li>\n<li>假设情景分析</li>\n</ul>\n</li>\n<li>\n<p>关键路径法</p>\n</li>\n<li>\n<p>项目管理信息系统</p>\n</li>\n<li>\n<p>资源优化</p>\n</li>\n<li>\n<p>提前量和滞后量</p>\n</li>\n<li>\n<p>进度压缩</p>\n</li>\n</ul>\n<h3 id=\"6-6-3-控制进度：输出\">6.6.3 控制进度：输出</h3>\n<p>控制进度的输出包括：</p>\n<ul>\n<li>工作绩效信息</li>\n<li>进度预测：进度更新即进度预测，指根据已有的信息和知识，对项目未来的情况和事件进行的估算或预计。随着项目执行，应该基于工作绩效信息，更新和重新发布预测。</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>进度管理计划</li>\n<li>进度基准</li>\n<li>成本基准</li>\n<li>绩效测量基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>估算依据</li>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>资源日历</li>\n<li>风险登记册</li>\n<li>进度数据</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"7-项目成本管理\">7.项目成本管理</h2>\n<p>项目成本管理包括为使项目在批准的预算内完成而对成本进行规划、估算、预算、融资、筹资、管理和控制的各个过程，从而确保项目在批准的预算内完工。项目成本管理过程包括：</p>\n<p><strong>7.1 规划成本管理</strong> — 确定如何估算、预算、管理、监督和控制项目成本的过程。</p>\n<p><strong>7.2 估算成本</strong> — 对完成项目活动所需货币资源进行近似估算的过程。</p>\n<p><strong>7.3 制定预算</strong> — 汇总所有单个活动或工作包的估算成本，建立一个经批准的成本基准的过程。</p>\n<p><strong>7.4 控制成本</strong> — 监督项目状态，以更新项目成本和管理成本基准变更的过程。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174804.png\" alt=\"\"></p>\n<p><strong>项目成本管理的核心概念</strong></p>\n<p><strong>项目成本管理重点关注完成项目活动所需资源的成本，但同时也应考虑项目决策对项目产品、服务或成果的使用成本、维护成本和支持成本的影响</strong>。例如，限制设计审查的次数可降低项目成本，但可能增加由此带来的产品运营成本。</p>\n<p>成本管理的另一个方面是认识到不同的相关方会在不同的时间，用不同的方法测算项目成本。例如，对于某采购品，可在做出采购决策、下达订单、实际交货、实际成本发生或进行项目会计记账时，测算其成本。在很多组织中，预测和分析项目产品的财务效益是在项目之外进行的，但对于有些项目，如固定资产投资项目，可在项目成本管理中进行这项预测和分析工作。在这种情况下，项目成本管理还需使用其他过程和许多通用财务管理技术，如投资回报率分析、现金流贴现分析和投资回收期分析等。</p>\n<p><strong>裁剪考虑因素</strong></p>\n<p>由于每个项目都是独特的，项目经理因此可能需要裁剪项目成本管理过程。裁剪时应考虑的因素包括（但不限于）：</p>\n<ul>\n<li><strong>知识管理</strong>。组织是否拥有易于使用的、正式的知识管理体系和财务数据库，并要求项目经理使用</li>\n<li><strong>估算和预算</strong>。组织是否拥有正式或非正式的，与成本估算和预算相关的政策、程序和指南</li>\n<li><strong>挣值管理</strong>。组织是否采用挣值管理来管理项目</li>\n<li><strong>敏捷方法的使用</strong>。组织是否采用敏捷方法管理项目？这对成本估算有什么影响</li>\n<li><strong>治理</strong>。组织是否拥有正式或非正式的审计和治理政策、程序和指南</li>\n</ul>\n<p><strong>关于敏捷/适应型环境的考虑因素</strong></p>\n<p>对易变性高、范围并未完全明确、经常发生变更的项目，详细的成本计算可能没有多大帮助。在这种情况下，可以采用轻量级估算方法快速生成对项目人力成本的高层级预测，在出现变更时容易调整预测；而详细的估算适用于采用准时制的短期规划。</p>\n<p>如果易变的项目也遵循严格的预算，通常需要更频繁地更改范围和进度计划，以始终保持在成本制约因素之内。</p>\n<h2 id=\"7-1-规划成本管理\">7.1 规划成本管理</h2>\n<p>规划成本管理是确定如何估算、预算、管理、监督和控制项目的过程。本过程的主要作用是，在整个项目期间为如何管理项目成本提供指南和方向。本过程仅开展一次或仅在项目的预定义点开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174804-1.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174804-2.png\" alt=\"\"></p>\n<p>应该在项目规划阶段的早期就对成本管理工作进行规划，建立各成本管理过程的基本框架，以确保各过程的有效性和协调性。</p>\n<h3 id=\"7-1-1-规划成本管理：输入\">7.1.1 规划成本管理：输入</h3>\n<p>规划成本管理的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划\n<ul>\n<li>进度管理计划</li>\n<li>风险管理计划</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>能够影响成本管理的组织文化和组织结构</li>\n<li>市场条件，决定着在当地及全球市场上可获取哪些产品、服务和成果</li>\n<li>货币汇率，用于换算发生在多个国家的项目成本</li>\n<li>发布的商业信息</li>\n<li>项目管理信息系统</li>\n<li>不同地区的生产率差异</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>财务控制程序</li>\n<li>历史信息和经验教训知识库</li>\n<li>财务数据库</li>\n<li>现有的正式和非正式的与成本估算和预算有关的政策、程序和指南</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"7-1-2-规划成本管理：工具与技术\">7.1.2 规划成本管理：工具与技术</h3>\n<p>规划成本管理需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>以往类似项目</li>\n<li>来自行业、学科和应用领域的信息</li>\n<li>成本估算和预算</li>\n<li>挣值管理</li>\n</ul>\n</li>\n<li>数据分析</li>\n<li>会议</li>\n</ul>\n<h3 id=\"7-1-3-规划成本管理：输出\">7.1.3 规划成本管理：输出</h3>\n<p>规划成本管理的输出包括：</p>\n<ul>\n<li><strong>成本管理计划</strong>：成本管理计划是项目管理计划的组成部分，描述将如何规划、安排和控制项目成本。成本管理过程及其工具与技术应记录在成本管理计划中。例如，在成本管理计划中规定：\n<ul>\n<li><strong>计量单位</strong>。需要规定每种资源的计量单位，例如用于测量时间的人时数、人天数或周数，用于计量数量的米、升、吨、千米或立方码，或者用货币表示的总价。</li>\n<li><strong>精确度</strong>。根据活动范围和项目规模，设定成本估算向上或向下取整的程度（例如 995.59 美元取整为 1,000 美元）。</li>\n<li><strong>准确度</strong>。为活动成本估算规定一个可接受的区间（如 ±10%），其中可能包括一定数量的应急储备。</li>\n<li><strong>组织程序链接</strong>。工作分解结构（见 5.4 节）为成本管理计划提供了框架，以便据此规范地开展</li>\n<li><strong>成本估算、预算和控制</strong>。在项目成本核算中使用的 WBS 组成部分，称为控制账户（CA），每个控制账户都有唯一的编码或账号，直接与执行组织的会计制度相联系。</li>\n<li><strong>控制临界值</strong>。可能需要规定偏差临界值，用于监督成本绩效。它是在需要采取某种措施前，允许出现的最大差异，通常用偏离基准计划的百分数来表示。</li>\n<li><strong>绩效测量规则</strong>。需要规定用于绩效测量的挣值管理（EVM）规则。例如，成本管理计划应该：\n<ul>\n<li>定义 WBS 中用于绩效测量的控制账户；</li>\n<li>确定拟用的 EVM 技术（如加权里程碑法、固定公式法、完成百分比法等）；</li>\n<li>规定跟踪方法，以及用于计算项目完工估算（EAC）的 EVM 公式，该公式计算出的结果可用于验证通过自下而上方法得出的完工估算。</li>\n</ul>\n</li>\n<li>报告格式。需要规定各种成本报告的格式和编制频率。</li>\n<li>其他细节。关于成本管理活动的其他细节包括（但不限于）：\n<ul>\n<li>对战略筹资方案的说明；</li>\n<li>处理汇率波动的程序；</li>\n<li>记录项目成本的程序。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"7-2-估算成本\">7.2 估算成本</h2>\n<p>估算成本是对完成项目工作所需资源成本进行近似估算的过程。本过程的主要作用是，确定项目所需的资金。本过程应根据需要在整个项目期间定期开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174804-3.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174804-4.png\" alt=\"\"></p>\n<p>成本估算是对完成活动所需资源的可能成本的量化评估，是在某特定时点，根据已知信息所做出的成本预测。在估算成本时，需要识别和分析可用于启动与完成项目的备选成本方案；需要权衡备选成本方案并考虑风险，如比较自制成本与外购成本、购买成本与租赁成本及多种资源共享方案，以优化项目成本。</p>\n<p>通常用某种货币单位（如美元、欧元、日元等）进行成本估算，但有时也可采用其他计量单位，如人时数或人天数，以消除通货膨胀的影响，便于成本比较。</p>\n<h3 id=\"7-2-1-估算成本：输入\">7.2.1 估算成本：输入</h3>\n<p>估算成本的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>成本管理计划</li>\n<li>质量管理计划</li>\n<li>范围基准\n<ul>\n<li>项目范围说明书</li>\n<li>工作分解结构</li>\n<li>WBS词典</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>资源需求</li>\n<li>风险登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>市场条件</li>\n<li>发布的商业信息</li>\n<li>汇率和通货膨胀率</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>成本估算政策</li>\n<li>成本估算模板</li>\n<li>历史信息和经验教训知识库</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"7-2-2-估算成本：工具与技术\">7.2.2 估算成本：工具与技术</h3>\n<p>估算成本需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>以往类似项目</li>\n<li>来自行业、学科和应用领域的信息</li>\n<li>成本估算方法</li>\n</ul>\n</li>\n<li>类比估算</li>\n<li>参数估算</li>\n<li>自下而上估算</li>\n<li>三点估算\n<ul>\n<li><strong>最可能成本（cM）</strong>。对所需进行的工作和相关费用进行比较现实的估算，所得到的活动成本。</li>\n<li><strong>最乐观成本（cO）</strong>。基于活动的最好情况所得到的成本。</li>\n<li><strong>最悲观成本（cP）</strong>。基于活动的最差情况所得到的成本。</li>\n<li><strong>三角分布</strong>。cE = (cO + cM + cP) / 3</li>\n<li><strong>贝塔分布</strong>。cE = (cO + 4cM + cP) / 6</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>备选方案分析</li>\n<li>储备分析：为应对成本的不确定性，成本估算中可以包括应急储备（有时称为“应急费用”）。应急储备是包含在成本基准内的一部分预算，用来应对已识别的风险；应急储备往往被看作预算中用来应对会影响项目的“已 知 — 未知”风险的那一部分。</li>\n<li>质量成本</li>\n</ul>\n</li>\n<li>项目管理信息系统</li>\n<li>决策</li>\n</ul>\n<h3 id=\"7-2-3-估算成本：输出\">7.2.3 估算成本：输出</h3>\n<p>估算成本的输出包括：</p>\n<ul>\n<li>成本估算：成本估算包括对完成项目工作可能需要的成本、应对已识别风险的应急储备，以及应对计划外工作的管理储备的量化估算。</li>\n<li>估算依据\n<ul>\n<li>关于估算依据的文件（如估算是如何编制的）；</li>\n<li>关于全部假设条件的文件；</li>\n<li>关于各种已知制约因素的文件；</li>\n<li>有关已识别的、在估算成本时应考虑的风险的文件；</li>\n<li>对估算区间的说明（如“10,000美元 ±10%”就说明了预期成本的所在区间）；</li>\n<li>对最终估算的置信水平的说明。</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"7-3-制定预算\">7.3 制定预算</h2>\n<p>制定预算是汇总所有单个活动或工作包的估算成本，建立一个经批准的成本基准的过程。本过程的主要作用是，确定可据以监督和控制项目绩效的成本基准。本过程仅开展一次或仅在项目的预定义点开展。</p>\n<p>项目预算包括经批准用于执行项目的全部资金，而成本基准是经过批准且按时间段分配的项目语速那，包括应急储备，但不包括管理储备。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174804-5.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174804-6.png\" alt=\"\"></p>\n<h3 id=\"7-3-1-制定预算：输入\">7.3.1 制定预算：输入</h3>\n<p>制定预算的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>成本管理计划</li>\n<li>资源管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>估算依据</li>\n<li>成本估算</li>\n<li>项目进度计划</li>\n<li>风险登记册</li>\n</ul>\n</li>\n<li>商业文件\n<ul>\n<li>商业论证</li>\n<li>效益管理计划</li>\n</ul>\n</li>\n<li>协议</li>\n<li>事业环境因素</li>\n<li>组织过程资产\n<ul>\n<li>现有的正式和非正式的与成本预算有关的政策、程序和指南</li>\n<li>历史信息和经验教训知识库</li>\n<li>成本预算工具</li>\n<li>报告方法</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"7-3-2-制定预算：工具与技术\">7.3.2 制定预算：工具与技术</h3>\n<p>制定预算需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>以往类似项目</li>\n<li>来自行业、学科和应用领域的信息</li>\n<li>财务原则</li>\n<li>黄金需求和来源</li>\n</ul>\n</li>\n<li>成本汇总</li>\n<li>数据分析</li>\n<li>历史信息审核：审核历史信息有助于进行参数估算或类比估算。历史信息可包括各种项目特征（参数），它们用于建立数学模型预测项目总成本。</li>\n<li>资金限制平衡</li>\n<li>融资</li>\n</ul>\n<h3 id=\"7-3-3-制定预算：输出\">7.3.3 制定预算：输出</h3>\n<p>制定预算的输出包括：</p>\n<ul>\n<li>\n<p>成本基准</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174804-7.png\" alt=\"\"></p>\n</li>\n<li>\n<p>项目资金需求</p>\n</li>\n<li>\n<p>项目文件更新</p>\n<ul>\n<li>成本估算</li>\n<li>项目进度计划</li>\n<li>风险登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"7-4-控制成本\">7.4 控制成本</h2>\n<p>控制成本是监督项目状态，以更新项目成本和管理成本基准变更的过程。本过程的主要作用是，在整个项目期间保持对成本基准的维护。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174804-8.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174804-9.png\" alt=\"\"></p>\n<p>项目成本控制包括：</p>\n<ul>\n<li>对造成成本基准变更的因素施加影响；</li>\n<li>确保所有变更请求都得到及时处理；</li>\n<li>更实际发生时，管理这些变更；</li>\n<li>确保成本支出不超过批准的资金限额，既不超出按时段、按 WBS 组件、按活动分配的限额，也不超出项目总限额；</li>\n<li>监督成本绩效，找出并分析与成本基准间的偏差；</li>\n<li>对照资金支出，监督工作绩效；</li>\n<li>防止在成本或资源使用报告中出现未经批准的变更；</li>\n<li>向相关方报告所有经批准的变更及其相关成本；</li>\n<li>设法把预期的成本超支控制在可接受的范围内。</li>\n</ul>\n<h3 id=\"7-4-1-控制成本：输入\">7.4.1 控制成本：输入</h3>\n<p>控制成本的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>成本管理计划</li>\n<li>成本基准</li>\n<li>绩效测量基准</li>\n</ul>\n</li>\n<li>项目文件</li>\n<li>项目资金需求</li>\n<li>工作绩效数据</li>\n<li>组织过程资产\n<ul>\n<li>现有的正式的和非正式的与成本控制相关的政策、程序和指南</li>\n<li>成本控制工具</li>\n<li>可用的监督和报告方法</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"7-4-2-控制成本：工具与技术\">7.4.2 控制成本：工具与技术</h3>\n<p>控制成本需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>偏差分析</li>\n<li>挣值分析</li>\n<li>预测</li>\n<li>财务分析</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>\n<p>挣值分析</p>\n<ul>\n<li><strong>计划价值</strong>。计划价值（PV）是为计划工作分配的经批准的预算，它是为完成某活动或工作分解结构 (WBS) 组成部分而准备的一份经批准的预算，不包括管理储备。应该把该预算分配至项目生命周期的各个阶段；在某个给定的时间点，计划价值代表着应该已经完成的工作。PV的总和有时被称为绩效测量基准（PMB），项目的总计划价值又被称为完工预算（BAC）。</li>\n<li><strong>挣值</strong>。挣值（EV）是对已完成工作的测量值，用该工作的批准预算来表示，是已完成工作的经批准的预算。EV 的计算应该与 PMB 相对应，且所得的 EV 值不得大于相应组件的 PV 总预算。EV 常用于计算项目的完成百分比，应该为每个 WBS 组件规定进展测量准则，用于考核正在实施的工作。项目经理既要监测 EV 的增量，以判断当前的状态，又要监测 EV 的累计值，以判断长期的绩效趋势。</li>\n<li><strong>实际成</strong>本。实际成本（AC）是在给定时段内，执行某活动而实际发生的成本，是为完成与 EV相对应的工作而发生的总成本。AC 的计算方法必须与 PV 和 EV 的计算方法保持一致（例如，都只计算直接小时数，都只计算直接成本，或都计算包含间接成本在内的全部成本）。AC 没有上限，为实现 EV 所花费的任何成本都要计算进去。</li>\n</ul>\n</li>\n<li>\n<p>偏差分析：在 EVM 中，偏差分析用以解释成本偏差（CV = EV – AC）、进度偏差（SV = EV – PV）和完工偏差（VAC = BAC – EAC）的原因、影响和纠正措施。成本和进度偏差是最需要分析的两种偏差。对于不使用正规挣值分析的项目，可开展类似的偏差分析，通过比较计划成本和实际成本，来识别成本基准与实际项目绩效之间的差异；然后可以实施进一步的分析，以判定偏离进度基准的原因和程度，并决定是否需要采取纠正或预防措施。可通过成本绩效测量来评价偏离原始成本基准的程度。</p>\n<ul>\n<li><strong>进度偏差</strong>。进度偏差（SV）是测量进度绩效的一种指标，表示为挣值与计划价值之差。它是指在某个给定的时点，项目提前或落后的进度，它是测量项目进度绩效的一种指标，等于挣值（EV）减去计划价值（PV）。EVA 进度偏差是一种有用的指标，可表明项目进度是落后还是提前于进度基准。当项目完工时，全部的计划价值都将实现（即成为挣值），所以 EVA 进度偏差最终将等于零。最好把进度偏差与关键路径法 (CPM) 和风险管理一起使用。公式：SV = EV – PV。</li>\n<li><strong>成本偏差</strong>。成本偏差（CV）是在某个给定时点的预算亏空或盈余量，表示为挣值与实际成本之差。它是测量项目成本绩效的一种指标，等于挣值（EV）减去实际成本（AC）。项目结束时的成本偏差，就是完工预算（BAC）与实际成本之间的差值。由于成本偏差指明了实际绩效与成本支出之间的关系，所以非常重要。负的 CV 一般都是难以挽回的。公式：CV = EV – AC。</li>\n<li><strong>进度绩效指数</strong>。进度绩效指数（SPI）是测量进度效率的一种指标，表示为挣值与计划价值之比，反映了项目团队完成工作的效率。有时与成本绩效指数（CPI）一起使用，以预测项目的最终完工估算。当 SPI 小于 1.0 时，说明已完成的工作量未达到计划要求；当 SPI 大于1.0 时，则说明已完成的工作量超过计划。由于 SPI 测量的是项目的总工作量，所以还需要对关键路径上的绩效进行单独分析，以确认项目是否将比计划完成日期提前或推迟完工。SPI等于 EV 与 PV 的比值。公式：SPI = EV/PV。</li>\n<li><strong>成本绩效指数</strong>。成本绩效指数（CPI）是测量预算资源的成本效率的一种指标，表示为挣值与实际成本之比。它是最关键的 EVA 指标，用来测量已完成工作的成本效率。当 CPI 小于 1.0时，说明已完成工作的成本超支；当 CPI 大于 1.0 时，则说明到目前为止成本有结余。CPI 等于 EV 与 AC 的比值。公式：CPI = EV/AC。</li>\n</ul>\n</li>\n<li>\n<p>趋势分析：趋势分析旨在审查项目绩效随时间的变化情况，以判断绩效是正在改善还是正在恶化。图形分析技术有助于了解截至目前的绩效情况，并把发展趋势与未来的绩效目标进行比较，如 BAC 与EAC、预测完工日期与计划完工日期的比较。</p>\n<ul>\n<li><strong>图表</strong>。在挣值分析中，对计划价值、挣值和实际成本这三个参数，既可以分阶段（通常以周或月为单位）进行监督和报告，也可以针对累计值进行监督和报告。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174804-10.png\" alt=\"\"></p>\n<ul>\n<li><strong>预测</strong>。随着项目进展，项目团队可根据项目绩效，对完工估算（EAC）进行预测，预测的结果可能与完工预算（BAC）存在差异。如果 BAC 已明显不再可行，则项目经理应考虑对EAC进行预测。预测EAC是根据当前掌握的绩效信息和其他知识，预计项目未来的情况和事件。预测要根据项目执行过程中所提供的工作绩效数据（见 4.3.3.2 节）来产生、更新和重新发布。工作绩效信息包含项目过去的绩效，以及可能在未来对项目产生影响的任何信息。在计算 EAC 时，通常用已完成工作的实际成本，加上剩余工作的完工尚需估算（ETC）。项目团队要根据已有的经验，考虑实施 ETC 工作可能遇到的各种情况。把挣值分析与手工预测 EAC 方法联合起来使用，效果会更佳。由项目经理和项目团队手工进行的自下而上汇总方法，就是一种最普通的 EAC 预测方法。项目经理所进行的自下而上的 EAC 估算，就是以已完成工作的实际成本为基础，并根据已积累的经验来为剩余项目工作编制一个新估算。公式：EAC = AC + 自下而上的 ETC。\n<ul>\n<li><strong>假设将按预算单价完成 ETC 工作</strong>。这种方法承认以实际成本表示的累计实际项目绩效（不论好坏），并预计未来的全部 ETC 工作都将按预算单价完成。如果目前的实际绩效不好，则只有在进行项目风险分析并取得有力证据后，才能做出“未来绩效将会改进”的假设。公式：EAC = AC +（BAC – EV）。</li>\n<li><strong>假设以当前 CPI 完成 ETC 工作</strong>。这种方法假设项目将按截至目前的情况继续进行，即 ETC工作将按项目截至目前的累计成本绩效指数（CPI）实施。公式：EAC = BAC/CPI。</li>\n<li><strong>假设 SPI 与 CPI 将同时影响 ETC 工作</strong>。在这种预测中，需要计算一个由成本绩效指数与进度绩效指数综合决定的效率指标，并假设 ETC 工作将按该效率指标完成。如果项目进度对 ETC 有重要影响，这种方法最有效。使用这种方法时，还可以根据项目经理的判断，分别给 CPI 和 SPI 赋予不同的权重，如 80/20、50/50 或其他比率。公式：EAC =AC +［（BAC – EV）/（CPI x SPI）］。</li>\n</ul>\n</li>\n<li>储备分析：在控制成本过程中，可以采用储备分析来监督项目中应急储备和管理储备的使用情况，从而判断是否还需要这些储备，或者是否需要增加额外的储备。随着项目工作的进展，这些储备可能已按计划用于支付风险或其他应急情况的成本；反之，如果抓住机会节约了成本，节约下来的资金可能会增加到应急储备中，或作为盈利（利润）从项目中剥离。</li>\n</ul>\n</li>\n<li>\n<p>项目管理信息系统</p>\n</li>\n<li>\n<p>完工尚需绩效指数</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>完工尚需绩效指数(TCPI)</strong> 是一种为了实现特定的管理目标，剩余资源的使用必须达到的成本绩效指标，是完成剩余工作所需的成本与剩余预算之比。TCPI 是指为了实现具体的管理目标（如BAC 或 EAC），剩余工作的实施必须达到的成本绩效指标。如果 BAC 已明显不再可行，则项目经理应考虑使用预测的 EAC。经过批准后，就用 EAC 取代 BAC。基于 BAC 的 TCPI 公式：TCPI =（BAC –EV）/（BAC – AC）。</p>\n<p>TCPI 的概念可用图 7-13 表示。其计算公式在图的左下角，用剩余工作（BAC 减去 EV）除以剩余资金（可以是 BAC 减去 AC，或 EAC 减去 AC）。</p>\n<p>如果累计 CPI 低于基准（如图 7-13 所示），那么项目的全部剩余工作都应立即按TCPI（BAC）（图7-13 中最高的那条线）执行，才能确保实际总成本不超过批准的 BAC。至于所要求的这种绩效水平是否可行，就需要综合考虑多种因素（包括风险、项目剩余时间和技术绩效）后才能判断；如果不可行，就需要把项目未来所需的绩效水平调整为如 TCPI（EAC）线所示。基于 EAC 的 TCPI 公式：TCPI =（BAC – EV）/（EAC – AC）。表 7-1 列出了 EVM 的计算公式。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174804-11.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417174804-12.png\" alt=\"\"></p>\n<h3 id=\"7-4-3-控制成本：输出\">7.4.3 控制成本：输出</h3>\n<p>控制成本的输出包括：</p>\n<ul>\n<li>工作绩效信息</li>\n<li>成本预测</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>成本管理计划</li>\n<li>成本基准</li>\n<li>绩效测量基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>估算依据</li>\n<li>成本估算</li>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"8-项目质量管理\">8.项目质量管理</h2>\n<p>项目质量管理包括把组织的质量政策应用于规划、管理、控制项目和产品质量要求，以满足相关方目标的各个过程。此外，项目质量管理以执行组织的名义支持过程的持续改进。</p>\n<p>项目质量管理过程包括：</p>\n<p><strong>8.1 规划质量管理</strong> — 识别项目及其可交付成果的质量要求和/或标准，并书面描述项目将如何证明符合质量要求和/或标准的过程。</p>\n<p><strong>8.2 管理质量</strong> — 把组织的质量政策应用于项目，并将质量管理计划转化为可执行的质量活动的过程。</p>\n<p><strong>8.3 控制质量</strong> — 为了评估绩效，确保项目输出完整、正确，并满足客户期望，而监督和记录质量管理活动执行结果的过程。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417175001.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417175001-1.png\" alt=\"\"></p>\n<p><strong>项目质量管理的核心概念</strong></p>\n<p>项目质量管理需要兼顾项目管理和项目可交付成果两个方面，它适用于所有项目，无论项目的可交付成果具有何种特性。质量的测量方法和技术则需专门针对项目所产生的可交付成果类型而定。</p>\n<p>“质量”和“等级”不是相同的概念。质量作为实现的性能或成果，是“一系列内在特性满足要求的程度”。等级作为设计意图，是对用途相同但技术特性不同的交付成果的级别分类。质量水平未达到质量要求肯定是个问题，而低等级产品不一定是个问题。</p>\n<p>预防胜于检查。最好将质量设计到可交付成果中，而不是在检查时发现质量问题。预防错误的成本通常远低于在检查或使用中发现并纠正错误的成本。</p>\n<p>按有效性递增排列的五种质量管理水平如下：</p>\n<ul>\n<li>通常，代价最大的方法是让客户发现缺陷。这种方法可能会导致担保问题、召回、商誉受损和返工成本。</li>\n<li>控制质量过程包括先检测和纠正缺陷，再将可交付成果发送给客户。该过程会带来相关成本，主要是评估成本和内部失败成本。</li>\n<li>通过质量保证检查并纠正过程本身，而不仅仅是特殊缺陷。</li>\n<li>将质量融入项目和产品的规划和设计中。</li>\n<li>在整个组织内创建一种关注并致力于实现过程和产品质量的文化。</li>\n</ul>\n<p><strong>项目质量管理的趋势和新兴实践</strong></p>\n<p>现代质量管理方法力求缩小偏差，交付满足既定相关方要求的成果。项目质量管理的趋势包括（但不限于）：</p>\n<ul>\n<li><strong>客户满意</strong>。了解、评估、定义和管理要求，以便满足客户的期望。这就需要把“符合要求”（确保项目产出预定的成果）和“适合使用”（产品或服务必须满足实际需求）结合起来。在敏捷环境中，应该让相关方参与团队工作，确保在整个项目期间始终做到客户满意。</li>\n<li><strong>持续改进</strong>。由休哈特提出并经戴明完善的“计划 — 实施 — 检查 — 行动 (PDCA)”循环是质量改进的基础。另外，诸如全面质量管理（TQM）、六西格玛和精益六西格玛等质量改进举措也可以提高项目管理的质量以及最终产品、服务或成果的质量。</li>\n<li><strong>管理层的责任</strong>。项目的成功需要项目团队全体成员的参与。管理层在其质量职责内，肩负着为项目提供具有足够能力的资源的相应责任。</li>\n<li><strong>与供应商的互利合作关系</strong>。组织与其供应商相互依赖。相对传统的供应商管理而言，与供应商建立合作伙伴关系对组织和供应商都更加有益。组织应着眼于长期关系而不是短期利益。互利合作关系增强了组织和供应商互相为对方创造价值的能力，推动他们共同实现客户的需求和期望，并优化成本和资源。</li>\n</ul>\n<p><strong>裁剪考虑因素</strong></p>\n<ul>\n<li>政策合规与审计</li>\n<li>标准与法规合规性</li>\n<li>持续改进</li>\n<li>相关方参与</li>\n</ul>\n<p><strong>在敏捷或适应性环境中需要考虑的因素</strong></p>\n<p>为引导变更，敏捷方法要求在整个项目期间频繁开展质量与审核步骤，而不是在面临项目结束时才执行。</p>\n<p>循环回顾，定期检查质量过程的效果；寻找问题的根本原因，然后建议实施新的质量改进方法；后续回顾会议评估试验过程，确定新方法是否可行，是否应继续使用，是否应该调整，或者直接弃用。</p>\n<p>为促进频繁的増量交付，敏捷方法关注于小批量工作，纳入尽可能多的项目可交付成果的要素。小批量系统的目的是在项目生命周期早期（整体变更成本较低）发现不一致和质量问题。</p>\n<h2 id=\"8-1-规划质量管理\">8.1 规划质量管理</h2>\n<p>规划质量管理是识别项目及其可交付成果的质量要求和（或）标准，并书面描述项目将如何证明符合质量要求或标准的过程。本过程的主要作用是，为在整个项目期间如何管理和核实质量提供指南和方向。本过程仅开展一次或仅在项目的预定义点开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417175001-2.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417175001-3.png\" alt=\"\"></p>\n<p>质量规划应与其他规划过程并行开展。例如，为满足既定的质量标准而对可交付成果提出变更，可能需要调整成本或进度计划，并就该变更对相关计划的影响进行详细风险分析。</p>\n<h3 id=\"8-1-1-规划质量管理：输入\">8.1.1 规划质量管理：输入</h3>\n<p>规划质量管理的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划\n<ul>\n<li>需求管理计划</li>\n<li>风险管理计划</li>\n<li>相关方参与计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>政府法规</li>\n<li>特定应用领域的相关规则、标准和指南</li>\n<li>地理分布</li>\n<li>组织结构</li>\n<li>市场条件</li>\n<li>项目或可交付成果的工作条件或运行条件</li>\n<li>文化观念</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>组织的质量管理体系，包括政策、程序及指南</li>\n<li>质量模板，例如核查表、跟踪矩阵及其他</li>\n<li>历史数据库和经验教训知识库</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"8-1-2-规划质量管理：工具与技术\">8.1.2 规划质量管理：工具与技术</h3>\n<p>规划质量管理需要的工具与技术包括：</p>\n<ul>\n<li>\n<p>专家判断</p>\n<ul>\n<li>质量保证</li>\n<li>质量控制</li>\n<li>质量测量结果</li>\n<li>质量改进</li>\n<li>质量体系</li>\n</ul>\n</li>\n<li>\n<p>数据收集</p>\n<ul>\n<li><strong>标杆对照</strong>：标杆对照是将实际或计划的项目实践或项目的质量标准与可比项目的实践或标准进行比较，以便识别最佳实践，形成改进意见，并为绩效考核提供依据。作为标杆的项目可以来自执行组织内部或外部，或者来自同一应用领域或其他应用领域。标杆对照也允许用不同应用领域或行业的项目做类比。</li>\n<li>头脑风暴</li>\n<li>访谈</li>\n</ul>\n</li>\n<li>\n<p>数据分析</p>\n<ul>\n<li><strong>成本效益分析</strong>：成本效益分析是用来估算备选方案优势和劣势的财务分析工具，以确定可以创造最佳效益的备选方案。成本效益分析可帮助项目经理确定规划的质量活动是否具有成本有效性。达到质量要求的主要效益包括减少返工、提高生产率、降低成本、提升相关方满意度及提升赢利能力。对每个质量活动进行成本效益分析，就是要比较其可能成本与预期效益。</li>\n<li><strong>质量成本</strong>\n<ul>\n<li><strong>预防成本</strong>：预防特定项目的产品、可交付成果或服务质量低劣所带来的相关成本；</li>\n<li><strong>评估成本</strong>：评估、测量、审计和测试特定项目的产品、可交付成果和服务所带来的相关成本；</li>\n<li><strong>失败成本（内部/外部）</strong>：因产品、可交付成果或服务与相关方需求或期望不一致而导致的相关成本。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417175001-4.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>决策</p>\n</li>\n<li>\n<p>数据表现</p>\n<ul>\n<li>\n<p>流程图</p>\n</li>\n<li>\n<p>逻辑数据模型</p>\n</li>\n<li>\n<p>矩阵图</p>\n</li>\n<li>\n<p>思维导图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417175001-5.png\" alt=\"\"></p>\n</li>\n</ul>\n</li>\n<li>\n<p>测试与检查规划</p>\n</li>\n<li>\n<p>会议</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"8-1-3-规划质量管理：输出\">8.1.3 规划质量管理：输出</h3>\n<ul>\n<li>规划质量管理的输出包括：质量管理计划：质量管理计划是项目管理计划的组成部分，描述如何实施适用的政策、程序和指南以实现质量目标。它描述了项目管理团队为实现一系列项目质量管理目标所需的活动和资源。质量管理计划可以是正式或非正式的，非常详细或高度概括的，其风格与详细程度取决于项目的具体需要。应该在项目早期就对质量管理计划进行评审，以确保决策是基于准确信息的。这样做的好处是，更加关注项目的价值定位，降低因返工而造成的成本超支金额和进度延误次数。\n<ul>\n<li>项目将采用的质量标准</li>\n<li>项目的质量目标</li>\n<li>质量角色与职责</li>\n<li>需要质量审查的项目可交付成果和过程</li>\n<li>为项目规划的质量控制和质量管理活动</li>\n<li>项目将使用的质量工具</li>\n<li>与项目有关的主要程序，例如处理不合符要求的情况、纠正措施程序，以及持续改进程序。</li>\n</ul>\n</li>\n<li>质量测量指标：质量测量指标专用于描述项目或产品属性，以及控制质量过程将如何验证质量符合测量指标程度。质量测量指标的例子包括按时完成的任务的百分比、以 CPI 测量的成本绩效、故障率、天发现的缺陷数量、每月总停机时间、每个代码行的错误、客户满意度分数，以及测试计划所涵盖的需求的百分比（即测试覆盖度）。</li>\n<li>项目管理计划更新\n<ul>\n<li>风险管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>经验教训登记册</li>\n<li>需求跟踪矩阵</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"8-2-管理质量\">8.2 管理质量</h2>\n<p>管理质量是把组织的质量政策用于项目，并将质量管理计划转化为可执行的质量活动的过程。本过程的主要作用是，提高实现质量目标的可能性，以及识别无效过程和导致质量低劣的原因。管理质量使用控制质量过程的数据和结果向相关方展示项目的总体质量状态。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417175001-6.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417175001-7.png\" alt=\"\"></p>\n<p>管理质量过程执行在项目质量管理计划中所定义的一系列有计划、有系统的行动和过程，有助于：</p>\n<ul>\n<li>通过执行有关产品特定方面的设计准则，设计出最优的成熟产品；</li>\n<li>建立信心，相信通过质量保证工具和技术（如质量审计和故障分析）可以使未来输出在完工时满足特定的需求和期望；</li>\n<li>确保使用质量过程并确保其使用能够满足项目的质量目标；</li>\n<li>提高过程和活动的效率与效果，以获得更好的成果和绩效并提高相关方的满意程度。</li>\n</ul>\n<p>项目经理和项目团队可以通过组织的质量保证部门或其他组织职能执行某些管理质量活动，例如故障分析、实验设计和质量改进。质量保证部门在质量工具和技术的使用方面通常拥有跨组织经验，是良好的项目资源。管理质量被认为是所有人的共同职责，包括项目经理、项目团队、项目发起人、执行组织的管理层，甚至是客户。</p>\n<h3 id=\"8-2-1-管理质量：输入\">8.2.1 管理质量：输入</h3>\n<p>管理质量的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>质量控制测量结果</li>\n<li>质量测量指标</li>\n<li>风险报告</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>包括政策、程序及指南的组织质量管理体系</li>\n<li>质量模板，例如核查表、跟踪矩阵、测试计划、测试文件及其他模板</li>\n<li>以往审计的结果</li>\n<li>包含类似项目信息的经验教训知识库</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"8-2-2-管理质量：工具与技术\">8.2.2 管理质量：工具与技术</h3>\n<p>管理质量需要的工具与技术包括：</p>\n<ul>\n<li>数据收集\n<ul>\n<li>核对单</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>备选方案分析</li>\n<li>文件分析</li>\n<li>过程分析</li>\n<li>根本原因分析（RCA）</li>\n</ul>\n</li>\n<li>决策</li>\n<li>数据表现\n<ul>\n<li>亲和图</li>\n<li>因果图</li>\n<li>流程图</li>\n<li>直方图</li>\n<li>矩阵图</li>\n<li>散点图</li>\n</ul>\n</li>\n<li><strong>审计</strong>：审计是用于确定项目活动是否遵循了组织和项目的政策、过程与程序的一种结构化且独立的过程。质量审计通常由项目外部的团队开展，如组织内部审计部门、项目管理办公室 (PMO) 或组织外部的审计师。质量审计目标可能包括（但不限于）：\n<ul>\n<li>识别全部正在实施的良好及最佳实践；</li>\n<li>识别所有违规做法、差距及不足；</li>\n<li>分享所在组织和/或行业中类似项目的良好实践；</li>\n<li>积极、主动地提供协助，以改进过程的执行，从而帮助团队提高生产效率；</li>\n<li>强调每次审计都应对组织经验教训知识库的积累做出贡献。</li>\n</ul>\n</li>\n<li>面向X的设计：面向 X 的设计 (DfX) 是产品设计期间可采用的一系列技术指南，旨在优化设计的特定方面，可以控制或提高产品最终特性。DfX 中的“X”可以是产品开发的不同方面，例如可靠性、调配、装配、制造、成本、服务、可用性、安全性和质量。使用 DfX 可以降低成本、改进质量、提高绩效和客户满意度。</li>\n<li>问题解决：问题解决是指找到解决问题或应对挑战的解决方案。它包括收集其他信息、具有批判性思维的、创造性的、量化的和/或逻辑性的解决方法。</li>\n<li>质量改进方法：质量改进的开展，可基于质量控制过程的发现和建议、质量审计的发现，或管理质量过程的问题解决。计划 — 实施 — 检查 — 行动和六西格玛是最常用于分析和评估改进机会的两种质量改进工具。</li>\n</ul>\n<h3 id=\"8-2-3-管理质量：输出\">8.2.3 管理质量：输出</h3>\n<p>管理质量的输出包括：</p>\n<ul>\n<li>质量报告：质量报告可能是图形、数据或定性文件，其中包含的信息可帮助其他过程和部门采取纠正措施，以实现项目质量期望。质量报告的信息可以包含团队上报的全部质量管理问题，针对过程、项目和产品的改善建议，纠正措施建议（包括返工、缺陷/漏洞补救、100% 检查等），以及在控制质量过程中发现的情况的概述。</li>\n<li>测试与评估文件</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>质量管理计划</li>\n<li>范围基准</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"8-3-控制质量\">8.3 控制质量</h2>\n<p>控制质量是为了评估绩效，确保项目输出完整、正确且满足客户期望，而监督和记录质量管理活动执行结果的过程。本过程的主要作用是，核实项目可交付成果和工作已经达到主要相关方的质量要求，可供最终验收。控制质量过程确定项目输出是否达到预期目的，这些输出需要满足所有适用标准、要求、法规和规范。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417175001-8.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417175001-9.png\" alt=\"\"></p>\n<p>控制质量过程的目的是在用户验收和最终交付之前测量产品或服务的完整性、合规性和适用性。本过程通过测量所有步骤、属性和变量，来核实与规划阶段所描述规范的一致性和合规性。</p>\n<h3 id=\"8-3-1-控制质量：输入\">8.3.1 控制质量：输入</h3>\n<p>控制质量的输出包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>质量测量指标</li>\n<li>测试与评估文件</li>\n</ul>\n</li>\n<li>批准的变更请求</li>\n<li>可交付成果</li>\n<li>工作绩效数据</li>\n<li>事业环境因素\n<ul>\n<li>项目管理信息系统</li>\n<li>政府法规</li>\n<li>特定应用领域的相关规则、标准和指南</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>质量标准和政策</li>\n<li>质量模板，例如核查表和核对单等</li>\n<li>问题与缺陷报告程序及沟通政策</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"8-3-2-控制质量：工具与技术\">8.3.2 控制质量：工具与技术</h3>\n<p>控制质量需要的工具与技术包括：</p>\n<ul>\n<li>数据收集\n<ul>\n<li>核对单</li>\n<li>核查表：核查表，又称计数表，用于合理排列各种事项，以便有效地收集关于潜在质量问题的有用数据。在开展检查以识别缺陷时，用核查表收集属性数据就特别方便，例如关于缺陷数量或后果的数据。</li>\n<li>统计抽样</li>\n<li>问卷调查</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>绩效审查</li>\n<li>根本原因分析（RCA）</li>\n</ul>\n</li>\n<li>检查</li>\n<li>测试/产品评估：测试是一种有组织的、结构化的调查，旨在根据项目需求提供有关被测产品或服务质量的客观信息。测试的目的是找出产品或服务中存在的错误、缺陷、漏洞或其他不合规问题。用于评估各项需求的测试的类型、数量和程度是项目质量计划的一部分，具体取决于项目的性质、时间、预算或其他制约因素。测试可以贯穿于整个项目，可以随着项目的不同组成部分变得可用时进行，也可以在项目结束（即交付最终可交付成果）时进行。早期测试有助于识别不合规问题，帮助减少修补不合规组件的成本。</li>\n<li>数据表现\n<ul>\n<li>因果图</li>\n<li>控制图</li>\n<li>直方图</li>\n<li>散点图</li>\n</ul>\n</li>\n<li>会议\n<ul>\n<li>审查已批准的变更请求</li>\n<li>回顾/经验教训</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"8-3-3-控制质量：输出\">8.3.3 控制质量：输出</h3>\n<p>控制质量的输出包括：</p>\n<ul>\n<li>质量控制测量结果</li>\n<li>核实的可交付成果</li>\n<li>工作绩效信息</li>\n<li>变更请求</li>\n<li>项目管理计划更新</li>\n<li>项目文件更新\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n<li>测试与评估文件</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"9-项目资源管理\">9.项目资源管理</h2>\n<p>项目资源管理包括识别、获取和管理所需资源以成功完成项目的各个过程，这些过程有助于确保项目经理和项目团队在正确的时间和地点使用正确的资源。</p>\n<p>项目资源管理过程包括：</p>\n<p><strong>9.1 规划资源管理</strong> — 定义如何估算、获取、管理和利用实物以及团队项目资源的过程。</p>\n<p><strong>9.2 估算活动资源</strong> — 估算执行项目所需的团队资源，以及材料、设备和用品的类型和数量的过程。</p>\n<p><strong>9.3 获取资源</strong> — 获取项目所需的团队成员、设施、设备、材料、用品和其他资源的过程。</p>\n<p><strong>9.4 建设团队</strong> — 提高工作能力，促进团队成员互动，改善团队整体氛围，以提高项目绩效的过程。</p>\n<p><strong>9.5 管理团队</strong> — 跟踪团队成员工作表现，提供反馈，解决问题并管理团队变更，以优化项目绩效的过程。</p>\n<p><strong>9.6 控制资源</strong> — 确保按计划为项目分配实物资源，以及根据资源使用计划监督资源实际使用情况，并采取必要纠正措施的过程。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181456.png\" alt=\"\"></p>\n<p><strong>项目资源管理的核心概念</strong></p>\n<p>团队资源管理相对于实物资源管理，对项目经理提出了不同的技能和能力要求。实物资源包括设备、材料、设施和基础设施，而团队资源或人员指的是人力资源。项目团队成员可能具备不同的技能，可能是全职或兼职的，可能随项目进展而增加或减少。</p>\n<p>项目团队由承担特定角色和职责的个人组成，他们为实现项目目标而共同努力。项目经理因此应在获取、管理、激励和增强项目团队方面投入适当的努力。尽管项目团队成员被分派了特定的角色和职责，但让他们全员参与项目规划和决策仍是有益的。团队成员参与规划阶段，既可使他们对项目规划工作贡献专业技能，又可以增强他们对项目的责任感。</p>\n<p>作为领导者，项目经理还负责积极培养团队技能和能力，同时提高并保持团队的满意度和积极性，项目经理还应了解并支持符合职业与道德要求的行为，确保所有团队成员都按这些要求行动。</p>\n<p>实物资源管理着眼于以有效和高效的方式，分配和使用成功完成项目所需的实物资源，如材料、设备和用品。为此，组织应当拥有如下数据：（当前和合理的未来的）资源需求、（可以满足这些需求的）资源配置，以及资源供应。</p>\n<p><strong>项目资源管理的趋势和新兴实践</strong></p>\n<p>项目管理风格正在从管理项目的命令和控制结构，转向更加协作和支持性的管理方法，通过将决策权分配给团队成员来提高团队能力。</p>\n<ul>\n<li>资源管理方法（精益管理、准时制（JIT生产）、Kaizen（持续改善）、全面生产维护（TPM）、约束理论等）</li>\n<li>情商EI</li>\n<li>自组织团队</li>\n<li>虚拟团队/分布式团队</li>\n</ul>\n<p><strong>裁剪需要考虑的因素</strong></p>\n<ul>\n<li>多元化</li>\n<li>物理位置</li>\n<li>行业特定资源</li>\n<li>团队成员的获得</li>\n<li>团队管理</li>\n<li>生命周期方法</li>\n</ul>\n<p><strong>在敏捷或适应型环境中需要考虑的因素</strong></p>\n<p>易变性高的项目得益于最大限度地集中和协作的团队结构，例如拥有通才的自组织团队。</p>\n<p>协作旨在提高生产率和促进创新的问题解决方式。协作型团队可以促进不同工作活动的加速整合、改善沟通、增加知识分享，以及提供工作分配的灵活性和其他优势。</p>\n<h2 id=\"9-1-规划资源管理\">9.1 规划资源管理</h2>\n<p>规划资源管理是定义如何估算、获取、管理和利用团队以及实物资源的过程。本过程的主要作用是，根据项目类型和复杂程度确定适用于项目资源的管理方法和管理程度。本过程仅开展一次或仅在项目的预定义点开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181456-1.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181456-2.png\" alt=\"\"></p>\n<p>资源规划用于确定和识别一种方法，以确保项目的成功完成有足够的可用资源。项目资源可能</p>\n<p>包括团队成员、用品、材料、设备、服务和设施。有效的资源规划需要考虑稀缺资源的可用性和竞争，并编制相应的计划。</p>\n<h3 id=\"9-1-1-规划资源管理：输入\">9.1.1 规划资源管理：输入</h3>\n<p>规划资源管理的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划\n<ul>\n<li>质量管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>项目进度计划</li>\n<li>需求文件</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织文化和结构</li>\n<li>设施和资源的地理分布</li>\n<li>现有资源的能力和可用性</li>\n<li>市场条件</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>人力资源政策和程序；</li>\n<li>实物资源管理政策和程序；</li>\n<li>安全政策；</li>\n<li>安保政策；</li>\n<li>资源管理计划模板；</li>\n<li>类似项目的历史信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"9-1-2-规划资源管理：工具与技术\">9.1.2 规划资源管理：工具与技术</h3>\n<p>规划资源管理需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>协调组织内部的最佳资源；</li>\n<li>人才管理和员工发展；</li>\n<li>确定为实现项目目标所需的初步投入水平；</li>\n<li>根据组织文化确定报告要求；</li>\n<li>根据经验教训和市场条件，评估获取资源所需的提前量；</li>\n<li>识别与资源获取、留用和遣散计划有关的风险；</li>\n<li>遵循适用的政府和工会法规；</li>\n<li>管理卖方和物流工作，确保在需要时能够提供材料和用品。</li>\n</ul>\n</li>\n<li>数据表现\n<ul>\n<li>层级型\n<ul>\n<li>工作分解结构WBS</li>\n<li>组织分解结构DBS</li>\n<li>资源分解结构</li>\n</ul>\n</li>\n<li>责任分配矩阵</li>\n<li>文本型</li>\n</ul>\n</li>\n<li>组织理论</li>\n<li>会议</li>\n</ul>\n<h3 id=\"9-1-3-规划资源管理：输出\">9.1.3 规划资源管理：输出</h3>\n<p>规划资源管理的输出包括：</p>\n<ul>\n<li>资源管理计划\n<ul>\n<li>识别资源</li>\n<li>获取资源</li>\n<li>角色与职责\n<ul>\n<li>角色</li>\n<li>职权</li>\n<li>职责</li>\n<li>能力</li>\n</ul>\n</li>\n<li>项目组织图</li>\n<li>项目团队资源管理</li>\n<li>培训</li>\n<li>团队建设</li>\n<li>资源控制</li>\n<li>认可计划</li>\n</ul>\n</li>\n<li>团队章程\n<ul>\n<li>团队价值观；</li>\n<li>沟通指南；</li>\n<li>决策标准和过程；</li>\n<li>冲突处理过程；</li>\n<li>会议指南；</li>\n<li>团队共识。</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>风险登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"9-2-估算活动资源\">9.2 估算活动资源</h2>\n<p>估算活动资源是估算执行项目所需的团队资源，以及材料、设备和用品的类型和数量的过程。本过程的主要作用是，明确完成项目所需的资源种类、数量和特性。本过程应根据需要在整个项目期间定期开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181456-3.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181456-4.png\" alt=\"\"></p>\n<h3 id=\"9-2-1-估算活动资源：输入\">9.2.1 估算活动资源：输入</h3>\n<p>估算活动资源的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>资源管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>活动属性</li>\n<li>活动清单</li>\n<li>假设日志</li>\n<li>成本估算</li>\n<li>资源日历</li>\n<li>风险登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>资源的位置；</li>\n<li>资源可用性；</li>\n<li>团队资源的技能；</li>\n<li>组织文化；</li>\n<li>发布的估算数据；</li>\n<li>市场条件。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>关于人员配备的政策和程序；</li>\n<li>关于用品和设备的政策与程序；</li>\n<li>关于以往项目中类似工作所使用的资源类型的历史信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"9-2-2-估算活动资源：工具与技术\">9.2.2 估算活动资源：工具与技术</h3>\n<p>估算活动资源需要的工具与技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>自下而上估算</li>\n<li>类比估算</li>\n<li>参数估算</li>\n<li>数据分析</li>\n<li>项目管理信息系统</li>\n<li>会议</li>\n</ul>\n<h3 id=\"9-2-3-估算活动资源：输出\">9.2.3 估算活动资源：输出</h3>\n<p>估算活动资源的输出包括：</p>\n<ul>\n<li>资源需求</li>\n<li>估算依据\n<ul>\n<li>估算方法；</li>\n<li>用于估算的资源，如以往类似项目的信息；</li>\n<li>与估算有关的假设条件；</li>\n<li>已知的制约因素；</li>\n<li>估算范围；</li>\n<li>估算的置信水平；</li>\n<li>有关影响估算的已识别风险的文件。</li>\n</ul>\n</li>\n<li>资源分解结构</li>\n<li>项目文件更新\n<ul>\n<li>活动属性</li>\n<li>假设日志</li>\n<li>经验教训登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"9-3-获取资源\">9.3 获取资源</h2>\n<p>获取资源是获取项目所需的团队成员、设施、设备、材料、用品和其他资源的过程。本过程的主要作用是，概述和指导资源的选择，并将其分配给相应的活动。本过程应根据需要在整个项目期间定期开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181456-5.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181456-6.png\" alt=\"\"></p>\n<h3 id=\"9-3-1-获取资源：输入\">9.3.1 获取资源：输入</h3>\n<p>获取资源的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>资源管理计划</li>\n<li>采购管理计划</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>项目进度计划</li>\n<li>资源日历</li>\n<li>资源需求</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>现有组织资源信息，包括可用性、能力水平、以及有关团队资源和资源成本的以往经验</li>\n<li>市场条件</li>\n<li>组织结构</li>\n<li>地理位置</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>有关项目资源的获取、配给和分配的政策和程序</li>\n<li>历史信息和经验教训知识库</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"9-3-2-获取资源：工具与技术\">9.3.2 获取资源：工具与技术</h3>\n<p>获取资源需要的工具与技术包括：</p>\n<ul>\n<li>决策\n<ul>\n<li>可用性</li>\n<li>成本</li>\n<li>能力</li>\n<li>经验</li>\n<li>知识</li>\n<li>技能</li>\n<li>态度</li>\n<li>国际因素</li>\n</ul>\n</li>\n<li>人际关系与团队技能\n<ul>\n<li>职能经理</li>\n<li>执行组织中的其他项目管理团队</li>\n<li>外部组织和供应商</li>\n</ul>\n</li>\n<li>预分派</li>\n<li>虚拟团队：具有共同目标、在完成角色任务的过程中很少或没有时间面对面工作的一群人</li>\n</ul>\n<h3 id=\"9-3-3-获取资源：输出\">9.3.3 获取资源：输出</h3>\n<p>获取资源的输出包括：</p>\n<ul>\n<li>实物资源分配单</li>\n<li>项目团队派工单</li>\n<li>资源日历</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>资源管理计划</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>资源分解结构</li>\n<li>资源需求</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织内资源的可用性</li>\n<li>组织已使用的消耗资源的数量</li>\n</ul>\n</li>\n<li>组织过程资产</li>\n</ul>\n<h2 id=\"9-4-建设团队\">9.4 建设团队</h2>\n<p>建设团队是提高工作能力，促进团队成员互动，改善团队整体氛围，以提高项目绩效的过程。本过程的主要作用是，改进团队协作、增强人际关系技能和胜任力、激励员工、减少摩擦以及提升整体项目绩效。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181456-7.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181456-8.png\" alt=\"\"></p>\n<p>通过以下行为可以实现团队的高效运行：</p>\n<ul>\n<li>使用开放与有效的沟通；</li>\n<li>创造团队建设机遇；</li>\n<li>建立团队成员间的信任；</li>\n<li>以建设性方式管理冲突；</li>\n<li>鼓励合作型的问题解决方法；</li>\n<li>鼓励合作型的决策方法。</li>\n</ul>\n<p>建设项目团队的目标包括（但不限于）：</p>\n<ul>\n<li>提高团队成员的知识和技能，以提高他们完成项目可交付成果的能力，并降低成本、缩短工期和提高质量；</li>\n<li>提高团队成员之间的信任和认同感，以提高士气、减少冲突和增进团队协作；</li>\n<li>创建富有生气、凝聚力和协作性的团队文化，从而：（1）提高个人和团队生产率，振奋团队精神，促进团队合作；（2）促进团队成员之间的交叉培训和辅导，以分享知识和经验；</li>\n<li>提高团队参与决策的能力，使他们承担起对解决方案的责任，从而提高团队的生产效率，获得更有效和高效的成果。</li>\n</ul>\n<p><strong>塔克曼阶梯理论：</strong></p>\n<ul>\n<li><strong>形成阶段</strong>。在本阶段，团队成员相互认识，并了解项目情况及他们在项目中的正式角色与职责。在这一阶段，团队成员倾向于相互独立，不会开诚布公。</li>\n<li><strong>震荡阶段</strong>。在本阶段，团队开始从事项目工作、制定技术决策和讨论项目管理方法。如果团队成员不能用合作和开放的态度对待不同观点和意见，团队环境可能变得事与愿违。</li>\n<li><strong>规范阶段</strong>。在规范阶段，团队成员开始协同工作，并调整各自的工作习惯和行为来支持团队，团队成员会学习相互信任。</li>\n<li><strong>成熟阶段</strong>。进入这一阶段后，团队就像一个组织有序的单位那样工作，团队成员之间相互依靠，平稳高效地解决问题。</li>\n<li><strong>解散阶段</strong>。在解散阶段，团队完成所有工作，团队成员离开项目。通常在项目可交付成果完成之后，或者，在结束项目或阶段过程中，释放人员，解散团队。</li>\n</ul>\n<h3 id=\"9-4-1-建设团队：输入\">9.4.1 建设团队：输入</h3>\n<p>建设团队的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>项目团队派工单</li>\n<li>资源日历</li>\n<li>团队章程</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>有关雇用和解雇、员工绩效审查、员工发展与培训记录，以及认可与奖励的人力资源管理政策；</li>\n<li>团队成员的技能、能力和专业知识；</li>\n<li>团队成员的地理分布。</li>\n</ul>\n</li>\n<li>组织过程资产</li>\n</ul>\n<h3 id=\"9-4-2-建设团队：工具与技术\">9.4.2 建设团队：工具与技术</h3>\n<p>建设团队需要的工具与技术包括：</p>\n<ul>\n<li>集中办公</li>\n<li>虚拟团队</li>\n<li>沟通技术</li>\n<li>人际关系与团队技能\n<ul>\n<li>冲突管理</li>\n<li>影响力</li>\n<li>激励</li>\n<li>谈判</li>\n<li>团队建设</li>\n</ul>\n</li>\n<li>认可与奖励</li>\n<li>培训</li>\n<li>个人和团队评估</li>\n<li>会议</li>\n</ul>\n<h3 id=\"9-4-3-建设团队：输出\">9.4.3 建设团队：输出</h3>\n<p>建设团队的输出包括：</p>\n<ul>\n<li>团队绩效评价</li>\n<li>变更请求</li>\n<li>项目管理计划更新</li>\n<li>项目文件更新\n<ul>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>项目团队派工单</li>\n<li>资源日历</li>\n<li>团队章程</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>员工发展计划的记录</li>\n<li>技能评估</li>\n</ul>\n</li>\n<li>组织过程资产更新\n<ul>\n<li>培训需求</li>\n<li>人事评测</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"9-5-管理团队\">9.5 管理团队</h2>\n<p>管理团队是跟踪团队成员工作表现，提供反馈，解决问题并管理团队变更，以优化项目绩效的过程。本过程的主要作用是，影响团队行为、管理冲突以解决问题。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181456-9.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181456-10.png\" alt=\"\"></p>\n<h3 id=\"9-5-1-管理团队：输入\">9.5.1 管理团队：输入</h3>\n<p>管理团队的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>项目团队派工单</li>\n</ul>\n</li>\n<li>团队章程</li>\n<li>工作绩效报告</li>\n<li>团队绩效报告</li>\n<li>事业环境因素</li>\n<li>组织过程资产\n<ul>\n<li>嘉奖证书</li>\n<li>公司制服</li>\n<li>组织中其他的额外待遇</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"9-5-2-管理团队：工具与技术\">9.5.2 管理团队：工具与技术</h3>\n<p>管理团队需要的工具与技术包括：</p>\n<ul>\n<li><strong>人际关系与团队技能</strong>\n<ul>\n<li><strong>冲突管理</strong>\n<ul>\n<li><strong>撤退/回避</strong>。从实际或潜在冲突中退出，将问题推迟到准备充分的时候，或者将问题推给其他人员解决。</li>\n<li><strong>缓和/包容</strong>。强调一致而非差异；为维持和谐与关系而退让一步，考虑其他方的需要。</li>\n<li><strong>妥协/调解</strong>。为了暂时或部分解决冲突，寻找能让各方都在一定程度上满意的方案，但这种方法有时会导致“双输”局面。</li>\n<li><strong>强迫/命令</strong>。以牺牲其他方为代价，推行某一方的观点；只提供赢 — 输方案。通常是利用权力来强行解决紧急问题，这种方法通常会导致“赢输”局面。</li>\n<li><strong>合作/解决问题</strong>。综合考虑不同的观点和意见，采用合作的态度和开放式对话引导各方达成共识和承诺，这种方法可以带来双赢局面。</li>\n</ul>\n</li>\n<li>制定决策\n<ul>\n<li>着眼于所要达到的目标；</li>\n<li>遵循决策流程；</li>\n<li>研究环境因素；</li>\n<li>分析可用信息；</li>\n<li>激发团队创造力；</li>\n<li>考虑风险。</li>\n</ul>\n</li>\n<li>情商</li>\n<li>影响力</li>\n<li>领导力</li>\n</ul>\n</li>\n<li>项目管理信息系统</li>\n</ul>\n<h3 id=\"9-5-3-管理团队：输出\">9.5.3 管理团队：输出</h3>\n<p>管理团队的输出包括：</p>\n<ul>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>资源管理计划</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>项目团队派工单</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>对组织绩效评价的输入</li>\n<li>个人技能</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"9-6-控制资源\">9.6 控制资源</h2>\n<p>控制资源是确保按计划为项目分配实物资源，以及根据资源使用计划监督资源实际使用情况，并采取必要纠正措施的过程。本过程的主要作用是，确保所分配的资源适时适地可用于项目，且在不再需要时被释放。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181456-11.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181456-12.png\" alt=\"\"></p>\n<p>控制资源过程关注：</p>\n<ul>\n<li>监督资源支出；</li>\n<li>及时识别和处理资源缺乏/剩余情况；</li>\n<li>确保根据计划和项目需求使用和释放资源；</li>\n<li>在出现资源相关问题时通知相应的相关方；</li>\n<li>影响会导致资源使用变更的因素；</li>\n<li>在变更实际发生时对其进行管理。<br>\n进度基准或成本基准的任何变更，都必须经过实施整体变更控制过程的审批。</li>\n</ul>\n<h3 id=\"9-6-1-控制资源：输入\">9.6.1 控制资源：输入</h3>\n<p>控制资源的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>实物资源分配单</li>\n<li>项目进度计划</li>\n<li>资源分解结构</li>\n<li>资源需求</li>\n<li>风险登记册</li>\n</ul>\n</li>\n<li>工作绩效数据</li>\n<li>协议</li>\n<li>组织过程资产\n<ul>\n<li>有关资源控制和分配的政策；</li>\n<li>执行组织内用于解决问题的上报程序；</li>\n<li>经验教训知识库，其中包含以往类似项目的信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"9-6-2-控制资源：工具与技术\">9.6.2 控制资源：工具与技术</h3>\n<p>控制资源需要的工具与技术包括：</p>\n<ul>\n<li>数据分析\n<ul>\n<li>备选方案分析</li>\n<li>成本效益分析</li>\n<li>绩效审查</li>\n<li>趋势分析</li>\n</ul>\n</li>\n<li><strong>问题解决</strong>\n<ul>\n<li><strong>识别问题</strong>。明确问题。</li>\n<li><strong>定义问题</strong>。将问题分解为可管理的小问题。</li>\n<li><strong>调查</strong>。收集数据。</li>\n<li><strong>分析</strong>。找出问题的根本原因。</li>\n<li><strong>解决</strong>。从众多解决方案中选择最合适的一个。</li>\n<li><strong>检查解决方案</strong>。确认是否已解决问题。</li>\n</ul>\n</li>\n<li>人际关系与团队技能\n<ul>\n<li>谈判</li>\n<li>影响力</li>\n</ul>\n</li>\n<li>项目管理信息系统</li>\n</ul>\n<h3 id=\"9-6-3-控制资源：输出\">9.6.3 控制资源：输出</h3>\n<p>控制资源的输出包括：</p>\n<ul>\n<li>工作绩效信息</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>资源管理计划</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>实物资源分配单</li>\n<li>资源分解结构</li>\n<li>风险登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-项目沟通管理\">10.项目沟通管理</h2>\n<p>项目沟通管理包括通过开发工件，以及执行用于有效交换信息的各种活动，来确保项目及其相关方的信息需求得以满足的各个过程。项目沟通管理由两个部分组成：第一部分是制定策略，确保沟通对相关方行之有效；第二部分是执行必要活动，以落实沟通策略。</p>\n<p><strong>项目沟通管理的过程包括：</strong></p>\n<ul>\n<li>10.1 规划沟通管理 — 基于每个相关方或相关方群体的信息需求、可用的组织资产，以及具体项目的需求，为项目沟通活动制定恰当的方法和计划的过程。</li>\n<li>10.2 管理沟通 — 确保项目信息及时且恰当地收集、生成、发布、存储、检索、管理、监督和最终处置的过程。</li>\n<li>10.3 监督沟通 — 确保满足项目及其相关方的信息需求的过程。</li>\n</ul>\n<p>图 10-1 概括了项目沟通管理的各个过程。虽然在本《PMBOK® 指南》中，各项目沟通管理过程</p>\n<p>以界限分明和相互独立的形式出现，但在实践中它们会以本指南无法全面详述的方式相互交叠和相互作用。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181554.png\" alt=\"\"></p>\n<p>图 10-1项目沟通管理概述</p>\n<p>项目沟通管理的核心概念沟通是指有意或无意的信息交换。交换的信息可以是想法、指示或情绪。信息交换的方法包括：</p>\n<ul>\n<li>书面形式。实物或电子形式。</li>\n<li>口头形式。面对面或远程形式。</li>\n<li>正式或非正式形式（用正式纸质或社交媒体）。</li>\n<li>手势动作。语调和面部表情。</li>\n<li>媒体形式。图片、行动，甚至只是遣词造句。</li>\n<li>遣词造句。表达一种想法的词语往往不止一个，且各词语的含义会存在细微差异。</li>\n<li>沟通是指用各种可能的方式来发送或接收信息，或者通过沟通活动（如会议和演讲），或者以工件的方式（如电子邮件、社交媒体、项目报告或项目文档）。</li>\n</ul>\n<p>项目经理的大多数时间用于与团队成员和其他项目相关方沟通，包括来自组织内部（组织的各个层级）和组织外部的人员。不同相关方可能有不同的文化和组织背景，以及不同的专业水平、观点和兴趣，而有效的沟通能够在他们之间架起一座桥梁。</p>\n<p>沟通活动可按多种维度进行分类，包括（但不限于）：</p>\n<ul>\n<li>内部。针对项目内部或组织内部的相关方。</li>\n<li>外部。针对外部相关方，如客户、供应商、其他项目、组织、政府，公众和环保倡导者。</li>\n<li>正式。报告、正式会议（定期及临时）、会议议程和记录、相关方简报和演示。</li>\n<li>非正式。采用电子邮件、社交媒体、网站，以及非正式临时讨论的一般沟通活动。</li>\n<li>层级沟通。相关方或相关方群体相对于项目团队的位置将会以如下方式影响信息传递的形式和内容：</li>\n<li>向上沟通。针对高层相关方。</li>\n<li>向下沟通。针对承担项目工作的团队和其他人员。</li>\n<li>横向沟通。针对项目经理或团队的同级人员。</li>\n<li>官方沟通。年报，呈交监管机构或政府部门的报告。</li>\n<li>非官方沟通。采用灵活（往往为非正式）的手段，来建立和维护项目团队及其相关方对项目情况的了解和认可，并在他们之间建立强有力的关系。</li>\n<li>书面与口头沟通。口头（用词和音调变化）及非口头（肢体语言和行为），社交媒体和网站、媒体发布。</li>\n</ul>\n<p>沟通可以为成功完成项目与项目集建立必要的关系。用于开展沟通的活动和工件多种多样，从电子邮件和非正式对话，到正式会议和定期项目报告。通过言语、面部表情、手势动作和其他行动有意或无意地发送和接收信息。为了成功管理与相关方的项目关系，沟通既包括制定策略和计划，以便创建合适的沟通工件和开展合适的沟通活动，也包括运用相关技能来提升计划和即兴的沟通的效果。</p>\n<p>成功的沟通包括两个部分。第一部分是根据项目及其相关方的需求而制定适当的沟通策略。从该策略出发，制定沟通管理计划，来确保用各种形式和手段把恰当的信息传递给相关方。这些信息构成项目沟通-成功沟通的第二部分。项目沟通是规划过程的产物，在沟通管理计划中有相关规定。</p>\n<p>沟通管理计划定义了信息的收集、生成、发布、储存、检索、管理、追踪和处置。最终，沟通策略和沟通管理计划将成为监督沟通效果的依据。</p>\n<p>在项目沟通中，需要尽力预防理解错误和沟通错误，并从规划过程所规定的各种方法、发送方、接收方和信息中作出谨慎选择。</p>\n<p>在编制传统（非社交媒体）的书面或口头信息的时候，应用书面沟通的 5C 原则，可以减轻但无法消除理解错误：</p>\n<ul>\n<li>正确的语法和拼写。语法不当或拼写错误会分散注意力，还有可能扭曲信息含义，降低可信度。</li>\n<li>简洁的表述和无多余字。简洁且精心组织的信息能降低误解信息意图的可能性。</li>\n<li>清晰的目的和表述（适合读者的需要）。确保在信息中包含能满足受众需求与激发其兴趣的内容。</li>\n<li>连贯的思维逻辑。写作思路连贯，以及在整个书面文件中使用诸如“引言”和“小结”的小标题。</li>\n<li>受控的语句和想法承接。可能需要使用图表或小结来控制语句和想法的承接。</li>\n</ul>\n<p>书面沟通的 5C原则需要用下列沟通技巧来配合：</p>\n<ul>\n<li>积极倾听。与说话人保持互动，并总结对话内容，以确保有效的信息交换。</li>\n<li>理解文化和个人差异。提升团队对文化及个人差异的认知，以减少误解并提升沟通能力。</li>\n<li>识别、设定并管理相关方期望。与相关方磋商，减少相关方社区中的自相矛盾的期望。</li>\n<li>强化技能。强化所有团队成员开展以下活动的技能：</li>\n<li>说服个人、团队或组织采取行动；</li>\n<li>激励和鼓励人们，或帮助人们重塑自信；</li>\n<li>指导人们改进绩效和取得期望结果；</li>\n<li>通过磋商达成共识以及减轻审批或决策延误；</li>\n<li>解决冲突，防止破坏性影响。</li>\n</ul>\n<p>有效的沟通活动和工件创建具有如下基本属性：</p>\n<ul>\n<li>沟通目的明确；</li>\n<li>尽量了解沟通接收方，满足其需求及偏好；</li>\n<li>监督并衡量沟通的效果。</li>\n</ul>\n<p>项目沟通管理的发展趋势和新兴实践在关注相关方，以及认可相关方的有效参与对项目及组织的价值的同时，也要认识到制定和落实适当的沟通策略，对维系与相关方的有效关系是至关重要的。项目沟通管理的发展趋势和新兴实践包括（但不限于）：</p>\n<ul>\n<li>将相关方纳入项目评审范围。每个项目的相关方社区中都包括被项目团队确定为对成功达成项目目标和组织成果不可或缺的个人、群体和组织。有效的沟通策略要求定期且及时地评审相关方社区，以管理成员及其态度的变化。</li>\n<li>让相关方参加项目会议。项目会议应邀请项目外部甚至组织外部（若适当）的相关方参与。敏捷方法中的一些做法适用于任何类型的项目，例如，简短的每日站会。在每日站会上，项目团队和主要相关方就前一天的成绩和问题以及当天的工作计划展开讨论。</li>\n<li>社交工具的使用日益增多。以硬件平台、社交媒体服务和个人便携设备为代表的社交工具已经改变组织及其人员的沟通和业务方式。在公共 IT 基础设施的支持下，社交工具将不同的协作方式融合在一起。网络社交是指用户建立关系网络，与他人共同拓展兴趣和活动。社交媒体工具不仅能支持信息交换，而且也有助于建立更深层次的信任和社群关系。</li>\n<li>多面性沟通方法。制定项目相关方沟通策略时，通常应考虑所有可用技术，并从中作出选择；</li>\n<li>同时也应尊重因文化、实践和个人背景而产生的对沟通语言、媒介、内容和方式的偏好。可以根据需要采用社交媒体和其他先进的电脑技术。多面性方法能够提高与不同年代和文化背景的相关方沟通的效果。</li>\n</ul>\n<p>裁剪时需要考虑的因素因为每个项目都是独特的，所以项目团队需要裁剪项目沟通管理过程。裁剪时应考虑的因素包括（但不限于）：</p>\n<ul>\n<li>相关方。相关方是属于组织内部或外部，或者二者都是？</li>\n<li>物理地点。团队成员身处何地？团队是否集中办公？团队是否位于相同地理区域？团队是否分散于多个时区？</li>\n<li>沟通技术。哪项技术可用于创建、记录、传输、检索、追踪和储存沟通工件？哪些技术最适用于与相关方沟通且成本效益最高？</li>\n<li>语言。语言是沟通活动中要考虑的主要因素。使用的是一种语言，还是多种语言？是否已为适应多语种团队的复杂情况安排了资金？</li>\n<li>知识管理。组织是否有正式的知识管理库？是否采用管理库？</li>\n</ul>\n<p>在敏捷或适应型环境中需要考虑的因素在模糊不定的项目环境中，必然需要对不断演变和出现的细节情况，进行更频繁和快速的沟通。</p>\n<p>因此，应该尽量简化团队成员获取信息的通道，频繁进行团队检查，并让团队成员集中办公。</p>\n<p>此外，为了促进与高级管理层和相关方的沟通，还需要以透明的方式发布项目工件，并定期邀请相关方评审项目工件。</p>\n<h2 id=\"10-1-规划沟通管理\">10.1 规划沟通管理</h2>\n<p>规划沟通管理是基于每个相关方或相关方群体的信息需求、可用的组织资产，以及具体项目的需求，为项目沟通活动制定恰当的方法和计划的过程。本过程的主要作用是，为及时向相关方提供相关信息，引导相关方有效参与项目，而编制书面沟通计划。本过程应根据需要在整个项目期间定期开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181554-1.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181554-2.png\" alt=\"\"></p>\n<h3 id=\"10-1-1-规划沟通管理：输入\">10.1.1 规划沟通管理：输入</h3>\n<p>规划沟通管理的输入包括：</p>\n<ul>\n<li>项目章程‘’</li>\n<li>项目管理计划\n<ul>\n<li>资源管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>需求文件</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织文化、政治氛围和治理框架；</li>\n<li>人事管理政策；</li>\n<li>相关方风险临界值；</li>\n<li>已确立的沟通渠道、工具和系统；</li>\n<li>全球、区域或当地的趋势、实践或习俗；</li>\n<li>设施和资源的地理分布。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>组织的社交媒体、道德和安全政策及程序；</li>\n<li>组织的问题、风险、变更和数据管理政策及程序；</li>\n<li>组织对沟通的要求；</li>\n<li>制作、交换、储存和检索信息的标准化指南；</li>\n<li>历史信息和经验教训知识库；</li>\n<li>以往项目的相关方及沟通数据和信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"10-1-2-规划沟通管理：工具与技术\">10.1.2 规划沟通管理：工具与技术</h3>\n<p>规划沟通管理需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>组织内的政治和权力结构；</li>\n<li>组织及其他客户组织的环境和文化；</li>\n<li>组织变革管理方法和实践；</li>\n<li>项目可交付成果所属的行业或类型；</li>\n<li>组织沟通技术；</li>\n<li>关于遵守与企业沟通有关的法律要求的组织政策与程序；</li>\n<li>与安全有关的组织政策与程序；</li>\n<li>相关方，包括客户或发起人。</li>\n</ul>\n</li>\n<li>沟通需求分析\n<ul>\n<li>相关方登记册及相关方参与计划中的相关信息和沟通需求；</li>\n<li>潜在沟通渠道或途径数量，包括一对一、一对多和多对多沟通；</li>\n<li>组织结构图；</li>\n<li>项目组织与相关方的职责、关系及相互依赖；</li>\n<li>开发方法；</li>\n<li>项目所涉及的学科、部门和专业；</li>\n<li>有多少人在什么地点参与项目；</li>\n<li>内部信息需要（如何时在组织内部沟通）；</li>\n<li>外部信息需要（如何时与媒体、公众或承包商沟通）；</li>\n<li>法律要求。</li>\n</ul>\n</li>\n<li>沟通技术（信息交换和协作的常见方法包括对话、会议、书面文件、数据库、社交媒体和网站。）</li>\n<li>沟通模型。沟通模型可以是最基本的线性（发送方和接收方）沟通过程，也可以是增加了反馈元素（发送方、接收方和反馈）、更具互动性的沟通形式，甚至可以是融合了发送方或接收方的人性因素、试图考虑沟通复杂性的更加复杂的沟通模型。\n<ul>\n<li>基本的发送方和接收方沟通模型示例。此模型将沟通描述为一个过程，并由发送方和接收方两方参与；其关注的是确保信息送达，而非信息理解。基本沟通模型中的步骤顺序为：\n<ul>\n<li>编码。把信息编码为各种符号，如文本、声音或其他可供传递（发送）的形式。</li>\n<li>传递信息。通过沟通渠道发送信息。信息传递可能受各种物理因素的不利影响，如不熟悉的技术，或不完备的基础设施。可能存在噪音和其他因素，导致信息传递和（或）接收过程中的信息损耗。</li>\n<li>解码。接收方将收到的数据还原为对自己有用的形式。</li>\n</ul>\n</li>\n<li>互动沟通模型示例。此模型也将沟通描述为由发送方与接收方参与的沟通过程，但它还强调确保信息理解的必要性。此模型包括任何可能干扰或阻碍信息理解的噪音，如接收方注意力分散、接收方的认知差异，或缺少适当的知识或兴趣。互动沟通模型中的新增步骤有：\n<ul>\n<li>确认已收到。收到信息时，接收方需告知对方已收到信息（确认已收到）。这并不一定意味着同意或理解信息的内容，仅表示已收到信息。</li>\n<li>反馈/响应。对收到的信息进行解码并理解之后，接收方把还原出来的思想或观点编码成信息，再传递给最初的发送方。如果发送方认为反馈与原来的信息相符，代表沟通已成功完成。</li>\n</ul>\n</li>\n<li>沟通方法\n<ul>\n<li>互动沟通。在两方或多方之间进行的实时多向信息交换。它使用诸如会议、电话、即时信息、社交媒体和视频会议等沟通工件。</li>\n<li>推式沟通。向需要接收信息的特定接收方发送或发布信息。这种方法可以确保信息的发送，但不能确保信息送达目标受众或被目标受众理解。在推式沟通中，可以采用的沟通工件包括信件、备忘录、报告、电子邮件、传真、语音邮件、博客、新闻稿。</li>\n<li>拉式沟通。适用于大量复杂信息或大量信息受众的情况。它要求接收方在遵守有关安全规定的前提之下自行访问相关内容。这种方法包括门户网站、企业内网、电子在线课程、经验教训数据库或知识库。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>人际关系与团队技能</li>\n<li>数据表现</li>\n<li>会议</li>\n</ul>\n<h3 id=\"10-1-3-规划沟通管理：输出\">10.1.3 规划沟通管理：输出</h3>\n<p>规划沟通管理的输出包括：</p>\n<ul>\n<li>沟通管理计划</li>\n<li>相关方的沟通需求；\n<ul>\n<li>需沟通的信息，包括语言、形式、内容和详细程度；</li>\n<li>上报步骤；</li>\n<li>发布信息的原因；</li>\n<li>发布所需信息、确认已收到，或作出回应（若适用）的时限和频率；</li>\n<li>负责沟通相关信息的人员；</li>\n<li>负责授权保密信息发布的人员；</li>\n<li>接收信息的人员或群体，包括他们的需要、需求和期望；</li>\n<li>用于传递信息的方法或技术，如备忘录、电子邮件、新闻稿，或社交媒体；</li>\n<li>为沟通活动分配的资源，包括时间和预算；</li>\n<li>随着项目进展，如项目不同阶段相关方社区的变化，而更新与优化沟通管理计划的方法；</li>\n<li>通用术语表；</li>\n<li>项目信息流向图、工作流程（可能包含审批程序）、报告清单和会议计划等；</li>\n<li>来自法律法规、技术、组织政策等的制约因素。</li>\n</ul>\n</li>\n<li>项目管理计划更新</li>\n<li>项目文件更新\n<ul>\n<li>项目进度计划</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-2-管理沟通\">10.2 管理沟通</h2>\n<p>管理沟通是确保项目信息及时且恰当地收集、生成、发布、存储、检索、管理、监督和最终处置的过程。本过程的主要作用是，促成项目团队与相关方之间的有效信息流动。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181554-3.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181554-4.png\" alt=\"\"></p>\n<p>本过程不局限于发布相关信息，它还设法确保信息以适当的格式正确生成和送达目标受众。本过程也为相关方提供机会，允许他们请求更多信息、澄清和讨论。有效的沟通管理需要借助相关技术并考虑相关事宜，包括（但不限于）：</p>\n<ul>\n<li>发送方 - 接收方模型。运用反馈循环，为互动和参与提供机会，并清除妨碍有效沟通的障碍。</li>\n<li>媒介选择。为满足特定的项目需求而使用合理的沟通工件，例如，何时进行书面沟通或口头沟通、何时准备非正式备忘录或正式报告、何时使用推式或拉式沟通，以及该选择何种沟通技术。</li>\n<li>写作风格。合理使用主动或被动语态、句子结构，以及合理选择词汇。</li>\n<li>会议管理。准备议程，邀请重要参会者并确保他们出席；处理会议现场发生的冲突，或因对会议纪要和后续行动跟进不力而导致的冲突，或因不当人员与会而导致的冲突。</li>\n<li>演示。了解肢体语言和视觉辅助设计的作用。</li>\n<li>引导。达成共识、克服障碍（如小组缺乏活力），以及维持小组成员的兴趣和热情。</li>\n<li>积极倾听。积极倾听包括告知已收到、澄清与确认信息、理解，以及消除妨碍理解的障碍。</li>\n</ul>\n<h3 id=\"10-2-1-管理沟通：输入\">10.2.1 管理沟通：输入</h3>\n<p>管理沟通的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>资源管理计划</li>\n<li>沟通管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>变更日志</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>质量报告</li>\n<li>风险报告</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>工作绩效报告</li>\n<li>事业环境因素\n<ul>\n<li>组织文化、政治氛围和治理框架；</li>\n<li>人事管理政策；</li>\n<li>相关方风险临界值；</li>\n<li>已确立的沟通渠道、工具和系统；</li>\n<li>全球、区域或当地的趋势、实践或习俗；</li>\n<li>设施和资源的地理分布。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>企业的社交媒体、道德和安全政策及程序；</li>\n<li>企业的问题、风险、变更和数据管理政策及程序；</li>\n<li>组织对沟通的要求；</li>\n<li>制作、交换、储存和检索信息的标准化指南；</li>\n<li>以往项目的历史信息，包括经验教训知识库。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"10-2-2-管理沟通：工具与技术\">10.2.2 管理沟通：工具与技术</h3>\n<p>管理沟通需要的工具与技术包括：</p>\n<ul>\n<li>\n<p>沟通技术</p>\n</li>\n<li>\n<p>沟通方法</p>\n</li>\n<li>\n<p>沟通技能</p>\n<ul>\n<li>沟通胜任力。经过裁剪的沟通技能的组合，有助于明确关键信息的目的、建立有效关系、实现信息共享和采取领导行为。</li>\n<li>反馈。反馈是关于沟通、可交付成果或情况的反应信息。反馈支持项目经理和团队及所有其他项目相关方之间的互动沟通。例如，指导、辅导和磋商。</li>\n<li>非口头技能。例如，通过示意、语调和面部表情等适当的肢体语言来表达意思。镜像模仿和眼神交流也是重要的技能。团队成员应该知道如何通过说什么和不说什么来表达自己的想法。</li>\n<li>演示。演示是信息和/或文档的正式交付。向项目相关方明确有效地演示项目信息可包括（但不限于）：\n<ul>\n<li>向相关方报告项目进度和信息更新；</li>\n<li>提供背景信息以支持决策制定；</li>\n<li>提供关于项目及其目标的通用信息，以提升项目工作和项目团队的形象；</li>\n<li>提供具体信息，以提升对项目工作和目标的理解和支持力度。</li>\n</ul>\n</li>\n</ul>\n<p>为获得演示成功，应该从内容和形式上考虑以下因素：</p>\n<ul>\n<li>受众及其期望和需求；</li>\n<li>项目和项目团队的需求及目标。</li>\n</ul>\n</li>\n<li>\n<p>项目管理信息系统</p>\n<ul>\n<li>电子项目管理工具</li>\n<li>电子沟通管理</li>\n<li>社交媒体管理</li>\n</ul>\n</li>\n<li>\n<p>项目报告发布</p>\n<ul>\n<li>项目报告发布是收集和发布项目信息的行为。项目信息应发布给众多相关方群体。应针对每种相关方来调整项目信息发布的适当层次、形式和细节。从简单的沟通到详尽的定制报告和演示，报告的形式各不相同。可以定期准备信息或基于例外情况准备。</li>\n</ul>\n</li>\n<li>\n<p>人际关系与团队技能</p>\n<ul>\n<li>积极倾听</li>\n<li>冲突管理</li>\n<li>文化意识</li>\n<li>会议管理</li>\n<li>人际交往</li>\n<li>政治意识</li>\n<li>会议</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"10-2-3-管理沟通：输出\">10.2.3 管理沟通：输出</h3>\n<p>管理沟通的输出包括：</p>\n<ul>\n<li>项目沟通记录\n<ul>\n<li>项目沟通工件可包括（但不限于）：绩效报告、可交付成果的状态、进度进展、产生的成本、演示，以及相关方需要的其他信息。</li>\n</ul>\n</li>\n<li>项目管理计划更新\n<ul>\n<li>沟通管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>组织过程资产更新\n<ul>\n<li>项目记录，例如往来函件、备忘录、会议记录及项目中使用的其他文档；</li>\n<li>计划内的和临时的项目报告和演示。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-3-监督沟通\">10.3 监督沟通</h2>\n<p>监督沟通是确保满足项目及其相关方的信息需求的过程。本过程的主要作用是，按沟通管理计划和相关方参与计划的要求优化信息传递流程。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181554-5.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417181554-6.png\" alt=\"\"></p>\n<h3 id=\"10-3-1-监督沟通：输入\">10.3.1 监督沟通：输入</h3>\n<p>监督沟通的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>资源管理计划</li>\n<li>沟通管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>项目沟通记录</li>\n<li>工作绩效数据</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织文化、政治氛围和治理框架；</li>\n<li>已确立的沟通渠道、工具和系统；</li>\n<li>全球、区域或当地的趋势、实践或习俗；</li>\n<li>设施和资源的地理分布。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>企业的社交媒体、道德和安全政策及程序；</li>\n<li>组织对沟通的要求；</li>\n<li>制作、交换、储存和检索信息的标准化指南；</li>\n<li>以往项目的历史信息和经验教训知识库；</li>\n<li>以往项目的相关方及沟通数据和信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"10-3-2-监督沟通：工具与技术\">10.3.2 监督沟通：工具与技术</h3>\n<p>监督沟通需要的工具与技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>项目管理信息系统</li>\n<li>数据表现</li>\n<li>人际关系与团队技能</li>\n<li>会议</li>\n</ul>\n<h3 id=\"10-3-3-监督沟通：输出\">10.3.3 监督沟通：输出</h3>\n<p>监督沟通的输出包括：</p>\n<ul>\n<li>工作绩效信息</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>沟通管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-项目风险管理\">11.项目风险管理</h2>\n<p>项目风险管理包括规划风险管理、识别风险、开展风险分析、规划风险应对、实施风险应对和监督风险的各个过程。项目风险管理的目标在于提高正面风险的概率或影响，降低负面风险的概率或影响，从而提高项目成功的可能性。</p>\n<p>项目风险管理的过程是：</p>\n<p><strong>11.1 规划风险管理</strong> — 定义如何实施项目风险管理活动的过程。</p>\n<p><strong>11.2 识别风险</strong> — 识别单个项目风险，以及整体项目风险的来源，并记录风险特征的过程。</p>\n<p><strong>11.3 实施定性风险分析</strong> — 通过评估单个项目风险发生的概率和影响以及其他特征，对风险进行优先级排序，从而为后续分析或行动提供基础的过程。</p>\n<p><strong>11.4 实施定量风险分析</strong> — 就已识别的单个项目风险和其他不确定性的来源对整体项目目标的综合影响进行定量分析的过程。</p>\n<p><strong>11.5 规划风险应对</strong> — 为处理整体项目风险敞口，以及应对单个项目风险，而制定可选方案、选择应对策略并商定应对行动的过程。</p>\n<p><strong>11.6 实施风险应对</strong> — 执行商定的风险应对计划的过程。</p>\n<p><strong>11.7 监督风险</strong> — 在整个项目期间，监督商定的风险应对计划的实施、跟踪已识别风险、识别和分析新风险，以及评估风险管理有效性的过程。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182700.png\" alt=\"\"></p>\n<p>项目风险管理的核心概念</p>\n<p>项目风险管理旨在识别和管理未被其他项目管理过程所管理的风险。如果不妥善管理，这些风险有可能导致项目偏离计划，无法达成既定的项目目标。因此，项目风险管理的有效性直接关乎项目成功与否。</p>\n<p>每个项目都在两个层面上存在风险。每个项目都有会影响项目达成目标的单个风险，以及由单个项目风险和不确定性的其他来源联合导致的整体项目风险。考虑整体项目风险，也非常重要。项目风险管理过程同时兼顾这两个层面的风险。它们的定义如下：</p>\n<ul>\n<li>单个项目风险是一旦发生，会对一个或多个项目目标产生正面或负面影响的不确定事件或条件。</li>\n<li>整体项目风险是不确定性对项目整体的影响，是相关方面临的项目结果正面和负面变异区间。它源于包括单个风险在内的所有不确定性。</li>\n</ul>\n<p><strong>项目风险管理的发展趋势和新兴实践</strong></p>\n<ul>\n<li>非事件类风险。大多数项目只关注作为可能发生或不发生的不确定性未来事件的风险。\n<ul>\n<li>变异性风险。已规划事件、活动或决策的某些关键方面存在不确定性，就导致变异性风险。</li>\n<li>模糊性风险。对未来可能发生什么，存在不确定性。</li>\n</ul>\n</li>\n<li>项目韧性。随着对所谓“未知-未知”因素的意识的增强，人们也越来越明确地知道确实存在突发性风险。这种风险只有在发生后才能被发现。可以通过加强项目韧性来应对突发性风险。这就要求每个项目：\n<ul>\n<li>除了为已知风险列出具体风险预算，还要为突发性风险预留合理的应急预算和时间；</li>\n<li>采用灵活的项目过程，包括强有力的变更管理，以便在保持朝项目目标推进的正确方向的同时，应对突发性风险；</li>\n<li>授权目标明确且值得信赖的项目团队在商定限制范围内完成工作；</li>\n<li>经常留意早期预警信号，以尽早识别突发性风险；</li>\n<li>明确征求相关方的意见，以明确为应对突发性风险而可以调整项目范围或策略的领域。</li>\n</ul>\n</li>\n<li>整合式风险管理。项目存在于组织背景中，可能是项目集或项目组合的一部分。在项目、项目集、项目组合和组织这些层面上，都存在风险。</li>\n</ul>\n<p><strong>裁剪时需要考虑的因素</strong></p>\n<ul>\n<li>项目规模</li>\n<li>项目复杂性</li>\n<li>项目重要性</li>\n<li>开发方法</li>\n</ul>\n<h2 id=\"11-1-规划风险管理\">11.1 规划风险管理</h2>\n<p>规划风险管理是定义如何实施项目风险管理活动的过程。本过程的主要作用是，确保风险管理的水平、方法和可见度与项目风险程度，以及项目对组织和其他相关方的重要程度相匹配。本过程仅开展一次或仅在项目的预定义点开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182700-1.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182700-2.png\" alt=\"\"></p>\n<h3 id=\"11-1-1-规划风险管理：输入\">11.1.1 规划风险管理：输入</h3>\n<p>规划风险管理的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划</li>\n<li>项目文件</li>\n<li>事业环境因素</li>\n<li>组织过程资产</li>\n<li>组织的风险政策；\n<ul>\n<li>风险类别，可能用风险分解结构来表示；</li>\n<li>风险概念和术语的通用定义；</li>\n<li>风险描述的格式；</li>\n<li>风险管理计划、风险登记册和风险报告的模板；</li>\n<li>角色与职责；</li>\n<li>决策所需的职权级别；</li>\n<li>经验教训知识库，其中包含以往类似项目的信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"11-1-2-规划风险管理：工具与技术\">11.1.2 规划风险管理：工具与技术</h3>\n<p>规划风险管理需要的工具与技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>数据分析</li>\n<li>会议</li>\n</ul>\n<h3 id=\"11-1-3-规划风险管理：输出\">11.1.3 规划风险管理：输出</h3>\n<p>规划风险管理的输出包括：</p>\n<ul>\n<li>风险管理计划\n<ul>\n<li>风险管理战略</li>\n<li>方法论</li>\n<li>角色与职责</li>\n<li>资金</li>\n<li>时间安排</li>\n<li>风险类别</li>\n<li>相关方风险偏好</li>\n<li>风险概率和影响定义</li>\n<li>概率和影响矩阵</li>\n<li>报告格式</li>\n<li>跟踪</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182700-3.png\" alt=\"\"></p>\n<h2 id=\"11-2-识别风险\">11.2 识别风险</h2>\n<p>识别风险是识别单个项目风险以及整体项目风险的来源，并记录风险特征的过程。本过程的主要作用是，记录现有的单个项目风险，以及整体项目风险的来源；同时，汇集相关信息，以便项目团队能够恰当应对已识别的风险。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182700-4.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182700-5.png\" alt=\"\"></p>\n<h3 id=\"11-2-1-识别风险：输入\">11.2.1 识别风险：输入</h3>\n<p>识别风险的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>需求管理计划</li>\n<li>进度管理计划</li>\n<li>成本管理计划</li>\n<li>质量管理计划</li>\n<li>资源管理计划</li>\n<li>风险管理计划</li>\n<li>范围基准</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>成本估算</li>\n<li>持续时间估算</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>需求文件</li>\n<li>资源需求</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>协议</li>\n<li>采购文档</li>\n<li>事业环境因素\n<ul>\n<li>已发布的材料，包括商业风险数据库或核对单；</li>\n<li>学术研究资料；</li>\n<li>标杆对照成果；</li>\n<li>类似项目的行业研究资料。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>项目文档，包括实际数据；</li>\n<li>组织和项目的过程控制资料；</li>\n<li>风险描述的格式；</li>\n<li>以往类似项目的核对单。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"11-2-2-识别风险：工具与技术\">11.2.2 识别风险：工具与技术</h3>\n<p>识别风险的工具与技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>数据收集\n<ul>\n<li>头脑风暴</li>\n<li>核对单</li>\n<li>访谈</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>根本原因分析</li>\n<li>假设条件和制约因素分析</li>\n<li>SWOT 分析</li>\n<li>文件分析</li>\n</ul>\n</li>\n<li>人际关系与团队技能</li>\n<li>提示清单</li>\n<li>会议</li>\n</ul>\n<h3 id=\"11-2-3-识别风险：输出\">11.2.3 识别风险：输出</h3>\n<p>识别风险的输出包括：</p>\n<ul>\n<li>风险登记册\n<ul>\n<li>已识别风险的清单。在风险登记册中，每项单个项目风险都被赋予一个独特的标识号。要以所需的详细程度对已识别风险进行描述，确保明确理解。可以使用结构化的风险描述，来把风险本身与风险原因及风险影响区分开来。</li>\n<li>潜在风险责任人。如果已在识别风险过程中识别出潜在的风险责任人，就要把该责任人记录到风险登记册中。随后将由实施定性风险分析过程进行确认。</li>\n<li>潜在风险应对措施清单。如果已在识别风险过程中识别出某种潜在的风险应对措施，就要把它记录到风险登记册中。随后将由规划风险应对过程进行确认。</li>\n</ul>\n</li>\n<li>风险报告\n<ul>\n<li>整体项目风险的来源。说明哪些是整体项目风险敞口的最重要驱动因素。</li>\n<li>关于已识别单个项目风险的概述信息。例如，已识别的威胁与机会的数量、风险在风险类别中的分布情况、测量指标和发展趋势。</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-3-实施定性风险分析\">11.3 实施定性风险分析</h2>\n<p>实施定性风险分析是通过评估单个项目风险发生的概率和影响以及其他特征，对风险进行优先级排序，从而为后续分析或行动提供基础的过程。本过程的主要作用是重点关注高优先级的风险。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182700-6.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182700-7.png\" alt=\"\"></p>\n<h3 id=\"11-3-1-实施定性风险分析：输入\">11.3.1 实施定性风险分析：输入</h3>\n<p>实施定性风险分析的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>类似项目的行业研究资料</li>\n<li>已发布的材料，包括商业风险数据库或核对单</li>\n</ul>\n</li>\n<li>组织过程资产</li>\n</ul>\n<h3 id=\"11-3-2-实施定性风险分析：工具与技术\">11.3.2 实施定性风险分析：工具与技术</h3>\n<p>实施定性风险分析需要的工具与技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>数据收集</li>\n<li>数据分析\n<ul>\n<li>风险数据质量评估。风险数据是开展定性风险分析的基础。风险数据质量评估旨在评价关于单个项目风险的数据的准确性和可靠性。使用低质量的风险数据，可能导致定性风险分析对项目来说基本没用。如果数据质量不可接受，就可能需要收集更好的数据。可以开展问卷调查，了解项目相关方对数据质量各方面的评价，包括数据的完整性、客观性、相关性和及时性，进而对风险数据的质量进行综合评估。可以计算这些方面的加权平均数，将其作为数据质量的总体分数。</li>\n<li>风险概率和影响评估。风险概率评估考虑的是特定风险发生的可能性，而风险影响评估考虑的是风险对一项或多项项目目标的潜在影响，如进度、成本、质量或绩效。威胁将产生负面的影响，机会将产生正面的影响。要对每个已识别的单个项目风险进行概率和影响评估。风险评估可以采用访谈或会议的形式，参加者将依照他们对风险登记册中所记录的风险类型的熟悉程度而定。项目团队成员和项目外部资深人员应该参加访谈或会议。在访谈或会议期间，评估每个风险的概率水平及其对每项目标的影响级别。如果相关方对概率水平和影响级别的感知存在差异，则应对差异进行探讨。此外，还应记录相应的说明性细节。</li>\n<li>其他风险参数评估。\n<ul>\n<li>紧迫性。为有效应对风险而必须采取应对措施的时间段。时间短就说明紧迫性高。</li>\n<li>邻近性。风险在多长时间后会影响一项或多项项目目标。时间短就说明邻近性高。</li>\n<li>潜伏期。从风险发生到影响显现之间可能的时间段。时间短就说明潜伏期短。</li>\n<li>可管理性。风险责任人（或责任组织）管理风险发生或影响的容易程度。如果容易管理，可管理性就高。</li>\n<li>可控性。风险责任人（或责任组织）能够控制风险后果的程度。如果后果很容易控制，可控性就高。</li>\n<li>可监测性。对风险发生或即将发生进行监测的容易程度。如果风险发生很容易监测，可监测性就高。</li>\n<li>连通性。风险与其他单个项目风险存在关联的程度大小。如果风险与多个其他风险存在关联，连通性就高。</li>\n<li>战略影响力。风险对组织战略目标潜在的正面或负面影响。如果风险对战略目标有重大影响，战略影响力就大。</li>\n<li>密切度。风险被一名或多名相关方认为要紧的程度。被认为很要紧的风险，密切度就高。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>人际关系与团队技能</li>\n<li>风险分类</li>\n<li>数据表现\n<ul>\n<li>概率和影响矩阵：概率和影响矩阵是把每个风险发生的概率和一旦发生对项目目标的影响映射起来的表格。此矩阵对概率和影响进行组合，以便于把单个项目风险划分成不同的优先级组别</li>\n<li>层级图</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"11-3-3-实施定性风险分析：输出\">11.3.3 实施定性风险分析：输出</h3>\n<p>实施定性风险分析的输出包括：</p>\n<ul>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>问题日志</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-4-实施定量风险分析\">11.4 实施定量风险分析</h2>\n<p>实施定量风险分析是就已识别的单个项目风险和不确定性的其他来源对整体项目目标的影响进行定量分析的过程。本过程的主要作用是，量化整体项目风险敞口，并提供额外的定量风险信息，以支持风险应对规划。本过程并非每个项目必需，但如果采用，它会在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182700-8.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182700-9.png\" alt=\"\"></p>\n<p>项目风险管理计划会规定是否需要使用定量风险分析，定量分析最可能适用于大型或复杂的项目、具有战略重要性的项目、合同要求进行定量分析的项目，或主要相关方要求进行定量分析的项目。通过评估所有单个项目风险和其他不确定性来源对项目结果的综合影响，定量风险分析就成为评估整体项目风险的唯一可靠的方法。</p>\n<h3 id=\"11-4-1-实施定量风险分析：输入\">11.4.1 实施定量风险分析：输入</h3>\n<p>实施定量风险分析的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>风险管理计划</li>\n<li>范围基准</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>估算依据</li>\n<li>成本估算</li>\n<li>成本预测</li>\n<li>持续时间估算</li>\n<li>里程碑清单</li>\n<li>资源需求</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n<li>进度预测</li>\n</ul>\n</li>\n<li>事业环境因素</li>\n<li>组织过程资产</li>\n</ul>\n<h3 id=\"11-4-2-实施定量风险分析：工具与技术\">11.4.2 实施定量风险分析：工具与技术</h3>\n<p>实施定量风险分析需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>将单个项目风险和其他不确定性来源的信息转化成用于定量风险分析模型的数值输入；</li>\n<li>选择最适当的方式表示不确定性，以便为特定风险或其他不确定性来源建立模型；</li>\n<li>用适合项目环境的技术建立模型；</li>\n<li>识别最适用于所选建模技术的工具；</li>\n<li>解释定量风险分析的输出。</li>\n</ul>\n</li>\n<li>数据收集</li>\n<li>人际关系与团队技能</li>\n<li>不确定性表现方式</li>\n<li>数据分析\n<ul>\n<li>模拟</li>\n<li>敏感性分析</li>\n<li>决策树分析</li>\n<li>影响图</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"11-4-3-实施定量风险分析：输出\">11.4.3 实施定量风险分析：输出</h3>\n<p>实施定量风险分析的输出包括：</p>\n<ul>\n<li>项目文件更新\n<ul>\n<li>对整体项目风险敞口的评估结果\n<ul>\n<li>项目成功的可能性。基于已识别的单个项目风险和其他不确定性来源，项目实现其主要目标（例如，既定的结束日期或中间里程碑、既定的成本目标）的概率。</li>\n<li>项目固有的变异性。在开展定量分析之时，可能的项目结果的分布区间。</li>\n</ul>\n</li>\n<li>项目详细概率分析的结果。列出定量风险分析的重要输出，如 S 曲线、龙卷风图和关键性指标，以及对它们的叙述性解释。定量风险分析的详细结果可能包括：\n<ul>\n<li>所需的应急储备，以达到实现目标的特定置信水平；</li>\n<li>对项目关键路径有最大影响的单个项目风险或其他不确定性来源的清单；</li>\n<li>整体项目风险的主要驱动因素，即：对项目结果的不确定性有最大影响的因素。</li>\n</ul>\n</li>\n<li>单个项目风险优先级清单。根据敏感性分析的结果，列出对项目造成最大威胁或产生最大机会的单个项目风险。</li>\n<li>定量风险分析结果的趋势。随着在项目生命周期的不同时间重复开展定量风险分析，风险的发展趋势可能逐渐清晰。发展趋势会影响对风险应对措施的规划。</li>\n<li>风险应对建议。风险报告可能根据定量风险分析的结果，针对整体项目风险敞口或关键单个项目风险提出应对建议。这些建议将成为规划风险应对过程的输入。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-5-规划风险应对\">11.5 规划风险应对</h2>\n<p>规划风险应对是为处理整体项目风险敞口，以及应对单个项目风险，而制定可选方案、选择应对策略并商定应对行动的过程。本过程的主要作用是，制定应对整体项目风险和单个项目风险的适当方法；本过程还将分配资源，并根据需要将相关活动添加进项目文件和项目管理计划。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182700-10.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182700-11.png\" alt=\"\"></p>\n<h3 id=\"11-5-1-规划风险应对：输入\">11.5.1 规划风险应对：输入</h3>\n<p>规划风险应对的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>资源管理计划</li>\n<li>风险管理计划</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>项目团队派工单</li>\n<li>资源日历</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素</li>\n<li>组织过程资产\n<ul>\n<li>风险管理计划、风险登记册和风险报告的模板；</li>\n<li>历史数据库；</li>\n<li>类似项目的经验教训知识库。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"11-5-2-规划风险应对：工具与技术\">11.5.2 规划风险应对：工具与技术</h3>\n<p>规划风险应对需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>威胁应对策略；</li>\n<li>机会应对策略；</li>\n<li>应急应对策略；</li>\n<li>整体项目风险应对策略。</li>\n</ul>\n</li>\n<li>数据收集</li>\n<li>人际关系与团队技能</li>\n<li>威胁应对策略\n<ul>\n<li>上报</li>\n<li>规避</li>\n<li>转移</li>\n<li>减轻</li>\n<li>接受</li>\n</ul>\n</li>\n<li>机会应对策略\n<ul>\n<li>上报</li>\n<li>开拓</li>\n<li>分享</li>\n<li>提高</li>\n<li>接受</li>\n</ul>\n</li>\n<li>应急应对策略</li>\n<li>整体项目风险应对策略\n<ul>\n<li>规避</li>\n<li>开拓</li>\n<li>转移或分享</li>\n<li>减轻或提高</li>\n<li>接受</li>\n</ul>\n</li>\n<li>数据分析\n<ul>\n<li>备选方案分析</li>\n<li>成本收益分析</li>\n</ul>\n</li>\n<li>决策</li>\n</ul>\n<h3 id=\"11-5-3-规划风险应对：输出\">11.5.3 规划风险应对：输出</h3>\n<p>规划风险应对的输出包括：</p>\n<ul>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>进度管理计划</li>\n<li>成本管理计划</li>\n<li>质量管理计划</li>\n<li>资源管理计划</li>\n<li>采购管理计划</li>\n<li>范围基准</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>成本预测</li>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>项目团队派工单</li>\n<li>风险登记册\n<ul>\n<li>商定的应对策略；</li>\n<li>实施所选应对策略所需要的具体行动；</li>\n<li>风险发生的触发条件、征兆和预警信号；</li>\n<li>实施所选应对策略所需要的预算和进度活动；</li>\n<li>应急计划，以及启动该计划所需的风险触发条件；</li>\n<li>弹回计划，供风险发生且主要应对措施不足以应对时使用；</li>\n<li>在采取预定应对措施之后仍然存在的残余风险，以及被有意接受的风险；</li>\n<li>由实施风险应对措施而直接导致的次生风险。</li>\n</ul>\n</li>\n<li>风险报告</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-6-实施风险应对\">11.6 实施风险应对</h2>\n<p>实施风险应对是执行商定的风险应对计划的过程。本过程的主要作用是，确保按计划执行商定的风险应对措施，来管理整体项目风险敞口、最小化单个项目威胁，以及最大化单个项目机会。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182700-12.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182700-13.png\" alt=\"\"></p>\n<h3 id=\"11-6-1-实施风险应对：输入\">11.6.1 实施风险应对：输入</h3>\n<p>实施风险应对的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n</ul>\n</li>\n<li>组织过程资产</li>\n</ul>\n<h3 id=\"11-6-2-实施风险应对：工具与技术\">11.6.2 实施风险应对：工具与技术</h3>\n<p>实施风险应对需要的工具与技术包括：</p>\n<ul>\n<li>专家判断</li>\n<li>人际关系与团队技能</li>\n<li>项目管理信息系统</li>\n</ul>\n<h3 id=\"11-6-3-实施风险应对：输出\">11.6.3 实施风险应对：输出</h3>\n<p>实施风险应对的输出包括：</p>\n<ul>\n<li>变更请求</li>\n<li>项目文件更新\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>项目团队派工单</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-7-监督风险\">11.7 监督风险</h2>\n<p>监督风险是在整个项目期间，监督商定的风险应对计划的实施、跟踪已识别风险、识别和分析新风险，以及评估风险管理有效性的过程。本过程的主要作用是，使项目决策都基于关于整体项目风险敞口和单个项目风险的当前信息。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182700-14.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182700-15.png\" alt=\"\"></p>\n<p>为了确保项目团队和关键相关方了解当前的风险敞口级别，应该通过监督风险过程对项目工作进行持续监督，来发现新出现、正变化和已过时的单个项目风险。监督风险过程采用项目执行期间生成的绩效信息，以确定：</p>\n<ul>\n<li>实施的风险应对是否有效；</li>\n<li>整体项目风险级别是否已改变；</li>\n<li>已识别单个项目风险的状态是否已改变；</li>\n<li>是否出现新的单个项目风险；</li>\n<li>风险管理方法是否依然适用；</li>\n<li>项目假设条件是否仍然成立；</li>\n<li>风险管理政策和程序是否已得到遵守；</li>\n<li>成本或进度应急储备是否需要修改；</li>\n<li>项目策略是否仍然有效。</li>\n</ul>\n<h3 id=\"11-7-1-监督风险：输入\">11.7.1 监督风险：输入</h3>\n<p>监督风险的输入包括：</p>\n<ul>\n<li>项目管理计划</li>\n<li>项目文件\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n</ul>\n</li>\n<li>工作绩效数据</li>\n<li>工作绩效报告</li>\n</ul>\n<h3 id=\"11-7-2-监督风险：工具与技术\">11.7.2 监督风险：工具与技术</h3>\n<p>监督风险需要的工具与技术包括：</p>\n<ul>\n<li>数据分析\n<ul>\n<li>技术绩效分析</li>\n<li>储备分析</li>\n</ul>\n</li>\n<li>审计</li>\n<li>会议</li>\n</ul>\n<h3 id=\"11-7-3-监督风险：输出\">11.7.3 监督风险：输出</h3>\n<p>监督风险的输出包括：</p>\n<ul>\n<li>工作绩效信息</li>\n<li>变更请求</li>\n<li>项目管理计划更新</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n<li>风险报告</li>\n</ul>\n</li>\n<li>组织过程资产更新\n<ul>\n<li>风险管理计划、风险登记册和风险报告的模板</li>\n<li>风险分解结构</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"12-项目采购管理\">12.项目采购管理</h2>\n<p>项目采购管理包括从项目团队外部采购或获取所需产品、服务或成果的各个过程。项目采购管理包括编制和管理协议所需的管理和控制过程，例如：合同、订购单、协议备忘录（MOA），或服务水平协议（SLA）。被授权采购项目所需货物和（或）服务的人员可以是项目团队、管理层或组织采购部的成员。</p>\n<p><strong>项目采购管理过程包括：</strong></p>\n<p><strong>12.1 规划采购管理</strong> — 记录项目采购决策、明确采购方法，及识别潜在卖方的过程。</p>\n<p><strong>12.2 实施采购</strong> — 获取卖方应答、选择卖方并授予合同的过程。</p>\n<p><strong>12.3 控制采购</strong> — 管理采购关系、监督合同绩效、实施必要的变更和纠偏，以及关闭合同的过程。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182755.png\" alt=\"\"></p>\n<p><strong>项目采购管理的核心概念</strong></p>\n<p>项目采购管理过程涉及到用协议来描述买卖双方之间的关系。协议可以很简单，如以特定人工单价购买所需的工时，也可以很复杂，如多年的国际施工合同。合同签署的方法和合同本身应体现可交付成果或所需人力投入的简单性或复杂性，其书写形式也应符合当地、所在国或国际法中关于合同签署的规定。</p>\n<p>合同应明确说明预期的可交付成果和结果，包括从卖方到买方的任何知识转移。合同中未规定的任何事项则不具法律强制力。开展国际合作的项目经理应牢记，无论合同规定如何详尽，文化和当地法律对合同及其可执行性均有影响。采购合同中包括条款和条件，也可包括买方就卖方应实施工作或应交付产品的其他规定。</p>\n<p>中标人可将所承揽的工作当作一个项目加以管理。在这种情况下：</p>\n<ul>\n<li>买方就变成了承包商、供应商及服务提供商的客户，因此也就是卖方的关键项目相关方。</li>\n<li>卖方的项目管理团队就需要关注工作执行或服务提供所涉及的所有过程。</li>\n<li>对于卖方来说，合同条款和条件以及采购工作说明书 (SOW) 都是其许多管理过程的重要输入。在合同中，可实际列出各种输入（如，主要可交付成果、关键里程碑、成本目标），或者可限制项目团队的选择余地（如，在 IT 整合项目中，关于人员配备的决定往往要征得买方的批准）。另外，采购工作说明书可能使用其他名称，如技术工作说明书。</li>\n<li>卖方本身也可能成为更低层级的产品、服务和材料分包商及供应商的买方。</li>\n</ul>\n<p><strong>采购管理的发展趋势和新兴实践</strong></p>\n<ul>\n<li>工具的改进</li>\n<li>更先进的风险管理</li>\n<li>变化中的合同签署实践</li>\n<li>物流和供应链管理</li>\n<li>技术和相关方关系</li>\n<li>试用采购</li>\n</ul>\n<p><strong>裁剪时需要考虑的因素</strong></p>\n<ul>\n<li>采购的复杂性</li>\n<li>物理地点</li>\n<li>治理和法规环境</li>\n<li>承包商的可用性</li>\n</ul>\n<h2 id=\"12-1-规划采购管理\">12.1 规划采购管理</h2>\n<p>规划采购管理是记录项目采购决策、明确采购方法，及识别潜在卖方的过程。本过程的主要作用是，确定是否从项目外部获取货物和服务，如果是，则还要确定将在什么时间、以什么方式获取什么货物和服务。货物和服务可从执行组织的其他部门采购，或者从外部渠道采购。本过程仅开展一次或在项目的预定义点开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182755-1.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182755-2.png\" alt=\"\"></p>\n<p><strong>典型的步骤可能有：</strong></p>\n<ul>\n<li>准备采购工作说明书 (SOW) 或工作大纲 (TOR)；</li>\n<li>准备高层级的成本估算，制定预算；</li>\n<li>发布招标广告；</li>\n<li>确定合格卖方的短名单；</li>\n<li>准备并发布招标文件；</li>\n<li>由卖方准备并提交建议书；</li>\n<li>对建议书开展技术（包括质量）评估；</li>\n<li>对建议书开展成本评估；</li>\n<li>准备最终的综合评估报告（包括质量及成本），选出中标建议书；</li>\n<li>结束谈判，买方和卖方签署合同。<br>\n项目进度计划对规划采购管理过程中的采购策略制定有重要影响。在制定采购管理计划时所做出的决定也会影响项目进度计划。在开展制定进度计划过程、估算活动资源过程以及自制或外购决策制定时，都需要考虑这些决定。</li>\n</ul>\n<h3 id=\"12-1-1-规划采购管理：输入\">12.1.1 规划采购管理：输入</h3>\n<p>规划采购管理的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>商业文件\n<ul>\n<li>商业论证</li>\n<li>收益管理计划</li>\n</ul>\n</li>\n<li>项目管理计划\n<ul>\n<li>范围管理计划</li>\n<li>质量管理计划</li>\n<li>资源管理计划</li>\n<li>范围基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>里程碑清单</li>\n<li>项目团队派工单</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n<li>资源需求</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>市场条件；</li>\n<li>可从市场获得的产品、服务和成果；</li>\n<li>卖方，包括其以往绩效或声誉；</li>\n<li>关于产品、服务和成果的典型条款和条件，或适用于特定行业的典型条款和条件；</li>\n<li>特殊的当地要求，例如关于雇用当地员工或卖方的法规要求；</li>\n<li>关于采购的法律建议；</li>\n<li>合同管理系统，包括合同变更控制程序；</li>\n<li>已有的多层级供应商系统，其中列出了基于以往经验而预审合格的卖方；</li>\n<li>财务会计和合同支付系统。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>预先批准的卖方清单</li>\n<li>正式的采购政策、程序和指南</li>\n<li>合同类型\n<ul>\n<li>总价合同：此类合同为既定产品、服务或成果的采购设定一个总价。这种合同应在已明确定义需求，且不会出现重大范围变更的情况下使用。</li>\n<li>成本补偿合同：此类合同向卖方支付为完成工作而发生的全部合法实际成本（可报销成本），外加一笔费用作为卖方的利润。这种合同适用于：工作范围预计会在合同执行期间发生重大变更。</li>\n<li>工料合同（T&amp;M）：工料合同（又称时间和手段合同），是兼具成本补偿合同和总价合同特点的混合型合同。这种合同往往适用于：在无法快速编制出准确的工作说明书的情况下扩充人员、聘用专家或寻求外部支持。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"12-1-2-规划采购管理：工具与技术\">12.1.2 规划采购管理：工具与技术</h3>\n<p>规划采购管理需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>采购与购买；</li>\n<li>合同类型和合同文件；</li>\n<li>法规及合规性。</li>\n</ul>\n</li>\n<li>数据收集</li>\n<li>数据分析</li>\n<li>供方选择分析\n<ul>\n<li>最低成本</li>\n<li>仅凭资质</li>\n<li>基于质量或技术方案得分</li>\n<li>基于质量和成本</li>\n<li>独有来源</li>\n<li>固定预算</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"12-1-3-规划采购管理：输出\">12.1.3 规划采购管理：输出</h3>\n<p>规划采购管理的输出包括：</p>\n<ul>\n<li>采购管理计划\n<ul>\n<li>如何协调采购与项目的其他工作，例如，项目进度计划制定和控制；</li>\n<li>开展重要采购活动的时间表；</li>\n<li>用于管理合同的采购测量指标；</li>\n<li>与采购有关的相关方角色和职责；如果执行组织有采购部，项目团队拥有的职权和受到的限制；</li>\n<li>可能影响采购工作的制约因素和假设条件；</li>\n<li>司法管辖权和付款货币；</li>\n<li>是否需要编制独立估算，以及是否应将其作为评价标准；</li>\n<li>风险管理事项，包括对履约保函或保险合同的要求，以减轻某些项目风险；</li>\n<li>拟使用的预审合格的卖方（如果有）。</li>\n</ul>\n</li>\n<li>采购策略\n<ul>\n<li>交付方法。对专业服务项目和建筑施工项目，应该采用不同的交付方法。\n<ul>\n<li>专业服务项目的交付方法包括：买方或服务提供方不得分包、买方或服务提供方可以分包、买方和服务提供方设立合资企业、买方或服务提供方仅充当代表。</li>\n<li>而工业或商业施工项目的交付方法包括（但不限于）：交钥匙式、设计-建造 (DB)、设计-招标-建造 (DBB)、设计-建造-运营 (DBO)、建造-拥有-运营-转让 (BOOT)，及其他。</li>\n</ul>\n</li>\n<li>合同支付类型。合同支付类型与项目交付方法无关，需要与采购组织的内部财务系统相协调。它们包括（但不限于）以下合同类型及其变种：总价、固定总价、成本加奖励费用、成本加激励费用、工料、目标成本及其他。\n<ul>\n<li>总价合同适用于工作类型可预知、需求能清晰定义且不太可能变更的情况；</li>\n<li>成本补偿合同适用于工作不断演进、很可能变更或未明确定义的情况；</li>\n<li>激励和奖励费用可用于协调买方和卖方的目标。</li>\n</ul>\n</li>\n<li>采购阶段。采购策略也可以包括与采购阶段有关的信息，这种信息可能包括：\n<ul>\n<li>采购工作的顺序安排或阶段划分，每个阶段的描述，以及每个阶段的具体目标；</li>\n<li>用于监督的采购绩效指标和里程碑；</li>\n<li>从一个阶段过渡到下一个阶段的标准；</li>\n<li>用于追踪采购进展的监督和评估计划；</li>\n<li>向后续阶段转移知识的过程。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>招标文件\n<ul>\n<li>信息邀请书 (RFI)。如果需要卖方提供关于拟采购货物和服务的更多信息，就使用信息邀请书。随后一般还会使用报价邀请书或建议邀请书。</li>\n<li>报价邀请书 (RFQ)。如果需要供应商提供关于将如何满足需求和（或）将需要多少成本的更多信息，就使用报价邀请书。</li>\n<li>建议邀请书 (RFP)。如果项目中出现问题且解决办法难以确定，就使用建议邀请书。这是最正式的“邀请书”文件，需要遵守与内容、时间表，以及卖方应答有关的严格的采购规则。</li>\n</ul>\n</li>\n<li>采购工作说明书\n<ul>\n<li>承包商需要执行的任务，以及所需的协调工作；</li>\n<li>承包商必须达到的适用标准；</li>\n<li>需要提交批准的数据；</li>\n<li>由买方提供给承包商的，将用于合同履行的全部数据和服务的详细清单（若适用）；</li>\n<li>关于初始成果提交和审查（或审批）的进度计划。</li>\n</ul>\n</li>\n<li>供方选择标准\n<ul>\n<li>能力和潜能；</li>\n<li>产品成本和生命周期成本；</li>\n<li>交付日期；</li>\n<li>技术专长和方法；</li>\n<li>具体的相关经验；</li>\n<li>用于响应工作说明书的工作方法和工作计划；</li>\n<li>关键员工的资质、可用性和胜任力；</li>\n<li>公司的财务稳定性；</li>\n<li>管理经验；</li>\n<li>知识转移计划，包括培训计划。</li>\n</ul>\n</li>\n<li>自制或外购决策</li>\n<li>独立成本估算</li>\n<li>变更请求</li>\n<li>项目文件更新\n<ul>\n<li>经验教训登记册</li>\n<li>里程碑清单</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>组织过程资产更新</li>\n</ul>\n<h2 id=\"12-2-实施采购\">12.2 实施采购</h2>\n<p>实施采购是获取卖方应答、选择卖方并授予合同的过程。本过程的主要作用是，选定合格卖方并签署关于货物或服务交付的法律协议。本过程的最后成果是签订的协议，包括正式合同。本过程应根据需要在整个项目期间定期开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182755-3.png\" alt=\"\"></p>\n<p><img src=\"https://www.zabbx.cn/upload/2020/07/7-0077ebfce04745929c953bd559d7d7f3.png\" alt=\"\"></p>\n<h3 id=\"12-2-1-实施采购：输入\">12.2.1 实施采购：输入</h3>\n<p>实施采购的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>范围管理计划</li>\n<li>需求管理计划</li>\n<li>沟通管理计划</li>\n<li>风险管理计划</li>\n<li>采购管理计划</li>\n<li>配置管理计划</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>经验教训登记册</li>\n<li>项目进度计划</li>\n<li>需求文件</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>采购文档\n<ul>\n<li>招标文件</li>\n<li>采购工作说明书</li>\n<li>独立成本估算</li>\n<li>供方选择标准</li>\n<li>卖方建议书</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>关于采购的当地法律和法规；</li>\n<li>确保主要采购涉及当地卖方的当地法律和法规；</li>\n<li>制约采购过程的外部经济环境；</li>\n<li>市场条件；</li>\n<li>以往与卖方合作的相关经验，包括正反两方面；</li>\n<li>之前使用的协议；</li>\n<li>合同管理系统。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>预审合格的优先卖方清单；</li>\n<li>会影响卖方选择的组织政策；</li>\n<li>组织中关于协议起草及签订的具体模板或指南；</li>\n<li>关于付款申请和支付过程的财务政策和程序。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"12-2-2-实施采购：工具与技术\">12.2.2 实施采购：工具与技术</h3>\n<p>实施采购需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>建议书评估；</li>\n<li>技术或相关主题事宜；</li>\n<li>相关的职能领域，如财务、工程、设计、开发、供应链管理等；</li>\n<li>行业监管环境；</li>\n<li>法律法规和合规性要求；</li>\n<li>谈判。</li>\n</ul>\n</li>\n<li>广告</li>\n<li>投标人会议</li>\n<li>数据分析</li>\n<li>人际关系与团队技能</li>\n</ul>\n<h3 id=\"12-2-3-实施采购：输出\">12.2.3 实施采购：输出</h3>\n<p>实施采购的输出包括：</p>\n<ul>\n<li>选定的卖方</li>\n<li>协议\n<ul>\n<li>采购工作说明书或主要的可交付成果；</li>\n<li>进度计划、里程碑，或进度计划中规定的日期；</li>\n<li>绩效报告；</li>\n<li>定价和支付条款；</li>\n<li>检查、质量和验收标准；</li>\n<li>担保和后续产品支持；</li>\n<li>激励和惩罚；</li>\n<li>保险和履约保函；</li>\n<li>下属分包商批准；</li>\n<li>一般条款和条件；</li>\n<li>变更请求处理；</li>\n<li>终止条款和替代争议解决方法。</li>\n</ul>\n</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>需求管理计划</li>\n<li>质量管理计划</li>\n<li>沟通管理计划</li>\n<li>风险管理计划</li>\n<li>采购管理计划</li>\n<li>范围基准</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>经验教训登记册</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n<li>资源日历</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>组织过程资产更新\n<ul>\n<li>潜在和预审合格的卖方清单；</li>\n<li>与卖方合作的相关经验，包括正反两方面。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"12-3-控制采购\">12.3 控制采购</h2>\n<p>控制采购是管理采购关系，监督合同绩效，实施必要的变更和纠偏，以及关闭合同的过程。本过程的主要作用是，确保买卖双方履行法律协议，满足项目需求。本过程应根据需要在整个项目期间开展。</p>\n<p><img src=\"https://www.zabbx.cn/upload/2020/07/8-7272801c1a4d4d5089a632739bbd8ced.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182755-4.png\" alt=\"\"></p>\n<p>合同管理活动可能包括：</p>\n<ul>\n<li>收集数据和管理项目记录，包括维护对实体和财务绩效的详细记录，以及建立可测量的采购绩效指标；</li>\n<li>完善采购计划和进度计划；</li>\n<li>建立与采购相关的项目数据的收集、分析和报告机制，并为组织编制定期报告；</li>\n<li>监督采购环境，以便引导或调整实施；</li>\n<li>向卖方付款。</li>\n</ul>\n<h3 id=\"12-3-1-控制采购：输入\">12.3.1 控制采购：输入</h3>\n<p>控制采购的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>需求管理计划</li>\n<li>风险管理计划</li>\n<li>采购管理计划</li>\n<li>变更管理计划</li>\n<li>进度基准</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>经验教训登记册</li>\n<li>里程碑清单</li>\n<li>质量报告</li>\n<li>需求文件</li>\n<li>需求跟踪矩阵</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>协议</li>\n<li>采购文档</li>\n<li>批准的变更请求</li>\n<li>工作绩效数据</li>\n<li>事业环境因素\n<ul>\n<li>合同变更控制系统；</li>\n<li>市场条件；</li>\n<li>财务管理和应付账款系统；</li>\n<li>采购组织的道德规范。</li>\n</ul>\n</li>\n<li>组织过程资产</li>\n</ul>\n<h3 id=\"12-3-2-控制采购：工具与技术\">12.3.2 控制采购：工具与技术</h3>\n<p>控制采购需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>相关的职能领域，如财务、工程、设计、开发、供应链管理等；</li>\n<li>法律法规和合规性要求；</li>\n<li>索赔管理。</li>\n</ul>\n</li>\n<li>索赔管理</li>\n<li>数据分析\n<ul>\n<li>绩效审查</li>\n<li>挣值分析（EVA）</li>\n<li>趋势分析</li>\n</ul>\n</li>\n<li>检查</li>\n<li>审计</li>\n</ul>\n<h3 id=\"12-3-3-控制采购：输出\">12.3.3 控制采购：输出</h3>\n<p>控制采购的输出包括：</p>\n<ul>\n<li>采购关闭</li>\n<li>工作绩效信息</li>\n<li>采购文档更新</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>风险管理计划</li>\n<li>采购管理计划</li>\n<li>进度基准</li>\n<li>成本基准</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>经验教训登记册</li>\n<li>资源需求</li>\n<li>需求跟踪矩阵</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>组织过程资产更新\n<ul>\n<li>支付计划和请求</li>\n<li>卖方绩效评估文件</li>\n<li>预审合格卖方清单更新</li>\n<li>经验教训登记册</li>\n<li>采购档案</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"13-项目相关方管理\">13.项目相关方管理</h2>\n<p>项目相关方管理包括用于开展下列工作的各个过程：识别能够影响项目或会受项目影响的人员、团体或组织，分析相关方对项目的期望和影响，制定合适的管理策略来有效调动相关方参与项目决策和执行。用这些过程分析相关方期望，评估他们对项目或受项目影响的程度，以及制定策略来有效引导相关方支持项目决策、规划和执行。</p>\n<p><strong>项目相关方管理的过程是：</strong></p>\n<p><strong>13.1 识别相关方</strong> — 识别相关方是定期识别项目相关方，分析和记录他们的利益、参与度、相互依赖性、影响力和对项目成功的潜在影响的过程。</p>\n<p><strong>13.2 规划相关方参与</strong> — 规划相关方参与是根据相关方的需求、期望、利益和对项目的潜在影响，制定项目相关方参与项目的方法的过程。</p>\n<p><strong>13.3 管理相关方参与</strong> — 管理相关方参与是与相关方进行沟通和协作，以满足其需求与期望，处理问题，并促进相关方合理参与的过程。</p>\n<p><strong>13.4 监督相关方参与</strong> — 监督项目相关方关系，并通过修订参与策略和计划来引导相关方合理参与项目的过程。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182902.png\" alt=\"\"></p>\n<p><strong>项目相关方管理的核心概念</strong></p>\n<p>相关方满意度应作为项目目标加以识别和管理。有效引导相关方参与的关键是重视与所有相关方保持持续沟通（包括团队成员），以理解他们的需求和期望、处理所发生的问题、管理利益冲突，并促进相关方参与项目决策和活动。</p>\n<p>至少要在以下时点开展这些活动：</p>\n<ul>\n<li>项目进入其生命周期的不同阶段；</li>\n<li>当前相关方不再与项目工作有关，或者在项目的相关方社区中出现了新的相关方成员；</li>\n<li>组织内部或更大区域的相关方社区发生重大变化。</li>\n</ul>\n<p><strong>项目相关方管理的发展趋势和新兴实践</strong></p>\n<ul>\n<li>识别所有相关方，而非在限定范围内；</li>\n<li>确保所有团队成员都涉及引导相关方参与的活动；</li>\n<li>定期审查相关方社区，往往与单个项目风险的审查并行开展；</li>\n<li>应用“共创”概念，咨询最受项目工作或成果影响的相关方。该概念的重点是，将团队内受影响的相关方视为合作伙伴。</li>\n<li>关注与相关方有效参与程度有关的正面及负面价值。正面价值是相关方（尤其是强大相关方）对项目的更积极支持所带来的效益；负面价值是因相关方未有效参与而造成的真实成本，包括产品召回、组织信誉损失或项目信誉损失。</li>\n</ul>\n<p>裁剪时需要考虑的因素</p>\n<ul>\n<li>相关方多样性</li>\n<li>相关方关系的复杂性</li>\n<li>沟通技术</li>\n</ul>\n<h2 id=\"13-1-识别相关方\">13.1 识别相关方</h2>\n<p>识别相关方是定期识别项目相关方，分析和记录他们的利益、参与度、相互依赖性、影响力和对项目成功的潜在影响的过程。本过程的主要作用是，使项目团队能够建立对每个相关方或相关方群体的适度关注。本过程应根据需要在整个项目期间定期开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182902-1.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182902-2.png\" alt=\"\"></p>\n<p>本过程通常在编制和批准项目章程之前或同时首次开展。本过程需在必要时重复开展，至少应在每个阶段开始时，以及项目或组织出现重大变化时重复开展。每次重复开展本过程，都应通过查阅项目管理计划组件及项目文件，来识别有关的项目相关方。</p>\n<h3 id=\"13-1-1-识别相关方：输入\">13.1.1 识别相关方：输入</h3>\n<p>识别相关方的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>商业文件\n<ul>\n<li>商业论证</li>\n<li>收益管理计划</li>\n</ul>\n</li>\n<li>项目管理计划\n<ul>\n<li>沟通管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>变更日志</li>\n<li>问题日志</li>\n<li>需求文件</li>\n</ul>\n</li>\n<li>协议</li>\n<li>事业环境因素\n<ul>\n<li>组织文化、政治氛围，以及治理框架；</li>\n<li>政府或行业标准（法规、产品标准和行为规范）；</li>\n<li>全球、区域或当地的趋势、实践或习惯；</li>\n<li>设施和资源的地理分布。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>相关方登记册模板和说明；</li>\n<li>以往项目的相关方登记册；</li>\n<li>经验教训知识库，包括与相关方偏好、行动和参与有关的信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"13-1-2-识别相关方：工具与技术\">13.1.2 识别相关方：工具与技术</h3>\n<p>识别相关方需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>理解组织内的政治和权力结构；</li>\n<li>了解所在组织和其他受影响组织（包括客户及其他组织）的环境和文化；</li>\n<li>了解项目所在行业或项目可交付成果类型；</li>\n<li>了解个体团队成员的贡献和专长。</li>\n</ul>\n</li>\n<li>数据收集\n<ul>\n<li>问卷和调查</li>\n<li>头脑风暴</li>\n</ul>\n</li>\n<li>数据分析数据表现\n<ul>\n<li>相关方分析\n<ul>\n<li>兴趣</li>\n<li>权利</li>\n<li>所有权</li>\n<li>知识</li>\n<li>贡献</li>\n</ul>\n</li>\n<li>文件分析</li>\n</ul>\n</li>\n<li>数据表现\n<ul>\n<li>权力利益方格、权力影响方格，或作用影响方格</li>\n<li>相关方立方体</li>\n<li>凸显模型</li>\n<li>影响方向</li>\n<li>优先级排序</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"13-1-3-识别相关方：输出\">13.1.3 识别相关方：输出</h3>\n<p>识别相关方的输出包括：</p>\n<ul>\n<li>相关方登记册\n<ul>\n<li>身份信息</li>\n<li>评估信息</li>\n<li>相关方分类</li>\n</ul>\n</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>需求管理计划</li>\n<li>沟通管理计划</li>\n<li>风险管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>假设日志</li>\n<li>问题日志</li>\n<li>风险登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"13-2-规划相关方参与\">13.2 规划相关方参与</h2>\n<p>规划相关方参与是根据相关方的需求、期望、利益和对项目的潜在影响，制定项目相关方参与项目的方法的过程。本过程的主要作用是，提供与相关方进行有效互动的可行计划。本过程应根据需要在整个项目期间定期开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182902-3.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182902-4.png\" alt=\"\"></p>\n<p>会触发该计划更新的典型情况包括（但不限于）：</p>\n<ul>\n<li>项目新阶段开始；</li>\n<li>组织结构或行业内部发生变化；</li>\n<li>新的个人或群体成为相关方，现有相关方不再是相关方社区的成员，或特定相关方对项目成功的重要性发生变化；</li>\n<li>当其他项目过程（如变更管理、风险管理或问题管理）的输出导致需要重新审查相关方参与策略。<br>\n这些情况都可能导致已识别相关方的相对重要性发生变化。</li>\n</ul>\n<h3 id=\"13-2-1-规划相关方参与：输入\">13.2.1 规划相关方参与：输入</h3>\n<p>规划相关方参与的输入包括：</p>\n<ul>\n<li>项目章程</li>\n<li>项目管理计划\n<ul>\n<li>资源管理计划</li>\n<li>沟通管理计划</li>\n<li>风险管理计划</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>假设日志</li>\n<li>变更日志</li>\n<li>问题日志</li>\n<li>项目进度计划</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>协议</li>\n<li>事业环境因素\n<ul>\n<li>组织文化、政治氛围，以及治理框架；</li>\n<li>人事管理政策；</li>\n<li>相关方风险偏好；</li>\n<li>已确立的沟通渠道；</li>\n<li>全球、区域或当地的趋势、实践或习惯；</li>\n<li>设施和资源的地理分布。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>企业的社交媒体、道德和安全政策及程序；</li>\n<li>企业的问题、风险、变更和数据管理政策及程序；</li>\n<li>组织对沟通的要求；</li>\n<li>制作、交换、储存和检索信息的标准化指南；</li>\n<li>经验教训知识库，包括与相关方偏好、行动和参与有关的信息；</li>\n<li>支持有效相关方参与所需的软件工具。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"13-2-2-规划相关方参与：工具与技术\">13.2.2 规划相关方参与：工具与技术</h3>\n<p>规划相关方参与需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>组织内部及外部的政治和权力结构；</li>\n<li>组织及组织外部的环境和文化；</li>\n<li>相关方参与过程使用的分析和评估技术；</li>\n<li>沟通手段和策略；</li>\n<li>来自以往项目的关于相关方、相关方群体及相关方组织（他们可能参与过以往的类似项目）的特征的知识。</li>\n</ul>\n</li>\n<li>数据收集</li>\n<li>数据分析\n<ul>\n<li>假设条件和制约因素分析</li>\n<li>根本原因分析</li>\n</ul>\n</li>\n<li>决策</li>\n<li>数据表现\n<ul>\n<li>思维导图</li>\n<li>相关方参与度评估矩阵\n<ul>\n<li>不了解型</li>\n<li>抵制型</li>\n<li>中立型</li>\n<li>支持型</li>\n<li>领导型</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"13-2-3-规划相关方参与：输出\">13.2.3 规划相关方参与：输出</h3>\n<p>规划相关方参与的输出包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>相关方参与计划</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"13-3-管理相关方参与\">13.3 管理相关方参与</h2>\n<p>管理相关方参与是与相关方进行沟通和协作以满足其需求与期望、处理问题，并促进相关方合理参与的过程。本过程的主要作用是，让项目经理能够提高相关方的支持，并尽可能降低相关方的抵制。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182902-5.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182902-6.png\" alt=\"\"></p>\n<p>在管理相关方参与过程中，需要开展多项活动，例如：</p>\n<ul>\n<li>在适当的项目阶段引导相关方参与，以便获取、确认或维持他们对项目成功的持续承诺；</li>\n<li>通过谈判和沟通管理相关方期望；</li>\n<li>处理与相关方管理有关的任何风险或潜在关注点，预测相关方可能在未来引发的问题；</li>\n<li>澄清和解决已识别的问题。<br>\n管理相关方参与有助于确保相关方明确了解项目目的、目标、收益和风险，以及他们的贡献将如何促进项目成功。</li>\n</ul>\n<h3 id=\"13-3-1-管理相关方参与：输入\">13.3.1 管理相关方参与：输入</h3>\n<p>管理相关方参与的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>沟通管理计划</li>\n<li>风险管理计划</li>\n<li>相关方参与计划</li>\n<li>变更管理计划</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>变更日志</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>事业环境因素\n<ul>\n<li>组织文化、政治氛围，以及组织的治理结构；</li>\n<li>人事管理政策；</li>\n<li>相关方风险临界值；</li>\n<li>已确立的沟通渠道；</li>\n<li>全球、区域或当地的趋势、实践或习惯；</li>\n<li>设施和资源的地理分布。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>企业的社交媒体、道德和安全政策及程序；</li>\n<li>企业的问题、风险、变更和数据管理政策及程序；</li>\n<li>组织对沟通的要求；</li>\n<li>制作、交换、储存和检索信息的标准化指南；</li>\n<li>以往类似项目的历史信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"13-3-2-管理相关方参与：工具与技术\">13.3.2 管理相关方参与：工具与技术</h3>\n<p>管理相关方参与需要的工具与技术包括：</p>\n<ul>\n<li>专家判断\n<ul>\n<li>组织内部及外部的政治和权力结构；</li>\n<li>组织及组织外部的环境和文化；</li>\n<li>相关方参与过程使用的分析和评估技术；</li>\n<li>沟通方法和策略；</li>\n<li>可能参与过以往类似项目的相关方、相关方群体及相关方组织的特征。</li>\n<li>需求管理、供应商管理和变更管理。</li>\n</ul>\n</li>\n<li>沟通技能\n<ul>\n<li>正式与非正式对话；</li>\n<li>问题识别和讨论；</li>\n<li>会议；</li>\n<li>进展报告；</li>\n<li>调查。</li>\n</ul>\n</li>\n<li>人际关系与团队技能\n<ul>\n<li>冲突管理</li>\n<li>文化意识</li>\n<li>谈判</li>\n<li>观察和交谈</li>\n<li>政治意识</li>\n</ul>\n</li>\n<li>基本规则</li>\n<li>会议\n<ul>\n<li>决策；</li>\n<li>问题解决；</li>\n<li>经验教训和回顾总结；</li>\n<li>项目开工；</li>\n<li>迭代规划；</li>\n<li>状态更新。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"13-3-3-管理相关方参与：输出\">13.3.3 管理相关方参与：输出</h3>\n<p>管理相关方参与的输出包括：</p>\n<ul>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>沟通管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>变更日志</li>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"13-4-监督相关方参与\">13.4 监督相关方参与</h2>\n<p>监督相关方参与是监督项目项目相关方关系，并通过修订参与策略和计划来引导相关方合理参与项目的过程。本过程的主要作用是，随着项目进展和环境变化，维持或提升相关方参与活动的效率和效果。本过程需要在整个项目期间开展。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182902-7.png\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1720220417182902-8.png\" alt=\"\"></p>\n<h3 id=\"13-4-1-监督相关方参与：输入\">13.4.1 监督相关方参与：输入</h3>\n<p>监督相关方参与的输入包括：</p>\n<ul>\n<li>项目管理计划\n<ul>\n<li>资源管理计划</li>\n<li>沟通管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>项目沟通记录</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n<li>工作绩效数据</li>\n<li>事业环境因素\n<ul>\n<li>组织文化、政治氛围，以及治理框架；</li>\n<li>人事管理政策；</li>\n<li>相关方风险临界值；</li>\n<li>已确立的沟通渠道；</li>\n<li>全球、区域或当地的趋势、实践或习惯；</li>\n<li>设施和资源的地理分布。</li>\n</ul>\n</li>\n<li>组织过程资产\n<ul>\n<li>企业的社交媒体、道德和安全政策及程序；</li>\n<li>企业的问题、风险、变更和数据管理政策及程序；</li>\n<li>组织对沟通的要求；</li>\n<li>制作、交换、储存和检索信息的标准化指南；</li>\n<li>以往项目的历史信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"13-4-2-监督相关方参与：工具与技术\">13.4.2 监督相关方参与：工具与技术</h3>\n<p>监督相关方参与需要的工具与技术包括：</p>\n<ul>\n<li>数据分析\n<ul>\n<li>备选方案分析</li>\n<li>根本原因分析</li>\n<li>相关方分析</li>\n</ul>\n</li>\n<li>决策\n<ul>\n<li>多标准决策分析</li>\n<li>投票</li>\n</ul>\n</li>\n<li>数据表现</li>\n<li>沟通技能\n<ul>\n<li>反馈</li>\n<li>演示</li>\n</ul>\n</li>\n<li>人际关系与团队技能\n<ul>\n<li>积极倾听</li>\n<li>文化意识</li>\n<li>领导力</li>\n<li>人际交往</li>\n<li>政治意识</li>\n</ul>\n</li>\n<li>会议</li>\n</ul>\n<h3 id=\"13-4-3-监督相关方参与：输出\">13.4.3 监督相关方参与：输出</h3>\n<p>监督相关方参与的输出包括：</p>\n<ul>\n<li>工作绩效数据</li>\n<li>变更请求</li>\n<li>项目管理计划更新\n<ul>\n<li>资源管理计划</li>\n<li>沟通管理计划</li>\n<li>相关方参与计划</li>\n</ul>\n</li>\n<li>项目文件更新\n<ul>\n<li>问题日志</li>\n<li>经验教训登记册</li>\n<li>风险登记册</li>\n<li>相关方登记册</li>\n</ul>\n</li>\n</ul>\n<p>项目管理过程组与知识领域总表</p>\n<ul>\n<li>\n<table>\n<thead>\n<tr>\n<th>知识领域</th>\n<th>启动过程组</th>\n<th>规划过程组</th>\n<th>执行过程组</th>\n<th>监控过程组</th>\n<th>收尾过程组</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>项目整合管理</strong></td>\n<td>4.1 制定项目章程</td>\n<td>4.2 制定项目管理计划 4.4 管理项目知识</td>\n<td>4.3 指导与管理项目工作</td>\n<td>4.5 监控项目工作4.6实施整体变更控制</td>\n<td>4.7 结束项目或阶段</td>\n</tr>\n<tr>\n<td><strong>项目范围管理</strong></td>\n<td></td>\n<td>5.1规划范围管理5.2 手机需求5.3 定义范围5.4 创建WBS</td>\n<td></td>\n<td>5.5 确认范围5.6 控制范围</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>项目进度管理</strong></td>\n<td></td>\n<td>6.1 规划进度管理6.2 定义活动6.3 排序活动顺序6.4 估算活动持续时间6.5 制定进度计划</td>\n<td></td>\n<td>6.6 控制进度</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>项目成本管理</strong></td>\n<td></td>\n<td>7.1 规划成本管理7.2 估算成本7.3 制定预算</td>\n<td></td>\n<td>7.4 控制成本</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>项目质量管理</strong></td>\n<td></td>\n<td>8.1 规划质量管理</td>\n<td>8.2 管理质量</td>\n<td>8.3 控制质量</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>项目资源管理</strong></td>\n<td></td>\n<td>9.1 规划资源管理9.2 估算活动资源</td>\n<td>9.3 获取资源9.4 建设团队9.5 管理团队</td>\n<td>9.6 控制资源</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>项目沟通管理</strong></td>\n<td></td>\n<td>10.1 规划沟通管理</td>\n<td>10.2 管理沟通</td>\n<td>10.3 监督沟通</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>项目风险管理</strong></td>\n<td></td>\n<td>11.1 规划风险管理11.2 识别风险11.3 实施定性风险分析11.4 实施定量风险分析11.5 规划风险应对</td>\n<td>11.6 实施风险应对</td>\n<td>11.7 监督风险</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>项目采购管理</strong></td>\n<td></td>\n<td>12.1 规划采购管理</td>\n<td>12.2 实施采购</td>\n<td>12.3 控制采购</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>项目相关方管理</strong></td>\n<td>13.1 识别相关方</td>\n<td>13.2 规划相关方参与</td>\n<td>13.3 管理相关方参与</td>\n<td>13.4 监督相关方参与</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<p>编辑整理 <a target=\"_blank\" rel=\"noopener\" href=\"https://www.zabbx.cn/archives/pmbok%E6%8C%87%E5%8D%97%E7%AC%AC6%E7%89%88-1%E5%BC%95%E8%AE%BA\">zabbx</a></p>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "pmbok",
                "管理",
                "ipd",
                "绩效"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/39563241/",
            "url": "https://blog.17lai.site/posts/39563241/",
            "title": "三万字无坑搭建基于Docker+K8S+GitLab/SVN+Jenkins+Harbor持续集成交付环境",
            "date_published": "2022-04-16T10:49:57.000Z",
            "content_html": "<blockquote>\n<p>最近在 K8S 1.18.2 版本的集群上搭建DevOps环境，期间遇到了各种坑。目前，搭建环境的过程中出现的各种坑均已被填平，特此记录，并分享给大家！</p>\n<p>文章和搭建环境所需要的yml文件已收录到：<a target=\"_blank\" rel=\"noopener\" href=\"https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fsunshinelyz%2Ftechnology-binghe\">https://github.com/sunshinelyz/technology-binghe</a> 和 <a target=\"_blank\" rel=\"noopener\" href=\"https://links.jianshu.com/go?to=https%3A%2F%2Fgitee.com%2Fbinghe001%2Ftechnology-binghe\">https://gitee.com/binghe001/technology-binghe</a> 。如果文件对你有点帮助，别忘记给个Star哦！</p>\n</blockquote>\n<h2 id=\"服务器规划\">服务器规划</h2>\n<table>\n<thead>\n<tr>\n<th>IP</th>\n<th>主机名</th>\n<th>节点</th>\n<th>操作系统</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>192.168.175.101</td>\n<td>binghe101</td>\n<td>K8S Master</td>\n<td>CentOS 8.0.1905</td>\n</tr>\n<tr>\n<td>192.168.175.102</td>\n<td>binghe102</td>\n<td>K8S Worker</td>\n<td>CentOS 8.0.1905</td>\n</tr>\n<tr>\n<td>192.168.175.103</td>\n<td>binghe103</td>\n<td>K8S Worker</td>\n<td>CentOS 8.0.1905</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"安装环境版本\">安装环境版本</h2>\n<table>\n<thead>\n<tr>\n<th>软件名称</th>\n<th>软件版本</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Docker</td>\n<td>19.03.8</td>\n<td>提供容器环境</td>\n</tr>\n<tr>\n<td>docker-compose</td>\n<td>1.25.5</td>\n<td>定义和运行由多个容器组成的应用</td>\n</tr>\n<tr>\n<td>K8S</td>\n<td>1.8.12</td>\n<td>是一个开源的，用于管理云平台中多个主机上的容器化的应用，Kubernetes的目标是让部署容器化的应用简单并且高效（powerful）,Kubernetes提供了应用部署，规划，更新，维护的一种机制。</td>\n</tr>\n<tr>\n<td>GitLab</td>\n<td>12.1.6</td>\n<td>代码仓库（与SVN安装一个即可）</td>\n</tr>\n<tr>\n<td>Harbor</td>\n<td>1.10.2</td>\n<td>私有镜像仓库</td>\n</tr>\n<tr>\n<td>Jenkins</td>\n<td>2.89.3</td>\n<td>持续集成交付</td>\n</tr>\n<tr>\n<td>SVN</td>\n<td>1.10.2</td>\n<td>代码仓库（与GitLab安装一个即可）</td>\n</tr>\n<tr>\n<td>JDK</td>\n<td>1.8.0_202</td>\n<td>Java运行基础环境</td>\n</tr>\n<tr>\n<td>maven</td>\n<td>3.6.3</td>\n<td>构建项目的基础插件</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"服务器免密码登录\">服务器免密码登录</h2>\n<p>在各服务器执行如下命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen -t rsa\n<span class=\"token function\">cat</span> ~/.ssh/id_rsa.pub <span class=\"token operator\">&gt;&gt;</span> ~/.ssh/authorized_keys \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>将binghe102和binghe103服务器上的id_rsa.pub文件复制到binghe101服务器。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe102 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># scp .ssh/id_rsa.pub binghe101:/root/.ssh/102</span>\n<span class=\"token punctuation\">[</span>root@binghe103 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># scp .ssh/id_rsa.pub binghe101:/root/.ssh/103</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>在binghe101服务器上执行如下命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> ~/.ssh/102 <span class=\"token operator\">&gt;&gt;</span> ~/.ssh/authorized_keys\n<span class=\"token function\">cat</span> ~/.ssh/103 <span class=\"token operator\">&gt;&gt;</span> ~/.ssh/authorized_keys\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>然后将authorized_keys文件分别复制到binghe102、binghe103服务器。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># scp .ssh/authorized_keys binghe102:/root/.ssh/authorized_keys</span>\n<span class=\"token punctuation\">[</span>root@binghe101 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># scp .ssh/authorized_keys binghe103:/root/.ssh/authorized_keys</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>删除binghe101节点上~/.ssh下的102和103文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> ~/.ssh/102\n<span class=\"token function\">rm</span> ~/.ssh/103\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"安装JDK\">安装JDK</h2>\n<p>需要在每台服务器上安装JDK环境。到Oracle官方下载JDK，我这里下的JDK版本为1.8.0_202，下载后解压并配置系统环境变量。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> -zxvf jdk1.8.0_212.tar.gz\n<span class=\"token function\">mv</span> jdk1.8.0_212 /usr/local\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>接下来，配置系统环境变量。</p>\n<p>配置项内容如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span>/usr/local/jdk1.8.0_212\n<span class=\"token assign-left variable\">CLASS_PATH</span><span class=\"token operator\">=</span>.:<span class=\"token variable\">$JAVA_HOME</span>/lib\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token variable\">$JAVA_HOME</span>/bin:<span class=\"token environment constant\">$PATH</span>\n<span class=\"token builtin class-name\">export</span> JAVA_HOME CLASS_PATH <span class=\"token environment constant\">PATH</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来执行如下命令使系统环境变量生效。</p>\n<h2 id=\"安装Maven\">安装Maven</h2>\n<p>到Apache官方下载Maven，我这里下载的Maven版本为3.6.3。下载后直接解压并配置系统环境变量。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> -zxvf apache-maven-3.6.3-bin.tar.gz\n<span class=\"token function\">mv</span> apache-maven-3.6.3-bin /usr/local\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>接下来，就是配置系统环境变量。</p>\n<p>配置项内容如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span>/usr/local/jdk1.8.0_212\n<span class=\"token assign-left variable\">MAVEN_HOME</span><span class=\"token operator\">=</span>/usr/local/apache-maven-3.6.3-bin\n<span class=\"token assign-left variable\">CLASS_PATH</span><span class=\"token operator\">=</span>.:<span class=\"token variable\">$JAVA_HOME</span>/lib\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token variable\">$MAVEN_HOME</span>/bin:<span class=\"token variable\">$JAVA_HOME</span>/bin:<span class=\"token environment constant\">$PATH</span>\n<span class=\"token builtin class-name\">export</span> JAVA_HOME CLASS_PATH MAVEN_HOME <span class=\"token environment constant\">PATH</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来执行如下命令使系统环境变量生效。</p>\n<p>接下来，修改Maven的配置文件，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>localRepository<span class=\"token operator\">&gt;</span>/home/repository<span class=\"token operator\">&lt;</span>/localRepository<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>将Maven下载的Jar包存储到/home/repository目录下。</p>\n<h2 id=\"安装Docker环境\">安装Docker环境</h2>\n<p><strong>本文档基于Docker 19.03.8 版本搭建Docker环境。</strong></p>\n<p>在所有服务器上创建install_docker.sh脚本，脚本内容如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">REGISTRY_MIRROR</span><span class=\"token operator\">=</span>https://registry.cn-hangzhou.aliyuncs.com\ndnf <span class=\"token function\">install</span> yum*\nyum <span class=\"token function\">install</span> -y yum-utils device-mapper-persistent-data lvm2\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\ndnf <span class=\"token function\">install</span> https://mirrors.aliyun.com/docker-ce/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.13-3.1.el7.x86_64.rpm\nyum <span class=\"token function\">install</span> -y docker-ce-19.03.8 docker-ce-cli-19.03.8\nsystemctl <span class=\"token builtin class-name\">enable</span> docker.service\nsystemctl start docker.service\n<span class=\"token function\">docker</span> version\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在每台服务器上为install_docker.sh脚本赋予可执行权限，并执行脚本即可。</p>\n<h2 id=\"安装docker-compose\">安装docker-compose</h2>\n<p><strong>注意：在每台服务器上安装docker-compose</strong></p>\n<p><strong>1.下载docker-compose文件</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -L https://github.com/docker/compose/releases/download/1.25.5/docker-compose-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -s<span class=\"token variable\">`</span></span>-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -m<span class=\"token variable\">`</span></span> -o /usr/local/bin/docker-compose \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"2-为docker-compose文件赋予可执行权限\">2.为docker-compose文件赋予可执行权限</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> a+x /usr/local/bin/docker-compose\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"3-查看docker-compose版本\">3.查看docker-compose版本</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker-compose version</span>\n<span class=\"token function\">docker-compose</span> version <span class=\"token number\">1.25</span>.5, build 8a1c60f6\ndocker-py version: <span class=\"token number\">4.1</span>.0\nCPython version: <span class=\"token number\">3.7</span>.5\nOpenSSL version: OpenSSL <span class=\"token number\">1.1</span>.0l  <span class=\"token number\">10</span> Sep <span class=\"token number\">2019</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"安装K8S集群环境\">安装K8S集群环境</h2>\n<p><strong>本文档基于K8S 1.8.12版本来搭建K8S集群</strong></p>\n<h3 id=\"安装K8S基础环境\">安装K8S基础环境</h3>\n<p>在所有服务器上创建install_k8s.sh脚本文件，脚本文件的内容如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#配置阿里云镜像加速器</span>\n<span class=\"token function\">mkdir</span> -p /etc/docker\n<span class=\"token function\">tee</span> /etc/docker/daemon.json <span class=\"token operator\">&lt;&lt;-</span><span class=\"token string\">'EOF'\n{\n  \"registry-mirrors\": [\"https://zz3sblpi.mirror.aliyuncs.com\"]\n}\nEOF</span>\nsystemctl daemon-reload\nsystemctl restart <span class=\"token function\">docker</span>\n\n<span class=\"token comment\">#安装nfs-utils</span>\nyum <span class=\"token function\">install</span> -y nfs-utils\nyum <span class=\"token function\">install</span> -y <span class=\"token function\">wget</span>\n\n<span class=\"token comment\">#启动nfs-server</span>\nsystemctl start nfs-server\nsystemctl <span class=\"token builtin class-name\">enable</span> nfs-server\n\n<span class=\"token comment\">#关闭防火墙</span>\nsystemctl stop firewalld\nsystemctl disable firewalld\n\n<span class=\"token comment\">#关闭SeLinux</span>\nsetenforce <span class=\"token number\">0</span>\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s/SELINUX=enforcing/SELINUX=disabled/g\"</span> /etc/selinux/config\n\n<span class=\"token comment\"># 关闭 swap</span>\nswapoff -a\n<span class=\"token function\">yes</span> <span class=\"token operator\">|</span> <span class=\"token function\">cp</span> /etc/fstab /etc/fstab_bak\n<span class=\"token function\">cat</span> /etc/fstab_bak <span class=\"token operator\">|</span><span class=\"token function\">grep</span> -v swap <span class=\"token operator\">&gt;</span> /etc/fstab\n\n<span class=\"token comment\">#修改 /etc/sysctl.conf</span>\n<span class=\"token comment\"># 如果有配置，则修改</span>\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s#^net.ipv4.ip_forward.*#net.ipv4.ip_forward=1#g\"</span>  /etc/sysctl.conf\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s#^net.bridge.bridge-nf-call-ip6tables.*#net.bridge.bridge-nf-call-ip6tables=1#g\"</span>  /etc/sysctl.conf\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s#^net.bridge.bridge-nf-call-iptables.*#net.bridge.bridge-nf-call-iptables=1#g\"</span>  /etc/sysctl.conf\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s#^net.ipv6.conf.all.disable_ipv6.*#net.ipv6.conf.all.disable_ipv6=1#g\"</span>  /etc/sysctl.conf\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s#^net.ipv6.conf.default.disable_ipv6.*#net.ipv6.conf.default.disable_ipv6=1#g\"</span>  /etc/sysctl.conf\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s#^net.ipv6.conf.lo.disable_ipv6.*#net.ipv6.conf.lo.disable_ipv6=1#g\"</span>  /etc/sysctl.conf\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s#^net.ipv6.conf.all.forwarding.*#net.ipv6.conf.all.forwarding=1#g\"</span>  /etc/sysctl.conf\n<span class=\"token comment\"># 可能没有，追加</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"net.ipv4.ip_forward = 1\"</span> <span class=\"token operator\">&gt;&gt;</span> /etc/sysctl.conf\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"net.bridge.bridge-nf-call-ip6tables = 1\"</span> <span class=\"token operator\">&gt;&gt;</span> /etc/sysctl.conf\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"net.bridge.bridge-nf-call-iptables = 1\"</span> <span class=\"token operator\">&gt;&gt;</span> /etc/sysctl.conf\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"net.ipv6.conf.all.disable_ipv6 = 1\"</span> <span class=\"token operator\">&gt;&gt;</span> /etc/sysctl.conf\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"net.ipv6.conf.default.disable_ipv6 = 1\"</span> <span class=\"token operator\">&gt;&gt;</span> /etc/sysctl.conf\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"net.ipv6.conf.lo.disable_ipv6 = 1\"</span> <span class=\"token operator\">&gt;&gt;</span> /etc/sysctl.conf\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"net.ipv6.conf.all.forwarding = 1\"</span>  <span class=\"token operator\">&gt;&gt;</span> /etc/sysctl.conf\n<span class=\"token comment\"># 执行命令以应用</span>\nsysctl -p\n\n<span class=\"token comment\"># 配置K8S的yum源</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">&gt;</span> /etc/yum.repos.d/kubernetes.repo</span>\n[kubernetes]\nname=Kubernetes\nbaseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\n       http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF</span>\n\n<span class=\"token comment\"># 卸载旧版本K8S</span>\nyum remove -y kubelet kubeadm kubectl\n\n<span class=\"token comment\"># 安装kubelet、kubeadm、kubectl，这里我安装的是1.18.2版本，你也可以安装1.17.2版本</span>\nyum <span class=\"token function\">install</span> -y kubelet-1.18.2 kubeadm-1.18.2 kubectl-1.18.2\n\n<span class=\"token comment\"># 修改docker Cgroup Driver为systemd</span>\n<span class=\"token comment\"># # 将/usr/lib/systemd/system/docker.service文件中的这一行 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span>\n<span class=\"token comment\"># # 修改为 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd</span>\n<span class=\"token comment\"># 如果不修改，在添加 worker 节点时可能会碰到如下错误</span>\n<span class=\"token comment\"># [WARNING IsDockerSystemdCheck]: detected \"cgroupfs\" as the Docker cgroup driver. The recommended driver is \"systemd\". </span>\n<span class=\"token comment\"># Please follow the guide at https://kubernetes.io/docs/setup/cri/</span>\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s#^ExecStart=/usr/bin/dockerd.*#ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd#g\"</span> /usr/lib/systemd/system/docker.service\n\n<span class=\"token comment\"># 设置 docker 镜像，提高 docker 镜像下载速度和稳定性</span>\n<span class=\"token comment\"># 如果访问 https://hub.docker.io 速度非常稳定，亦可以跳过这个步骤</span>\n<span class=\"token comment\"># curl -sSL https://kuboard.cn/install-script/set_mirror.sh | sh -s ${REGISTRY_MIRROR}</span>\n\n<span class=\"token comment\"># 重启 docker，并启动 kubelet</span>\nsystemctl daemon-reload\nsystemctl restart <span class=\"token function\">docker</span>\nsystemctl <span class=\"token builtin class-name\">enable</span> kubelet <span class=\"token operator\">&amp;&amp;</span> systemctl start kubelet\n\n<span class=\"token function\">docker</span> version\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在每台服务器上为install_k8s.sh脚本赋予可执行权限，并执行脚本即可。</p>\n<h3 id=\"初始化Master节点\">初始化Master节点</h3>\n<p><strong>只在binghe101服务器上执行的操作。</strong></p>\n<p><strong>1.初始化Master节点的网络环境</strong></p>\n<p>注意：下面的命令需要在命令行手动执行。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 只在 master 节点执行</span>\n<span class=\"token comment\"># export 命令只在当前 shell 会话中有效，开启新的 shell 窗口后，如果要继续安装过程，请重新执行此处的 export 命令</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">MASTER_IP</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.175.101\n<span class=\"token comment\"># 替换 k8s.master 为 您想要的 dnsName</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">APISERVER_NAME</span><span class=\"token operator\">=</span>k8s.master\n<span class=\"token comment\"># Kubernetes 容器组所在的网段，该网段安装完成后，由 kubernetes 创建，事先并不存在于物理网络中</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">POD_SUBNET</span><span class=\"token operator\">=</span><span class=\"token number\">172.18</span>.0.1/16\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${MASTER_IP}</span>    <span class=\"token variable\">${APISERVER_NAME}</span>\"</span> <span class=\"token operator\">&gt;&gt;</span> /etc/hosts\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>2.初始化Master节点</strong></p>\n<p>在binghe101服务器上创建init_master.sh脚本文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token comment\"># 脚本出错时终止执行</span>\n<span class=\"token builtin class-name\">set</span> -e\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">${<span class=\"token operator\">#</span>POD_SUBNET}</span> -eq <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">${<span class=\"token operator\">#</span>APISERVER_NAME}</span> -eq <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[31;1m请确保您已经设置了环境变量 POD_SUBNET 和 APISERVER_NAME <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n  <span class=\"token builtin class-name\">echo</span> 当前POD_SUBNET<span class=\"token operator\">=</span><span class=\"token variable\">$POD_SUBNET</span>\n  <span class=\"token builtin class-name\">echo</span> 当前APISERVER_NAME<span class=\"token operator\">=</span><span class=\"token variable\">$APISERVER_NAME</span>\n  <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n\n\n<span class=\"token comment\"># 查看完整配置选项 https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta2</span>\n<span class=\"token function\">rm</span> -f ./kubeadm-config.yaml\n<span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">&gt;</span> ./kubeadm-config.yaml</span>\napiVersion: kubeadm.k8s.io/v1beta2\nkind: ClusterConfiguration\nkubernetesVersion: v1.18.2\nimageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers\ncontrolPlaneEndpoint: \"<span class=\"token variable\">${APISERVER_NAME}</span>:6443\"\nnetworking:\n  serviceSubnet: \"10.96.0.0/16\"\n  podSubnet: \"<span class=\"token variable\">${POD_SUBNET}</span>\"\n  dnsDomain: \"cluster.local\"\nEOF</span>\n\n<span class=\"token comment\"># kubeadm init</span>\n<span class=\"token comment\"># 根据服务器网速的情况，您需要等候 3 - 10 分钟</span>\nkubeadm init --config<span class=\"token operator\">=</span>kubeadm-config.yaml --upload-certs\n\n<span class=\"token comment\"># 配置 kubectl</span>\n<span class=\"token function\">rm</span> -rf /root/.kube/\n<span class=\"token function\">mkdir</span> /root/.kube/\n<span class=\"token function\">cp</span> -i /etc/kubernetes/admin.conf /root/.kube/config\n\n<span class=\"token comment\"># 安装 calico 网络插件</span>\n<span class=\"token comment\"># 参考文档 https://docs.projectcalico.org/v3.13/getting-started/kubernetes/self-managed-onprem/onpremises</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"安装calico-3.13.1\"</span>\n<span class=\"token function\">rm</span> -f calico-3.13.1.yaml\n<span class=\"token function\">wget</span> https://kuboard.cn/install-script/calico/calico-3.13.1.yaml\nkubectl apply -f calico-3.13.1.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>赋予init_master.sh脚本文件可执行权限并执行脚本。</p>\n<p><strong>3.查看Master节点的初始化结果</strong></p>\n<p><strong>（1）确保所有容器组处于Running状态</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 执行如下命令，等待 3-10 分钟，直到所有的容器组处于 Running 状态</span>\n<span class=\"token function\">watch</span> kubectl get pod -n kube-system -o wide\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>具体执行如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># watch kubectl get pod -n kube-system -o wide</span>\nEvery <span class=\"token number\">2</span>.0s: kubectl get pod -n kube-system -o wide                                                                                                                          binghe101: Sun May <span class=\"token number\">10</span> <span class=\"token number\">11</span>:01:32 <span class=\"token number\">2020</span>\n\nNAME                                       READY   STATUS    RESTARTS   AGE    IP                NODE        NOMINATED NODE   READINESS GATES          \ncalico-kube-controllers-5b8b769fcd-5dtlp   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          118s   <span class=\"token number\">172.18</span>.203.66     binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>          \ncalico-node-fnv8g                          <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          118s   <span class=\"token number\">192.168</span>.175.101   binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>          \ncoredns-546565776c-27t7h                   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          2m1s   <span class=\"token number\">172.18</span>.203.67     binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>          \ncoredns-546565776c-hjb8z                   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          2m1s   <span class=\"token number\">172.18</span>.203.65     binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>          \netcd-binghe101                             <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          2m7s   <span class=\"token number\">192.168</span>.175.101   binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>          \nkube-apiserver-binghe101                   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          2m7s   <span class=\"token number\">192.168</span>.175.101   binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>          \nkube-controller-manager-binghe101          <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          2m7s   <span class=\"token number\">192.168</span>.175.101   binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>          \nkube-proxy-dvgsr                           <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          2m1s   <span class=\"token number\">192.168</span>.175.101   binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>          \nkube-scheduler-binghe101                   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          2m7s   <span class=\"token number\">192.168</span>.175.101   binghe101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>（2） 查看 Master 节点初始化结果</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get nodes -o wide\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>具体执行如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubectl get nodes -o wide</span>\nNAME        STATUS   ROLES    AGE     VERSION   INTERNAL-IP       EXTERNAL-IP   OS-IMAGE                KERNEL-VERSION         CONTAINER-RUNTIME\nbinghe101   Ready    master   3m28s   v1.18.2   <span class=\"token number\">192.168</span>.175.101   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>        CentOS Linux <span class=\"token number\">8</span> <span class=\"token punctuation\">(</span>Core<span class=\"token punctuation\">)</span>   <span class=\"token number\">4.18</span>.0-80.el8.x86_64   docker://19.3.8\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"初始化Worker节点\">初始化Worker节点</h3>\n<p><strong>1.获取join命令参数</strong></p>\n<p>在Master节点（binghe101服务器）上执行如下命令获取join命令参数。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubeadm token create --print-join-command\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>具体执行如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubeadm token create --print-join-command</span>\nW0510 <span class=\"token number\">11</span>:04:34.828126   <span class=\"token number\">56132</span> configset.go:202<span class=\"token punctuation\">]</span> WARNING: kubeadm cannot validate component configs <span class=\"token keyword\">for</span> API <span class=\"token function\">groups</span> <span class=\"token punctuation\">[</span>kubelet.config.k8s.io kubeproxy.config.k8s.io<span class=\"token punctuation\">]</span>\nkubeadm <span class=\"token function\">join</span> k8s.master:6443 --token 8nblts.62xytoqufwsqzko2     --discovery-token-ca-cert-hash sha256:1717cc3e34f6a56b642b5751796530e367aa73f4113d09994ac3455e33047c0d \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>其中，有如下一行输出。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubeadm <span class=\"token function\">join</span> k8s.master:6443 --token 8nblts.62xytoqufwsqzko2     --discovery-token-ca-cert-hash sha256:1717cc3e34f6a56b642b5751796530e367aa73f4113d09994ac3455e33047c0d \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这行代码就是获取到的join命令。</p>\n<blockquote>\n<p>注意：join命令中的token的有效时间为 2 个小时，2小时内，可以使用此 token 初始化任意数量的 worker 节点。</p>\n</blockquote>\n<p><strong>2.初始化Worker节点</strong></p>\n<p>针对所有的 worker 节点执行，在这里，就是在binghe102服务器和binghe103服务器上执行。</p>\n<p>在命令分别手动执行如下命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 只在 worker 节点执行</span>\n<span class=\"token comment\"># 192.168.175.101 为 master 节点的内网 IP</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">MASTER_IP</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.175.101\n<span class=\"token comment\"># 替换 k8s.master 为初始化 master 节点时所使用的 APISERVER_NAME</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">APISERVER_NAME</span><span class=\"token operator\">=</span>k8s.master\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${MASTER_IP}</span>    <span class=\"token variable\">${APISERVER_NAME}</span>\"</span> <span class=\"token operator\">&gt;&gt;</span> /etc/hosts\n\n<span class=\"token comment\"># 替换为 master 节点上 kubeadm token create 命令输出的join</span>\nkubeadm <span class=\"token function\">join</span> k8s.master:6443 --token 8nblts.62xytoqufwsqzko2     --discovery-token-ca-cert-hash sha256:1717cc3e34f6a56b642b5751796530e367aa73f4113d09994ac3455e33047c0d \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>具体执行如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe102 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># export MASTER_IP=192.168.175.101</span>\n<span class=\"token punctuation\">[</span>root@binghe102 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># export APISERVER_NAME=k8s.master</span>\n<span class=\"token punctuation\">[</span>root@binghe102 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo \"${MASTER_IP}    ${APISERVER_NAME}\" &gt;&gt; /etc/hosts</span>\n<span class=\"token punctuation\">[</span>root@binghe102 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubeadm join k8s.master:6443 --token 8nblts.62xytoqufwsqzko2     --discovery-token-ca-cert-hash sha256:1717cc3e34f6a56b642b5751796530e367aa73f4113d09994ac3455e33047c0d </span>\nW0510 <span class=\"token number\">11</span>:08:27.709263   <span class=\"token number\">42795</span> join.go:346<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>preflight<span class=\"token punctuation\">]</span> WARNING: JoinControlPane.controlPlane settings will be ignored when control-plane flag is not set.\n<span class=\"token punctuation\">[</span>preflight<span class=\"token punctuation\">]</span> Running pre-flight checks\n        <span class=\"token punctuation\">[</span>WARNING FileExisting-tc<span class=\"token punctuation\">]</span>: tc not found <span class=\"token keyword\">in</span> system path\n<span class=\"token punctuation\">[</span>preflight<span class=\"token punctuation\">]</span> Reading configuration from the cluster<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">[</span>preflight<span class=\"token punctuation\">]</span> FYI: You can <span class=\"token function\">look</span> at this config <span class=\"token function\">file</span> with <span class=\"token string\">'kubectl -n kube-system get cm kubeadm-config -oyaml'</span>\n<span class=\"token punctuation\">[</span>kubelet-start<span class=\"token punctuation\">]</span> Downloading configuration <span class=\"token keyword\">for</span> the kubelet from the <span class=\"token string\">\"kubelet-config-1.18\"</span> ConfigMap <span class=\"token keyword\">in</span> the kube-system namespace\n<span class=\"token punctuation\">[</span>kubelet-start<span class=\"token punctuation\">]</span> Writing kubelet configuration to <span class=\"token function\">file</span> <span class=\"token string\">\"/var/lib/kubelet/config.yaml\"</span>\n<span class=\"token punctuation\">[</span>kubelet-start<span class=\"token punctuation\">]</span> Writing kubelet environment <span class=\"token function\">file</span> with flags to <span class=\"token function\">file</span> <span class=\"token string\">\"/var/lib/kubelet/kubeadm-flags.env\"</span>\n<span class=\"token punctuation\">[</span>kubelet-start<span class=\"token punctuation\">]</span> Starting the kubelet\n<span class=\"token punctuation\">[</span>kubelet-start<span class=\"token punctuation\">]</span> Waiting <span class=\"token keyword\">for</span> the kubelet to perform the TLS Bootstrap<span class=\"token punctuation\">..</span>.\n\nThis <span class=\"token function\">node</span> has joined the cluster:\n* Certificate signing request was sent to apiserver and a response was received.\n* The Kubelet was informed of the new secure connection details.\n\nRun <span class=\"token string\">'kubectl get nodes'</span> on the control-plane to see this <span class=\"token function\">node</span> <span class=\"token function\">join</span> the cluster.\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>根据输出结果可以看出，Worker节点加入了K8S集群。</p>\n<blockquote>\n<p>注意：kubeadm join…就是master 节点上 kubeadm token create 命令输出的join。</p>\n</blockquote>\n<p><strong>3.查看初始化结果</strong></p>\n<p>在Master节点（binghe101服务器）执行如下命令查看初始化结果。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get nodes -o wide\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>具体执行如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubectl get nodes</span>\nNAME        STATUS   ROLES    AGE     VERSION\nbinghe101   Ready    master   20m     v1.18.2\nbinghe102   Ready    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>   2m46s   v1.18.2\nbinghe103   Ready    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>   2m46s   v1.18.2\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>注意：kubectl get nodes命令后面加上-o wide参数可以输出更多的信息。</p>\n</blockquote>\n<h2 id=\"重启K8S集群引起的问题\">重启K8S集群引起的问题</h2>\n<h3 id=\"1-Worker节点故障不能启动\">1.Worker节点故障不能启动</h3>\n<p>Master 节点的 IP 地址发生变化，导致 worker 节点不能启动。需要重新安装K8S集群，并确保所有节点都有固定的内网 IP 地址。</p>\n<h3 id=\"2-Pod崩溃或不能正常访问\">2.Pod崩溃或不能正常访问</h3>\n<p>重启服务器后使用如下命令查看Pod的运行状态。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get pods --all-namespaces\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>发现很多 Pod 不在 Running 状态，此时，需要使用如下命令删除运行不正常的Pod。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl delete pod <span class=\"token operator\">&lt;</span>pod-name<span class=\"token operator\">&gt;</span> -n <span class=\"token operator\">&lt;</span>pod-namespece<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>注意：如果Pod 是使用 Deployment、StatefulSet 等控制器创建的，K8S 将创建新的 Pod 作为替代，重新启动的 Pod 通常能够正常工作。</p>\n</blockquote>\n<h2 id=\"K8S安装ingress-nginx\">K8S安装ingress-nginx</h2>\n<p><strong>注意：在Master节点（binghe101服务器上执行）</strong></p>\n<h3 id=\"1-创建ingress-nginx命名空间\">1.创建ingress-nginx命名空间</h3>\n<p>创建ingress-nginx-namespace.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Namespace\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行如下命令创建ingress-nginx命名空间。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f ingress-nginx-namespace.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"2-安装ingress-controller\">2.安装ingress controller</h3>\n<p>创建ingress-nginx-mandatory.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Namespace\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n\n<span class=\"token punctuation\">---</span>\n\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n      <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n        <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">terminationGracePeriodSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">60</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n          \n          \n          \n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> registry.cn<span class=\"token punctuation\">-</span>qingdao.aliyuncs.com/kubernetes_xingej/defaultbackend<span class=\"token punctuation\">-</span>amd64<span class=\"token punctuation\">:</span><span class=\"token number\">1.5</span>\n          <span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /healthz\n              <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n              <span class=\"token key atrule\">scheme</span><span class=\"token punctuation\">:</span> HTTP\n            <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30</span>\n            <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n          <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">limits</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 10m\n              <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 20Mi\n            <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 10m\n              <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 20Mi\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n\n<span class=\"token punctuation\">---</span>\n\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ConfigMap\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>configuration\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n\n<span class=\"token punctuation\">---</span>\n\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ConfigMap\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> tcp<span class=\"token punctuation\">-</span>services\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n\n<span class=\"token punctuation\">---</span>\n\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ConfigMap\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> udp<span class=\"token punctuation\">-</span>services\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n\n<span class=\"token punctuation\">---</span>\n\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ServiceAccount\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>serviceaccount\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ClusterRole\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>clusterrole\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> configmaps\n      <span class=\"token punctuation\">-</span> endpoints\n      <span class=\"token punctuation\">-</span> nodes\n      <span class=\"token punctuation\">-</span> pods\n      <span class=\"token punctuation\">-</span> secrets\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> list\n      <span class=\"token punctuation\">-</span> watch\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> nodes\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> get\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> services\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> get\n      <span class=\"token punctuation\">-</span> list\n      <span class=\"token punctuation\">-</span> watch\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"extensions\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ingresses\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> get\n      <span class=\"token punctuation\">-</span> list\n      <span class=\"token punctuation\">-</span> watch\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> events\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> create\n      <span class=\"token punctuation\">-</span> patch\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"extensions\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ingresses/status\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> update\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Role\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>role\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> configmaps\n      <span class=\"token punctuation\">-</span> pods\n      <span class=\"token punctuation\">-</span> secrets\n      <span class=\"token punctuation\">-</span> namespaces\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> get\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> configmaps\n    <span class=\"token key atrule\">resourceNames</span><span class=\"token punctuation\">:</span>\n      \n      \n      \n      \n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"ingress-controller-leader-nginx\"</span>\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> get\n      <span class=\"token punctuation\">-</span> update\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> configmaps\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> create\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> endpoints\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> get\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> RoleBinding\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>role<span class=\"token punctuation\">-</span>nisa<span class=\"token punctuation\">-</span>binding\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">roleRef</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">apiGroup</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io\n  <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Role\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>role\n<span class=\"token key atrule\">subjects</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ServiceAccount\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>serviceaccount\n    <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ClusterRoleBinding\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>clusterrole<span class=\"token punctuation\">-</span>nisa<span class=\"token punctuation\">-</span>binding\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">roleRef</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">apiGroup</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io\n  <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ClusterRole\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>clusterrole\n<span class=\"token key atrule\">subjects</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ServiceAccount\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>serviceaccount\n    <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n\n<span class=\"token punctuation\">---</span>\n\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>controller\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n      <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n        <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n      <span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">prometheus.io/port</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"10254\"</span>\n        <span class=\"token key atrule\">prometheus.io/scrape</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"true\"</span>\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">serviceAccountName</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>serviceaccount\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>controller\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> registry.cn<span class=\"token punctuation\">-</span>qingdao.aliyuncs.com/kubernetes_xingej/nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>controller<span class=\"token punctuation\">:</span>0.20.0\n          <span class=\"token key atrule\">args</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> /nginx<span class=\"token punctuation\">-</span>ingress<span class=\"token punctuation\">-</span>controller\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>default<span class=\"token punctuation\">-</span>backend<span class=\"token punctuation\">-</span>service=$(POD_NAMESPACE)/default<span class=\"token punctuation\">-</span>http<span class=\"token punctuation\">-</span>backend\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>configmap=$(POD_NAMESPACE)/nginx<span class=\"token punctuation\">-</span>configuration\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>tcp<span class=\"token punctuation\">-</span>services<span class=\"token punctuation\">-</span>configmap=$(POD_NAMESPACE)/tcp<span class=\"token punctuation\">-</span>services\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>udp<span class=\"token punctuation\">-</span>services<span class=\"token punctuation\">-</span>configmap=$(POD_NAMESPACE)/udp<span class=\"token punctuation\">-</span>services\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>publish<span class=\"token punctuation\">-</span>service=$(POD_NAMESPACE)/ingress<span class=\"token punctuation\">-</span>nginx\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>annotations<span class=\"token punctuation\">-</span>prefix=nginx.ingress.kubernetes.io\n          <span class=\"token key atrule\">securityContext</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">capabilities</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">drop</span><span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">-</span> ALL\n              <span class=\"token key atrule\">add</span><span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">-</span> NET_BIND_SERVICE\n            \n            <span class=\"token key atrule\">runAsUser</span><span class=\"token punctuation\">:</span> <span class=\"token number\">33</span>\n          <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> POD_NAME\n              <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">fieldRef</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">fieldPath</span><span class=\"token punctuation\">:</span> metadata.name\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> POD_NAMESPACE\n              <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">fieldRef</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">fieldPath</span><span class=\"token punctuation\">:</span> metadata.namespace\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n              <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> https\n              <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">443</span>\n          <span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">failureThreshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n            <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /healthz\n              <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10254</span>\n              <span class=\"token key atrule\">scheme</span><span class=\"token punctuation\">:</span> HTTP\n            <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n            <span class=\"token key atrule\">periodSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n            <span class=\"token key atrule\">successThreshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n            <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n          <span class=\"token key atrule\">readinessProbe</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">failureThreshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n            <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /healthz\n              <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10254</span>\n              <span class=\"token key atrule\">scheme</span><span class=\"token punctuation\">:</span> HTTP\n            <span class=\"token key atrule\">periodSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n            <span class=\"token key atrule\">successThreshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n            <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n\n<span class=\"token punctuation\">---</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行如下命令安装ingress controller。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f ingress-nginx-mandatory.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"3-安装K8S-SVC：ingress-nginx\">3.安装K8S SVC：ingress-nginx</h3>\n<p>主要是用来用于暴露pod：nginx-ingress-controller。</p>\n<p>创建service-nodeport.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30080</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> https\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">443</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">443</span>\n      <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30443</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app.kubernetes.io/name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">app.kubernetes.io/part-of</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行如下命令安装。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f service-nodeport.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"4-访问K8S-SVC：ingress-nginx\">4.访问K8S SVC：ingress-nginx</h3>\n<p>查看ingress-nginx命名空间的部署情况，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubectl get pod -n ingress-nginx</span>\nNAME                                        READY   STATUS    RESTARTS   AGE\ndefault-http-backend-796ddcd9b-vfmgn        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">1</span>          10h\nnginx-ingress-controller-58985cc996-87754   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">2</span>          10h\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在命令行服务器命令行输入如下命令查看ingress-nginx的端口映射情况。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get svc -n ingress-nginx \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>具体如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubectl get svc -n ingress-nginx </span>\nNAME                   TYPE        CLUSTER-IP    EXTERNAL-IP   PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>                      AGE\ndefault-http-backend   ClusterIP   <span class=\"token number\">10.96</span>.247.2   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>        <span class=\"token number\">80</span>/TCP                       7m3s\ningress-nginx          NodePort    <span class=\"token number\">10.96</span>.40.6    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>        <span class=\"token number\">80</span>:30080/TCP,443:30443/TCP   4m35s\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>所以，可以通过Master节点（binghe101服务器）的IP地址和30080端口号来访问ingress-nginx，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl 192.168.175.101:30080       </span>\ndefault backend - <span class=\"token number\">404</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>也可以在浏览器打开http://192.168.175.101:30080 来访问ingress-nginx，如下所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231.jpg\" alt=\"\"></p>\n<h2 id=\"K8S安装gitlab代码仓库\">K8S安装gitlab代码仓库</h2>\n<p><strong>注意：在Master节点（binghe101服务器上执行）</strong></p>\n<h3 id=\"1-创建k8s-ops命名空间\">1.创建k8s-ops命名空间</h3>\n<p>创建k8s-ops-namespace.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Namespace\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行如下命令创建命名空间。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f k8s-ops-namespace.yaml \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"2-安装gitlab-redis\">2.安装gitlab-redis</h3>\n<p>创建gitlab-redis.yaml文件，文件的内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> sameersbn/redis\n        <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n          <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6379</span>\n        <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /var/lib/redis\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data\n        <span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> redis<span class=\"token punctuation\">-</span>cli\n            <span class=\"token punctuation\">-</span> ping\n          <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30</span>\n          <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n        <span class=\"token key atrule\">readinessProbe</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> redis<span class=\"token punctuation\">-</span>cli\n            <span class=\"token punctuation\">-</span> ping\n          <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n          <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data\n        <span class=\"token key atrule\">hostPath</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /data1/docker/xinsrv/redis\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6379</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> redis\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> redis\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>首先，在命令行执行如下命令创建/data1/docker/xinsrv/redis目录。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p /data1/docker/xinsrv/redis\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行如下命令安装gitlab-redis。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f gitlab-redis.yaml \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"3-安装gitlab-postgresql\">3.安装gitlab-postgresql</h3>\n<p>创建gitlab-postgresql.yaml，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> sameersbn/postgresql\n        <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_USER\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> gitlab\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_PASS\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> passw0rd\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_NAME\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> gitlab_production\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_EXTENSION\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> pg_trgm\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgres\n          <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5432</span>\n        <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /var/lib/postgresql\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data\n        <span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> pg_isready\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span>h\n            <span class=\"token punctuation\">-</span> localhost\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span>U\n            <span class=\"token punctuation\">-</span> postgres\n          <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30</span>\n          <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n        <span class=\"token key atrule\">readinessProbe</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> pg_isready\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span>h\n            <span class=\"token punctuation\">-</span> localhost\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span>U\n            <span class=\"token punctuation\">-</span> postgres\n          <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n          <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data\n        <span class=\"token key atrule\">hostPath</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /data1/docker/xinsrv/postgresql\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgres\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5432</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> postgres\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> postgresql\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>首先，执行如下命令创建/data1/docker/xinsrv/postgresql目录。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p /data1/docker/xinsrv/postgresql\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来，安装gitlab-postgresql，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f gitlab-postgresql.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"4-安装gitlab\">4.安装gitlab</h3>\n<p><strong>（1）配置用户名和密码</strong></p>\n<p>首先，在命令行使用base64编码为用户名和密码进行转码，本示例中，使用的用户名为admin，密码为admin.1231</p>\n<p>转码情况如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo -n 'admin' | base64 </span>\n<span class=\"token assign-left variable\">YWRtaW4</span><span class=\"token operator\">=</span>\n<span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo -n 'admin.1231' | base64 </span>\n<span class=\"token assign-left variable\">YWRtaW4uMTIzMQ</span><span class=\"token operator\">==</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>转码后的用户名为：YWRtaW4= 密码为：YWRtaW4uMTIzMQ==</p>\n<p>也可以对base64编码后的字符串解码，例如，对密码字符串解码，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo 'YWRtaW4uMTIzMQ==' | base64 --decode </span>\nadmin.1231\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>接下来，创建secret-gitlab.yaml文件，主要是用户来配置GitLab的用户名和密码，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Secret\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> git<span class=\"token punctuation\">-</span>user<span class=\"token punctuation\">-</span>pass\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> Opaque\n<span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> YWRtaW4=\n  <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> YWRtaW4uMTIzMQ==\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行配置文件的内容，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl create -f ./secret-gitlab.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>（2）安装GitLab</strong></p>\n<p>创建gitlab.yaml文件，文件的内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> sameersbn/gitlab<span class=\"token punctuation\">:</span>12.1.6\n        <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> TZ\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> Asia/Shanghai\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_TIMEZONE\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> Beijing\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_SECRETS_DB_KEY_BASE\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> long<span class=\"token punctuation\">-</span>and<span class=\"token punctuation\">-</span>random<span class=\"token punctuation\">-</span>alpha<span class=\"token punctuation\">-</span>numeric<span class=\"token punctuation\">-</span>string\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_SECRETS_SECRET_KEY_BASE\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> long<span class=\"token punctuation\">-</span>and<span class=\"token punctuation\">-</span>random<span class=\"token punctuation\">-</span>alpha<span class=\"token punctuation\">-</span>numeric<span class=\"token punctuation\">-</span>string\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_SECRETS_OTP_KEY_BASE\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> long<span class=\"token punctuation\">-</span>and<span class=\"token punctuation\">-</span>random<span class=\"token punctuation\">-</span>alpha<span class=\"token punctuation\">-</span>numeric<span class=\"token punctuation\">-</span>string\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_ROOT_PASSWORD\n          <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">secretKeyRef</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> git<span class=\"token punctuation\">-</span>user<span class=\"token punctuation\">-</span>pass\n              <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> password\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_ROOT_EMAIL\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> 12345678@qq.com\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_HOST\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> gitlab.binghe.com\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_PORT\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"80\"</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_SSH_PORT\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"30022\"</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_NOTIFY_ON_BROKEN_BUILDS\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"true\"</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_NOTIFY_PUSHER\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"false\"</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_BACKUP_SCHEDULE\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> daily\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GITLAB_BACKUP_TIME\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">01:00</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_TYPE\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> postgres\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_HOST\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> postgresql\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_PORT\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"5432\"</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_USER\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> gitlab\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_PASS\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> passw0rd\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> DB_NAME\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> gitlab_production\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> REDIS_HOST\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> redis\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> REDIS_PORT\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"6379\"</span>\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n          <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ssh\n          <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">22</span>\n        <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /home/git/data\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data\n        <span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /\n            <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n          <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">180</span>\n          <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n        <span class=\"token key atrule\">readinessProbe</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /\n            <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n          <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n          <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data\n        <span class=\"token key atrule\">hostPath</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /data1/docker/xinsrv/gitlab\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30088</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ssh\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">22</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> ssh\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30022</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> extensions/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Ingress\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gitlab\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>ops\n  <span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">kubernetes.io/ingress.class</span><span class=\"token punctuation\">:</span> traefik\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> gitlab.binghe.com\n    <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">backend</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">serviceName</span><span class=\"token punctuation\">:</span> gitlab\n          <span class=\"token key atrule\">servicePort</span><span class=\"token punctuation\">:</span> http\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>注意：在配置GitLab时，监听主机时，不能使用IP地址，需要使用主机名或者域名，上述配置中，我使用的是gitlab.binghe.com主机名。</strong></p>\n<p>在命令行执行如下命令创建/data1/docker/xinsrv/gitlab目录。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p /data1/docker/xinsrv/gitlab\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>安装GitLab，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f gitlab.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"5-安装完成\">5.安装完成</h3>\n<p>查看k8s-ops命名空间部署情况，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubectl get pod -n k8s-ops</span>\nNAME                          READY   STATUS    RESTARTS   AGE\ngitlab-7b459db47c-5vk6t       <span class=\"token number\">0</span>/1     Running   <span class=\"token number\">0</span>          11s\npostgresql-79567459d7-x52vx   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          30m\nredis-67f4cdc96c-h5ckz        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">1</span>          10h\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>也可以使用如下命令查看。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubectl get pod --namespace=k8s-ops</span>\nNAME                          READY   STATUS    RESTARTS   AGE\ngitlab-7b459db47c-5vk6t       <span class=\"token number\">0</span>/1     Running   <span class=\"token number\">0</span>          36s\npostgresql-79567459d7-x52vx   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          30m\nredis-67f4cdc96c-h5ckz        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">1</span>          10h\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>二者效果一样。</p>\n<p>接下来，查看GitLab的端口映射，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 k8s<span class=\"token punctuation\">]</span><span class=\"token comment\"># kubectl get svc -n k8s-ops</span>\nNAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>                     AGE\ngitlab       NodePort    <span class=\"token number\">10.96</span>.153.100   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>        <span class=\"token number\">80</span>:30088/TCP,22:30022/TCP   2m42s\npostgresql   ClusterIP   <span class=\"token number\">10.96</span>.203.119   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>        <span class=\"token number\">5432</span>/TCP                    32m\nredis        ClusterIP   <span class=\"token number\">10.96</span>.107.150   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">&gt;</span>        <span class=\"token number\">6379</span>/TCP                    10h\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时，可以看到，可以通过Master节点（binghe101）的主机名gitlab.binghe.com和端口30088就能够访问GitLab。由于我这里使用的是虚拟机来搭建相关的环境，在本机访问虚拟机映射的gitlab.binghe.com时，需要配置本机的hosts文件，在本机的hosts文件中加入如下配置项。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">192.168.175.101 gitlab.binghe.com\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>注意：在Windows操作系统中，hosts文件所在的目录如下。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">C:\\Windows\\System32\\drivers\\etc\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来，就可以在浏览器中通过链接：<a target=\"_blank\" rel=\"noopener\" href=\"https://links.jianshu.com/go?to=http%3A%2F%2Fgitlab.binghe.com%3A30088\">http://gitlab.binghe.com:30088</a> 来访问GitLab了，如下所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-1.jpg\" alt=\"\"></p>\n<p>此时，可以通过用户名root和密码admin.1231来登录GitLab了。</p>\n<p><strong>注意：这里的用户名是root而不是admin，因为root是GitLab默认的超级用户。</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-2.jpg\" alt=\"\"></p>\n<p>登录后的界面如下所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-3.jpg\" alt=\"\"></p>\n<p>到此，K8S安装gitlab完成。</p>\n<h2 id=\"安装Harbor私有仓库\">安装Harbor私有仓库</h2>\n<p><strong>注意：这里将Harbor私有仓库安装在Master节点（binghe101服务器）上，实际生产环境中建议安装在其他服务器。</strong></p>\n<h3 id=\"1-下载Harbor的离线安装版本\">1.下载Harbor的离线安装版本</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://github.com/goharbor/harbor/releases/download/v1.10.2/harbor-offline-installer-v1.10.2.tgz\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"2-解压Harbor的安装包\">2.解压Harbor的安装包</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> -zxvf harbor-offline-installer-v1.10.2.tgz\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>解压成功后，会在服务器当前目录生成一个harbor目录。</p>\n<h3 id=\"3-配置Harbor\">3.配置Harbor</h3>\n<p><strong>注意：这里，我将Harbor的端口修改成了1180，如果不修改Harbor的端口，默认的端口是80。</strong></p>\n<p><strong>（1）修改harbor.yml文件</strong></p>\n<p>修改的配置项如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> 192.168.175.101\n<span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1180</span>\n<span class=\"token key atrule\">harbor_admin_password</span><span class=\"token punctuation\">:</span> binghe123\n<span class=\"token comment\">###并把https注释掉，不然在安装的时候会报错：ERROR:root:Error: The protocol is https but attribute ssl_cert is not set</span>\n<span class=\"token comment\">#https:</span>\n  <span class=\"token comment\">#port: 443</span>\n  <span class=\"token comment\">#certificate: /your/certificate/path</span>\n  <span class=\"token comment\">#private_key: /your/private/key/path</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>（2）修改daemon.json文件</strong></p>\n<p>修改/etc/docker/daemon.json文件，没有的话就创建，在/etc/docker/daemon.json文件中添加如下内容。</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>root@binghe~<span class=\"token punctuation\">]</span># cat /etc/docker/daemon.json\n<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"registry-mirrors\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://zz3sblpi.mirror.aliyuncs.com\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"insecure-registries\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"192.168.175.101:1180\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>也可以在服务器上使用 <strong>ip addr</strong> 命令查看本机所有的IP地址段，将其配置到/etc/docker/daemon.json文件中。这里，我配置后的文件内容如下所示。</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"registry-mirrors\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://zz3sblpi.mirror.aliyuncs.com\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"insecure-registries\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"192.168.175.0/16\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"172.17.0.0/16\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"172.18.0.0/16\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"172.16.29.0/16\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"192.168.175.101:1180\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"4-安装并启动harbor\">4.安装并启动harbor</h3>\n<p>配置完成后，输入如下命令即可安装并启动Harbor</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe harbor<span class=\"token punctuation\">]</span><span class=\"token comment\"># ./install.sh </span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"5-登录Harbor并添加账户\">5.登录Harbor并添加账户</h3>\n<p>安装成功后，在浏览器地址栏输入http://192.168.175.101:1180打开链接，如下图所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-4.jpg\" alt=\"\"></p>\n<p>输入用户名admin和密码binghe123，登录系统，如下图所示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-5.jpg\" alt=\"\"></p>\n<p>接下来，我们选择用户管理，添加一个管理员账户，为后续打包Docker镜像和上传Docker镜像做准备。添加账户的步骤如下所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-6.jpg\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-7.jpg\" alt=\"\"></p>\n<p>此处填写的密码为Binghe123。</p>\n<p>点击确定后，如下所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-8.jpg\" alt=\"\"></p>\n<p>此时，账户binghe还不是管理员，此时选中binghe账户，点击“设置为管理员”。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-9.jpg\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-10.jpg\" alt=\"\"></p>\n<p>此时，binghe账户就被设置为管理员了。到此，Harbor的安装就完成了。</p>\n<h3 id=\"6-修改Harbor端口\">6.修改Harbor端口</h3>\n<p><strong>如果安装Harbor后，大家需要修改Harbor的端口，可以按照如下步骤修改Harbor的端口，这里，我以将80端口修改为1180端口为例</strong></p>\n<p><strong>（1）修改harbor.yml文件</strong></p>\n<p>修改的配置项如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> 192.168.175.101\n<span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1180</span>\n<span class=\"token key atrule\">harbor_admin_password</span><span class=\"token punctuation\">:</span> binghe123\n<span class=\"token comment\">###并把https注释掉，不然在安装的时候会报错：ERROR:root:Error: The protocol is https but attribute ssl_cert is not set</span>\n<span class=\"token comment\">#https:</span>\n  <span class=\"token comment\">#port: 443</span>\n  <span class=\"token comment\">#certificate: /your/certificate/path</span>\n  <span class=\"token comment\">#private_key: /your/private/key/path</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>（2）修改docker-compose.yml文件</strong></p>\n<p>修改的配置项如下所示。</p>\n<p><strong>（3）修改config.yml文件</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> common/config/registry\n<span class=\"token function\">vim</span> config.yml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>修改的配置项如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">realm: http://192.168.175.101:1180/service/token\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>（4）重启Docker</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl daemon-reload\nsystemctl restart docker.service\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>（5）重启Harbor</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe harbor<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker-compose down</span>\nStopping harbor-log <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving nginx             <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving harbor-portal     <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving harbor-jobservice <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving harbor-core       <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving redis             <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving registry          <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving registryctl       <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving harbor-db         <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving harbor-log        <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nRemoving network harbor_harbor\n \n<span class=\"token punctuation\">[</span>root@binghe harbor<span class=\"token punctuation\">]</span><span class=\"token comment\"># ./prepare</span>\nprepare base <span class=\"token function\">dir</span> is <span class=\"token builtin class-name\">set</span> to /mnt/harbor\nClearing the configuration file: /config/log/logrotate.conf\nClearing the configuration file: /config/nginx/nginx.conf\nClearing the configuration file: /config/core/env\nClearing the configuration file: /config/core/app.conf\nClearing the configuration file: /config/registry/root.crt\nClearing the configuration file: /config/registry/config.yml\nClearing the configuration file: /config/registryctl/env\nClearing the configuration file: /config/registryctl/config.yml\nClearing the configuration file: /config/db/env\nClearing the configuration file: /config/jobservice/env\nClearing the configuration file: /config/jobservice/config.yml\nGenerated configuration file: /config/log/logrotate.conf\nGenerated configuration file: /config/nginx/nginx.conf\nGenerated configuration file: /config/core/env\nGenerated configuration file: /config/core/app.conf\nGenerated configuration file: /config/registry/config.yml\nGenerated configuration file: /config/registryctl/env\nGenerated configuration file: /config/db/env\nGenerated configuration file: /config/jobservice/env\nGenerated configuration file: /config/jobservice/config.yml\nloaded secret from file: /secret/keys/secretkey\nGenerated configuration file: /compose_location/docker-compose.yml\nClean up the input <span class=\"token function\">dir</span>\n \n<span class=\"token punctuation\">[</span>root@binghe harbor<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker-compose up -d</span>\nCreating network <span class=\"token string\">\"harbor_harbor\"</span> with the default driver\nCreating harbor-log <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nCreating harbor-db   <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nCreating redis       <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nCreating registry    <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nCreating registryctl <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nCreating harbor-core <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nCreating harbor-jobservice <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nCreating harbor-portal     <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\nCreating nginx             <span class=\"token punctuation\">..</span>. <span class=\"token keyword\">done</span>\n \n<span class=\"token punctuation\">[</span>root@binghe harbor<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker ps -a</span>\nCONTAINER ID        IMAGE                                               COMMAND                  CREATED             STATUS                             PORTS\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"安装Jenkins（一般的做法）\">安装Jenkins（一般的做法）</h2>\n<h3 id=\"1-安装nfs（之前安装过的话，可以省略此步）\">1.安装nfs（之前安装过的话，可以省略此步）</h3>\n<p>使用 nfs 最大的问题就是写权限，可以使用 kubernetes 的 securityContext/runAsUser 指定 jenkins 容器中运行 jenkins 的用户 uid，以此来指定 nfs 目录的权限，让 jenkins 容器可写；也可以不限制，让所有用户都可以写。这里为了简单，就让所有用户可写了。</p>\n<p>如果之前已经安装过nfs，则这一步可以省略。找一台主机，安装 nfs，这里，我以在Master节点（binghe101服务器）上安装nfs为例。</p>\n<p>在命令行输入如下命令安装并启动nfs。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> nfs-utils -y\nsystemctl start nfs-server\nsystemctl <span class=\"token builtin class-name\">enable</span> nfs-server\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-创建nfs共享目录\">2.创建nfs共享目录</h3>\n<p>在Master节点（binghe101服务器）上创建 <code>/opt/nfs/jenkins-data</code>目录作为nfs的共享目录，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p /opt/nfs/jenkins-data\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来，编辑/etc/exports文件，如下所示。</p>\n<p>在/etc/exports文件文件中添加如下一行配置。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">/opt/nfs/jenkins-data 192.168.175.0/24(rw,all_squash)\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这里的 ip 使用 kubernetes node 节点的 ip 范围，后面的 <code>all_squash</code> 选项会将所有访问的用户都映射成 nfsnobody 用户，不管你是什么用户访问，最终都会压缩成 nfsnobody，所以只要将 <code>/opt/nfs/jenkins-data</code> 的属主改为 nfsnobody，那么无论什么用户来访问都具有写权限。</p>\n<p>这个选项在很多机器上由于用户 uid 不规范导致启动进程的用户不同，但是同时要对一个共享目录具有写权限时很有效。</p>\n<p>接下来，为 <code>/opt/nfs/jenkins-data</code>目录授权，并重新加载nfs，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chown</span> -R <span class=\"token number\">1000</span> /opt/nfs/jenkins-data/\nsystemctl reload nfs-server\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>在K8S集群中任意一个节点上使用如下命令进行验证：</p>\n<p>如果能够看到 /opt/nfs/jenkins-data 就表示 ok 了。</p>\n<p>具体如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># showmount -e 192.168.175.101</span>\nExport list <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.175.101:\n/opt/nfs/jenkins-data <span class=\"token number\">192.168</span>.175.0/24\n\n<span class=\"token punctuation\">[</span>root@binghe102 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># showmount -e 192.168.175.101</span>\nExport list <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.175.101:\n/opt/nfs/jenkins-data <span class=\"token number\">192.168</span>.175.0/24\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3-创建PV\">3.创建PV</h3>\n<p>Jenkins 其实只要加载对应的目录就可以读取之前的数据，但是由于 deployment 无法定义存储卷，因此我们只能使用 StatefulSet。</p>\n<p>首先创建 pv，pv 是给 StatefulSet 使用的，每次 StatefulSet 启动都会通过 volumeClaimTemplates 这个模板去创建 pvc，因此必须得有 pv，才能供 pvc 绑定。</p>\n<p>创建jenkins-pv.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> PersistentVolume\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">nfs</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /opt/nfs/jenkins<span class=\"token punctuation\">-</span>data\n    <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span> 192.168.175.101\n  <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ReadWriteOnce\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">capacity</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 1Ti\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我这里给了 1T存储空间，可以根据实际配置。</p>\n<p>执行如下命令创建pv。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f jenkins-pv.yaml \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"4-创建serviceAccount\">4.创建serviceAccount</h3>\n<p>创建service account，因为 jenkins 后面需要能够动态创建 slave，因此它必须具备一些权限。</p>\n<p>创建jenkins-service-account.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ServiceAccount\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Role\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io/v1beta1\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n<span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"pods\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"create\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"delete\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"list\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"patch\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"update\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"watch\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"pods/exec\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"create\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"delete\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"list\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"patch\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"update\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"watch\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"pods/log\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"list\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"watch\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"secrets\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">verbs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"get\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> RoleBinding\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n<span class=\"token key atrule\">roleRef</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">apiGroup</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io\n  <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Role\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n<span class=\"token key atrule\">subjects</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ServiceAccount\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上述配置中，创建了一个 RoleBinding 和一个 ServiceAccount，并且将 RoleBinding 的权限绑定到这个用户上。所以，jenkins 容器必须使用这个 ServiceAccount 运行才行，不然 RoleBinding 的权限它将不具备。</p>\n<p>RoleBinding 的权限很容易就看懂了，因为 jenkins 需要创建和删除 slave，所以才需要上面这些权限。至于 secrets 权限，则是 https 证书。</p>\n<p>执行如下命令创建serviceAccount。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f jenkins-service-account.yaml \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"5-安装Jenkins\">5.安装Jenkins</h3>\n<p>创建jenkins-statefulset.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> StatefulSet\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n  <span class=\"token key atrule\">serviceName</span><span class=\"token punctuation\">:</span> jenkins\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">updateStrategy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> RollingUpdate\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">terminationGracePeriodSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n      <span class=\"token key atrule\">serviceAccountName</span><span class=\"token punctuation\">:</span> jenkins\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> docker.io/jenkins/jenkins<span class=\"token punctuation\">:</span>lts\n          <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">32100</span>\n          <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">limits</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span>\n              <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 4Gi\n            <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span>\n              <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 4Gi\n          <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> LIMITS_MEMORY\n              <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">resourceFieldRef</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">resource</span><span class=\"token punctuation\">:</span> limits.memory\n                  <span class=\"token key atrule\">divisor</span><span class=\"token punctuation\">:</span> 1Mi\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> JAVA_OPTS\n              \n              <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">-</span>Xmx$(LIMITS_MEMORY)m <span class=\"token punctuation\">-</span>XshowSettings<span class=\"token punctuation\">:</span>vm <span class=\"token punctuation\">-</span>Dhudson.slaves.NodeProvisioner.initialDelay=0 <span class=\"token punctuation\">-</span>Dhudson.slaves.NodeProvisioner.MARGIN=50 <span class=\"token punctuation\">-</span>Dhudson.slaves.NodeProvisioner.MARGIN0=0.85\n          <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins<span class=\"token punctuation\">-</span>home\n              <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /var/jenkins_home\n          <span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /login\n              <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n            <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">60</span>\n            <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n            <span class=\"token key atrule\">failureThreshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span> \n          <span class=\"token key atrule\">readinessProbe</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /login\n              <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n            <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">60</span>\n            <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n            <span class=\"token key atrule\">failureThreshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span> \n  \n  <span class=\"token key atrule\">volumeClaimTemplates</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins<span class=\"token punctuation\">-</span>home\n      <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ReadWriteOnce\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 1Ti\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>jenkins 部署时需要注意它的副本数，你的副本数有多少就要有多少个 pv，同样，存储会有多倍消耗。这里我只使用了一个副本，因此前面也只创建了一个 pv。</p>\n<p>使用如下命令安装Jenkins。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f jenkins-statefulset.yaml \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"6-创建Service\">6.创建Service</h3>\n<p>创建jenkins-service.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  \n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n  \n  \n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">31888</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n      <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins<span class=\"token punctuation\">-</span>agent\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">32100</span>\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">32100</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">32100</span>\n      <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>使用如下命令安装Service。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f jenkins-service.yaml \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"7-安装-ingress\">7.安装 ingress</h3>\n<p>jenkins 的 web 界面需要从集群外访问，这里我们选择的是使用 ingress。创建jenkins-ingress.yaml文件，文件内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> extensions/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Ingress\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jenkins\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /\n            <span class=\"token key atrule\">backend</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">serviceName</span><span class=\"token punctuation\">:</span> jenkins\n              <span class=\"token key atrule\">servicePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">31888</span>\n      <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> jekins.binghe.com\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>这里，需要注意的是host必须配置为域名或者主机名，否则会报错，如下所示。</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">The Ingress <span class=\"token string\">\"jenkins\"</span> is invalid: spec.rules<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>.host: Invalid value: <span class=\"token string\">\"192.168.175.101\"</span><span class=\"token builtin class-name\">:</span> must be a DNS name, not an IP address\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>使用如下命令安装ingress。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f jenkins-ingress.yaml \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>最后，由于我这里使用的是虚拟机来搭建相关的环境，在本机访问虚拟机映射的jekins.binghe.com时，需要配置本机的hosts文件，在本机的hosts文件中加入如下配置项。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">192.168.175.101 jekins.binghe.com\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>注意：在Windows操作系统中，hosts文件所在的目录如下。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">C:\\Windows\\System32\\drivers\\etc\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来，就可以在浏览器中通过链接：<a target=\"_blank\" rel=\"noopener\" href=\"https://links.jianshu.com/go?to=http%3A%2F%2Fjekins.binghe.com%3A31888\">http://jekins.binghe.com:31888</a> 来访问Jekins了。</p>\n<h2 id=\"物理机安装SVN\">物理机安装SVN</h2>\n<p>这里，以在Master节点（binghe101服务器）上安装SVN为例。</p>\n<h3 id=\"1-使用yum安装SVN\">1.使用yum安装SVN</h3>\n<p>在命令行执行如下命令安装SVN。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum -y <span class=\"token function\">install</span> subversion \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"2-创建SVN库\">2.创建SVN库</h3>\n<p>依次执行如下命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#创建/data/svn</span>\n<span class=\"token function\">mkdir</span> -p /data/svn \n<span class=\"token comment\">#初始化svn</span>\nsvnserve -d -r /data/svn\n<span class=\"token comment\">#创建代码仓库</span>\nsvnadmin create /data/svn/test\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3-配置SVN\">3.配置SVN</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> /data/svn/conf\n<span class=\"token function\">cp</span> /data/svn/test/conf/* /data/svn/conf/\n<span class=\"token builtin class-name\">cd</span> /data/svn/conf/\n<span class=\"token punctuation\">[</span>root@binghe101 conf<span class=\"token punctuation\">]</span><span class=\"token comment\"># ll</span>\n总用量 <span class=\"token number\">20</span>\n-rw-r--r-- <span class=\"token number\">1</span> root root <span class=\"token number\">1080</span> <span class=\"token number\">5</span>月  <span class=\"token number\">12</span> 02:17 authz\n-rw-r--r-- <span class=\"token number\">1</span> root root  <span class=\"token number\">885</span> <span class=\"token number\">5</span>月  <span class=\"token number\">12</span> 02:17 hooks-env.tmpl\n-rw-r--r-- <span class=\"token number\">1</span> root root  <span class=\"token number\">309</span> <span class=\"token number\">5</span>月  <span class=\"token number\">12</span> 02:17 <span class=\"token function\">passwd</span>\n-rw-r--r-- <span class=\"token number\">1</span> root root <span class=\"token number\">4375</span> <span class=\"token number\">5</span>月  <span class=\"token number\">12</span> 02:17 svnserve.conf\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>配置authz文件，</li>\n</ul>\n<p>配置后的内容如下所示。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">aliases</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token comment\"># joe = /C=XZ/ST=Dessert/L=Snake City/O=Snake Oil, Ltd./OU=Research Institute/CN=Joe Average</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">groups</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token comment\"># harry_and_sally = harry,sally</span>\n<span class=\"token comment\"># harry_sally_and_joe = harry,sally,&amp;joe</span>\n<span class=\"token key attr-name\">SuperAdmin</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">admin</span>\n<span class=\"token key attr-name\">binghe</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">admin,binghe</span>\n\n<span class=\"token comment\"># [/foo/bar]</span>\n<span class=\"token comment\"># harry = rw</span>\n<span class=\"token comment\"># &amp;joe = r</span>\n<span class=\"token comment\"># * =</span>\n\n<span class=\"token comment\"># [repository:/baz/fuz]</span>\n<span class=\"token comment\"># @harry_and_sally = rw</span>\n<span class=\"token comment\"># * = r</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">test:/</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">@SuperAdmin</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">rw</span>\n<span class=\"token key attr-name\">@binghe</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">rw</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>配置passwd文件</li>\n</ul>\n<p>配置后的内容如下所示。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">users</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token comment\"># harry = harryssecret</span>\n<span class=\"token comment\"># sally = sallyssecret</span>\n<span class=\"token key attr-name\">admin</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">admin123</span>\n<span class=\"token key attr-name\">binghe</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">binghe123</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>配置 svnserve.conf</li>\n</ul>\n<p>配置后的文件如下所示。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token comment\">### This file controls the configuration of the svnserve daemon, if you</span>\n<span class=\"token comment\">### use it to allow access to this repository.  (If you only allow</span>\n<span class=\"token comment\">### access through http: and/or file: URLs, then this file is</span>\n<span class=\"token comment\">### irrelevant.)</span>\n\n<span class=\"token comment\">### Visit http://subversion.apache.org/ for more information.</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">general</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token comment\">### The anon-access and auth-access options control access to the</span>\n<span class=\"token comment\">### repository for unauthenticated (a.k.a. anonymous) users and</span>\n<span class=\"token comment\">### authenticated users, respectively.</span>\n<span class=\"token comment\">### Valid values are \"write\", \"read\", and \"none\".</span>\n<span class=\"token comment\">### Setting the value to \"none\" prohibits both reading and writing;</span>\n<span class=\"token comment\">### \"read\" allows read-only access, and \"write\" allows complete </span>\n<span class=\"token comment\">### read/write access to the repository.</span>\n<span class=\"token comment\">### The sample settings below are the defaults and specify that anonymous</span>\n<span class=\"token comment\">### users have read-only access to the repository, while authenticated</span>\n<span class=\"token comment\">### users have read and write access to the repository.</span>\n<span class=\"token key attr-name\">anon-access</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">none</span>\n<span class=\"token key attr-name\">auth-access</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">write</span>\n<span class=\"token comment\">### The password-db option controls the location of the password</span>\n<span class=\"token comment\">### database file.  Unless you specify a path starting with a /,</span>\n<span class=\"token comment\">### the file's location is relative to the directory containing</span>\n<span class=\"token comment\">### this configuration file.</span>\n<span class=\"token comment\">### If SASL is enabled (see below), this file will NOT be used.</span>\n<span class=\"token comment\">### Uncomment the line below to use the default password file.</span>\n<span class=\"token key attr-name\">password-db</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">/data/svn/conf/passwd</span>\n<span class=\"token comment\">### The authz-db option controls the location of the authorization</span>\n<span class=\"token comment\">### rules for path-based access control.  Unless you specify a path</span>\n<span class=\"token comment\">### starting with a /, the file's location is relative to the</span>\n<span class=\"token comment\">### directory containing this file.  The specified path may be a</span>\n<span class=\"token comment\">### repository relative URL (^/) or an absolute file:// URL to a text</span>\n<span class=\"token comment\">### file in a Subversion repository.  If you don't specify an authz-db,</span>\n<span class=\"token comment\">### no path-based access control is done.</span>\n<span class=\"token comment\">### Uncomment the line below to use the default authorization file.</span>\n<span class=\"token key attr-name\">authz-db</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">/data/svn/conf/authz</span>\n<span class=\"token comment\">### The groups-db option controls the location of the file with the</span>\n<span class=\"token comment\">### group definitions and allows maintaining groups separately from the</span>\n<span class=\"token comment\">### authorization rules.  The groups-db file is of the same format as the</span>\n<span class=\"token comment\">### authz-db file and should contain a single [groups] section with the</span>\n<span class=\"token comment\">### group definitions.  If the option is enabled, the authz-db file cannot</span>\n<span class=\"token comment\">### contain a [groups] section.  Unless you specify a path starting with</span>\n<span class=\"token comment\">### a /, the file's location is relative to the directory containing this</span>\n<span class=\"token comment\">### file.  The specified path may be a repository relative URL (^/) or an</span>\n<span class=\"token comment\">### absolute file:// URL to a text file in a Subversion repository.</span>\n<span class=\"token comment\">### This option is not being used by default.</span>\n<span class=\"token comment\"># groups-db = groups</span>\n<span class=\"token comment\">### This option specifies the authentication realm of the repository.</span>\n<span class=\"token comment\">### If two repositories have the same authentication realm, they should</span>\n<span class=\"token comment\">### have the same password database, and vice versa.  The default realm</span>\n<span class=\"token comment\">### is repository's uuid.</span>\n<span class=\"token key attr-name\">realm</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">svn</span>\n<span class=\"token comment\">### The force-username-case option causes svnserve to case-normalize</span>\n<span class=\"token comment\">### usernames before comparing them against the authorization rules in the</span>\n<span class=\"token comment\">### authz-db file configured above.  Valid values are \"upper\" (to upper-</span>\n<span class=\"token comment\">### case the usernames), \"lower\" (to lowercase the usernames), and</span>\n<span class=\"token comment\">### \"none\" (to compare usernames as-is without case conversion, which</span>\n<span class=\"token comment\">### is the default behavior).</span>\n<span class=\"token comment\"># force-username-case = none</span>\n<span class=\"token comment\">### The hooks-env options specifies a path to the hook script environment </span>\n<span class=\"token comment\">### configuration file. This option overrides the per-repository default</span>\n<span class=\"token comment\">### and can be used to configure the hook script environment for multiple </span>\n<span class=\"token comment\">### repositories in a single file, if an absolute path is specified.</span>\n<span class=\"token comment\">### Unless you specify an absolute path, the file's location is relative</span>\n<span class=\"token comment\">### to the directory containing this file.</span>\n<span class=\"token comment\"># hooks-env = hooks-env</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">sasl</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token comment\">### This option specifies whether you want to use the Cyrus SASL</span>\n<span class=\"token comment\">### library for authentication. Default is false.</span>\n<span class=\"token comment\">### Enabling this option requires svnserve to have been built with Cyrus</span>\n<span class=\"token comment\">### SASL support; to check, run 'svnserve --version' and look for a line</span>\n<span class=\"token comment\">### reading 'Cyrus SASL authentication is available.'</span>\n<span class=\"token comment\"># use-sasl = true</span>\n<span class=\"token comment\">### These options specify the desired strength of the security layer</span>\n<span class=\"token comment\">### that you want SASL to provide. 0 means no encryption, 1 means</span>\n<span class=\"token comment\">### integrity-checking only, values larger than 1 are correlated</span>\n<span class=\"token comment\">### to the effective key length for encryption (e.g. 128 means 128-bit</span>\n<span class=\"token comment\">### encryption). The values below are the defaults.</span>\n<span class=\"token comment\"># min-encryption = 0</span>\n<span class=\"token comment\"># max-encryption = 256</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来，将/data/svn/conf目录下的svnserve.conf文件复制到/data/svn/test/conf/目录下。如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 conf<span class=\"token punctuation\">]</span><span class=\"token comment\"># cp /data/svn/conf/svnserve.conf /data/svn/test/conf/</span>\ncp：是否覆盖<span class=\"token string\">'/data/svn/test/conf/svnserve.conf'</span>？ y\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"4-启动SVN服务\">4.启动SVN服务</h3>\n<p><strong>（1）创建svnserve.service服务</strong></p>\n<p>创建svnserve.service文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /usr/lib/systemd/system/svnserve.service\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>文件的内容如下所示。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Unit</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">Description</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">Subversion protocol daemon</span>\n<span class=\"token key attr-name\">After</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">syslog.target network.target</span>\n<span class=\"token key attr-name\">Documentation</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">man:svnserve(8)</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Service</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">Type</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">forking</span>\n<span class=\"token key attr-name\">EnvironmentFile</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">/etc/sysconfig/svnserve</span>\n<span class=\"token comment\">#ExecStart=/usr/bin/svnserve --daemon --pid-file=/run/svnserve/svnserve.pid $OPTIONS</span>\n<span class=\"token key attr-name\">ExecStart</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">/usr/bin/svnserve --daemon $OPTIONS</span>\n<span class=\"token key attr-name\">PrivateTmp</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">yes</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Install</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">WantedBy</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">multi-user.target</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来执行如下命令使配置生效。</p>\n<p>命令执行成功后，修改 /etc/sysconfig/svnserve 文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/sysconfig/svnserve \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>修改后的文件内容如下所示。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token comment\"># OPTIONS is used to pass command-line arguments to svnserve.</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># Specify the repository location in -r parameter:</span>\n<span class=\"token key attr-name\">OPTIONS</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"<span class=\"token inner-value\">-r /data/svn</span>\"</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>（2）启动SVN</strong></p>\n<p>首先查看SVN状态，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@itence10 conf<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl status svnserve.service</span>\n● svnserve.service - Subversion protocol daemon\n   Loaded: loaded <span class=\"token punctuation\">(</span>/usr/lib/systemd/system/svnserve.service<span class=\"token punctuation\">;</span> disabled<span class=\"token punctuation\">;</span> vendor preset: disabled<span class=\"token punctuation\">)</span>\n   Active: inactive <span class=\"token punctuation\">(</span>dead<span class=\"token punctuation\">)</span>\n     Docs: man:svnserve<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以看到，此时SVN并没有启动，接下来，需要启动SVN。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl start svnserve.service\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>设置SVN服务开机自启动。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl <span class=\"token builtin class-name\">enable</span> svnserve.service\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来，就可以下载安装TortoiseSVN，输入链接<a target=\"_blank\" rel=\"noopener\" href=\"https://links.jianshu.com/go?to=svn%3A%2F%2F192.168.0.10%2Ftest\">svn://192.168.0.10/test</a> 并输入用户名binghe，密码binghe123来连接SVN了。</p>\n<h2 id=\"物理机安装Jenkins\">物理机安装Jenkins</h2>\n<p><strong>注意：安装Jenkins之前需要安装JDK和Maven，我这里同样将Jenkins安装在Master节点（binghe101服务器）。</strong></p>\n<h3 id=\"1-启用Jenkins库\">1.启用Jenkins库</h3>\n<p>运行以下命令以下载repo文件并导入GPG密钥：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo\n<span class=\"token function\">rpm</span> --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"2-安装Jenkins\">2.安装Jenkins</h3>\n<p>执行如下命令安装Jenkis。</p>\n<p>接下来，修改Jenkins默认端口，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/sysconfig/jenkins\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>修改后的两项配置如下所示。</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token key attr-name\">JENKINS_JAVA_CMD</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"<span class=\"token inner-value\">/usr/local/jdk1.8.0_212/bin/java</span>\"</span>\n<span class=\"token key attr-name\">JENKINS_PORT</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"<span class=\"token inner-value\">18080</span>\"</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>此时，已经将Jenkins的端口由8080修改为18080</p>\n<h3 id=\"3-启动Jenkins\">3.启动Jenkins</h3>\n<p>在命令行输入如下命令启动Jenkins。</p>\n<p>配置Jenkins开机自启动。</p>\n<p>查看Jenkins的运行状态。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@itence10 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl status jenkins</span>\n● jenkins.service - LSB: Jenkins Automation Server\n   Loaded: loaded <span class=\"token punctuation\">(</span>/etc/rc.d/init.d/jenkins<span class=\"token punctuation\">;</span> generated<span class=\"token punctuation\">)</span>\n   Active: active <span class=\"token punctuation\">(</span>running<span class=\"token punctuation\">)</span> since Tue <span class=\"token number\">2020</span>-05-12 04:33:40 EDT<span class=\"token punctuation\">;</span> 28s ago\n     Docs: man:systemd-sysv-generator<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n    Tasks: <span class=\"token number\">71</span> <span class=\"token punctuation\">(</span>limit: <span class=\"token number\">26213</span><span class=\"token punctuation\">)</span>\n   Memory: <span class=\"token number\">550</span>.8M\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>说明，Jenkins启动成功。</p>\n<h2 id=\"配置Jenkins运行环境\">配置Jenkins运行环境</h2>\n<h3 id=\"1-登录Jenkins\">1.登录Jenkins</h3>\n<p>首次安装后，需要配置Jenkins的运行环境。首先，在浏览器地址栏访问链接http://192.168.0.10:18080，打开Jenkins界面。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-11.jpg\" alt=\"\"></p>\n<p>根据提示使用如下命令到服务器上找密码值，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@binghe101 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /var/lib/jenkins/secrets/initialAdminPassword</span>\n71af861c2ab948a1b6efc9f7dde90776\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>将密码71af861c2ab948a1b6efc9f7dde90776复制到文本框，点击继续。会跳转到自定义Jenkins页面，如下所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-12.jpg\" alt=\"\"></p>\n<p>这里，可以直接选择“安装推荐的插件”。之后会跳转到一个安装插件的页面，如下所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-13.jpg\" alt=\"\"></p>\n<p>此步骤可能有下载失败的情况，可直接忽略。</p>\n<h3 id=\"2-安装插件\">2.安装插件</h3>\n<p>需要安装的插件</p>\n<ul>\n<li>\n<p>Kubernetes Cli Plugin：该插件可直接在Jenkins中使用kubernetes命令行进行操作。</p>\n</li>\n<li>\n<p>Kubernetes plugin： 使用kubernetes则需要安装该插件</p>\n</li>\n<li>\n<p>Kubernetes Continuous Deploy Plugin：kubernetes部署插件，可根据需要使用</p>\n</li>\n</ul>\n<p>还有更多的插件可供选择，可点击 系统管理-&gt;管理插件进行管理和添加，安装相应的Docker插件、SSH插件、Maven插件。其他的插件可以根据需要进行安装。如下图所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-14.jpg\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-15.jpg\" alt=\"\"></p>\n<h3 id=\"3-配置Jenkins\">3.配置Jenkins</h3>\n<p><strong>（1）配置JDK和Maven</strong></p>\n<p>在Global Tool Configuration中配置JDK和Maven，如下所示，打开Global Tool Configuration界面。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-16.jpg\" alt=\"\"></p>\n<p>接下来就开始配置JDK和Maven了。</p>\n<p>由于我在服务器上将Maven安装在/usr/local/maven-3.6.3目录下，所以，需要在“Maven 配置”中进行配置，如下图所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-17.jpg\" alt=\"\"></p>\n<p>接下来，配置JDK，如下所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-18.jpg\" alt=\"\"></p>\n<p><strong>注意：不要勾选“Install automatically”</strong></p>\n<p>接下来，配置Maven，如下所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-19.jpg\" alt=\"\"></p>\n<p><strong>注意：不要勾选“Install automatically”</strong></p>\n<p><strong>（2）配置SSH</strong></p>\n<p>进入Jenkins的Configure System界面配置SSH，如下所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-20.jpg\" alt=\"\"></p>\n<p>找到 SSH remote hosts 进行配置。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-21.jpg\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-22.jpg\" alt=\"\"></p>\n<p>配置完成后，点击Check connection按钮，会显示 Successfull connection。如下所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1620220416011231-23.jpg\" alt=\"\"></p>\n<p>至此，Jenkins的基本配置就完成了。</p>\n<h2 id=\"Jenkins发布Docker项目到K8s集群\">Jenkins发布Docker项目到K8s集群</h2>\n<h3 id=\"1-调整SpringBoot项目的配置\">1.调整SpringBoot项目的配置</h3>\n<p>实现，SpringBoot项目中启动类所在的模块的pom.xml需要引入打包成Docker镜像的配置，如下所示。</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>docker.repostory</span><span class=\"token punctuation\">&gt;</span></span>192.168.0.10:1180<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>docker.repostory</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>docker.registry.name</span><span class=\"token punctuation\">&gt;</span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>docker.registry.name</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>docker.image.tag</span><span class=\"token punctuation\">&gt;</span></span>1.0.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>docker.image.tag</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>docker.maven.plugin.version</span><span class=\"token punctuation\">&gt;</span></span>1.4.10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>docker.maven.plugin.version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>build</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>finalName</span><span class=\"token punctuation\">&gt;</span></span>test-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>finalName</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugins</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-boot-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">&gt;</span></span>\n            \n            \n            \n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>com.spotify<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>dockerfile-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>${docker.maven.plugin.version}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>executions</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>execution</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">&gt;</span></span>default<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goals</span><span class=\"token punctuation\">&gt;</span></span>\n                        \n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goal</span><span class=\"token punctuation\">&gt;</span></span>build<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goal</span><span class=\"token punctuation\">&gt;</span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goal</span><span class=\"token punctuation\">&gt;</span></span>push<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goal</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goals</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>execution</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>executions</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>contextDirectory</span><span class=\"token punctuation\">&gt;</span></span>${project.basedir}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>contextDirectory</span><span class=\"token punctuation\">&gt;</span></span>\n                    \n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>useMavenSettingsForAuth</span><span class=\"token punctuation\">&gt;</span></span>useMavenSettingsForAuth&gt;true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>useMavenSettingsForAuth</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>repository</span><span class=\"token punctuation\">&gt;</span></span>${docker.repostory}/${docker.registry.name}/${project.artifactId}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>repository</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tag</span><span class=\"token punctuation\">&gt;</span></span>${docker.image.tag}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tag</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>buildArgs</span><span class=\"token punctuation\">&gt;</span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>JAR_FILE</span><span class=\"token punctuation\">&gt;</span></span>target/${project.build.finalName}.jar<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>JAR_FILE</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>buildArgs</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">&gt;</span></span>\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugins</span><span class=\"token punctuation\">&gt;</span></span>\n        \n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resources</span><span class=\"token punctuation\">&gt;</span></span>\n            \n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resource</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>directory</span><span class=\"token punctuation\">&gt;</span></span>src/main/resources<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>directory</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>targetPath</span><span class=\"token punctuation\">&gt;</span></span>${project.build.directory}/classes<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>targetPath</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>includes</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span><span class=\"token punctuation\">&gt;</span></span>**/*<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>include</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>includes</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filtering</span><span class=\"token punctuation\">&gt;</span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filtering</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resource</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resources</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>build</span><span class=\"token punctuation\">&gt;</span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来，在SpringBoot启动类所在模块的根目录创建Dockerfile，内容示例如下所示。</p>\n<pre class=\"line-numbers language-dockerfile\" data-language=\"dockerfile\"><code class=\"language-dockerfile\">#添加依赖环境，前提是将Java8的Docker镜像从官方镜像仓库pull下来，然后上传到自己的Harbor私有仓库中\nFROM 192.168.0.10:1180/library/java:8\n#指定镜像制作作者\nMAINTAINER binghe\n#运行目录\nVOLUME /tmp\n#将本地的文件拷贝到容器\nADD target/*jar app.jar\n#启动容器后自动执行的命令\nENTRYPOINT [ \"java\", \"-Djava.security.egd=file:/dev/./urandom\", \"-jar\", \"/app.jar\" ]\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>根据实际情况，自行修改。</p>\n<p><strong>注意：FROM 192.168.0.10:1180/library/java:8的前提是执行如下命令。</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> pull java:8\n<span class=\"token function\">docker</span> tag java:8 <span class=\"token number\">192.168</span>.0.10:1180/library/java:8\n<span class=\"token function\">docker</span> login <span class=\"token number\">192.168</span>.0.10:1180\n<span class=\"token function\">docker</span> push <span class=\"token number\">192.168</span>.0.10:1180/library/java:8\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在SpringBoot启动类所在模块的根目录创建yaml文件，录入叫做test.yaml文件，内容如下所示。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>starter\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>starter\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>starter\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>starter\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>starter\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> 192.168.0.10<span class=\"token punctuation\">:</span>1180/test/test<span class=\"token punctuation\">-</span>starter<span class=\"token punctuation\">:</span>1.0.0\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8088</span>\n      <span class=\"token key atrule\">nodeSelector</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">clustertype</span><span class=\"token punctuation\">:</span> node12\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>starter\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>starter\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8088</span>\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30001</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>starter\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-Jenkins配置发布项目\">2.Jenkins配置发布项目</h3>\n<p>将项目上传到SVN代码库，例如地址为<a target=\"_blank\" rel=\"noopener\" href=\"https://links.jianshu.com/go?to=svn%3A%2F%2F192.168.0.10%2Ftest\">svn://192.168.0.10/test</a></p>\n<p>接下来，在Jenkins中配置自动发布。步骤如下所示。</p>\n<p>点击新建Item。</p>\n<p>在描述文本框中输入描述信息，如下所示。</p>\n<p>接下来，配置SVN信息。</p>\n<p><strong>注意：配置GitLab的步骤与SVN相同，不再赘述。</strong></p>\n<p>定位到Jenkins的“构建模块”，使用Execute Shell来构建发布项目到K8S集群。</p>\n<p>执行的命令依次如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#删除本地原有的镜像,不会影响Harbor仓库中的镜像</span>\n<span class=\"token function\">docker</span> rmi <span class=\"token number\">192.168</span>.0.10:1180/test/test-starter:1.0.0\n<span class=\"token comment\">#使用Maven编译、构建Docker镜像，执行完成后本地Docker容器中会重新构建镜像文件</span>\n/usr/local/maven-3.6.3/bin/mvn -f ./pom.xml clean <span class=\"token function\">install</span> -Dmaven.test.skip<span class=\"token operator\">=</span>true\n<span class=\"token comment\">#登录 Harbor仓库</span>\n<span class=\"token function\">docker</span> login <span class=\"token number\">192.168</span>.0.10:1180 -u binghe -p Binghe123\n<span class=\"token comment\">#上传镜像到Harbor仓库</span>\n<span class=\"token function\">docker</span> push <span class=\"token number\">192.168</span>.0.10:1180/test/test-starter:1.0.0\n<span class=\"token comment\">#停止并删除K8S集群中运行的</span>\n/usr/bin/kubectl delete -f test.yaml\n<span class=\"token comment\">#将Docker镜像重新发布到K8S集群</span>\n/usr/bin/kubectl apply -f test.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>编辑整理 <a target=\"_blank\" rel=\"noopener\" href=\"https://www.jianshu.com/u/b1e8818c1241\">冰河团队</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://www.jianshu.com/p/86d288ea64c4\">From</a></p>\n<h2 id=\"系列教程-14\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Devops系列</strong> <a href=\"https://blog.17lai.site/categories/devops/atom.xml\"><strong>Devops 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/ab63eb8f/\">自建全套开源Devops开发系统</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d32a07a7/\">Git介绍以及分支模型图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/39563241/\">三万字无坑搭建基于Docker+K8S+GitLab/SVN+Jenkins+Harbor持续集成交付环境</a></li>\n<li><a href=\"https://blog.17lai.site/posts/3437994a/\">DevOps系列---【Jenkinsfile+Dockerfile+nginx+vue】</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f4c3ad41/\">项目开发管理工具推荐</a></li>\n<li><a href=\"https://blog.17lai.site/posts/acc13b70/\">Gitlab的安装及使用教程完全版</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d08eb7b/\">Gitlab的安装及使用</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "gitlab",
                "docker",
                "k8s",
                "harbor"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/3437994a/",
            "url": "https://blog.17lai.site/posts/3437994a/",
            "title": "DevOps系列---【Jenkinsfile+Dockerfile+nginx+vue】",
            "date_published": "2022-04-15T10:49:37.000Z",
            "content_html": "<h2 id=\"1-前提：一台装好的jenkins\">1.前提：一台装好的jenkins</h2>\n<p>参考:https://www.cnblogs.com/hujunwei/p/13176994.html</p>\n<h2 id=\"2-编写Dockerfile，放在项目根目录下\">2.编写Dockerfile，放在项目根目录下</h2>\n<pre class=\"line-numbers language-dockerfile\" data-language=\"dockerfile\"><code class=\"language-dockerfile\">FROM nginx\n#修改名字、版本、作者\nLABEL name=\"home-finance-web-dev\" version=\"1.0.0\" author=\"hjw\"\nCOPY dist/ /usr/share/nginx/html/\nCOPY nginx/nginx-dev.conf /etc/nginx/nginx.conf\nEXPOSE 80<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"3-编写Jenkinsfile，放在项目根目录下\">3.编写Jenkinsfile，放在项目根目录下</h2>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">//流水线脚本\npipeline <span class=\"token punctuation\">{</span>\n    agent any\n    environment <span class=\"token punctuation\">{</span>\n        WS = \"$<span class=\"token punctuation\">{</span>WORKSPACE<span class=\"token punctuation\">}</span>\"\n        TOPIC = \"测试\"\n        TITLE = \"标题\"\n        CONTENT = \"具体内容\"\n    <span class=\"token punctuation\">}</span>\n\n    //定义流水线的加工流程\n    stages <span class=\"token punctuation\">{</span>\n        stage('环境检查') <span class=\"token punctuation\">{</span>\n            steps<span class=\"token punctuation\">{</span>\n                sh 'printenv'\n                echo \"正在检测基本信息\"\n                sh 'git <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>version'\n                sh 'docker version'\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        stage('编译') <span class=\"token punctuation\">{</span>\n            //jenkins不配置任何环境的情况下可以兼容任何场景\n            agent <span class=\"token punctuation\">{</span>\n                docker <span class=\"token punctuation\">{</span> image 'node<span class=\"token punctuation\">:</span>14.17.6<span class=\"token punctuation\">-</span>alpine3.13' <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            steps<span class=\"token punctuation\">{</span>\n                sh 'node <span class=\"token punctuation\">-</span>v'\n                sh 'npm <span class=\"token punctuation\">-</span>v'\n                sh 'pwd <span class=\"token important\">&amp;&amp;</span> ls <span class=\"token punctuation\">-</span>alh'\n                sh 'echo \"默认的项目目录<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>WS<span class=\"token punctuation\">}</span>\"'\n                //注意<span class=\"token punctuation\">:</span>cd $<span class=\"token punctuation\">{</span>WS<span class=\"token punctuation\">}</span> <span class=\"token important\">&amp;&amp;</span> npm不能分开写，也不能直接用$<span class=\"token punctuation\">{</span>WORKSPACE<span class=\"token punctuation\">}</span>\n                sh 'cd $<span class=\"token punctuation\">{</span>WS<span class=\"token punctuation\">}</span>/fast<span class=\"token punctuation\">-</span>ui <span class=\"token important\">&amp;&amp;</span> npm config set registry=https<span class=\"token punctuation\">:</span>//registry.npm.taobao.org <span class=\"token important\">&amp;&amp;</span> npm install <span class=\"token punctuation\">-</span>g cnpm <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>registry=https<span class=\"token punctuation\">:</span>//registry.npm.taobao.org <span class=\"token important\">&amp;&amp;</span> cnpm install <span class=\"token important\">&amp;&amp;</span> cnpm run build'\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        stage('生成镜像') <span class=\"token punctuation\">{</span>\n            steps<span class=\"token punctuation\">{</span>\n                sh 'pwd <span class=\"token important\">&amp;&amp;</span> ls <span class=\"token punctuation\">-</span>alh'\n                echo '生成镜像'\n                sh 'docker version'\n                sh \"echo 默认的项目目录<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>WS<span class=\"token punctuation\">}</span>\"\n                sh 'cd $<span class=\"token punctuation\">{</span>WS<span class=\"token punctuation\">}</span>/fast<span class=\"token punctuation\">-</span>ui <span class=\"token important\">&amp;&amp;</span> docker build <span class=\"token punctuation\">-</span>t home<span class=\"token punctuation\">-</span>finance<span class=\"token punctuation\">-</span>web .'\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        stage('部署') <span class=\"token punctuation\">{</span>\n            steps<span class=\"token punctuation\">{</span>\n                echo '部署<span class=\"token punctuation\">...</span>.'\n                sh 'pwd <span class=\"token important\">&amp;&amp;</span> ls <span class=\"token punctuation\">-</span>alh'\n                sh 'pwd <span class=\"token important\">&amp;&amp;</span> ls <span class=\"token punctuation\">-</span>alh'\n                sh 'docker rm <span class=\"token punctuation\">-</span>f home<span class=\"token punctuation\">-</span>finance<span class=\"token punctuation\">-</span>web'\n                sh 'docker run <span class=\"token punctuation\">-</span>d <span class=\"token punctuation\">-</span>p 8081<span class=\"token punctuation\">:</span>80 <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>restart=always <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>name home<span class=\"token punctuation\">-</span>finance<span class=\"token punctuation\">-</span>web home<span class=\"token punctuation\">-</span>finance<span class=\"token punctuation\">-</span>web'\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"4-编写nginx-dev-conf-放在项目根目录下的nginx目录下\">4.编写nginx-dev.conf,放在项目根目录下的nginx目录下</h2>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token directive\"><span class=\"token keyword\">user</span>  nginx</span><span class=\"token punctuation\">;</span>\n<span class=\"token directive\"><span class=\"token keyword\">worker_processes</span>  <span class=\"token number\">1</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token directive\"><span class=\"token keyword\">error_log</span>  /var/log/nginx/error.log warn</span><span class=\"token punctuation\">;</span>\n<span class=\"token directive\"><span class=\"token keyword\">pid</span>        /var/run/nginx.pid</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token directive\"><span class=\"token keyword\">events</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token directive\"><span class=\"token keyword\">worker_connections</span>  <span class=\"token number\">1024</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token directive\"><span class=\"token keyword\">http</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token directive\"><span class=\"token keyword\">include</span>       /etc/nginx/mime.types</span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">default_type</span>  application/octet-stream</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token directive\"><span class=\"token keyword\">log_format</span>  main  <span class=\"token string\">'<span class=\"token variable\">$remote_addr</span> - <span class=\"token variable\">$remote_user</span> [<span class=\"token variable\">$time_local]</span> \"<span class=\"token variable\">$request</span>\" '</span>\n                      <span class=\"token string\">'<span class=\"token variable\">$status</span> <span class=\"token variable\">$body_bytes_sent</span> \"<span class=\"token variable\">$http_referer</span>\" '</span>\n                      <span class=\"token string\">'\"<span class=\"token variable\">$http_user_agent</span>\" \"<span class=\"token variable\">$http_x_forwarded_for</span>\"'</span></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token directive\"><span class=\"token keyword\">access_log</span>  /var/log/nginx/access.log  main</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token directive\"><span class=\"token keyword\">sendfile</span>        <span class=\"token boolean\">on</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">#tcp_nopush     on;</span>\n\n    <span class=\"token directive\"><span class=\"token keyword\">keepalive_timeout</span>  <span class=\"token number\">65</span></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">#gzip  on;</span>\n\n    <span class=\"token comment\"># include /etc/nginx/conf.d/*.conf;</span>\n\n    <span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token directive\"><span class=\"token keyword\">listen</span>       <span class=\"token number\">80</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">server_name</span>  101.43.159.8</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># 服务器地址或绑定域名</span>\n\n        <span class=\"token comment\">#charset koi8-r;</span>\n        <span class=\"token comment\">#access_log  /var/log/nginx/host.access.log  main;</span>\n\n        <span class=\"token comment\"># =========================================================</span>\n        <span class=\"token comment\"># ================== ↓↓↓↓↓↓ start ↓↓↓↓↓↓ ==================</span>\n        <span class=\"token comment\"># =========================================================</span>\n\n        <span class=\"token directive\"><span class=\"token keyword\">location</span> /</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token directive\"><span class=\"token keyword\">root</span>   /usr/share/nginx/html</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">#try_files $uri $uri/ @router;</span>\n            <span class=\"token directive\"><span class=\"token keyword\">index</span>  index.html index.htm</span><span class=\"token punctuation\">;</span>\n            <span class=\"token directive\"><span class=\"token keyword\">try_files</span> <span class=\"token variable\">$uri</span> <span class=\"token variable\">$uri</span>/ /index.html</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># 解决页面刷新 404 问题</span>\n            <span class=\"token comment\">#proxy_pass http://zhengqingya.gitee.io; # 代理的ip地址和端口号</span>\n            <span class=\"token comment\">#proxy_connect_timeout 600; #代理的连接超时时间（单位：毫秒）</span>\n            <span class=\"token comment\">#proxy_read_timeout 600; #代理的读取资源超时时间（单位：毫秒）</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\"># =========================================================</span>\n        <span class=\"token comment\"># ================== ↑↑↑↑↑↑ end ↑↑↑↑↑↑ ==================</span>\n        <span class=\"token comment\"># =========================================================</span>\n\n        <span class=\"token comment\">#error_page  404              /404.html;</span>\n\n        <span class=\"token comment\"># redirect server error pages to the static page /50x.html</span>\n        <span class=\"token comment\">#</span>\n        <span class=\"token directive\"><span class=\"token keyword\">error_page</span>   <span class=\"token number\">500</span> <span class=\"token number\">502</span> <span class=\"token number\">503</span> <span class=\"token number\">504</span>  /50x.html</span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">location</span> = /50x.html</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token directive\"><span class=\"token keyword\">root</span>   /usr/share/nginx/html</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>编辑整理 <a target=\"_blank\" rel=\"noopener\" href=\"https://www.cnblogs.com/hujunwei/p/15957956.html\">hujunwei</a></p>\n<h2 id=\"系列教程-12\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Devops系列</strong> <a href=\"https://blog.17lai.site/categories/devops/atom.xml\"><strong>Devops 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/ab63eb8f/\">自建全套开源Devops开发系统</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d32a07a7/\">Git介绍以及分支模型图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/39563241/\">三万字无坑搭建基于Docker+K8S+GitLab/SVN+Jenkins+Harbor持续集成交付环境</a></li>\n<li><a href=\"https://blog.17lai.site/posts/3437994a/\">DevOps系列---【Jenkinsfile+Dockerfile+nginx+vue】</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f4c3ad41/\">项目开发管理工具推荐</a></li>\n<li><a href=\"https://blog.17lai.site/posts/acc13b70/\">Gitlab的安装及使用教程完全版</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d08eb7b/\">Gitlab的安装及使用</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "nginx",
                "jenkins",
                "devops"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/f4c3ad41/",
            "url": "https://blog.17lai.site/posts/f4c3ad41/",
            "title": "项目开发管理工具推荐",
            "date_published": "2022-04-15T10:48:59.000Z",
            "content_html": "<blockquote>\n<p>软件开发是复杂的创造性的劳动，需要依赖大量工具才能完成，因此想要提高软件开发的效率和质量，离不开强大、高效、易用、维护成本低的工具，下面我根据自己的经验，推荐一些好用的工具。</p>\n</blockquote>\n<h2 id=\"即时通讯\">即时通讯</h2>\n<blockquote>\n<p>更推荐自建开源替代。</p>\n</blockquote>\n<p>即时通讯和会议系统是项目开发过程中必不可少的，尤其是远程办公时，会议系统更是不可或缺。企业微信拥有和微信一致的沟通体验，简单易用。企业微信可随时随地发起和参与音视频会议，支持300人同时参会，并为主持人提供了管理功能。发言时还可演示文档或电脑屏幕，支持实时标注演示内容。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1520220415205156.png\" alt=\"gitea\"></p>\n<p>官方网站：https://work.weixin.qq.com/</p>\n<h2 id=\"项目管理\">项目管理</h2>\n<p>目前主流的项目管理通常采用敏捷开发的模式，因此项目管理工具也要选择支持敏捷开发模式的工具，不建议使用禅道这样的重流程的工具，不适合敏捷团队，这里我推荐Taiga，它设计简洁，操作简单，充分体现了敏捷开发的理念。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1520220415211820.png\" alt=\"gitea\"></p>\n<p>官方网站：<a target=\"_blank\" rel=\"noopener\" href=\"https://taiga.io/\">https://taiga.io</a></p>\n<p>在线体验：<a target=\"_blank\" rel=\"noopener\" href=\"https://tree.taiga.io/\">https://tree.taiga.io</a></p>\n<p>体验版服务器在国外，访问可能会有点慢。</p>\n<h2 id=\"代码托管\">代码托管</h2>\n<p>前几年使用的比较多是SVN，近几年基本都使用GIT了，开源项目大都使用Github，虽然免费，但国内访问不稳定，速度慢，因此国内的公司基本都会自己搭建，我先后为公司搭建过两个托管平台，一个是Gitlab，一个是Gitea，Gitlab功能比较全面，但对硬件资源要求比较高，而且性能一般。所以推荐使用另一个开源的git托管平台——Gitea。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1520220415212537.png\" alt=\"gitea\"></p>\n<p>官方网站：<a target=\"_blank\" rel=\"noopener\" href=\"https://gitea.io/\">https://gitea.io</a></p>\n<p>在线体验：<a target=\"_blank\" rel=\"noopener\" href=\"https://gitea.com/\">https://gitea.com</a></p>\n<h2 id=\"持续交付\">持续交付</h2>\n<p>最知名、使用最广泛的开源的持续集成、交付平台当属Jenkins，主要的优势在于有大量免费的插件可以使用，但实际使用发现，很多插件质量很差，配置项很多，真正想要落地，其实需要自己编写shell脚本。这里我推荐基于docker技术的一款现代化的持续交付平台DroneCI，它使用简单，可以和主流的Git代码托管平台无缝对接，并且不需要编写代码就可以满足大多数持续构建、交付的需求。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1520220415212440.png\" alt=\"gitea\"></p>\n<p>官方网站：<a target=\"_blank\" rel=\"noopener\" href=\"https://drone.io/\">https://drone.io</a></p>\n<p>在线体验：<a target=\"_blank\" rel=\"noopener\" href=\"https://cloud.drone.io/\">https://cloud.drone.io</a></p>\n<p>体验版服务器在国外，访问可能会有点慢。</p>\n<h2 id=\"制品库-本地仓库\">制品库(本地仓库)</h2>\n<p>Maven 仓库是项目中依赖的第三方库，这个库所在的位置叫做仓库。Maven 仓库能帮助我们管理构件（主要是JAR），它就是放置所有JAR文件（WAR，ZIP，POM等等）的地方。</p>\n<p>后来，除了Maven仓库，还有npm、nuget、pypi、docker等仓库也需要本地仓库。</p>\n<p>市面上可选的通用的本地仓库有：nexus、ARTIFACTORY，ARTIFACTORY是收费的，nexus是免费的，同时nexus以其易用性和可靠性，成为目前市场上最主流的本地仓库。</p>\n<p>官方网站：https://www.sonatype.com/product-nexus-repository</p>\n<h2 id=\"文件存储\">文件存储</h2>\n<p>在公司中，文件分享是一个很常用的功能，不同于云盘，他对性能和安全性没有那么高的要求，简单易用才是大家最关心的，这里推荐chfs，chfs是一个免费的、HTTP协议的文件共享服务器，使用浏览器可以快速访问。与其他常用文件共享方式（如FTP，飞秋，网盘，自己建站）相比，具有使用简单，适用场景更多的优点，在个人使用以及共享给他人的场景中非常方便快捷。</p>\n<p>官方网站：http://iscute.cn/chfs</p>\n<h2 id=\"绘图-流程图、UML、思维导图\">绘图(流程图、UML、思维导图)</h2>\n<p>draw.io 是一个强大简洁的在线的绘图网站，支持流程图，UML图，架构图，原型图等。支持Github，Google Drive, One drive等网盘同步，并且永久免费。如果觉得使用Web版不方便，draw.io 也提供了多平台的离线桌面版可供下载。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1520220415205300.png\" alt=\"img\"></p>\n<p>在线版：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.draw.io/\">https://www.draw.io</a></p>\n<p>本地部署版：https://github.com/jgraph/drawio/releases/latest</p>\n<p>PC 安装版：https://github.com/jgraph/drawio-desktop/releases/latest</p>\n<h2 id=\"接口管理\">接口管理</h2>\n<p>维护不同工具之间数据一致性非常困难、低效。并且这里不仅仅是工作量的问题，更大的问题是多个系统之间数据不一致，导致协作低效、频繁出问题，开发测试人员痛苦不堪。</p>\n<p>Apifox 是接口管理、开发、测试全流程集成工具，定位 Postman + Swagger + Mock + JMeter。通过一套系统、一份数据，解决多个系统之间的数据同步问题。只要定义好接口文档，接口调试、数据 Mock、接口测试就可以直接使用，无需再次定义；接口文档和接口开发调试使用同一个工具，接口调试完成后即可保证和接口文档定义完全一致。高效、及时、准确！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1520220415205213.svg+xml\" alt=\"gitea\"></p>\n<p>官方网站：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.apifox.cn/\">https://www.apifox.cn</a></p>\n<h2 id=\"安全测试\">安全测试</h2>\n<p>在今天，网站的安全是容易被忽视的，黑客具备广泛的攻击手段，例如SQL注入，XSS，文件包含，目录遍历，参数篡改，认证攻击等，虽然你配置了正确的防火墙和WAF，但是这些安全防御软件仍然存在策略性的绕过。因此，需要您定期的扫描你的web应用，但是手动检测你所有的web应用是否存在安全漏洞比较复杂和费时，所以您需要一款自动化的web漏洞扫描工具来检测您的web应用是否存在安全漏洞。</p>\n<p>Acunetix Web Vulnerability Scanner（简称AWVS）是一款知名的Web网络漏洞扫描工具，它通过网络爬虫测试你的网站安全，检测流行安全漏洞。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1520220415205220.svg+xml\" alt=\"awvs\"></p>\n<p>官方网站：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.acunetix.com/\">https://www.acunetix.com</a></p>\n<h2 id=\"性能测试\">性能测试</h2>\n<p>Locust是一个用于可扩展的，分布式的，性能测试的，开源的，用Python编写框架/工具，它非常容易使用，也非常好学。</p>\n<p>它的主要思想就是模拟一群用户将访问你的网站。每个用户的行为由你编写的python代码定义，同时可以从Web界面中实时观察到用户的行为。</p>\n<p>Locust完全是事件驱动的，因此在单台机器上能够支持几千并发用户访问。</p>\n<p>与其它许多基于事件的应用相比，Locust并不使用回调，而是使用gevent，而gevent是基于协程的，可以用同步的方式来编写异步执行的代码。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1520220415205227.png\" alt=\"awvs\"></p>\n<p>官方网站：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.locust.io/\">https://www.locust.io</a></p>\n<h2 id=\"代码静态分析平台\">代码静态分析平台</h2>\n<p>SonarQube 是一款用于代码质量管理的开源工具，它主要用于管理源代码的质量。 通过插件形式，可以支持众多计算机语言，比如 java, C#, go，C/C++, PL/SQL, Cobol, JavaScrip, Groovy 等。sonar可以通过PMD,CheckStyle,Findbugs等等代码规则检测工具来检测你的代码，帮助你发现代码的漏洞，Bug，异味等信息。</p>\n<p>Sonar 不仅提供了对 IDE 的支持，可以在 Eclipse和 IntelliJ IDEA 这些工具里联机查看结果；同时 Sonar 还对大量的持续集成工具提供了接口支持，可以很方便地在持续集成中使用 Sonar</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/1520220415205228.svg\" alt=\"awvs\"></p>\n<p>官方网站：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.sonarqube.org/\">https://www.sonarqube.org</a></p>\n<h2 id=\"系列教程-13\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Devops系列</strong> <a href=\"https://blog.17lai.site/categories/devops/atom.xml\"><strong>Devops 分类 RSS 订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/ab63eb8f/\">自建全套开源Devops开发系统</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d32a07a7/\">Git介绍以及分支模型图解</a></li>\n<li><a href=\"https://blog.17lai.site/posts/39563241/\">三万字无坑搭建基于Docker+K8S+GitLab/SVN+Jenkins+Harbor持续集成交付环境</a></li>\n<li><a href=\"https://blog.17lai.site/posts/3437994a/\">DevOps系列---【Jenkinsfile+Dockerfile+nginx+vue】</a></li>\n<li><a href=\"https://blog.17lai.site/posts/f4c3ad41/\">项目开发管理工具推荐</a></li>\n<li><a href=\"https://blog.17lai.site/posts/acc13b70/\">Gitlab的安装及使用教程完全版</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d08eb7b/\">Gitlab的安装及使用</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "ci/cd",
                "devops"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/4159851c/",
            "url": "https://blog.17lai.site/posts/4159851c/",
            "title": "健身从基础常识到实践指导！",
            "date_published": "2022-04-06T10:46:40.000Z",
            "content_html": "<blockquote>\n<p>有哪些相见恨晚的运动常识？接下来将从分别从基础概念、减肥、腹肌，训练，实操几个方面去分享。</p>\n<p>本文修订增补中！</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"基本概念\">基本概念</h2>\n<h3 id=\"01-RM\">01. <strong>RM</strong></h3>\n<p>RM是英文\"repetition maximum\"的缩写，中文意义是\"最大重复值\"。以8RM为例，意思是，某个重量你最多完成8次。一般而言1～6RM侧重锻炼力量，8～12RM侧重锻炼肌肉围度，15RM以上侧重锻炼肌肉耐力。</p>\n<h3 id=\"02-升糖指数\"><strong>02 升糖指数</strong></h3>\n<p>升糖指数全称为“血糖生成指数”，简称，它反映了某种食物与葡萄糖相比升高血糖的速度和能力。是反映通过进食引起人体血糖升高程度的指标，高gi为70以上，中gi为55～70，低gi为55以下。</p>\n<h3 id=\"03-马甲线、人鱼线和腹肌\"><strong>03 马甲线、人鱼线和腹肌</strong></h3>\n<p>图一是人鱼线，是在髋关节上侧，图二是马甲线，通常是腹直肌两侧两到往下的线，图三是常说的腹肌，其实只是腹直肌，是肚脐眼两侧的腹部肌肉。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0620220406190013.png\" alt=\"img\"></p>\n<h3 id=\"04-BMI\"><strong>04 BMI</strong></h3>\n<p>身体质量指数 (Body Mass Index, 简称BMI), 亦叫做克托莱指数, 是目前国际上常用的衡量人体胖瘦程度以及是否健康的一个标准。计算公式为：BMI=体重（千克）除以身高（米）的平方。</p>\n<h3 id=\"05-心率\"><strong>05 心率</strong></h3>\n<p>心率是指正常人安静状态下每分钟心跳的次数，也叫安静心率，一般为60～100次/分，最大心率通常用220-年龄来计算率。运动时心率达到90%～95%的最大心率，此时供能物质主要为糖原，而心率大致在45%～60%的最大心率，此时供能物质主要是脂肪和糖原。而我们常说的减脂心率为65%～80%的最大心率。</p>\n<h3 id=\"06-有氧运动和无氧运动的区别\"><strong>06 有氧运动和无氧运动的区别</strong></h3>\n<p>一张图给你解释清楚</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0620220406190006.jpeg\" alt=\"img\"></p>\n<h3 id=\"07-减肥\"><strong>07 减肥</strong></h3>\n<p>减肥字面上的意思是减去肥肉，也就是脂肪，看的是体脂率，而不是体重，体重包括了肌肉、肥肉、水。因此体重下降不等于减肥成功。</p>\n<h3 id=\"08-蛋白粉\"><strong>08 蛋白粉</strong></h3>\n<p>蛋白粉不是药，不是谁吃了都能变成施瓦辛格，蛋白粉也没什么神奇配方，基本上可以理解为瘦肉粉加水面粉，而且普通人不需要蛋白粉，蛋白粉是用于日常营养摄入不足才补充的。</p>\n<h3 id=\"09-减肥原理\"><strong>09 减肥原理</strong></h3>\n<p>减肥的原理是实现热量差，摄入的要低于消耗的，不管你是什么方式减肥，脱离了这个原则，都不要相信，因此在别人给你介绍减肥方法的时候，先想清楚，这个方法是怎样增加热量消耗或者减少热量摄入的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0620220406190013-1.png\" alt=\"img\"></p>\n<h3 id=\"10-增肌\"><strong>10 增肌</strong></h3>\n<p>增肌需要三个方面，首先是需要不断给肌肉新的刺激，也就是“渐进超负荷原则”，在训练完后则需要高蛋白高碳水的饮食和48～72小时的恢复时间让肌肉实现超量恢复。训练、饮食、休息，三者缺一不可。</p>\n<h3 id=\"11-三大供能系统\"><strong>11 三大供能系统</strong></h3>\n<p>第一个是磷酸原系统，主要在运动开始后6秒内进行供能，在短时间高强度运动中，磷酸原系统是主要的供能系统。</p>\n<p>第二是糖酵解系统，主要在运动开始后6秒～2分钟内为身体供能，在中高强度的运动中主要由糖酵解系统参与。而糖酵解系统分为快速糖酵解和慢速糖酵解。</p>\n<p>第三是有氧氧化系统，主要在运动开始后2分钟内由糖、碳水化合物、脂肪和蛋白质氧化为身体进行供能，它需要大量的氧气参与。有氧系统的强度最低。</p>\n<p>当然需要注意的是，这三者运动开始都会工作，区别是供能比例不同。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0620220406185951.jpeg\" alt=\"img\"></p>\n<h3 id=\"12-基础代谢\"><strong>12 基础代谢</strong></h3>\n<p>减脂的人都会经常听到基础代谢这个词，基础代谢是指人体维持生命的所有器官所需要的最低能量需要，也就是你啥也不干，都得消耗的热量。测定方法是在人体在清醒而又极端安静的状态下，不受肌肉活动、环境温度、食物及精神紧张等影响时的能量代谢率。</p>\n<p>代谢指数和年龄相关，要健身，需要增加代谢指数。</p>\n<h3 id=\"13-超级组\"><strong>13 超级组</strong></h3>\n<p>超级组训练是指练完一组训练动作后尽可能没有休息地做另外一组主动肌与前一组训练的主动肌相反方向用力的训练。这种训练方式可以在最短时间内刺激更多肌肉群，强度非常大。</p>\n<h3 id=\"14-金字塔训练\"><strong>14 金字塔训练</strong></h3>\n<p>做某一个动作时，逐渐增加或减少每组的重量，相应减少或增加每组的重复次数，直到重量加到预先安排训练目标，比如15 RM、12 RM、10 RM、 8RM。</p>\n<p>再比如徒手耐力训练，以做俯卧撑最高次数组为10，那么第1组1个，第2组2个，直到第10组10个，11组9个，12组8个，倒回去做到第19组1个完成训练，总计100个。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0620220406190013-2.png\" alt=\"img\"></p>\n<h3 id=\"15-HIIT\"><strong>15 HIIT</strong></h3>\n<p>高强度间歇性训练（HIIT)，是一种让你在短时间内进行全力、快速、爆发式锻炼的一种训练方式。这种技术让你在短期内心率提高并且燃烧更多热量。运动时，心率要控制在最大心率的84%以上，中间间歇时心率不要低于70%。这就使得HIIT不适合没训练经验的人，毕竟强度太大，跟不上。</p>\n<h3 id=\"16-开窗理论\"><strong>16 开窗理论</strong></h3>\n<p>开窗理论指的是大强度运动时，淋巴细胞浓度降低，增值分化及活动降低，免疫球蛋白含量及功能也受到影响，出现免疫低下期。据研究，受一次性急性运动的影响，免疫地下其可持续3～7小时不等。在这一免疫低下期，各种细菌、病毒等病原体极易入侵人体，最常见的就是高强度训练后出现感冒。</p>\n<h3 id=\"17-核心力量\"><strong>17 核心力量</strong></h3>\n<p>目前主流的观点认为，核心指的是腰椎到骨盆这个整体，核心也分为内核心和外核心。而核心力量最重要的作用就是稳定，我们的日常活动都需要核心力量。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0620220406185945.jpeg\" alt=\"img\"></p>\n<h2 id=\"减肥篇\">减肥篇</h2>\n<h3 id=\"01-流汗多不等于减肥\"><strong>01 流汗多不等于减肥</strong></h3>\n<p>运动时你流汗多和减肥没有直接关系，减肥减的是脂肪，流汗虽然有助于排除废物，但终归是水，只要你正常饮水，体重就会回去的。</p>\n<p>因此，所谓的爆汗服或者在身上裹上保鲜膜减肥，都是在骗自己。</p>\n<h3 id=\"02-青汁不是用来减肥的\"><strong>02 青汁不是用来减肥的</strong></h3>\n<p>从青汁的配料来看，它其实就是一堆草叶子，或者蔬菜叶子，磨成粉，再泡水喝。而且青汁本身是给日本人喝的，毕竟他们那里蔬菜水果缺乏还特别贵，日常生活缺乏维生素和膳食纤维，说白了青汁就是给日常蔬菜摄入不足的日本人补充膳食纤维平衡一下营养。</p>\n<p>至于那些所谓的减肥功效什么的，或者其他类似的产品，基本都是商家的过度营销宣传。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0620220406190013-3.png\" alt=\"img\"></p>\n<h3 id=\"03-新手尽量不要空腹做有氧运动\"><strong>03 新手尽量不要空腹做有氧运动</strong></h3>\n<p>虽然说空腹有氧对于脂肪消耗的有利的，尤其是空腹晨跑，但是，在空腹状态下身体中的血糖水平会比较低，就有可能出现低血糖，这可是很危险的。新手的话建议在训练前半小时左右适当吃一些全麦面包等低GI碳水，防止训练中的低血糖。</p>\n<h3 id=\"04-变肥不是因为吃肉\"><strong>04 变肥不是因为吃肉</strong></h3>\n<p>就我们中国人的饮食习惯来说，其实大部分是主食吃多的，比如米饭，馒头，面条这些，热量高，饱腹感低。而肉类，只要不是肥肉，减脂期间吃了不仅能帮助身体维持基础代谢，而且肉类的饱腹感比主食还高。</p>\n<h3 id=\"05-低gi饮食更减顽固脂肪\"><strong>05 低gi饮食更减顽固脂肪</strong></h3>\n<p>常见的顽固脂肪有肚子，大腿，臀部，这些部位的肥肉受胰岛素影响大，而血糖升高又会导致胰岛素分泌增加，而碳水化合物的升糖指数通常比较高。因此想减少顽固脂肪，主食还需要多吃低升糖指数（gi）的五谷杂粮。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0620220406190013-4.png\" alt=\"img\"></p>\n<h3 id=\"06-只要你运动就在消耗脂肪\"><strong>06 只要你运动就在消耗脂肪</strong></h3>\n<p>不要认为只有有氧运动才能减肥，只要你在运动，脂肪和糖都在消耗，区别只是比例不同，因此你即使是力量训练，脂肪也在燃烧。</p>\n<h3 id=\"07-先力量训练后有氧减肥效率更高\"><strong>07 先力量训练后有氧减肥效率更高</strong></h3>\n<p>力量训练主要消耗糖，而有氧系统包括糖，脂肪，蛋白质，先用力量训练消耗掉糖，再用有氧消耗脂肪，这样有氧效率就会得到提高。</p>\n<h3 id=\"08-没有局部减脂\"><strong>08 没有局部减脂</strong></h3>\n<p>运动时全身的脂肪是同步分解的，不存在局部脂肪分解给局部肌肉供能的情况。这就好比，你能只抽空泳池一个角的水吗？因此如果你见到网上教你某个动作瘦小腿，某个动作瘦肚子，你可以直接不理他。</p>\n<h3 id=\"09-没有负热量食物\"><strong>09 没有负热量食物</strong></h3>\n<p>食物吃进去都有食物热效应，也就是进去的时候，消化食物你需要消耗的能量，那如果你摄入的热量还没有消化食物用得多，那人岂不是越吃越瘦，吃到最后身体都没能量日常活动了。而吃东西最起码的需要满足活下去这个要求，既然热量都负了，那人咋活下来的？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0620220406190013-5.png\" alt=\"img\"></p>\n<h2 id=\"腹肌篇\">腹肌篇</h2>\n<h3 id=\"01-胖子的胸肌和瘦子的腹肌一样毫无意义\"><strong>01 胖子的胸肌和瘦子的腹肌一样毫无意义</strong></h3>\n<p>虽然说体脂率是腹肌的关键因素，但是如果你从来没练过腹肌，即使你再瘦，腹肌也不可能变得饱满，结实。而胖子的胸都是脂肪，并不是肌肉，光是好吃懒做就能有的。</p>\n<h3 id=\"02-光练腹肌也是不行的\"><strong>02 光练腹肌也是不行的</strong></h3>\n<p>结合上一条，腹肌要明显的两大因素，体脂率和腹肌围度，也就是说减脂和训练都需要，你光练也不行，就拿健美选手来说，腹肌围度够大了吧，非赛季一样看不到腹肌。</p>\n<h3 id=\"03-仰卧起坐练不出腹肌\"><strong>03 仰卧起坐练不出腹肌</strong></h3>\n<p>虽然体育老师都说，仰卧起坐是练腹肌的，但实际上这是错误的，标准仰卧起坐腰背部是挺直的，腹肌长度没有变化，仰卧起坐主要在做屈髋，而不是卷曲腰部，因此仰卧起坐是练核心和屈髋肌肉的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0620220406190013-6.png\" alt=\"img\"></p>\n<h3 id=\"04-腹肌不代表核心力量强\"><strong>04 腹肌不代表核心力量强</strong></h3>\n<p>前面提到了，腹肌明不明显主要和腹肌训练以及体脂率有关，比如大力士选手的核心力量，足够强悍了吧，但是他们也看不到腹肌，核心力量包括腰腹部、髋关节这一个整体的，腹肌只是属于核心肌肉的一部分。</p>\n<h3 id=\"05-腹肌是天生的\"><strong>05 腹肌是天生的</strong></h3>\n<p>腹肌是否对称是肌划决定的，而肌划是由基因决定的，也就是你出生是几块就是几块，出生不对称，那么这辈子都不对称。任何说帮你矫正不对称腹肌的都是骗子。</p>\n<p>腹肌是否显现，最重要的是体脂率，体脂率低于一定数值，就可以看到一些腹肌。腹肌不需要专门锻炼，在其它锻炼过程中掺杂锻炼就够了！</p>\n<h2 id=\"训练篇\">训练篇</h2>\n<h3 id=\"01-健身不需要天天练\"><strong>01 健身不需要天天练</strong></h3>\n<p>许多人认为多练就一定是好的，不能休息，但实际上，不管是肌肉力量，还是肌肉围度，都是需要休息的，正常来说，我们运动后身体的力量水平会下降，然后在休息的时候慢慢恢复，如果休息和营养补充得好，就会超量恢复，超过之前的水平，短期恢复需要24～72小时。</p>\n<p>正常来说，一周起码给自己休息一天。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0620220406190013-7.png\" alt=\"img\"></p>\n<h3 id=\"02-热身不限于跑步\"><strong>02 热身不限于跑步</strong></h3>\n<p>虽然说跑步是最简单的热身方式，但跑跑步，压压腿是远远不够的，正常来说，热身需要分为三部分，首先是关节热身，然后是动态热身体（开合跳，跑步这类），然后则是针对训练内容的热身，比如要练卧推，可以先做做空杠卧推，俯卧撑之类的。</p>\n<h3 id=\"03-不要盲目追求大重量\"><strong>03 不要盲目追求大重量</strong></h3>\n<p>虽然说重量越大，训练的刺激越大，但是对于身体来说，受伤风险也越大，新手最好还是把训练的重点放在学会动作，把动作做标准。</p>\n<h3 id=\"06-跑步不会腿粗\"><strong>06 跑步不会腿粗</strong></h3>\n<p>一些女生在跑完步后，感觉腿部比之前更粗了，那是因为你本身训练少，而且此时肌肉充血，只需要多拉伸放松即可，慢跑是不会让腿变粗的，反而你看马拉松运动员，腿个个都很细。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0620220406190013-8.png\" alt=\"img\"></p>\n<h3 id=\"05-训练不要追求酸痛\"><strong>05 训练不要追求酸痛</strong></h3>\n<p>训练过后的酸痛越明显说明练得越到位，这是典型的误区，如果你只是第二天的酸痛还是正常的，如果是训练后隔天才开始酸痛，那很可能就是延迟性酸痛，这会导致身体抵抗力的下降，容易生病。而且正常的力量训练只要强度不是非常高也可以不酸痛。</p>\n<h3 id=\"06-女生练肌肉不会变成金刚芭比\"><strong>06 女生练肌肉不会变成金刚芭比</strong></h3>\n<p>如果有关注一些健身女网红你就会发现，其实好多人练了5年，6年，其实也没有多少围度，体重也是100来斤，而且长肌肉需要雄性激素，而女性的雄性激素很低，即使是正常男性，练个三四年也不一定能练成健美选手。</p>\n<p>对于女生而言，肌肉训练更多的是塑形。</p>\n<blockquote>\n<p>很多人怕练畸形了，但事实是，没有大重量锻炼几年，休想练畸形！一些无量教练以此威胁不买课的！</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0620220406190013-9.png\" alt=\"img\"></p>\n<h3 id=\"07-脂肪不能转化成肌肉\"><strong>07 脂肪不能转化成肌肉</strong></h3>\n<p>肌肉和脂肪是不会相互转化的，它们原本就是两种不同的组织，肌肉是人生下来就有的，有些小伙伴摸着自己肉肉的，觉得全身肥肉，事实上是那是因为你脂肪太多，遮住肌肉了。肌肉长期不锻炼，是会退化松弛的，而不是直接转化为脂肪。</p>\n<p>也就是说，一些认为的瘦子想长肉，就得先吃胖，再练，其实是错误的，健身并不能把肥肉变成肌肉。</p>\n<h3 id=\"08-深蹲膝盖可以超脚尖\"><strong>08 深蹲膝盖可以超脚尖</strong></h3>\n<p>深蹲膝盖不是绝对不能超过脚尖的，这和每个人的身体结构相关，练臀基本都会刺激到腿的，绝对不粗腿的臀部训练是基本做不到。</p>\n<h3 id=\"09-健身不会吸引女孩子\"><strong>09 健身不会吸引女孩子</strong></h3>\n<p>当你练 得越久，你会发现，你身边的肌肉男越来越多，女的越来越少。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0620220406190013-10.png\" alt=\"img\"></p>\n<blockquote>\n<p>但是，有人把男人健身和女性美甲类比，这就过分了。健身要看到效果，至少不要3个月集中锻炼，每周3次以上，每次至少一个小时，科学的吃，锻炼，休息，健身房投入几百个小时，几个W的金钱才能看到效果。而美甲，2个小时，几百块就够了！</p>\n</blockquote>\n<h2 id=\"实操篇\">实操篇</h2>\n<blockquote>\n<p>健身是需要持续投入，长期坚持，自我折磨的。没有坚强的意志力根本坚持不下来，说白了，就是自虐！还要，长期的、有计划的，持续性的自虐，才能有效果！这是意志，与体力，与耐力的抗争。</p>\n<p>有不少健身<code>App</code>，可以跟着学，比大多数私教专业。</p>\n</blockquote>\n<h3 id=\"1-逆呼吸法\">1 逆呼吸法</h3>\n<p>所谓顺腹式<em>呼吸法</em>是指吸气时让腹部凸起，吐气时压缩腹部使之凹入的<em>呼吸法</em>。</p>\n<p>而逆腹式<em>呼吸方法</em>则相反：吸气时腹部凹进，而呼气时腹部突出。</p>\n<p>健身大多采用逆呼吸法。</p>\n<h3 id=\"2-发力技巧\">2 发力技巧</h3>\n<p>健身大多采用逆呼吸法。配合发力技巧，一般肢体远离躯干时，吐气，发力，肢体靠近驱赶时，吸气，不主动发力（被动发力）。</p>\n<h3 id=\"3-肌肉充血\">3 肌肉充血</h3>\n<p>健身要想有效果，要集中锻炼某一个部位，达到感觉肌肉明显充血，发烫的感觉！</p>\n<p>一般来说，一个部位至少锻炼4组，每组12个，增肌是大重量rm递减。减肥是小重量，rm 15以上。</p>\n<h3 id=\"4-锻炼，营养，和休息\">4 锻炼，营养，和休息</h3>\n<p>三分练，七分吃。健身营养一定要补充好。</p>\n<p>6：2：2 碳水，蛋白质，脂肪。</p>\n<p>两分锻炼，三分营养，五分休息！要想看到锻炼效果，营养和休息非常重要！</p>\n<p>没有三个月集中锻炼，你几乎看不到效果，但有三个月大强度锻炼之后，旁边人能明显感觉你的不同！健身没法速成！</p>\n<p>补剂：</p>\n<ul>\n<li>谷氨酸：可以帮助恢复肌肉酸痛。</li>\n<li>蛋白粉：补充蛋白质，大多数人日常饮食蛋白质摄入量不足以满足健身要求！</li>\n</ul>\n<h3 id=\"5-穷文富武\">5 穷文富武</h3>\n<p>没钱没闲没法健身！真的！</p>\n<p>每周三次2小时空闲锻炼时间，大量补充蛋白质，充足的睡眠时间。普通人真的很难负担得起。</p>\n<h3 id=\"6-日常锻炼\">6 日常锻炼</h3>\n<p>专门锻炼难以抽取时间，但是日常办公的椅子上，就可以做不少锻炼动作的。工作空闲时间，可以稍加锻炼，比完全不做锻炼，素质要强上百倍！</p>\n<h3 id=\"7-简单训练计划\">7 简单训练计划</h3>\n<p>一个简单的每周5次健身计划，如下：</p>\n<ul>\n<li>肱二头肌，背</li>\n<li>胸，腿</li>\n<li>背，肱二头肌</li>\n<li>腿，肩</li>\n<li>胸，肱三头肌</li>\n</ul>\n<p>每个部位至少4组，增肌每组12个，减少到8个，力竭为止。减肥15个以上，小重量。</p>\n<p>每次健身力量锻炼越45分钟到一小时，前后5到10分钟跑步，热身和放松。</p>\n<p>锻炼完，肌肉拉伸放松，帮助恢复疲劳！</p>\n<p>锻炼中可以补充水分和蛋白质，带上蛋白粉饮品。少量，多次，不要一次大量喝水！</p>\n<blockquote>\n<p>练腿非常重要，特别是对于增肌来说。可以促睾，提高体内睾酮激素水平。对于想增肌来说，是必不可少的。</p>\n</blockquote>\n<h3 id=\"8-心率-控制\">8 心率 控制</h3>\n<p>健康且体质较好的，心跳可以控制在120~180次/每分钟。</p>\n<p>中老年或慢性病人群，心跳可以控制在（170 - 年龄）~（180 - 年龄）之间。</p>\n<p>最大心率 = 220 - 实际年龄。</p>\n<p>燃脂区： 慢跑时，控制心率在最大心率的60%~ 70%。</p>\n<p>健身要有效果，需要三个基本指标：</p>\n<ul>\n<li>持续20分钟以上</li>\n<li>心率120次/分钟以上（青年）</li>\n<li>频率一周3~4次</li>\n</ul>\n<h3 id=\"9-代谢指数控制\">9 代谢指数控制</h3>\n<p>代谢指数和体重和肌肉含量高相关，还和年龄有关，减肥就是要增加代谢指数，有氧运动最有效。</p>\n<h3 id=\"10-理论指导\">10 理论指导</h3>\n<p>不管实际锻炼，丰富你的理论知识，同样非常重要！可以达到事半功倍的效果，没有理论指导，就事倍功半了！</p>\n<blockquote>\n<p>大量健身教练非常不专业，都是业余的。可能还没你看几篇文章理论知识丰富。</p>\n</blockquote>\n<h3 id=\"11-健身装备\">11 健身装备</h3>\n<p>运动手套，健身服，吸汗毛巾，水杯等等。一些必要的投入是必须的。</p>\n<h3 id=\"12-关于做C\">12 关于做C</h3>\n<p>这是个专业用语，指打激素等药物，打了药物之后还要加强锻炼，才能看到明显效果。</p>\n<p>这个效果非常显著！正常锻炼几年的效果，药物几个月半年就可以达到。但是对身体伤害非常大！每年你都能在新闻上看到好几个用药的突然死亡的新闻！</p>\n<blockquote>\n<p>普通人不要做！</p>\n</blockquote>\n<h2 id=\"常见误区\">常见误区</h2>\n<ul>\n<li>1.仰卧起坐练不了腹肌，和腹肌完全没关系，还伤身，尤其抱头，杀伤性无极大。从小学体育课就这么错误的教，健身界和别的国家早都知道的并淘汰的一个错误的动作，中国用了这么多年，直到今年部队大纲才发现并取消。只能呵呵了。</li>\n<li>2.引体向上不是练胳膊的，是练背。俯卧<br>\n撑练的是胸</li>\n<li>3.节食不能减肥，只会越来越胖，吃的多才能减脂</li>\n<li>4.睡觉也能减肥</li>\n<li>5.只跑步不做力量训练，永远也跑不出有肌肉的好身材</li>\n<li>6.女性跑步跑死腿也跑不粗，跑完变粗那是充血发涨的。</li>\n<li>7.局部减肥是伪科学，没有局部减肥，不要再问我某个部位肉多怎么减，也不要再信什么局部减肥的广告了，那都是骗人的，全球现在也没研究出局部减肥的办法，不知道为什么有那么多人还信。</li>\n<li>8.想永远保持好身材必须要有肌肉，有肌肉才会瘦，运动以外任何方法减脂都是暂时的。</li>\n<li>9.女性只要你不注射药物，永远也练不成肌肉男，只会前凸后翘</li>\n<li>10.没有减肥这个词，只有减脂，只有体型变瘦体重不变才是正确的，很多人却只看体重，请看体型不要看体重。</li>\n<li>11.体重快速下降那减少的是你身体里的水，不是肉。</li>\n<li>12.腹肌有个屁用，体脂率低都会显现，大小不一而已，但你可以练的更大，但必须体脂率低，胖人你就不要练腹肌了，没用，先减脂再说。</li>\n<li>13.跑步减脂请看时间不要看距离，跑步前期消耗的是身体里的糖，不是脂肪，请至少20分钟以上</li>\n<li>14.力量训练胖人减脂轻重量多组数，瘦人增肌大重量少次数。</li>\n<li>15.腿也要练，练下半身才能促睾，睾酮才能帮助你全身的肌肉锻炼，女性没有睾丸，睾酮低的可怜，所以练不出肌肉。</li>\n<li>16.一周5天不锻炼，只集中一两天猛练反而对身体有害，不如别练</li>\n<li>17.肌肉就是肌肉，脂肪就是脂肪，没有不锻炼肌肉就变脂肪的说法，不锻炼肌肉只会松弛变软，也还是瘦肉，再接着锻炼很快就能恢复。</li>\n<li>18.平板支撑练不出腹肌，练的是核心稳定性</li>\n<li>19.出汗多少和训练量和减脂没半毛钱关系，那是体质问题。</li>\n<li>20.夏天晚上尽量不要夜跑，太危险，出门到处都是烧烤摊，一吃一晚上。</li>\n</ul>\n<h2 id=\"健身漫画\">健身漫画</h2>\n<p>这里推荐一部漫画： <a target=\"_blank\" rel=\"noopener\" href=\"http://manhua.dmzj.com/jiroushaonvyalingnengjuduoshaogongjin/\"><strong>肌肉少女：哑铃，能举多少公斤？</strong></a></p>\n<p>青春美少女健身漫画，介绍了很多基础常识！想健身的可以去看看，非常有趣的漫画，让你在娱乐中学会很多健身知识。这个番动画化了，2019年7月出的，大家可以搜索去看。</p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"http://www.bimiacg4.net/bangumi/bi/1824/\"><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0620220406215934.jpeg\" alt=\"肌肉少女动画\"></a></p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"http://manhua.dmzj.com/jiroushaonvyalingnengjuduoshaogongjin/\"><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0620220406191054.png\" alt=\"漫画肌肉少女\"></a></p>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "fitness",
                "健身",
                "运动"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/84b4059a/",
            "url": "https://blog.17lai.site/posts/84b4059a/",
            "title": "基于Hexo的matery主题搭建博客常见问题篇6",
            "date_published": "2022-03-27T07:28:46.000Z",
            "content_html": "<p><strong>Hexo系列</strong>  <a href=\"https://blog.17lai.site/categories/hexo/atom.xml\"><strong>HexoRSS分类订阅</strong></a></p>\n<p>[三万字教程]基于Hexo的matery主题搭建博客并深度优化完全一站式教程</p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/40300608/\">Hexo Docker环境与Hexo基础配置篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4d8a0b22/\">hexo博客自定义修改篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/9b056c86/\">hexo博客网络优化篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/5311b619/\">hexo博客增强部署篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4a2050e2/\">hexo博客个性定制篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/84b4059a/\">hexo博客常见问题篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/cf0f47fd/\">Hexo Markdown以及各种插件功能测试</a></p>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>markdown 各种其它语法插件</li>\n<li>latex公式支持</li>\n<li>mermaid图表</li>\n<li>plant uml图表</li>\n<li>URL卡片</li>\n<li>bilibili卡片</li>\n<li>github卡片</li>\n<li>豆瓣卡片</li>\n<li>插入音乐和视频</li>\n<li>插入脑图</li>\n</ul>\n</blockquote>\n<h2 id=\"出错了，怎么办？\">出错了，怎么办？</h2>\n<blockquote>\n<p>首先，学会搜索，最好实用Google，准确率比X毒高几个数量级。你遇到过的问题，90%以上其他人也遇到过，网上能找到现成的解决方案。</p>\n<ul>\n<li>个人独立博客文章质量最高，<a target=\"_blank\" rel=\"noopener\" href=\"https://stackoverflow.com\">stackoverflow</a>质量也很非常高，CSDN基本就是垃圾场，普通搜索文章能有50%准确率就非常不错了，独立博客和stackoverflow之类的80%以上的准确率！</li>\n</ul>\n</blockquote>\n<h2 id=\"如何调试博客\">如何调试博客</h2>\n<blockquote>\n<p>需要一定的web开发知识才能做。</p>\n<p>学会一些简单调试及基本html语言很容易，网上教程很多。</p>\n<p>按<code>F12</code>进入调试模式，元素，网络，控制台，是常用的页面。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/2620220326142924.png\" alt=\"web debug\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/2620220326142626.png\" alt=\"如何网页调试\"></p>\n<h2 id=\"通过hexo-g-d部署时报Error-Spawn-failed错误\">通过<code>hexo g -d</code>部署时报<code>Error: Spawn failed</code>错误:</h2>\n<blockquote>\n<p>这是由于 git 本地记录的提交版本号与 github 上不一致导致的，通过<code>git reset --hard commitCode</code>即可解决。</p>\n</blockquote>\n<ul>\n<li>检查本地最近提交记录，获取最后一次提交记录的更新时间及标识，如<code>280a7fdd46fcfd7d34e652aec15523dcd247fac8</code></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> .deploy_git\n<span class=\"token function\">cat</span> .git/logs/HEAD<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ul>\n<li>获取 github pages 服务所关联分支的最近一次提交记录，获取更新时间及标识。地址一般为：<code>https://github.com/用户名/仓库名/commits/分支名</code>，如<code>https://github.com/lxl80/blog/commits/gh-pages</code></li>\n<li>如果发现提交最新的提交时间/标识不一致，通过以下命令即可解决:</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> reset --hard f085038efdf79546c09641d37b2a2429c1ae8e60 <span class=\"token comment\">#github上最新的提交标识</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"hexo-docker-本地访问内容没有更新\">hexo docker 本地访问内容没有更新</h2>\n<p>可能是node内部PM2模块的缓存机制导致的。pm2模块重启一下就可以了。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pm2 restart /hexo_run.js<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/2520220325143634.png\" alt=\"image-20220325143625352\"></p>\n<h2 id=\"fsevents报错\">fsevents报错</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> code EBADPLATFORM <span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> notsup Unsupported platform <span class=\"token keyword\">for</span>\nfsevents@2.3.2: wanted <span class=\"token punctuation\">{</span><span class=\"token string\">\"os\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"darwin\"</span>,<span class=\"token string\">\"arch\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"any\"</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">(</span>current:\n<span class=\"token punctuation\">{</span><span class=\"token string\">\"os\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"win32\"</span>,<span class=\"token string\">\"arch\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"x64\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> notsup Valid OS:    darwin <span class=\"token function\">npm</span>\nERR<span class=\"token operator\">!</span> notsup Valid Arch:  any <span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> notsup Actual OS:   win32 <span class=\"token function\">npm</span>\nERR<span class=\"token operator\">!</span> notsup Actual Arch: x64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>解决方法：修改package.json</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token string-property property\">\"optionalDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"fsevents\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.3.2\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"关于百度无法爬取GitHub内容解决方案\">关于百度无法爬取GitHub内容解决方案</h2>\n<blockquote>\n<ul>\n<li>使用coding搭建一个可以被百度爬取到的代码托管平台</li>\n<li>使用vps搭建一个hexo 镜像访问，专门针对搜索引擎。</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>Tips: 博主用了第二种方法，2个域名，前端域名用dnspod，采用cloudflare parter cname接入。dnspos有选路选择，针对搜索引擎进入vps搭建的blog，对于其它线路到cloudflare parter 加速过的github pages  cname。后端域名用cloudflare parter 以及免费版cloudflare管理。</p>\n</blockquote>\n<p>既然百度无法爬取GitHub，那么我们只需要找个可以被百度爬取到的代码托管平台即可（并且还提供pages服务），基本只有国内的平台了：<code>Gitee</code>和<code>Coding</code>！Gitee自定义域名要花钱（九十多，都可以买服务器了），而Coding是可以免费自定义域名的。这里推介大家使用企业版的Coding，因为企业版的Coding仓库服务器是在香港的，而普通版的服务器是在新加坡。地理原因，理论上企业版的更快一些！</p>\n<ol>\n<li>\n<p>将博客同时部署到两个仓库：GitHub和Coding</p>\n<pre class=\"line-numbers language-yml\" data-language=\"yml\"><code class=\"language-yml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> git@github.com<span class=\"token punctuation\">:</span>xxx/xxx.github.io.git\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master\n\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> git@e.coding.net<span class=\"token punctuation\">:</span>xxx/xxx.git\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>在域名那里，配置两个解析</p>\n<blockquote>\n<p>线路类型作用：如果该值填“国内”，国内的IP就会去访问此项对应的<code>记录值地址</code></p>\n<p>同理，如果该值填写“国外”，国外的IP就会去访问“国外”对应的<code>记录值地址</code></p>\n</blockquote>\n<ol>\n<li><code>线路类型</code>为<code>百度</code>或者<code>国内</code>，记录值为<code>Coding仓库的地址</code></li>\n<li><code>线路类型</code>为<code>默认</code>或者<code>国外</code>，记录值为<code>GitHub仓库地址</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1120210911170615.png\" alt=\"\"></p>\n</li>\n<li>\n<p>这样来自<code>百度的spider</code>就会去爬<code>国内Coding</code>的地址，而两个仓库的内容又都是一样的，如果请求IP来自国外，它又会去访问<code>国外的GitHub</code>，这样还有利于外国华侨和那些科学上网的用户访问，一石二鸟！（我真他妈天才！）</p>\n</li>\n<li>\n<p>如果你只用Coding仓库，那就不需要这么麻烦了</p>\n</li>\n<li>\n<p>测试百度Spider能不能爬你的域名</p>\n<ol>\n<li>\n<p>在任意目录下执行以下命令（将“你的域名”换成你的域名）</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">curl -A \"Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)\" -o example.html 你的域名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>执行完命令，在该目录下会生成一个文件：<code>example.html</code>，打开它，如果显示</p>\n<ul>\n<li>\n<p><code>Moved Permanently</code>，说明301，被重定向了</p>\n</li>\n<li>\n<p><code>Found</code>，也就是爬到了</p>\n</li>\n<li>\n<p>如果打开是你的首页，说明爬取到的内容就是你的首页HTML内容。</p>\n</li>\n<li>\n<p>如果显示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1120210911170621.png\" alt=\"\"></p>\n<p>说明域名是解析到GitHub的，403Forbidden访问禁止。</p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"busuanzi不蒜子计数显示异常，一闪就没\">busuanzi不蒜子计数显示异常，一闪就没</h2>\n<blockquote>\n<ol>\n<li>\n<p>原因可能有两种live2d看板娘和busuanzi不蒜子计数冲突</p>\n</li>\n<li>\n<p>busuanzi不蒜子网络访问异常。</p>\n</li>\n</ol>\n<blockquote>\n<ol>\n<li>\n<p>不在leancloud安全名单</p>\n</li>\n<li>\n<p>不是正常域名访问</p>\n</li>\n<li>\n<p>各种网络访问错误等等</p>\n</li>\n</ol>\n</blockquote>\n</blockquote>\n<p>近日安装了live2d看板娘插件，<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/EYHN/hexo-helper-live2d\">github项目地址</a>，安装后却意外发现busuanzi不蒜子计数失效了,在页面中不显示，但强制刷新后出现，再刷新又消失。经排查，未发现问题，但事实是网站源码出现了变化。</p>\n<blockquote>\n<p><em>正常时</em></p>\n</blockquote>\n<pre class=\"line-numbers language-HTML\" data-language=\"HTML\"><code class=\"language-HTML\">&lt;div id=\"busuanzi_container_page_pv\" class=\"info-break-policy\" style=\"display: inline;\"&gt;\n    &lt;i class=\"far fa-eye fa-fw\"&gt;&lt;/i&gt;阅读次数:&amp;nbsp;&amp;nbsp;\n    &lt;span id=\"busuanzi_value_page_pv\"&gt;433&lt;/span&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p><em>异常时</em></p>\n</blockquote>\n<pre class=\"line-numbers language-HTML\" data-language=\"HTML\"><code class=\"language-HTML\">&lt;div id=\"busuanzi_container_page_pv\" class=\"info-break-policy\" style=\"display: none;\"&gt;\n    &lt;i class=\"far fa-eye fa-fw\"&gt;&lt;/i&gt;阅读次数:&amp;nbsp;&amp;nbsp;\n    &lt;span id=\"busuanzi_value_page_pv\"&gt;434&lt;/span&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>对比发现出现了多余的<code>style=\"display: none;</code>。<br>\n经过搜索主题源码，发现这个文件<code>themes\\matery\\source\\libs\\others\\busuanzi.pure.mini.js</code>控制显示。</p>\n<p>可以直接下载下面这个地址的js替换，来自个人blog的js   <a href=\"https://blog.17lai.site/libs/others/busuanzi.pure.mini.js\">busuanzi.pure.mini.js</a>，直接下载这个js替换即可。下面源码经过了展开美化，原始文件是压缩去空格版本的。<br>\n<strong>注意</strong>： 这是一种破坏性修复，没有解决根本问题，临时修复方案。</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> bszCaller<span class=\"token punctuation\">,</span> bszTag<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">!</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function-variable function\">ready</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">c</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> a <span class=\"token operator\">||</span> <span class=\"token string\">\"interactive\"</span> <span class=\"token operator\">===</span> document<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">||</span> <span class=\"token string\">\"complete\"</span> <span class=\"token operator\">===</span> document<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">?</span> <span class=\"token function\">c</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span>\n            b<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">c</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">d</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> c <span class=\"token operator\">&gt;</span> a<span class=\"token punctuation\">;</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">e</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        a <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">d</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span>removeEventListener <span class=\"token operator\">?</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string\">\"DOMContentLoaded\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span>attachEvent <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">detachEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onreadystatechange\"</span><span class=\"token punctuation\">,</span>\n            e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> window <span class=\"token operator\">==</span> window<span class=\"token punctuation\">.</span>top <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span>addEventListener <span class=\"token operator\">?</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DOMContentLoaded\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span>attachEvent <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n        document<span class=\"token punctuation\">.</span><span class=\"token function\">attachEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onreadystatechange\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">loaded|complete</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>readyState<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> window <span class=\"token operator\">==</span> window<span class=\"token punctuation\">.</span>top <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                a <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span><span class=\"token function\">doScroll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"left\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bszCaller <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">fetch</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token string\">\"BusuanziCallback_\"</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token number\">1099511627776</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        window<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">evalCall</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=BusuanziCallback\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"=\"</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> scriptTag <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string\">\"SCRIPT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> scriptTag<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"text/javascript\"</span><span class=\"token punctuation\">,</span> scriptTag<span class=\"token punctuation\">.</span>defer <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> scriptTag<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> a<span class=\"token punctuation\">,</span>\n            document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HEAD\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>scriptTag<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">evalCall</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> scriptTag<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>scriptTag<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    bszTag<span class=\"token punctuation\">.</span><span class=\"token function\">hides</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> bszCaller<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"//busuanzi.ibruce.info/busuanzi?jsonpCallback=BusuanziCallback\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    bszTag<span class=\"token punctuation\">.</span><span class=\"token function\">texts</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bszTag<span class=\"token punctuation\">.</span><span class=\"token function\">shows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bszTag <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">bszs</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"site_pv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"page_pv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"site_uv\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">texts</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bszs<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"busuanzi_value_\"</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            c <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">hides</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bszs<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"busuanzi_container_\"</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            b <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">shows</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bszs<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"busuanzi_container_\"</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            b <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"inline\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>替换的人请操作其实就是把其中的<code>b.style.display=\"none\"</code>中<code>none</code>去掉。</p>\n<h2 id=\"不蒜子-busuanzi-文章计数出错问题\">不蒜子 (busuanzi) 文章计数出错问题</h2>\n<p>出现这个原因，和 Chrome 85 版本 Referrer Policy 更改有关。什么是 Referrer，简单理解，就是请求 Web 服务器时，可以在 HTTP Request 的请求头 (header) 中加上当前页面的 URL，例如我们在浏览某个博客页面，需要加载一些图片，从服务器请求这些图片时，referrer 就是当前的博客页面 URL。从这里也可以看出，referrer 可能会暴露请求来源的某些信息或者隐私，有一定的隐私或安全风险。之前版本的 Chrome 浏览器，如果网站没有指定自己的 Referrer Policy，那么 Chrome 默认 policy 是 no-referrer-when-downgrade，在 Chrome 85 版本中，为了保护用户的隐私，默认的 Referrer Policy 则变成了 strict-origin-when-cross-origin。</p>\n<ul>\n<li>no-referrer-when-downgrade: 当两个网站的 http 协议安全等级相当，或者目的网站安全协议等级高于当前网站(HTTP –&gt; HTTP, HTTPS –&gt; HTTPS, HTTP –&gt; HTTPS)， referer 将会包含源网站的域名，路径，查询字符串；如果目的网站安全协议等级低于源网站 (HTTPS –&gt; HTTP)，将不会发送这些信息。</li>\n<li>strict-origin-when-cross-origin： 只有当做同一域名请求时 (源网址和目标网址是同一域名），才发送域名，路径和请求字符串，当两个网站安全协议相当时，发送源网站的域名(没有具体路径信息和查询字符串)，如果目标网站安全协议等级低于源网站，不发送 header 信息。</li>\n</ul>\n<p>不蒜子统计博客文章访问量就是通过 referer 来计算的，通过上面的分析，如果 Referrer Policy 是 strict-origin-when-cross-origin，不蒜子接收到的只有博客的域名，没有文章的具体路径，所以具体某个文章的 PV 统计会出现错误。</p>\n<p>修复方法：</p>\n<p>在主题文件夹下/layout/_partial/head.ejs中添加</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>referrer<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>no-referrer-when-downgrade<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"如何多个域名映射同一个github-pages\">如何多个域名映射同一个github pages</h2>\n<p>可能由于某种原因，换了一个域名，之前又有一些被搜索引擎收录，但是又不想让原来的链接失效，就需要让两个域名都映射到github pages中。本文介绍几种当前可能的方法。欢迎提出更多有效方法。</p>\n<h4 id=\"直接映射有什么问题？\">直接映射有什么问题？</h4>\n<p>你可能会想，两个域名都映射到github pages不就可以了？然而事实并非如此。首先当前github 的CNAME中只支持一个域名。因此CNAME文件中只能有一个域名，而如果在域名映射中将两个域名都映射到username.github.io，那么其中有一个会出现404错误。</p>\n<h4 id=\"前提\">前提</h4>\n<p>以下方法的前提是你已经明白如何为自己的github pages添加自定义域名。</p>\n<h4 id=\"需要注意什么？\">需要注意什么？</h4>\n<ul>\n<li>需要给各大网站提交新的域名网址，重新被收录</li>\n<li>域名变换前面网站的内容结构不能变，否则重定向也没有意义</li>\n<li>当前单纯的域名没有办法进行备案</li>\n<li>注意修改配置文件里的主域名为新的域名</li>\n<li>由于更换了新的域名，导致原来leancloud统计的访问数据需要重新计算，也就是网站访问量被清零了，leancloud也需要更新域名</li>\n<li>新的com域名可申请免费的SSL证书，保证https可访问，而不会提示不安全</li>\n<li>301重定向会将旧地址的权重转义到新地址上</li>\n<li>百度收录速度较慢</li>\n</ul>\n<h4 id=\"方法一：域名托管平台重定向\">方法一：域名托管平台重定向</h4>\n<p>有的域名服务商提供重定向功能，以阿里云为例，在域名映射添加记录的时候，可以选择显性URL或隐性URL。但是自己在尝试这种方法的时候，会提示我URL备案异常。可能是由于这个时候已经用新的域名映射了博客地址，但是新的域名实际上是没有备案的。更无奈的是，目前貌似没有办法单独对域名进行备案。因此本人放弃了该方法。</p>\n<p>如果你的博客也是部署在github上的，那么这种方法就不用尝试了，如果你的博客是部署在自己的服务器上的，那么网上都很多方法，这里就不介绍了。</p>\n<h4 id=\"方法二：部署两个仓库\">方法二：部署两个仓库</h4>\n<p>我们注意到，除了github pages，还有coding.net可用。它与github类似。原来的域名映射到这个地址就可以了。而在部署hexo的时候，是可以添加两个仓库地址的：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> git@github.com<span class=\"token punctuation\">:</span>username/username.github.io.git\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> git@git.coding.net<span class=\"token punctuation\">:</span>username/username.git\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> coding<span class=\"token punctuation\">-</span>pages<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这两个仓库内容唯一的差别就是域名不一样，即CNAME中的记录值不一样。这样当访问两个不同的域名的时候，是访问不同的两个平台仓库。但是原来域名的权重不会转到新的域名中去。</p>\n<h4 id=\"方法三：新增项目重定向\">方法三：新增项目重定向</h4>\n<p>假如你已经有username.github.io项目，新建一个名为blog(名字自定义)的项目，在项目的setting中，开启github pages服务，并且将旧的域名映射到username.github.io。</p>\n<p>实际上，github pages并不是只能有一个，例如，你新创建的仓库访问地址为：username.github.io/blog。<br>\n由于旧的域名映射会导致404错误，那么在我们的新项目中增加一个404.html，在页面中进行跳转即可：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">language</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">var</span> domain <span class=\"token operator\">=</span> <span class=\"token string\">\"换成你自己的新域名\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> src <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> prtc <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> target <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> prtc <span class=\"token operator\">+</span> <span class=\"token string\">\"://\"</span> <span class=\"token operator\">+</span> domain <span class=\"token operator\">+</span> target<span class=\"token punctuation\">;</span>\nlocation<span class=\"token punctuation\">.</span>href<span class=\"token operator\">=</span>prtc <span class=\"token operator\">+</span> <span class=\"token string\">\"://\"</span> <span class=\"token operator\">+</span> domain <span class=\"token operator\">+</span> target<span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>另外，需要利用google的地址更改功能，使得旧网址的权重往新网址转移。<br>\n找到search console中的地址更改工具（设置按钮中找到）。</p>\n<p>除了增加404页面外，还需要增加CNAME文件，里面的内容是你原先的域名。</p>\n<h2 id=\"参照\">参照</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.lixl.cn/2019/092856736.html\">基于Hexo的matery主题搭建博客并深度优化-悟尘记</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hexo.io/zh-cn/docs/\">hexo 官方文档</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/\">闪烁之狐</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md\">hexo-theme-matery</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.sky03.cn/posts/42790.html#toc-heading-1\">Hexo 进阶之各种优化</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.cnblogs.com/Timesi/p/9556236.html\">Leancloud+Valine打造Hexo个人博客极简评论系统</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.sky03.cn/posts/42790.html\">Hexo进阶之各种优化</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://sitoi.cn/posts/15908.html\">自动部署篇</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.cnblogs.com/luoshuitianyi/p/10333928.html\">Hexo搭建(VPS)</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://boyinthesun.cn/post/error-live2d-busuanzi/\">解决live2d看板娘和busuanzi不蒜子计数冲突</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.yanbinghu.com/2019/03/29/25951.html\">多个域名映射同一个github pages</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://segmentfault.com/a/1190000016286007\">hexo博客简单支持PWA</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.imlete.cn/article/hexo-seo-autopush.html\">Hexo 每天自动提交网站url到搜索引擎</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://yafine-blog.cn/posts/ebb2.html\">Hexo 博客订阅文章通知功能</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://yafine-blog.cn/posts/3b98.html\">修改 matery 原有主题相册</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://small-rose.github.io/posts/a53a9069.html\">Matery主题新手常见问题</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://hunterx.xyz/hexo-gitlab-cicd-conf.html\">hexo-gitlab-cicd-conf</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://jxyblog.top/article/2da64065.html\">更改hexo的主题为Matery,并进行初步的优化</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"http://luckyzmj.cn/posts/17fd92ae.html\">Hexo之渲染绕过</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://wiki.jikexueyuan.com/project/gulp-book/chapter4.html\">使用 gulp 压缩图片</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://sunhwee.com/posts/6e8839eb.html\">Hexo+Github博客搭建完全教程</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/shw2018/hexo-blog-fly\">博客开源</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://segmentfault.com/a/1190000021474516\">Hexo主题使用Valine-Admin管理评论和评论提醒</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://m3df.xyz/2021/06/20/edd7462d/\">Hexo博客进阶：图片懒加载与代码压缩</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://qvchuang.top/archives/d3c10307.html\">matery主题个性化定制</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://crystalblog.xyz/\">crystalblog三部曲</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://crystalblog.xyz/2021082944649.html\">1</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://crystalblog.xyz/2021082917116.html\">2</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://crystalblog.xyz/2021082965135.html\">3</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"http://www.luckyzmj.cn/posts/e3e08109.html\">个人博客搭建</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/LuckyZmj/LuckyBlog\">博客开源</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://tellyouwhat.cn/p/pwa-your-blog-can-also-be-accessed-offline/\">PWA踩坑记-从零到一让你的博客也能离线访问</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.islu.cn/posts/21369.html#\">Matery主题添加暗色模式</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://dreamruins.gitee.io/tutorials/1121281946.html\">黑夜模式</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/ialoe/hexo-themes-matery-pro\">开源代码hexo-themes-matery-pro</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.islu.cn/posts/2687.html\">加载动画(吃豆豆)</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://dreamruins.gitee.io/tutorials/1793947201.html\">加载动画旋转方块</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.voidking.com/dev-hexo-gulp/\">优化<code>search.xml</code>大小</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://akilar.top/posts/5b8f515f/\">更好的Live2d Widget</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://easyhexo.com/\">easyhexo</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://guanqr.com/tech/website/introduction-and-basic-setting-of-waline/\">Waline 评论系统的介绍与基础配置</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.zywvvd.com/notes/hexo/theme/fluid/fluid-github-login/fluid-github-login/\">Waline 添加 GitHub 社交登录</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.zywvvd.com/notes/hexo/theme/fluid/fluid-update/fluid-update/\">随机视频背景切换</a></li>\n</ul>\n<h2 id=\"系列教程-36\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Hexo系列</strong>  <a href=\"https://blog.17lai.site/categories/hexo/atom.xml\"><strong>HexoRSS分类订阅</strong></a></p>\n<p>[三万字教程]基于Hexo的matery主题搭建博客并深度优化完全一站式教程</p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/40300608/\">Hexo Docker环境与Hexo基础配置篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4d8a0b22/\">hexo博客自定义修改篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/9b056c86/\">hexo博客网络优化篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/5311b619/\">hexo博客增强部署篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4a2050e2/\">hexo博客个性定制篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/84b4059a/\">hexo博客常见问题篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/cf0f47fd/\">Hexo Markdown以及各种插件功能测试</a></p>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>markdown 各种其它语法插件</li>\n<li>latex公式支持</li>\n<li>mermaid图表</li>\n<li>plant uml图表</li>\n<li>URL卡片</li>\n<li>bilibili卡片</li>\n<li>github卡片</li>\n<li>豆瓣卡片</li>\n<li>插入音乐和视频</li>\n<li>插入脑图</li>\n</ul>\n</blockquote>\n<p><strong>笔记系列</strong>  <a href=\"https://blog.17lai.site/categories/note/atom.xml\"><strong>Note分类RSS订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/a8535f26/\">完美笔记进化论</a></li>\n</ul>\n<blockquote>\n<p>经历了很长时间，使用了各种各样的方案，最终选择了一种相对完美的方式。docker私有部署运行的joplin，使用markdown语法，github作为图床，picgo作为图像自动上传后端，pypora作为MD编辑器，Snipaste作为截图工具。后备gitlab ee selfhost备份，自建图床VPS多线负载均衡。cloudflare partner cdn加速，jsdelivr加速。</p>\n<ul>\n<li>pigo图床搭建与配置</li>\n<li>Joplin教程</li>\n<li>Snipaste截图工具</li>\n<li>Typora 作为Markdown编辑器最强</li>\n</ul>\n</blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.17lai.fun/posts/e6086437/\">Joplin入门指南&amp;实践方案</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin和使用</li>\n<li>Joplin同步与备份</li>\n<li>Joplin导入与导出</li>\n</ul>\n</blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.17lai.fun/posts/45f878cd/\">替代Evernote免费开源笔记Joplin-网盘同步笔记历史版本Markdown可视化</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin安装使用，调用外部编辑器，网盘同步等等</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/92d347d6/\">Joplin 插件以及其Markdown语法。All in One!</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin简明教程</li>\n<li>markdown语法简明教程</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/e3ee7f8b/\">Joplin 插件使用推荐</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>教你用各种插件打造一个强大的笔记工具。</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/1802a8a7/\">为知笔记私有化Docker部署</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>如何部署自己私有的为知笔记。</li>\n<li>其实博主更推荐私有部署joplin</li>\n</ul>\n</blockquote>\n<p><strong>Gitbook使用系列</strong> <a href=\"https://blog.17lai.site/categories/gitbook/atom.xml\">Gitbook分类RSS订阅</a></p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/7fe86002/\">GitBook+GitLab撰写发布技术文档-Part1:GitBook篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/7790e989/\">GitBook+GitLab撰写发布技术文档-Part2:GitLab篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/d6bad1e5/\">自己动手制作电子书的最佳方式（支持PDF、ePub、mobi等格式）</a></p>\n</li>\n</ul>\n<p><strong>Gitlab 使用系列</strong>  <a href=\"https://blog.17lai.site/categories/gitlab/atom.xml\"><strong>Gitlab RSS 分类订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/acc13b70/\"><strong>Gitlab的安装及使用教程完全版</strong></a></li>\n<li><a href=\"https://blog.17lai.site/posts/29a820b3/\">破解Gitlab EE</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d08eb7b/\">Gitlab的安装及使用</a></li>\n<li><a href=\"https://blog.17lai.site/posts/1879721e/\">CI/CD与Git Flow与GitLab</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "github",
                "hexo",
                "matery",
                "cdn",
                "seo"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/4a2050e2/",
            "url": "https://blog.17lai.site/posts/4a2050e2/",
            "title": "基于Hexo的matery主题搭建博客个性定制篇5",
            "date_published": "2022-03-27T07:28:17.000Z",
            "content_html": "<p><strong>Hexo系列</strong>  <a href=\"https://blog.17lai.site/categories/hexo/atom.xml\"><strong>HexoRSS分类订阅</strong></a></p>\n<p>[三万字教程]基于Hexo的matery主题搭建博客并深度优化完全一站式教程</p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/40300608/\">Hexo Docker环境与Hexo基础配置篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4d8a0b22/\">hexo博客自定义修改篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/9b056c86/\">hexo博客网络优化篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/5311b619/\">hexo博客增强部署篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4a2050e2/\">hexo博客个性定制篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/84b4059a/\">hexo博客常见问题篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/cf0f47fd/\">Hexo Markdown以及各种插件功能测试</a></p>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>markdown 各种其它语法插件</li>\n<li>latex公式支持</li>\n<li>mermaid图表</li>\n<li>plant uml图表</li>\n<li>URL卡片</li>\n<li>bilibili卡片</li>\n<li>github卡片</li>\n<li>豆瓣卡片</li>\n<li>插入音乐和视频</li>\n<li>插入脑图</li>\n</ul>\n</blockquote>\n<h2 id=\"多种主题美化\">多种主题美化</h2>\n<h3 id=\"修改主题颜色\">修改主题颜色</h3>\n<p>配色包括导航栏，底部栏，a标签等，主题配色是绿色。</p>\n<p>修改themes\\Matery\\source\\css\\matery.css样式<br>\n快捷键ctrl+F查找到#4cbf30（浅绿色）和#0f9d58（深绿色）还有首页字体颜色，修改为你喜欢的颜色</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span> \n<span class=\"token selector\">.bg-color</span> <span class=\"token punctuation\">{</span> \n\t<span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>to right<span class=\"token punctuation\">,</span> #4cbf30 0%<span class=\"token punctuation\">,</span> #0f9d58 100%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span> \n<span class=\"token comment\">/*如果想去掉banner图的颜色渐变效果，请将以下的css属性注释掉或者删除掉即可*/</span> \n<span class=\"token atrule\"><span class=\"token rule\">@-webkit-keyframes</span> rainbow</span> <span class=\"token punctuation\">{</span> \n\t<span class=\"token comment\">/* 动态切换背景颜色. */</span> \n<span class=\"token punctuation\">}</span> \n<span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> rainbow</span> <span class=\"token punctuation\">{</span> \n\t<span class=\"token comment\">/* 动态切换背景颜色. */</span> \n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"背景樱花飘落效果\">背景樱花飘落效果</h3>\n<p>在<code>themes/matery/source/js</code>目录下新建<code>sakura.js</code>文件，打开这个网址<a target=\"_blank\" rel=\"noopener\" href=\"https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.1/source/js/sakura.js\">传送门</a>，将内容复制粘贴到<code>sakura.js</code>即可。</p>\n<p>然后在<code>themes/matery/layout/layout.ejs</code>文件内添加下面的内容：</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>script type<span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token comment\">//只在桌面版网页启用特效</span>\n<span class=\"token keyword\">var</span> windowWidth <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>windowWidth <span class=\"token operator\">&gt;</span> <span class=\"token number\">768</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;script type=\"text/javascript\" src=\"/js/sakura.js\"&gt;&lt;\\/script&gt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>修改花瓣的数量</strong></p>\n<p>因为普遍在使用的樱花背景效果花瓣数太多了，一些人不太喜欢。</p>\n<p>于是按不同花瓣数量做了几个新的 <code>js</code> ，并提供如下 <code>cdn</code> 形式的引用：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">https://cdn.jsdelivr.net/gh/fz6m/Private-web@1.2/js/sakura/sakura-small.js<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>以上为少量樱花效果，另提供几个不同数量的文件引用名：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">文件名</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">sakura-small.js</td>\n<td style=\"text-align:left\">少量樱花</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sakura-half.js</td>\n<td style=\"text-align:left\">樱花相对原效果数量减半</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sakura-reduce.js</td>\n<td style=\"text-align:left\">樱花相对原效果减少1/4</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sakura-original.js</td>\n<td style=\"text-align:left\">樱花数量不变（原效果）</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"自定义鼠标样式\">自定义鼠标样式</h3>\n<p>首先将鼠标样式下载到本地，推荐大家一个网站：https://zhutix.com/ico/ori-cursors/</p>\n<p>以我的为例，我将鼠标指针样式放在了主题文件夹下的medias目录下，然后打开<code>themes\\matery\\source\\css</code>下的<strong>my.css</strong>文件，添加内容如下：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">*</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">\"/medias/imgs/zhengchang.ico\"</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">,</span>auto<span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">:active</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">\"/medias/imgs/dianji.ico\"</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">,</span>auto<span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"取消首页渐变颜色动画\">取消首页渐变颜色动画</h3>\n<p>在themes\\Matery\\source\\css\\matery.css，ctrl+F快捷键查找.bg-cover:after，注释掉即可。</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/* .bg-cover:after {\n    -webkit-animation: rainbow 60s infinite;\n    animation: rainbow 60s infinite;\n} */</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"优化目录栏，透明化\">优化目录栏，透明化</h3>\n<p>目录样式竟然在：<code>themes\\Matery\\layout\\_partial\\post-detail-toc.ejs</code></p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.toc-widget</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 345px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding-left</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">,</span>0.7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 10px 35px 2px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> .15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> 0 5px 15px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> .07<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> 0 2px 5px -5px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> .1<span class=\"token punctuation\">)</span> <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"增加点击跳转评论按钮\">增加点击跳转评论按钮</h3>\n<p>新建文件<code>themes\\Matery\\layout\\_partial\\back-comment.ejs</code>,粘贴如下代码</p>\n<p>我这里评论是valine，直接填写的valine的id——<code>href=\"#vcomments\"</code>,如果是其他评论，对应修改即可。</p>\n<pre class=\"line-numbers language-ejs\" data-language=\"ejs\"><code class=\"language-ejs\"><span class=\"token comment\">&lt;!-- 直达评论 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>to_comment<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>comment-scroll<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-floating btn-large waves-effect waves-light<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#vcomments<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>直达评论<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fas fa-comments<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在<code>themes\\Matery\\layout\\_partial\\valine.ejs</code>文末添加一条，引用第一步的内容；</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>%- partial<span class=\"token punctuation\">(</span><span class=\"token string\">'_partial/back-comment.ejs'</span><span class=\"token punctuation\">)</span> %<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>则只在valine存在的页面才显示直达评论，防止首页其他地方也出现按钮。其实还可以优化为浮动出现，有一点麻烦，我这里没有设置。</p>\n<p>增加样式在themes\\Matery\\source\\css\\matery.css添加内容如下：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/*直达评论按钮样式*/</span>\n<span class=\"token selector\">.comment-scroll</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 135px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 998<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.comment-scroll .btn-floating</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>to bottom right<span class=\"token punctuation\">,</span> #FF9999 0%<span class=\"token punctuation\">,</span> #ff6666 100%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 48px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 48px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.comment-scroll .btn-floating i</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 48px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.8rem<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>bottom: 135px;是距离底部的高度，看看你是否需要修改。</p>\n<h3 id=\"修改滑动条\">修改滑动条</h3>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/* 滚动条 */</span>\n<span class=\"token selector\">::-webkit-scrollbar-thumb</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #FF2A68<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">-webkit-linear-gradient</span><span class=\"token punctuation\">(</span>45deg<span class=\"token punctuation\">,</span><span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span>255<span class=\"token punctuation\">,</span>255<span class=\"token punctuation\">,</span>.4<span class=\"token punctuation\">)</span> 25%<span class=\"token punctuation\">,</span>transparent 25%<span class=\"token punctuation\">,</span>transparent 50%<span class=\"token punctuation\">,</span><span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span>255<span class=\"token punctuation\">,</span>255<span class=\"token punctuation\">,</span>.4<span class=\"token punctuation\">)</span> 50%<span class=\"token punctuation\">,</span><span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span>255<span class=\"token punctuation\">,</span>255<span class=\"token punctuation\">,</span>.4<span class=\"token punctuation\">)</span> 75%<span class=\"token punctuation\">,</span>transparent 75%<span class=\"token punctuation\">,</span>transparent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 3em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">::-webkit-scrollbar-track</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #ffcacaff<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 3em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">::-webkit-scrollbar</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 8px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"添加博客看板娘\">添加博客看板娘</h2>\n<p>方法如下：</p>\n<p>安装插件：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save hexo-helper-live2d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>安装喜欢的模型：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> packagename\n<span class=\"token comment\">#安装下载动画人物库, 动画人物有很多, 可以网上查询资料, 下面推荐几种.</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save live2d-widget-model-shizuku <span class=\"token comment\">#课桌女孩</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save live2d-widget-model-hibiki  <span class=\"token comment\">#御姐</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save live2d-widget-model-wanko   <span class=\"token comment\">#狗狗</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save live2d-widget-model-haruto  <span class=\"token comment\">#海军服女孩</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save live2d-widget-model-miku    <span class=\"token comment\">#萝莉</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将packagename换成模型名字，如我使用的模型：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> live2d-widget-model-shizuku<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后打开博客根目录下的 _config.yml文件，添加如下代码：</p>\n<p><strong>使用本地模型方式：</strong></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\">## 添加动画live2d模块  npm install --save hexo-helper-live2d</span>\n<span class=\"token comment\">## 下载动画人物库 npm install live2d-widget-model-z16 -D</span>\n<span class=\"token key atrule\">live2d</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">scriptFrom</span><span class=\"token punctuation\">:</span> local <span class=\"token comment\"># 默认</span>\n  <span class=\"token key atrule\">pluginRootPath</span><span class=\"token punctuation\">:</span> live2dw/ <span class=\"token comment\"># 插件在站点上的根目录(相对路径)</span>\n  <span class=\"token key atrule\">pluginJsPath</span><span class=\"token punctuation\">:</span> lib/ <span class=\"token comment\"># 脚本文件相对与插件根目录路径</span>\n  <span class=\"token key atrule\">pluginModelPath</span><span class=\"token punctuation\">:</span> assets/ <span class=\"token comment\"># 模型文件相对与插件根目录路径</span>\n  <span class=\"token key atrule\">tagMode</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span>\n  <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 调试, 是否在控制台输出日志</span>\n  <span class=\"token key atrule\">model</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">use</span><span class=\"token punctuation\">:</span> live2d<span class=\"token punctuation\">-</span>widget<span class=\"token punctuation\">-</span>model<span class=\"token punctuation\">-</span>miku\n  <span class=\"token key atrule\">display</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">position</span><span class=\"token punctuation\">:</span> right <span class=\"token comment\">#动画位置</span>\n    <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span>\n    <span class=\"token key atrule\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">190</span>\n    <span class=\"token comment\"># 位置配置，这个在左侧边栏位置很居中</span>\n    <span class=\"token key atrule\">hOffset</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span>  <span class=\"token comment\"># 调节水平位置</span>\n    <span class=\"token key atrule\">vOffset</span><span class=\"token punctuation\">:</span> <span class=\"token number\">-5</span>  <span class=\"token comment\"># 调节垂直位置</span>\n  <span class=\"token key atrule\">mobile</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">show</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 是否在移动设备上显示</span>\n    <span class=\"token key atrule\">scale</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.5</span> <span class=\"token comment\"># 移动设备上的缩放</span>\n  <span class=\"token key atrule\">react</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">opacityDefault</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.7</span>\n    <span class=\"token key atrule\">opacityOnHover</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.8</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>使用网络模型方式：</strong></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Live2D</span>\n<span class=\"token comment\">## https://github.com/EYHN/hexo-helper-live2d</span>\n<span class=\"token key atrule\">live2d</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token comment\"># enable: false</span>\n  <span class=\"token key atrule\">pluginRootPath</span><span class=\"token punctuation\">:</span> live2dw/ <span class=\"token comment\"># Root path of plugin to be on the site (Relative)</span>\n  <span class=\"token key atrule\">pluginJsPath</span><span class=\"token punctuation\">:</span> lib/ <span class=\"token comment\"># JavaScript path related to plugin's root (Relative)</span>\n  <span class=\"token key atrule\">pluginModelPath</span><span class=\"token punctuation\">:</span> assets/ <span class=\"token comment\"># Relative model path related to plugin's root (Relative)</span>\n  <span class=\"token key atrule\">scriptFrom</span><span class=\"token punctuation\">:</span> local <span class=\"token comment\"># Default</span>\n  <span class=\"token comment\"># scriptFrom: jsdelivr # jsdelivr CDN</span>\n  <span class=\"token comment\"># scriptFrom: unpkg # unpkg CDN</span>\n  <span class=\"token comment\"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # Your custom url</span>\n  <span class=\"token key atrule\">tagMode</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># Whether only to replace live2d tag instead of inject to all pages</span>\n  <span class=\"token key atrule\">log</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># Whether to show logs in console</span>\n  <span class=\"token key atrule\">model</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">#use: live2d-widget-model-lwet # npm-module package name</span>\n    <span class=\"token comment\"># use: wanko # folder name in (hexo base dir)/live2d_models/</span>\n    <span class=\"token comment\"># use: ./wives/wanko # folder path relative to hexo base dir</span>\n    <span class=\"token comment\"># 模型：https://huaji8.top/post/live2d-plugin-2.0/</span>\n    <span class=\"token key atrule\">use</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//cdn.jsdelivr.net/npm/live2d<span class=\"token punctuation\">-</span>widget<span class=\"token punctuation\">-</span>model<span class=\"token punctuation\">-</span>wanko@1.0.5/assets/wanko.model.json <span class=\"token comment\"># Your custom url</span>\n  <span class=\"token key atrule\">display</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">position</span><span class=\"token punctuation\">:</span> left\n    <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">300</span>\n    <span class=\"token key atrule\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">400</span>\n    <span class=\"token key atrule\">hOffset</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span>\n    <span class=\"token key atrule\">vOffset</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n  <span class=\"token key atrule\">mobile</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">show</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>见右下角</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/2720220327072647-1.png\" alt=\"Live2D看板娘\"></p>\n<h2 id=\"更强大的看板娘\">更强大的看板娘</h2>\n<blockquote>\n<p><strong><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/stevenjoezhang/live2d-widget\">live2d-widget</a></strong> <a target=\"_blank\" rel=\"noopener\" href=\"https://www.fghrsh.net/post/123.html\">原作者教程</a></p>\n<p>支持换装，模型切换，对话框，拍照，小游戏，眼神跟随，触摸对话，音频等。</p>\n<p>可以自建api，自定义各种模型，各种对话等。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/2820220328202350.png\" alt=\"live2d看板娘\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/2820220328201742.png\" alt=\"live2d-widget效果图\"></p>\n<h3 id=\"依赖-Font-Awesome\">依赖  Font Awesome</h3>\n<p>请在 <code>&lt;head&gt;</code> 中加入。在Matery中自带，这一步跳过。</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>link rel<span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css\"</span><span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"使用-Usage\">使用 Usage</h3>\n<p>将这一行代码加入 <code>&lt;head&gt;</code> 或 <code>&lt;body&gt;</code>，即可展现出效果：</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"https://cdn.jsdelivr.net/gh/17lai/live2d-widget@latest/autoload.js\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"后端-API\">后端 API</h3>\n<p><code>initWidget</code> 方法接受名为 <code>apiPath</code> 和 <code>cdnPath</code> 的参数，两者设置其中一项即可。其中 <code>apiPath</code> 为后端 API 的 URL，可以自行搭建，并增加模型（需要修改的内容比较多，此处不再赘述）。而 <code>cdnPath</code> 则是通过 jsDelivr 这样的 CDN 服务加载资源，更加稳定。</p>\n<h3 id=\"目录结构-Files\">目录结构 Files</h3>\n<ul>\n<li><code>waifu-tips.js</code> 包含了按钮和对话框的逻辑；</li>\n<li><code>waifu-tips.json</code> 中定义了触发条件（<code>selector</code>，CSS 选择器）和触发时显示的文字（<code>text</code>）；</li>\n<li><code>waifu.css</code> 是看板娘的样式表。</li>\n</ul>\n<blockquote>\n<p>使用 <code>waifu-tips.json</code> 自定义 <code>selector</code>触发提示文字框，可以用来做菜单，按钮的导航提示，终于是个合格的看板娘了！</p>\n<ul>\n<li>对所有菜单，常用按钮做了基本文字提示。鼠标去到处戳一下，看看触发提示！😄</li>\n<li>这是一个不小的工程，难度不高，趣味性很强。</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/2920220329182729.png\" alt=\"看板娘触发文字提示\"></p>\n<h2 id=\"添加夜间模式切换\">添加夜间模式切换</h2>\n<blockquote>\n<ul>\n<li>\n<p>下面这个还远未完善，只是基本可用，很多显示细节还需要调整。</p>\n</li>\n<li>\n<p>博主业余钻研ccs教程，慢慢修改完善中。</p>\n</li>\n</ul>\n</blockquote>\n<p>在主题目录下的<code>/layout/layout.ejs</code>文件添加夜间模式切换按钮:</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- 切换夜间/白天模式按钮 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">switchNightMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sma<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fa fa-moon-o<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nightMode<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-hidden</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>在主题目录下的<code>/source/js/matery.js</code>文件添加js代码:</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 深色模式按钮设置</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;=</span> <span class=\"token number\">22</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/*定时开启暗色模式&lt;默认晚22点至早6点默认开启&gt;*/</span>\n    <span class=\"token comment\">// document.body.classList.add('dark');</span>\n    <span class=\"token comment\">// $(\"#nightMode\").removeClass(\"fa-moon-o\").addClass(\"fa-lightbulb\");</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(prefers-color-scheme: dark)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 深色模式设置</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">switchNightMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> body <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dark'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#nightMode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fa-lightbulb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fa-moon-o\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dark'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#nightMode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fa-moon-o\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fa-lightbulb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*提醒开启夜间模式功能*/</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;=</span> <span class=\"token number\">19</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DarkMode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> toastHTML <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;span style=\"color:#97b8b2;border-radius: 10px;&gt;'</span>\n                <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;i class=\"fa fa-bell\" aria-hidden=\"true\"&gt;&lt;/i&gt;晚上使用深色模式阅读更好哦。(ﾟ▽ﾟ)/&lt;/span&gt;'</span>\n            <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">toast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">html</span><span class=\"token operator\">:</span> toastHTML<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在主题目录下的<code>/source/css/matery.css</code>文件添加夜间模式切换的样式:</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/******夜间模式切换样式 start*******/</span>\n<span class=\"token comment\">/* 深色模式按钮设置 */</span>\n<span class=\"token selector\">#sma</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #000<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 38px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 38px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 170px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 998<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> pointer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#sma .fa-moon-o</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 8px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 8px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.48rem <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#sma .fa-lightbulb</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 13px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 8px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.5rem <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.fa-moon-o:before</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\\f186\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.fa-comments:before</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\\f086\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* 深色模式设置 */</span> <span class=\"token comment\">/* 字体颜色变灰白色 */</span>\n<span class=\"token selector\">body.dark .fas,\nbody.dark .title,\nbody.dark .row .text,\nbody.dark article .article-content .summary,\nbody.dark .card .card-image .card-title,\nbody.dark .fa-moon-o:before,\nbody.dark .fa-lightbulb:before,\nbody.dark article .article-tags .chip,\nbody.dark .chip-container .tag-title,\nbody.dark div.jqcloud a,\nbody.dark .friends-container .tag-title,\nbody.dark .frind-ship .title h1,\nbody.dark .card .card-content p,\nbody.dark .v[data-class=v] .vcount,\nbody.dark .v[data-class=v] .vcount .vnum,\nbody.dark pre code,\nbody.dark h1,\nbody.dark h2,\nbody.dark h3, body.dark h4,\nbody.dark h5,\nbody.dark h6, body.dark li,\nbody.dark p,\nbody.dark header .side-nav .mobile-head .logo-name,\nbody.dark header .side-nav .mobile-head .logo-desc,\nbody.dark header .side-nav .menu-list a,\nbody.dark .bg-cover .post-title,\nbody.dark a</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">,</span> 0.6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* 背景颜色变灰色 */</span>\n<span class=\"token selector\">body.dark .card,\nbody.dark .block-with-text:after</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #282c34<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* 背景颜色变黑色 */</span>\n<span class=\"token selector\">body.dark,\nbody.dark .v[data-class=v] .vcount,\nbody.dark #rewardModal .modal-content,\nbody.dark .modal,\nbody.dark header .side-nav,\nbody.dark header .side-nav .menu-list .m-nav-show</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #12121c<span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">/**因为我的背景图导致部分页面无法全部切换成深色背景, 需要取消背景图片**/</span>\n    <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>#<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* 改变透明度 */</span>\n<span class=\"token selector\">body.dark .aplayer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #2f3742 <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">body.dark img, body.dark strong</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">brightness</span><span class=\"token punctuation\">(</span>.7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/******夜间模式切换样式 end*******/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"Tag标签外挂使用方法\">Tag标签外挂使用方法</h2>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">Tag标签外挂使用方法\n\n{%r%}\n紅色\n{%endr%}\n{%g%}\n綠色\n{%endg%}\n{%y%}\n黃色\n{%endy%}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"图片懒加载\">图片懒加载</h2>\n<blockquote>\n<p>图片懒加载是提升网站性能和用户体验的一个非常很好方式，并且几乎所有的大型网站都使用到了，比如微博，仅把用户可见的部分显示图片，其余的都暂时不加载，做法就是：让所有图片元素src指向一个小的站位图片比如loading，并新增一个属性(如data-original)存放真实图片地址。每当页面加载（或者滚动条滚动），使用JS脚本将可视区域内的图片src替换回真实地址，并做请求重新加载。</p>\n<ul>\n<li>Don't worry about lazyload SEO problem, because Google supports it already.</li>\n</ul>\n</blockquote>\n<p>那么，赶快用起来吧！</p>\n<p>在站点根目录执行下面的命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-lazyload-image --save\n<span class=\"token comment\">#或者使用yarn</span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> hexo-lazyload-image<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>之后在站点配置文件下添加下面的代码</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">lazyload</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>  <span class=\"token comment\"># 是否开启图片懒加载</span>\n  <span class=\"token key atrule\">onlypost</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>  <span class=\"token comment\"># 是否只对文章的图片做懒加载</span>\n  <span class=\"token key atrule\">loadingImg</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># eg ./images/loading.gif</span>\n  <span class=\"token key atrule\">isSPA</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># optional. For performance considering, isSPA is added. If your theme is a SPA page, please set it as true</span>\n  <span class=\"token key atrule\">preloadRatio</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span> <span class=\"token comment\"># optional, default is 1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>最后执行 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 就可以看到效果了。</p>\n<p>存在问题：</p>\n<p>查看大图，发现全部为 loading 加载图，原因是因为懒加载插件与 lightgallery 插件冲突，解决办法如下：</p>\n<p>修改主题文件下的 matery.js，在 108 行左右添加以下代码：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img[data-original]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"href\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-original\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<h3 id=\"specify-no-lazy-for-specify-image\">specify <strong>no-lazy</strong> for specify image</h3>\n<p>we can also disable the lazy process if specify a attribute on img tag in both markdown or html</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">no-lazy</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>abc.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</blockquote>\n<h2 id=\"外链跳转插件\">外链跳转插件</h2>\n<p>使用 npm 或者 yarn 安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">## npm 安装</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-external-link --save\n<span class=\"token comment\">## yarn 安装</span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> hexo-external-link<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>之后在博客站点根目录下添加如下配置：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">hexo_external_link</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">enable_base64_encode</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">url_param_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'u'</span>\n  <span class=\"token key atrule\">html_file_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'go.html'</span>\n  <span class=\"token key atrule\">target_blank</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">link_rel</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'external nofollow noopener noreferrer'</span>\n  <span class=\"token key atrule\">domain</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'your_domain'</span> <span class=\"token comment\"># 如果开启了防盗链，填写你的域名</span>\n  <span class=\"token key atrule\">safety_chain</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"添加天气小插件\">添加天气小插件</h2>\n<p>首先去中国天气<a target=\"_blank\" rel=\"noopener\" href=\"https://cj.weather.com.cn/plugin/pc\">官网：</a>，配置自己的插件，选择自定义插件—&gt;自定义样式——&gt;生成代码，然后会生成一段代码，复制粘贴到 <code>themes/matery/layout/layout.ejs</code> 即可。</p>\n<h2 id=\"新增个人相册\">新增个人相册</h2>\n<h3 id=\"新建相册目录\">新建相册目录</h3>\n<p>执行下面的命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo new page galleries<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后到站点根目录的 source 目录下找名称为 <strong>galleries</strong> 的目录，打开目录下的 **index.md ** 文档，在原有基础上添加一下配置：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">type: <span class=\"token string\">\"galleries\"</span>\nlayout: <span class=\"token string\">\"galleries\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>紧接着，在主题配置文件的 <code>menu</code> 属性添加关于相册的菜单</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">相册</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /galleries \n  <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>image<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>如果需要添加到二级菜单，添加格式为：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 相册\n  <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /galleries \n  <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> fas fa<span class=\"token punctuation\">-</span>image<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"添加-ejs-文件和-css-文件\">添加 ejs 文件和 css 文件</h3>\n<p>首先新建 <code>gallery.css</code>，填写的代码内容如下：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.gallery-wrapper</span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.gallery-wrapper .gallery-box</span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 5px <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.gallery-wrapper .gallery-item</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-bottom</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-moz-box-shadow</span><span class=\"token punctuation\">:</span> 0 1px 3px 0 <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.22<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-webkit-box-shadow</span><span class=\"token punctuation\">:</span> 0 1px 3px 0 <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.22<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 1px 3px 0 <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.22<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.gallery-cover-box</span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span> 60%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> center center no-repeat<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-webkit-background-size</span><span class=\"token punctuation\">:</span> cover<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-size</span><span class=\"token punctuation\">:</span> cover<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.gallery-cover-box .gallery-cover-img</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">,</span>-50%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.gallery-item .gallery-name</span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 14px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 24px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #666<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.waterfall</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">column-count</span><span class=\"token punctuation\">:</span> 3<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">column-gap</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.photo-wrapper</span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.photo-item</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-bottom</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 14px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-moz-page-break-inside</span><span class=\"token punctuation\">:</span> avoid<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-webkit-column-break-inside</span><span class=\"token punctuation\">:</span> avoid<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">break-inside</span><span class=\"token punctuation\">:</span> avoid<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-moz-box-shadow</span><span class=\"token punctuation\">:</span> 0 1px 3px 0 <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.22<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-webkit-box-shadow</span><span class=\"token punctuation\">:</span> 0 1px 3px 0 <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.22<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 1px 3px 0 <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.22<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.photo-item img</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.photo-item .photo-name</span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 14px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-top</span><span class=\"token punctuation\">:</span> 1px solid #dddddd<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*适配移动端布局*/</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token keyword\">only</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 601px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">.waterfall</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">column-count</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">column-gap</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后保存，将此文件放在主题目录下，路径为 <strong>matery/source/css</strong>。</p>\n<p>紧接着，新建 <code>galleries.ejs</code> 文件，添加以下代码：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>link rel<span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"/css/gallery.css\"</span><span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span><span class=\"token operator\">-</span> <span class=\"token function\">partial</span><span class=\"token punctuation\">(</span><span class=\"token string\">'_partial/bg-cover'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>main <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"content\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>site<span class=\"token punctuation\">.</span>data <span class=\"token operator\">&amp;&amp;</span> site<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>galleries<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span> <span class=\"token keyword\">var</span> galleries <span class=\"token operator\">=</span> site<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>galleries<span class=\"token punctuation\">;</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"gallery-wrapper row\"</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> len <span class=\"token operator\">=</span> galleries<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span> <span class=\"token keyword\">var</span> gallery <span class=\"token operator\">=</span> galleries<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col s6 m4 l4 xl3 gallery-box\"</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"./&lt;%- gallery.name %&gt;\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"gallery-item\"</span> data<span class=\"token operator\">-</span>aos<span class=\"token operator\">=</span><span class=\"token string\">\"zoom-in-up\"</span><span class=\"token operator\">&gt;</span>\n                     <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"gallery-cover-box\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"background-image: url(&lt;%- theme.jsDelivr.url %&gt;&lt;%- gallery.cover%&gt;);\"</span><span class=\"token operator\">&gt;</span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n                    <span class=\"token operator\">&lt;</span>p <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"gallery-name\"</span><span class=\"token operator\">&gt;</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span><span class=\"token operator\">-</span> gallery<span class=\"token punctuation\">.</span>name <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>main<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将此文件放在 <strong>matery/layout</strong> 目录下，同时再此目录下接着新建 <code>gallery.ejs</code> 文件，添加以下代码：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>link rel<span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"/css/gallery.css\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>link type<span class=\"token operator\">=</span><span class=\"token string\">\"text/css\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"/libs/fancybox/jquery.fancybox.css\"</span> rel<span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>link type<span class=\"token operator\">=</span><span class=\"token string\">\"text/css\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"/libs/justifiedGallery/justifiedGallery.min.css\"</span> rel<span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span><span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span><span class=\"token operator\">-</span> <span class=\"token function\">partial</span><span class=\"token punctuation\">(</span><span class=\"token string\">'_partial/post-cover'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>\n<span class=\"token keyword\">let</span> galleries <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>site<span class=\"token punctuation\">.</span>data <span class=\"token operator\">&amp;&amp;</span> site<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>galleries<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    galleries <span class=\"token operator\">=</span> site<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>galleries<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> pageTitle <span class=\"token operator\">=</span> page<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getCurrentGallery</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">galleries<span class=\"token punctuation\">,</span> pageTitle</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> galleries<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>galleries<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> pageTitle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> galleries<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> currentGallery <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentGallery</span><span class=\"token punctuation\">(</span>galleries<span class=\"token punctuation\">,</span> pageTitle<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">var</span> photos <span class=\"token operator\">=</span> currentGallery<span class=\"token punctuation\">.</span>photos<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> galleryImageStr <span class=\"token operator\">=</span> theme<span class=\"token punctuation\">.</span>jsDelivr<span class=\"token punctuation\">.</span>url <span class=\"token operator\">?</span> theme<span class=\"token punctuation\">.</span>jsDelivr<span class=\"token punctuation\">.</span>url <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> imageStr <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> len <span class=\"token operator\">=</span> photos<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> photo <span class=\"token operator\">=</span> photos<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    imageStr <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;a href=\\\"\"</span> <span class=\"token operator\">+</span> galleryImageStr <span class=\"token operator\">+</span> photo <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\"\"</span> <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"     class=\\\"photo-item\\\" rel=\\\"example_group\\\"\"</span> <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"     data-fancybox=\\\"images\\\"&gt;\"</span> <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"      &lt;img src=\\\"\"</span> <span class=\"token operator\">+</span> galleryImageStr <span class=\"token operator\">+</span> photo <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\"\"</span> <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"       alt=\"</span> <span class=\"token operator\">+</span> photo <span class=\"token operator\">+</span> <span class=\"token string\">\"&gt;\\n\"</span> <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"    &lt;/a&gt;\"</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>  \n\n<span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"photo-wrapper\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span>password <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n\n            <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"/js/crypto-js.js\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"/js/gallery-encrypt.js\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"hbe-security\"</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"hbe-input-container\"</span><span class=\"token operator\">&gt;</span>\n                    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"hbe-form-control\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"pass\"</span>  placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"请输入密码查看内容\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n                    <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"javascript:;\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"btn-decrypt\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"btn_decrypt\"</span><span class=\"token operator\">&gt;</span>解密<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>div  id<span class=\"token operator\">=</span><span class=\"token string\">\"mygallery\"</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"waterfall\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"encrypt-blog\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"display:none\"</span><span class=\"token operator\">&gt;</span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span><span class=\"token operator\">-</span> <span class=\"token function\">aes</span><span class=\"token punctuation\">(</span>imageStr<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"waterfall\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"encrypt-blog\"</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span><span class=\"token operator\">-</span> imageStr <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">%</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"/libs/fancybox/fancybox.js\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"/libs/justifiedGallery/justifiedGallery.min.js\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[rel=example_group]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fancybox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#encrypt-blog\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">justifiedGallery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">margins</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">rowHeight</span><span class=\"token operator\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>注意：</strong></p>\n<ol>\n<li>需要几个文件，我把文件地址放在下面，用浏览器打开链接，就会显示出代码，然后复制粘贴到文加中去就行。开头的是文件路径，如果没有的话，就新建一个就 OK 了。</li>\n</ol>\n<ul>\n<li>\n<p><strong>libs/fancybox/jquery.fancybox.css</strong>：</p>\n<p>https://blog.17lai.site/libs/fancybox/jquery.fancybox.css</p>\n</li>\n<li>\n<p>libs/justifiedGallery/justifiedGallery.min.css：</p>\n<p>https://blog.17lai.site/libs/justifiedGallery/justifiedGallery.min.css</p>\n</li>\n<li>\n<p><strong>matery/source/js/crypto-js.js：</strong></p>\n<p>https://blog.17lai.site/js/crypto-js.js</p>\n</li>\n<li>\n<p><strong>matery/source/js/gallery-encrypt.js：</strong></p>\n<p>https://blog.17lai.site/js/gallery-encrypt.js</p>\n</li>\n<li>\n<p><strong>libs/fancybox/fancybox.js：</strong></p>\n<p>https://blog.17lai.site/libs/fancybox/fancybox.js</p>\n</li>\n<li>\n<p>libs/justifiedGallery/justifiedGallery.min.js：</p>\n<p>https://blog.17lai.site/libs/justifiedGallery/justifiedGallery.min.js</p>\n</li>\n</ul>\n<h3 id=\"添加相册-json-配置文件\">添加相册 json 配置文件</h3>\n<p>在<code>站点</code>目录 <code>source/_data/</code> 下新建一个 <strong>galleries.json</strong> 的文件，<strong>json</strong> 代码如下：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2020\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"cover\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/medias_webp/images/01.webp\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"我的图床\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"photos\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"/medias_webp/images/01.webp\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"/medias_webp/images/02.webp\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"/medias_webp/images/03.webp\"</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2021\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"cover\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/medias_webp/featureimages/1.webp\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"featureimages 图片展示\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"photos\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"/medias_webp/featureimages/1.webp\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"/medias_webp/featureimages/2.webp\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"/medias_webp/featureimages/3.webp\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"/medias_webp/featureimages/4.webp\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2022\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"cover\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/medias_webp/banner/0.webp\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"banner 图片展示\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"photos\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"/medias_webp/banner/0.webp\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"/medias_webp/banner/1.webp\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"/medias_webp/banner/2.webp\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>字段含义：</p>\n<ul>\n<li><code>name</code> 是相册标题</li>\n<li><code>cover</code> 是封面图片</li>\n<li><code>description</code> 是相册介绍</li>\n<li><code>photos</code> 是图片列表</li>\n</ul>\n<p>配置文件建好了之后还没完，只剩最后一个步骤了，在 <strong>galleries 目录</strong>下建立对应的相册名称目录和文件，比如我这个相册需要新建名称为 2020 目录，然后下面再分别新建 <code>index.md</code> 文件，<code>2020/index.md</code>文件内容为：</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\"><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span>\n<span class=\"token front-matter yaml language-yaml\"><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2020</span>\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2021-10-13 10:51:50</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"gallery\"</span>\n<span class=\"token key atrule\">layout</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"gallery\"</span></span>\n<span class=\"token punctuation\">---</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>2021/index.md</code>，<code>2022/index.md</code>文件内容和上面一样，只是<code>title</code>修改不同而已</p>\n<p>galleries 目录结构</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">galleries\n├── 2020\n│&nbsp;&nbsp; └── index.md\n├── 2021\n│&nbsp;&nbsp; └── index.md\n├── 2022\n│&nbsp;&nbsp; └── index.md\n├── index.md<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"查看效果\">查看效果</h3>\n<p>完成以上步骤，执行命令，在本地查看效果：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo clean <span class=\"token operator\">&amp;&amp;</span> hexo g <span class=\"token operator\">&amp;&amp;</span> hexo s<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"我的效果\">我的<a href=\"https://blog.17lai.site/galleries\">效果</a></h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1320211013084134.png\" alt=\"\"></p>\n<h2 id=\"新增折叠功能\">新增折叠功能</h2>\n<blockquote>\n<p>这里利用<code>hexo-sliding-spoiler</code>插件间接实现折叠功能，在matery主题中零修改源代码实现折叠功能。</p>\n<p>另一种修改代码实现折叠效果，参考<a target=\"_blank\" rel=\"noopener\" href=\"https://www.cnblogs.com/woshimrf/p/hexo-fold-block.html\">Hexo next博客添加折叠块功能添加折叠代码块</a>。</p>\n</blockquote>\n<h3 id=\"安装插件-3\">安装插件</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-sliding-spoiler --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"配置插件\">配置插件</h3>\n<p>根目录配置文件<code>_config.yml</code>中添加</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> hexo<span class=\"token punctuation\">-</span>sliding<span class=\"token punctuation\">-</span>spoiler<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>到这里已经实现折叠功能了。</p>\n<h3 id=\"进一步完善美化\">进一步完善美化</h3>\n<p>修改node_modules_hexo-sliding-spoiler@1.2.1@hexo-sliding-spoiler\\assets\\spoiler.css</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.spoiler</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 20px 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #E5E5E5<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #E5E5E5<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">clear</span><span class=\"token punctuation\">:</span> both<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 3px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span>all .6s\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.spoiler .spoiler-title</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 -15px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 5px 15px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #353535<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 18px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> pointer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.spoiler.collapsed .spoiler-title:before</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"▶ \"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.spoiler.expanded .spoiler-title:before</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"▼ \"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>使用方法</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">{% spoiler title %}\ncontent\n{% endspoiler %}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>实例</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">{% spoiler 点击显/隐内容 %}\n\n内容测试\n\n{% endspoiler %}\n\n{% spoiler 点击显/隐内容 %}\n\n内容测试\n\n{% endspoiler %}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1220211012105432.png\" alt=\"\"></p>\n<h2 id=\"让Hexo博客支持通知功能\">让Hexo博客支持通知功能</h2>\n<blockquote>\n<p>更新文章后，自动发消息给订阅用户的浏览器！</p>\n<p>国外非常火的低成本客户召回方式，增加用户粘性。</p>\n<p>Tips: 如果访问不了订阅服务器，就不可用这个通知功能了！</p>\n</blockquote>\n<h3 id=\"安装插件-4\">安装插件</h3>\n<p>插件的 GitHub 仓库<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/glazec/hexo-web-push-notification\"> hexo-web-push-notification</a></p>\n<p>在你的博客站点目录执行下面的命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i hexo-web-push-notification --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果你安装了 <code>cnpm</code> 或者 <code>yarn</code> 等可执行下面的命令，安装依赖包的速度更快：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cnpm i hexo-web-push-notification --save <span class=\"token comment\">#安装cnpm的执行这个命令</span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> hexo-web-push-notification <span class=\"token comment\">#安装yarn的执行这个命令</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>紧接着再你的博客站点目录下的配置文件，而不是<em>主题配置文件</em>，添加以下配置：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">webPushNotification</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">webpushrKey</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"your webpushr rest api key\"</span>\n  <span class=\"token key atrule\">webpushrAuthToken</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"your webpushr authorize token\"</span>\n  <span class=\"token key atrule\">trackingCode</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"AEGlpbdgvBCWXqXI6PtsUzobY7TLV9gwJU8bzMktrwfrSERg_xnLVbjpCw8x2GmFmi1ZcLTz0ni6OnX5MAwoM88\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中 <code>webpushrKey</code>,<code>webpushrAuthToken</code> 和 <code>trackingCode</code> 的值在官网注册得到。</p>\n<h3 id=\"官网注册\">官网注册</h3>\n<p>点击右边的图标即可进入👉 ： <a target=\"_blank\" rel=\"noopener\" href=\"https://app.webpushr.com/signup\">传送门</a></p>\n<p>注册完之后，然后会让你重新登录，登录之后，然后填写相关的信息即可。</p>\n<ol>\n<li>填写图中所显示的相关网站信息，填写完之后，点击下一步</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1220211012112936.png\" alt=\"\"></p>\n<blockquote>\n<p><code>Web push notications</code> 仅支持 HTTPS 的网站，不支持 HTTP 的网站</p>\n</blockquote>\n<p>根据网站类型，并根据网站指引进行操作，以 <code>Hexo</code> 为例</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1220211012114232.png\" alt=\"\"></p>\n<blockquote>\n<p>info， 其中将第二步中所指的代码复制粘贴到你的 <code>footer.ejs</code> 或者 <code>layout.ejs</code>，对于 hexo 用户，建议将其加入 <code>index.ejs</code> 即可。因为主题的不同，所以代码添加的位置不同，简单的说，就是放在网站的 <code>&lt;/body&gt;</code> 标签之前，根据你的主题而言，自己添加。</p>\n</blockquote>\n<p>接着将以下代码插入到网页中就可以了。确保每一个你想要询问用户接受通知的页面都要包含以下代码。</p>\n<p>其中，上图步骤二中的代码有 <code>trackingCode</code> 的值，如下图中所标明的一长串字母。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1220211012114333.png\" alt=\"\"></p>\n<p>验证安装</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1220211012114406.png\" alt=\"安装成功\"></p>\n<p>部署之后可能会遇到无法正常发送通知的情况.</p>\n<p>进入目录<code> node_modules/hexo-web-push-notification/index.js文件中第22行'summary': util.stripHTML(newPost.excerpt)</code>,这里取值取的是excerpt，改成summary即可。</p>\n<p>修改前</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> JSONFeed <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'title'</span><span class=\"token operator\">:</span> newPost<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'id'</span><span class=\"token operator\">:</span> newPost<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'date_published'</span><span class=\"token operator\">:</span> newPost<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'summary'</span><span class=\"token operator\">:</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">stripHTML</span><span class=\"token punctuation\">(</span>newPost<span class=\"token punctuation\">.</span>excerpt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'url'</span><span class=\"token operator\">:</span> newPost<span class=\"token punctuation\">.</span>permalink<span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'tags'</span><span class=\"token operator\">:</span> newPost<span class=\"token punctuation\">.</span>tags<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> v<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'categories'</span><span class=\"token operator\">:</span> newPost<span class=\"token punctuation\">.</span>categories<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> v<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> JSONFeed <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'title'</span><span class=\"token operator\">:</span> newPost<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'id'</span><span class=\"token operator\">:</span> newPost<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'date_published'</span><span class=\"token operator\">:</span> newPost<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'summary'</span><span class=\"token operator\">:</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">stripHTML</span><span class=\"token punctuation\">(</span>newPost<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'url'</span><span class=\"token operator\">:</span> newPost<span class=\"token punctuation\">.</span>permalink<span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'tags'</span><span class=\"token operator\">:</span> newPost<span class=\"token punctuation\">.</span>tags<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> v<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'categories'</span><span class=\"token operator\">:</span> newPost<span class=\"token punctuation\">.</span>categories<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> v<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"客服聊天窗口\">客服聊天窗口</h2>\n<p>1、在官网注册账号</p>\n<p>官网地址：<a target=\"_blank\" rel=\"noopener\" href=\"https://app.crisp.chat/initiate/signup/\">点我去crisp官网注册</a></p>\n<p>2、注册完成后设置</p>\n<p>登录刚才注册的账户——设置——网站设置——添加网站。</p>\n<p>添加完成之后就多了一行网站信息。点网站整合，就有不同的站的整合方式。</p>\n<p>比如：html方式</p>\n<p>就是复制JS代码片段到你的到<code>head</code>标签里。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script type<span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span><span class=\"token operator\">&gt;</span>window<span class=\"token punctuation\">.</span>$crisp<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>window<span class=\"token punctuation\">.</span><span class=\"token constant\">CRISP_WEBSITE_ID</span><span class=\"token operator\">=</span><span class=\"token string\">\"xxxxxxx-097e-402f-bb6b-xxxxxxx\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>d<span class=\"token operator\">=</span>document<span class=\"token punctuation\">;</span>s<span class=\"token operator\">=</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"script\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">.</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"https://client.crisp.chat/l.js\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">.</span>async<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"head\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>3、其他的设置也<br>\n登录刚才注册的账户——设置——网站设置。<br>\n网站信息行——设置，自己根据需要设置即可，比如显示位置，颜色，自己的头像等。</p>\n<p>整个使用非常简单的。</p>\n<h2 id=\"使用Valine-Admin管理评论和评论提醒\">使用Valine-Admin管理评论和评论提醒</h2>\n<h3 id=\"使用\">使用</h3>\n<p>首先其他的不错说了，在阅读本篇文章之前你最好已经整合了<code>Valine</code>留言。</p>\n<p>由于我已经整合过了所以前面几个步骤的图片来源自@Valine-Admin</p>\n<p>首先登陆账号，找到云引擎在点击设置。</p>\n<blockquote>\n<p>推荐使用这个 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/HCLonely/Valine-Admin.git\">HCLonely/Valine-Admin</a></p>\n<p>复制仓库地址：<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/DesertsP/Valine-Admin\">DesertsP/Valine-Admin</a></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1920211019004314.png\" alt=\"img\"></p>\n<p>把git仓库地址房子代码库输入框中。</p>\n<p>切换到部署标签页，分支使用 master，点击部署。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1920211019005041.png\" alt=\"img\"></p>\n<p>接下来输入分支为<code>master</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1920211019005044.png\" alt=\"img\"></p>\n<p>部署完成之后就是设置环境变量</p>\n<h3 id=\"环境变量\">环境变量</h3>\n<p>点击设置，找到自定义环境变量点击新增变量</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1920211019005055.png\" alt=\"img\"></p>\n<ul>\n<li><code>SITE_NAME</code> : 网站名称。</li>\n<li><code>SITE_URL</code> : 网站地址, <strong>最后不要加 <code>/</code> 。</strong></li>\n<li><code>SMTP_USER</code> : SMTP 服务用户名，一般为邮箱地址。</li>\n<li><code>SMTP_PASS</code> : SMTP 密码，一般为授权码，而不是邮箱的登陆密码，请自行查询对应邮件服务商的获取方式</li>\n<li><code>SMTP_SERVICE</code> : 邮件服务提供商，支持 <code>QQ</code>、<code>163</code>、<code>126</code>、<code>Gmail</code>、<code>\"Yahoo\"</code>、<code>......</code> ，全部支持请参考 : <a target=\"_blank\" rel=\"noopener\" href=\"https://link.segmentfault.com/?enc=rwjb6jO8Z6x5%2FZZ1q6w%2FaQ%3D%3D.c2CTXx8YrmrN3w%2BVCYtYe%2FsUgGzhUYn%2F%2BbjgGgV2S51GBFVQiTGaYl5o5UaNumJuwdhJ%2FnoFgOTGclNq8Noalw%3D%3D\">Nodemailer Supported services</a>。 — <em>如这里没有你使用的邮件提供商，请查看<a target=\"_blank\" rel=\"noopener\" href=\"https://link.segmentfault.com/?enc=oVf5otkSfg0SdXBBeouLJA%3D%3D.0hcduHENfwuLs%2BpqYrgereNYPsZQ8kcfWmApG6UOpW2OmWOpqe8zkNwbXW9e7luhj6rGequwkCAxtpvF7Gyy9PwnwqwQ5vJrYfxsl%2FPocUV4bFVAFieliaIgGegSBiRXBRqzzewoxolE7zsPuIMxsNSs9EsJDNkovE4qn4Bk2Bv4KZs6ctloQUQGK0BxiN26\">自定义邮件服务器</a></em></li>\n<li><code>SENDER_NAME</code> : 寄件人名称。</li>\n<li><code>TO_EMAIL</code>：这个是填收邮件提醒的邮箱地址，若没有这个字段，则将邮件发到<code>SMTP_USER</code>。</li>\n<li><code>TEMPLATE_NAME</code>：设置提醒邮件的主题，目前内置了两款主题，分别为 <code>default</code> 与 <code>rainbow</code>。默认为 <code>default</code></li>\n</ul>\n<p>设置好以上变量之后 点击实例</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1920211019005407.png\" alt=\"img\"></p>\n<p>然后重启项目，注意任何变动都要重启项目</p>\n<p>然后看一下效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1920211019005102.png\" alt=\"img\"></p>\n<p>还不错</p>\n<h3 id=\"自定义后台\">自定义后台</h3>\n<blockquote>\n<p>首先需要设置管理员信息。访问管理员注册页面<code>https://云引擎域名/sign-up</code>，注册管理员登录信息，如：https://deserts-io.avosapps.us/sign-up</p>\n</blockquote>\n<p>点击设置然后点击Web主机域名找到自己的后台地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1920211019005103.png\" alt=\"img\"></p>\n<p>然后在Usee表中增加账号， 只需要填写 <code>email</code>、<code>password</code>、<code>username</code> 其中邮箱必须设置为你的上面环境变量的邮箱</p>\n<p>设置完之后登录就能在你的后台管理评论</p>\n<h3 id=\"更多设置\">更多设置</h3>\n<h3 id=\"邮件通知模板\">邮件通知模板</h3>\n<blockquote>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/HCLonely/Valine-Admin.git\">HCLonely/Valine-Admin</a> 时使用这个</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/2920220329103059.png\" alt=\"邮件通知演示\"></p>\n<p><strong>评论通知模板</strong></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n                            <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\n                                border-radius: 10px 10px 10px 10px;\n                                font-size: 13px;\n                                color: #555555;\n                                width: 666px;\n                                font-family: <span class=\"token punctuation\">'</span>Century Gothic<span class=\"token punctuation\">'</span>, <span class=\"token punctuation\">'</span>Trebuchet MS<span class=\"token punctuation\">'</span>, <span class=\"token punctuation\">'</span>Hiragino Sans GB<span class=\"token punctuation\">'</span>, 微软雅黑, <span class=\"token punctuation\">'</span>Microsoft Yahei<span class=\"token punctuation\">'</span>, Tahoma, Helvetica,\n                                    Arial, <span class=\"token punctuation\">'</span>SimSun<span class=\"token punctuation\">'</span>, sans-serif;\n                                margin: 50px auto;\n                                border: 1px solid #eee;\n                                max-width: 100%;\n                                background: #ffffff repeating-linear-gradient(-45deg, #fff, #fff 1.125rem, transparent 1.125rem, transparent 2.25rem);\n                                box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);\n                            <span class=\"token punctuation\">\"</span></span></span>\n                        <span class=\"token punctuation\">&gt;</span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n                                <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\n                                    width: 100%;\n                                    background: #49bdad;\n                                    color: #ffffff;\n                                    border-radius: 10px 10px 0 0;\n                                    background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));\n                                    background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));\n                                    height: 66px;\n                                <span class=\"token punctuation\">\"</span></span></span>\n                            <span class=\"token punctuation\">&gt;</span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span>\n                                    <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\n                                        font-size: 15px;\n                                        word-break: break-all;\n                                        padding: 23px 32px;\n                                        margin: 0;\n                                        background-color: hsla(0, 0%, 100%, 0.4);\n                                        border-radius: 10px 10px 0 0;\n                                    <span class=\"token punctuation\">\"</span></span></span>\n                                <span class=\"token punctuation\">&gt;</span></span>\n                                    您在<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ffffff</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&lt;%=siteUrl%&gt;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> &lt;%=siteName%&gt; <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>上的留言有新回复啦！\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 40px auto<span class=\"token punctuation\">;</span> <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 90%</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>&lt;%=pname%&gt; 同学，您曾在文章上发表评论：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n                                    <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\n                                        background: #fafafa\n                                            repeating-linear-gradient(-45deg, #fff, #fff 1.125rem, transparent 1.125rem, transparent 2.25rem);\n                                        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);\n                                        margin: 20px 0px;\n                                        padding: 15px;\n                                        border-radius: 5px;\n                                        font-size: 14px;\n                                        color: #555555;\n                                    <span class=\"token punctuation\">\"</span></span></span>\n                                <span class=\"token punctuation\">&gt;</span></span>\n                                    &lt;%-ptext%&gt;\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>&lt;%=name%&gt; 给您的回复如下：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n                                    <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\n                                        background: #fafafa\n                                            repeating-linear-gradient(-45deg, #fff, #fff 1.125rem, transparent 1.125rem, transparent 2.25rem);\n                                        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);\n                                        margin: 20px 0px;\n                                        padding: 15px;\n                                        border-radius: 5px;\n                                        font-size: 14px;\n                                        color: #555555;\n                                    <span class=\"token punctuation\">\"</span></span></span>\n                                <span class=\"token punctuation\">&gt;</span></span>\n                                    &lt;%-text%&gt;\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n                                    您可以点击 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #12addb</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&lt;%=url%&gt;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>查看回复的完整內容 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>，欢迎再次光临\n                                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #12addb</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&lt;%=siteUrl%&gt;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> &lt;%=siteName%&gt; <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>。\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n                                    <span class=\"token selector\">a:link</span> <span class=\"token punctuation\">{</span>\n                                        <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n                                    <span class=\"token punctuation\">}</span>\n                                    <span class=\"token selector\">a:visited</span> <span class=\"token punctuation\">{</span>\n                                        <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n                                    <span class=\"token punctuation\">}</span>\n                                    <span class=\"token selector\">a:hover</span> <span class=\"token punctuation\">{</span>\n                                        <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n                                    <span class=\"token punctuation\">}</span>\n                                    <span class=\"token selector\">a:active</span> <span class=\"token punctuation\">{</span>\n                                        <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n                                    <span class=\"token punctuation\">}</span>\n                                </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>博主回复通知模板</strong></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n                            <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\n                                border-radius: 10px 10px 10px 10px;\n                                font-size: 13px;\n                                color: #555555;\n                                width: 666px;\n                                font-family: <span class=\"token punctuation\">'</span>Century Gothic<span class=\"token punctuation\">'</span>, <span class=\"token punctuation\">'</span>Trebuchet MS<span class=\"token punctuation\">'</span>, <span class=\"token punctuation\">'</span>Hiragino Sans GB<span class=\"token punctuation\">'</span>, 微软雅黑, <span class=\"token punctuation\">'</span>Microsoft Yahei<span class=\"token punctuation\">'</span>, Tahoma, Helvetica,\n                                    Arial, <span class=\"token punctuation\">'</span>SimSun<span class=\"token punctuation\">'</span>, sans-serif;\n                                margin: 50px auto;\n                                border: 1px solid #eee;\n                                max-width: 100%;\n                                background: #ffffff repeating-linear-gradient(-45deg, #fff, #fff 1.125rem, transparent 1.125rem, transparent 2.25rem);\n                                box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);\n                            <span class=\"token punctuation\">\"</span></span></span>\n                        <span class=\"token punctuation\">&gt;</span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n                                <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\n                                    width: 100%;\n                                    background: #49bdad;\n                                    color: #ffffff;\n                                    border-radius: 10px 10px 0 0;\n                                    background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));\n                                    background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));\n                                    height: 66px;\n                                <span class=\"token punctuation\">\"</span></span></span>\n                            <span class=\"token punctuation\">&gt;</span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span>\n                                    <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\n                                        font-size: 15px;\n                                        word-break: break-all;\n                                        padding: 23px 32px;\n                                        margin: 0;\n                                        background-color: hsla(0, 0%, 100%, 0.4);\n                                        border-radius: 10px 10px 0 0;\n                                    <span class=\"token punctuation\">\"</span></span></span>\n                                <span class=\"token punctuation\">&gt;</span></span>\n                                    您的<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ffffff</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&lt;%=siteUrl%&gt;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> &lt;%=siteName%&gt; <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>上有新的评论啦！\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 40px auto<span class=\"token punctuation\">;</span> <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 90%</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>&lt;%=name%&gt; 发表评论：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n                                    <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\n                                        background: #fafafa\n                                            repeating-linear-gradient(-45deg, #fff, #fff 1.125rem, transparent 1.125rem, transparent 2.25rem);\n                                        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);\n                                        margin: 20px 0px;\n                                        padding: 15px;\n                                        border-radius: 5px;\n                                        font-size: 14px;\n                                        color: #555555;\n                                    <span class=\"token punctuation\">\"</span></span></span>\n                                <span class=\"token punctuation\">&gt;</span></span>\n                                    &lt;%-text%&gt;\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #12addb</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&lt;%=url%&gt;<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>[查看评论]<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n                                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n                                    <span class=\"token selector\">a:link</span> <span class=\"token punctuation\">{</span>\n                                        <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n                                    <span class=\"token punctuation\">}</span>\n                                    <span class=\"token selector\">a:visited</span> <span class=\"token punctuation\">{</span>\n                                        <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n                                    <span class=\"token punctuation\">}</span>\n                                    <span class=\"token selector\">a:hover</span> <span class=\"token punctuation\">{</span>\n                                        <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n                                    <span class=\"token punctuation\">}</span>\n                                    <span class=\"token selector\">a:active</span> <span class=\"token punctuation\">{</span>\n                                        <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n                                    <span class=\"token punctuation\">}</span>\n                                </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>使用 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/DesertsP/Valine-Admin\">DesertsP/Valine-Admin</a> 时使用下面配置</p>\n</blockquote>\n<p>邮件通知模板在云引擎环境变量中设定，可自定义通知邮件标题及内容模板。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">环境变量</th>\n<th style=\"text-align:left\">示例</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>MAIL_SUBJECT</code></td>\n<td style=\"text-align:left\"><code>${PARENT_NICK}，您在${SITE_NAME}上的评论收到了回复</code></td>\n<td style=\"text-align:left\">[可选]@通知邮件主题（标题）模板</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>MAIL_TEMPLATE</code></td>\n<td style=\"text-align:left\">见下文</td>\n<td style=\"text-align:left\">[可选]@通知邮件内容模板</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>MAIL_SUBJECT_ADMIN</code></td>\n<td style=\"text-align:left\"><code>${SITE_NAME}上有新评论了</code></td>\n<td style=\"text-align:left\">[可选]博主邮件通知主题模板</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>MAIL_TEMPLATE_ADMIN</code></td>\n<td style=\"text-align:left\">见下文</td>\n<td style=\"text-align:left\">[可选]博主邮件通知内容模板</td>\n</tr>\n</tbody>\n</table>\n<p>邮件通知包含两种，分别是被@通知和博主通知，这两种模板都可以完全自定义。默认使用经典的蓝色风格模板（样式来源未知）。</p>\n<p>默认被@通知邮件内容模板如下：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border-top</span><span class=\"token punctuation\">:</span>2px solid #12ADDB<span class=\"token punctuation\">;</span><span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span>0 1px 3px #AAAAAA<span class=\"token punctuation\">;</span><span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span>180%<span class=\"token punctuation\">;</span><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span>0 15px 12px<span class=\"token punctuation\">;</span><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>50px auto<span class=\"token punctuation\">;</span><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>12px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span>1px solid #DDD<span class=\"token punctuation\">;</span><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>14px<span class=\"token punctuation\">;</span><span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span>normal<span class=\"token punctuation\">;</span><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span>13px 0 10px 8px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>您在<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #12ADDB<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${SITE_URL}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>            ${SITE_NAME}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>上的评论有了新的回复<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span> ${PARENT_NICK} 同学，您曾发表评论：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span>0 12px 0 12px<span class=\"token punctuation\">;</span><span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span>18px</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #f5f5f5<span class=\"token punctuation\">;</span><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px 15px<span class=\"token punctuation\">;</span><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>18px 0<span class=\"token punctuation\">;</span><span class=\"token property\">word-wrap</span><span class=\"token punctuation\">:</span>break-word<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>            ${PARENT_COMMENT}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">&gt;</span></span>${NICK}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">&gt;</span></span>回复说：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #f5f5f5<span class=\"token punctuation\">;</span><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px 15px<span class=\"token punctuation\">;</span><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>18px 0<span class=\"token punctuation\">;</span><span class=\"token property\">word-wrap</span><span class=\"token punctuation\">:</span>break-word<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span> ${COMMENT}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>您可以点击<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#12addb</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${POST_URL}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>查看回复的完整內容<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>，欢迎再次光临<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#12addb</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${SITE_URL}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>${SITE_NAME}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>效果如下图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1920211019005650.png\" alt=\"mail-blue-template\"></p>\n<p><strong>mail-blue-template</strong></p>\n<p>@通知模板中的可用变量如下（注，这是邮件模板变量，是指嵌入到HTML邮件模板中的变量，请勿与云引擎环境变量混淆）：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">模板变量</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">SITE_NAME</td>\n<td style=\"text-align:left\">博客名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SITE_URL</td>\n<td style=\"text-align:left\">博客首页地址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">POST_URL</td>\n<td style=\"text-align:left\">文章地址（完整路径）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">PARENT_NICK</td>\n<td style=\"text-align:left\">收件人昵称（被@者，父级评论人）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">PARENT_COMMENT</td>\n<td style=\"text-align:left\">父级评论内容</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">NICK</td>\n<td style=\"text-align:left\">新评论者昵称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">COMMENT</td>\n<td style=\"text-align:left\">新评论内容</td>\n</tr>\n</tbody>\n</table>\n<p>默认博主通知邮件内容模板如下：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border-top</span><span class=\"token punctuation\">:</span>2px solid #12ADDB<span class=\"token punctuation\">;</span><span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span>0 1px 3px #AAAAAA<span class=\"token punctuation\">;</span><span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span>180%<span class=\"token punctuation\">;</span><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span>0 15px 12px<span class=\"token punctuation\">;</span><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>50px auto<span class=\"token punctuation\">;</span><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>12px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span>1px solid #DDD<span class=\"token punctuation\">;</span><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>14px<span class=\"token punctuation\">;</span><span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span>normal<span class=\"token punctuation\">;</span><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span>13px 0 10px 8px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>您在<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #12ADDB<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${SITE_URL}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>${SITE_NAME}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>上的文章有了新的评论<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">&gt;</span></span>${NICK}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">&gt;</span></span>回复说：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #f5f5f5<span class=\"token punctuation\">;</span><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px 15px<span class=\"token punctuation\">;</span><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>18px 0<span class=\"token punctuation\">;</span><span class=\"token property\">word-wrap</span><span class=\"token punctuation\">:</span>break-word<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span> ${COMMENT}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>您可以点击<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#12addb</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${POST_URL}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>查看回复的完整內容<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>博主通知邮件模板中的可用变量与@通知中的基本一致，<strong><code>PARENT_NICK</code> 和 <code>PARENT_COMMENT</code> 变量不再可用。</strong></p>\n<p>这里还提供一个彩虹风格的@通知邮件模板代码：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px 10px 10px 10px<span class=\"token punctuation\">;</span><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>13px<span class=\"token punctuation\">;</span>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #555555<span class=\"token punctuation\">;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 666px<span class=\"token punctuation\">;</span><span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span><span class=\"token string\">'Century Gothic'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Trebuchet MS'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Hiragino Sans GB'</span><span class=\"token punctuation\">,</span>微软雅黑<span class=\"token punctuation\">,</span><span class=\"token string\">'Microsoft Yahei'</span><span class=\"token punctuation\">,</span>Tahoma<span class=\"token punctuation\">,</span>Helvetica<span class=\"token punctuation\">,</span>Arial<span class=\"token punctuation\">,</span><span class=\"token string\">'SimSun'</span><span class=\"token punctuation\">,</span>sans-serif<span class=\"token punctuation\">;</span><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>50px auto<span class=\"token punctuation\">;</span><span class=\"token property\">border</span><span class=\"token punctuation\">:</span>1px solid #eee<span class=\"token punctuation\">;</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span>100%<span class=\"token punctuation\">;</span><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #ffffff <span class=\"token function\">repeating-linear-gradient</span><span class=\"token punctuation\">(</span>-45deg<span class=\"token punctuation\">,</span>#fff<span class=\"token punctuation\">,</span>#fff 1.125rem<span class=\"token punctuation\">,</span>transparent 1.125rem<span class=\"token punctuation\">,</span>transparent 2.25rem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 1px 5px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span>100%<span class=\"token punctuation\">;</span><span class=\"token property\">background</span><span class=\"token punctuation\">:</span>#49BDAD<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#ffffff<span class=\"token punctuation\">;</span><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px 10px 0 0<span class=\"token punctuation\">;</span><span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">-moz-linear-gradient</span><span class=\"token punctuation\">(</span>0deg<span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>67<span class=\"token punctuation\">,</span> 198<span class=\"token punctuation\">,</span> 184<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 209<span class=\"token punctuation\">,</span> 244<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">-webkit-linear-gradient</span><span class=\"token punctuation\">(</span>0deg<span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>67<span class=\"token punctuation\">,</span> 198<span class=\"token punctuation\">,</span> 184<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 209<span class=\"token punctuation\">,</span> 244<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 66px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>15px<span class=\"token punctuation\">;</span><span class=\"token property\">word-break</span><span class=\"token punctuation\">:</span>break-all<span class=\"token punctuation\">;</span><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 23px 32px<span class=\"token punctuation\">;</span><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>0<span class=\"token punctuation\">;</span><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsla</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span>0%<span class=\"token punctuation\">,</span>100%<span class=\"token punctuation\">,</span>.4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px 10px 0 0<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>您在<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ffffff<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${SITE_URL}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> ${SITE_NAME}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>上的留言有新回复啦！<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>40px auto<span class=\"token punctuation\">;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span>90%</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>${PARENT_NICK} 同学，您曾在文章上发表评论：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #fafafa <span class=\"token function\">repeating-linear-gradient</span><span class=\"token punctuation\">(</span>-45deg<span class=\"token punctuation\">,</span>#fff<span class=\"token punctuation\">,</span>#fff 1.125rem<span class=\"token punctuation\">,</span>transparent 1.125rem<span class=\"token punctuation\">,</span>transparent 2.25rem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 2px 5px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>20px 0px<span class=\"token punctuation\">;</span><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span>15px<span class=\"token punctuation\">;</span><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span>5px<span class=\"token punctuation\">;</span><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>14px<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#555555<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>${PARENT_COMMENT}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>${NICK} 给您的回复如下：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #fafafa <span class=\"token function\">repeating-linear-gradient</span><span class=\"token punctuation\">(</span>-45deg<span class=\"token punctuation\">,</span>#fff<span class=\"token punctuation\">,</span>#fff 1.125rem<span class=\"token punctuation\">,</span>transparent 1.125rem<span class=\"token punctuation\">,</span>transparent 2.25rem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 2px 5px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>20px 0px<span class=\"token punctuation\">;</span><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span>15px<span class=\"token punctuation\">;</span><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span>5px<span class=\"token punctuation\">;</span><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>14px<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#555555<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>${COMMENT}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>您可以点击<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#12addb</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${POST_URL}#comments<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>查看回复的完整內容<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>，欢迎再次光临<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#12addb</span><span class=\"token punctuation\">\"</span></span></span>                <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${SITE_URL}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> ${SITE_NAME}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\"><span class=\"token selector\">a:link</span><span class=\"token punctuation\">{</span><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">}</span><span class=\"token selector\">a:visited</span><span class=\"token punctuation\">{</span><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">}</span><span class=\"token selector\">a:hover</span><span class=\"token punctuation\">{</span><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">}</span><span class=\"token selector\">a:active</span><span class=\"token punctuation\">{</span><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">}</span></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>效果如图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1920211019005726.png\" alt=\"彩虹模板\"></p>\n<p><strong>彩虹模板</strong></p>\n<h3 id=\"垃圾评论检测\">垃圾评论检测</h3>\n<blockquote>\n<p>Akismet (Automattic Kismet)是应用广泛的一个垃圾留言过滤系统，其作者是大名鼎鼎的WordPress 创始人 Matt Mullenweg，Akismet也是WordPress默认安装的插件，其使用非常广泛，设计目标便是帮助博客网站来过滤留言Spam。有了Akismet之后，基本上不用担心垃圾留言的烦恼了。 启用Akismet后，当博客再收到留言会自动将其提交到Akismet并与Akismet上的黑名单进行比对，如果名列该黑名单中，则该条留言会被标记为垃圾评论且不会发布。</p>\n</blockquote>\n<p>如果还没有Akismet Key，你可以去 <a target=\"_blank\" rel=\"noopener\" href=\"https://akismet.com/development/\"><code>AKISMET FOR DEVELOPERS</code> 免费申请一个</a>； <strong>当<code>AKISMET_KEY</code>设为<code>MANUAL_REVIEW</code>时，开启人工审核模式；</strong> 如果你不需要反垃圾评论，<code>Akismet Key</code> 环境变量可以忽略。</p>\n<p><strong>为了实现较为精准的垃圾评论识别，采集的判据除了评论内容、邮件地址和网站地址外，还包括评论者的IP地址、浏览器信息等，但仅在云引擎后台使用这些数据，确保隐私和安全。</strong></p>\n<p><strong>如果使用了本站最新的<code>Valine</code>和<code>Valine Admin</code>，并设置了<code>Akismet Key</code>，可以有效地拦截垃圾评论。被标为垃圾的评论可以在管理页面取消标注。</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">环境变量</th>\n<th style=\"text-align:left\">示例</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>AKISMET_KEY</code></td>\n<td style=\"text-align:left\">xxxxxxxxxxxx</td>\n<td style=\"text-align:left\">[可选]<code>Akismet Key</code> 用于垃圾评论检测</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"手动配置邮件服务器\">手动配置邮件服务器</h3>\n<ul>\n<li>自定义邮件服务器地址和端口信息，删除SMTP_SERVICE环境变量，新增以下变量：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">变量</th>\n<th style=\"text-align:left\">示例</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>SMTP_HOST</code></td>\n<td style=\"text-align:left\"><code>smtp.qq.com</code></td>\n<td style=\"text-align:left\">[可选]<code>SMTP_SERVICE</code>留空时，自定义<code>SMTP</code>服务器地址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>SMTP_PORT</code></td>\n<td style=\"text-align:left\">465</td>\n<td style=\"text-align:left\">[可选]<code>SMTP_SERVICE</code>留空时，自定义<code>SMTP</code>端口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>SMTP_SECURE</code></td>\n<td style=\"text-align:left\"><code>true</code></td>\n<td style=\"text-align:left\">[可选]使用TLS</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Troubleshooting\">Troubleshooting</h3>\n<ul>\n<li>\n<p>部署失败，请在评论中附图，或去Github发起Issue</p>\n</li>\n<li>\n<p>邮件发送失败，确保环境变量都没问题后，重启云引擎</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1920211019005749.png\" alt=\"重启云引擎\"></p>\n<p><strong>重启云引擎</strong></p>\n</li>\n<li>\n<p>博主通知模板中不要出现<code>PARENT*</code>相关参数（请勿混用模板）</p>\n</li>\n<li>\n<p>点击邮件中的链接跳转至相应评论，这一细节实现需要在Web前端添加一点额外的代码：</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> checkExist <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n           <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html, body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">scrollTop</span><span class=\"token operator\">:</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">offset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>top<span class=\"token operator\">-</span><span class=\"token number\">90</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>checkExist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>@邮件通知效果：</p>\n<pre class=\"line-numbers language-ejs\" data-language=\"ejs\"><code class=\"language-ejs\">您在[ ${SITE_NAME}](https://blog.17lai.site/posts/40300608/${SITE_URL})上的留言有新回复啦！\n\n${PARENT_NICK} 同学，您曾在文章上发表评论：\n\n${PARENT_COMMENT}\n\n${NICK} 给您的回复如下：\n\n${COMMENT}\n\n您可以点击查看回复的完整內容${POST_URL}#comments，欢迎再次光临 ${SITE_NAME}${SITE_URL}。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>@邮件通知模板代码：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px 10px 10px 10px<span class=\"token punctuation\">;</span><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>13px<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #555555<span class=\"token punctuation\">;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 666px<span class=\"token punctuation\">;</span><span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span><span class=\"token string\">'Century Gothic'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Trebuchet MS'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Hiragino Sans GB'</span><span class=\"token punctuation\">,</span>微软雅黑<span class=\"token punctuation\">,</span><span class=\"token string\">'Microsoft Yahei'</span><span class=\"token punctuation\">,</span>Tahoma<span class=\"token punctuation\">,</span>Helvetica<span class=\"token punctuation\">,</span>Arial<span class=\"token punctuation\">,</span><span class=\"token string\">'SimSun'</span><span class=\"token punctuation\">,</span>sans-serif<span class=\"token punctuation\">;</span><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>50px auto<span class=\"token punctuation\">;</span><span class=\"token property\">border</span><span class=\"token punctuation\">:</span>1px solid #eee<span class=\"token punctuation\">;</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span>100%<span class=\"token punctuation\">;</span><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #ffffff <span class=\"token function\">repeating-linear-gradient</span><span class=\"token punctuation\">(</span>-45deg<span class=\"token punctuation\">,</span>#fff<span class=\"token punctuation\">,</span>#fff 1.125rem<span class=\"token punctuation\">,</span>transparent 1.125rem<span class=\"token punctuation\">,</span>transparent 2.25rem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 1px 5px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span>100%<span class=\"token punctuation\">;</span><span class=\"token property\">background</span><span class=\"token punctuation\">:</span>#49BDAD<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#ffffff<span class=\"token punctuation\">;</span><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px 10px 0 0<span class=\"token punctuation\">;</span><span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">-moz-linear-gradient</span><span class=\"token punctuation\">(</span>0deg<span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>67<span class=\"token punctuation\">,</span> 198<span class=\"token punctuation\">,</span> 184<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 209<span class=\"token punctuation\">,</span> 244<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">-webkit-linear-gradient</span><span class=\"token punctuation\">(</span>0deg<span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>67<span class=\"token punctuation\">,</span> 198<span class=\"token punctuation\">,</span> 184<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 209<span class=\"token punctuation\">,</span> 244<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 66px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>15px<span class=\"token punctuation\">;</span><span class=\"token property\">word-break</span><span class=\"token punctuation\">:</span>break-all<span class=\"token punctuation\">;</span><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 23px 32px<span class=\"token punctuation\">;</span><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>0<span class=\"token punctuation\">;</span><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsla</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span>0%<span class=\"token punctuation\">,</span>100%<span class=\"token punctuation\">,</span>.4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px 10px 0 0<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>您在<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ffffff<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${SITE_URL}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> ${SITE_NAME}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>上的留言有新回复啦！<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>40px auto<span class=\"token punctuation\">;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span>90%</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>${PARENT_NICK} 同学，您曾在文章上发表评论：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #fafafa <span class=\"token function\">repeating-linear-gradient</span><span class=\"token punctuation\">(</span>-45deg<span class=\"token punctuation\">,</span>#fff<span class=\"token punctuation\">,</span>#fff 1.125rem<span class=\"token punctuation\">,</span>transparent 1.125rem<span class=\"token punctuation\">,</span>transparent 2.25rem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 2px 5px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>20px 0px<span class=\"token punctuation\">;</span><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span>15px<span class=\"token punctuation\">;</span><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span>5px<span class=\"token punctuation\">;</span><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>14px<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#555555<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>${PARENT_COMMENT}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>${NICK} 给您的回复如下：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #fafafa <span class=\"token function\">repeating-linear-gradient</span><span class=\"token punctuation\">(</span>-45deg<span class=\"token punctuation\">,</span>#fff<span class=\"token punctuation\">,</span>#fff 1.125rem<span class=\"token punctuation\">,</span>transparent 1.125rem<span class=\"token punctuation\">,</span>transparent 2.25rem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 2px 5px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>20px 0px<span class=\"token punctuation\">;</span><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span>15px<span class=\"token punctuation\">;</span><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span>5px<span class=\"token punctuation\">;</span><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>14px<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#555555<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>${COMMENT}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>您可以点击<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#12addb</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${POST_URL}#comments<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>查看回复的完整內容<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>，欢迎再次光临<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#12addb</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${SITE_URL}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> ${SITE_NAME}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\"><span class=\"token selector\">a:link</span><span class=\"token punctuation\">{</span><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">}</span><span class=\"token selector\">a:visited</span><span class=\"token punctuation\">{</span><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">}</span><span class=\"token selector\">a:hover</span><span class=\"token punctuation\">{</span><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">}</span><span class=\"token selector\">a:active</span><span class=\"token punctuation\">{</span><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">}</span></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span>100%<span class=\"token punctuation\">;</span><span class=\"token property\">background</span><span class=\"token punctuation\">:</span>#49BDAD<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#ffffff<span class=\"token punctuation\">;</span><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 0 0 10px 10px<span class=\"token punctuation\">;</span><span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">-moz-linear-gradient</span><span class=\"token punctuation\">(</span>0deg<span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>67<span class=\"token punctuation\">,</span> 198<span class=\"token punctuation\">,</span> 184<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 209<span class=\"token punctuation\">,</span> 244<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">-webkit-linear-gradient</span><span class=\"token punctuation\">(</span>0deg<span class=\"token punctuation\">,</span><span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>67<span class=\"token punctuation\">,</span> 198<span class=\"token punctuation\">,</span> 184<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 209<span class=\"token punctuation\">,</span> 244<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 66px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>博主通知效果：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">您在[${SITE_NAME}${SITE_URL}上的文章有了新的评论！\n**${NICK}** 同学，发表评论说：\n${COMMENT}\n您可以点击查看回复的完整內容${POST_URL}#comments)。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px 10px 10px 10px<span class=\"token punctuation\">;</span><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>13px<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #555555<span class=\"token punctuation\">;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 666px<span class=\"token punctuation\">;</span><span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span><span class=\"token string\">'Century Gothic'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Trebuchet MS'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Hiragino Sans GB'</span><span class=\"token punctuation\">,</span>微软雅黑<span class=\"token punctuation\">,</span><span class=\"token string\">'Microsoft Yahei'</span><span class=\"token punctuation\">,</span>Tahoma<span class=\"token punctuation\">,</span>Helvetica<span class=\"token punctuation\">,</span>Arial<span class=\"token punctuation\">,</span><span class=\"token string\">'SimSun'</span><span class=\"token punctuation\">,</span>sans-serif<span class=\"token punctuation\">;</span><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>50px auto<span class=\"token punctuation\">;</span><span class=\"token property\">border</span><span class=\"token punctuation\">:</span>1px solid #eee<span class=\"token punctuation\">;</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span>100%<span class=\"token punctuation\">;</span><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #ffffff <span class=\"token function\">repeating-linear-gradient</span><span class=\"token punctuation\">(</span>-45deg<span class=\"token punctuation\">,</span>#fff<span class=\"token punctuation\">,</span>#fff 1.125rem<span class=\"token punctuation\">,</span>transparent 1.125rem<span class=\"token punctuation\">,</span>transparent 2.25rem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 1px 5px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span>100%<span class=\"token punctuation\">;</span><span class=\"token property\">background</span><span class=\"token punctuation\">:</span>#49BDAD<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#ffffff<span class=\"token punctuation\">;</span><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px 10px 0 0<span class=\"token punctuation\">;</span><span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">-moz-linear-gradient</span><span class=\"token punctuation\">(</span>0deg<span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>67<span class=\"token punctuation\">,</span> 198<span class=\"token punctuation\">,</span> 184<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 209<span class=\"token punctuation\">,</span> 244<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">-webkit-linear-gradient</span><span class=\"token punctuation\">(</span>0deg<span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>67<span class=\"token punctuation\">,</span> 198<span class=\"token punctuation\">,</span> 184<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 209<span class=\"token punctuation\">,</span> 244<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 66px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>15px<span class=\"token punctuation\">;</span><span class=\"token property\">word-break</span><span class=\"token punctuation\">:</span>break-all<span class=\"token punctuation\">;</span><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 23px 32px<span class=\"token punctuation\">;</span><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>0<span class=\"token punctuation\">;</span><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsla</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span>0%<span class=\"token punctuation\">,</span>100%<span class=\"token punctuation\">,</span>.4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px 10px 0 0<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>您在<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ffffff<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${SITE_URL}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> ${SITE_NAME}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>上的文章有了新的评论！<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>40px auto<span class=\"token punctuation\">;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span>90%</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">&gt;</span></span>${NICK}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">&gt;</span></span> 同学，发表评论说：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #fafafa <span class=\"token function\">repeating-linear-gradient</span><span class=\"token punctuation\">(</span>-45deg<span class=\"token punctuation\">,</span>#fff<span class=\"token punctuation\">,</span>#fff 1.125rem<span class=\"token punctuation\">,</span>transparent 1.125rem<span class=\"token punctuation\">,</span>transparent 2.25rem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 2px 5px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>20px 0px<span class=\"token punctuation\">;</span><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span>15px<span class=\"token punctuation\">;</span><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span>5px<span class=\"token punctuation\">;</span><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>14px<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#555555<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>${COMMENT}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>您可以点击<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#12addb</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${POST_URL}#comments<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>查看回复的完整內容<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\"><span class=\"token selector\">a:link</span><span class=\"token punctuation\">{</span><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">}</span><span class=\"token selector\">a:visited</span><span class=\"token punctuation\">{</span><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">}</span><span class=\"token selector\">a:hover</span><span class=\"token punctuation\">{</span><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">}</span><span class=\"token selector\">a:active</span><span class=\"token punctuation\">{</span><span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">}</span></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span>100%<span class=\"token punctuation\">;</span><span class=\"token property\">background</span><span class=\"token punctuation\">:</span>#49BDAD<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#ffffff<span class=\"token punctuation\">;</span><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 0 0 10px 10px <span class=\"token punctuation\">;</span><span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">-moz-linear-gradient</span><span class=\"token punctuation\">(</span>0deg<span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>67<span class=\"token punctuation\">,</span> 198<span class=\"token punctuation\">,</span> 184<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 209<span class=\"token punctuation\">,</span> 244<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">-webkit-linear-gradient</span><span class=\"token punctuation\">(</span>0deg<span class=\"token punctuation\">,</span><span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>67<span class=\"token punctuation\">,</span> 198<span class=\"token punctuation\">,</span> 184<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 209<span class=\"token punctuation\">,</span> 244<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 66px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"解决休眠\">解决休眠</h3>\n<p>免费版的 LeanCloud 容器，是有强制性休眠策略的，不能 24 小时运行：</p>\n<ul>\n<li>每天必须休眠 6 个小时</li>\n<li>30 分钟内没有外部请求，则休眠。</li>\n<li>休眠后如果有新的外部请求实例则马上启动（但激活时此次发送邮件会失败）。</li>\n</ul>\n<p>也就是如果服务器休眠了的话用户第一次评论是提醒不了的。</p>\n<p>参考了Valine-Admin官网找到了解决办法。</p>\n<p>首先在环境变量增加服务器地址，就是你的后台服务器地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1920211019005144.png\" alt=\"img\"></p>\n<p>下面是你的服务器地址，可以自定义</p>\n<p>同样登录后台</p>\n<p>找到定时任务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1920211019005147.png\" alt=\"img\"></p>\n<p>然后点击创建任务，上面是我创建好的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1920211019005153.png\" alt=\"img\"></p>\n<p>选择self_wake函数，然后运行时间使用cron表达式</p>\n<blockquote>\n<p>0 0/30 7-23 ? 表示每天6点到11点 每30分钟叫醒服务器一次</p>\n</blockquote>\n<p>这样就完美的解决了服务器休眠的问题</p>\n<p>那如果用户不在时间范围内发留言了怎么办？我们也可以创建一个捡漏的定时任务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1920211019005159.png\" alt=\"img\"></p>\n<p>创建捡漏定时任务</p>\n<p>然后运行函数选择resend_mails,同样使用cron表达式</p>\n<blockquote>\n<p>0 0 8 ?</p>\n</blockquote>\n<p>表示每八个小时进行捡漏一次，这样如果有留言遗漏的话就能即使的提醒。</p>\n<h3 id=\"WakeLeanCloud\"><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/Ysnsn/WakeLeanCloud\">WakeLeanCloud</a></h3>\n<p>这个项目主要是用来解决LeanCloud通过定时任务唤醒机器时被流控的问题。</p>\n<p><strong>如何使用</strong></p>\n<ol>\n<li>Fork此项目</li>\n<li>添加一个名为<code>GITHUB_TOKEN</code>的Token，并为赋予<code>repo</code>，<code>admin:repo_hook</code> ， <code>workflow</code>的权限</li>\n<li>添加名为<code>SITE</code>的Secrets，内容为自己管理后台地址。多个请用英文逗号分隔</li>\n</ol>\n<p>详细教程请参考<a target=\"_blank\" rel=\"noopener\" href=\"https://www.antmoe.com/posts/ff6aef7b/index.html#%E5%BC%80%E5%A7%8B%E5%B0%9D%E8%AF%95\">优雅解决LeanCloud流控问题</a></p>\n<h2 id=\"让hexo支持pwa\">让hexo支持pwa</h2>\n<blockquote>\n<p>pwa中文叫渐进式网页应用，pwa网站可以直接添加网址站到桌面，就相当于在系统中直接安装了一个app，打开的效果也和app差不多，加载速度也很快，部分功能可以直接离线使用。Google的Workbox标准，目前来看需要Chrome支持</p>\n<ul>\n<li>hexo-pwa 很久没更新，看到资料都是支持4.x版本hexo。</li>\n<li>hexo-offline 亲自验证，支持最新5.x的hexo。</li>\n</ul>\n</blockquote>\n<h3 id=\"安装hexo-offline\">安装hexo-offline</h3>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install hexo-offline --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>关于这个插件的详细使用方法可以看下面这里</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">https://github.com/JLHwung/hexo-offline<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"配置hexo-offline\">配置hexo-offline</h3>\n<p>之后我们在站点根目录_config.yml如下配置</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># offline config passed to sw-precache.</span>\n<span class=\"token key atrule\">service_worker</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">maximumFileSizeToCacheInBytes</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5242880</span>\n  <span class=\"token key atrule\">staticFileGlobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> /<span class=\"token important\">**/*.</span><span class=\"token punctuation\">{</span>js<span class=\"token punctuation\">,</span>html<span class=\"token punctuation\">,</span>css<span class=\"token punctuation\">,</span>png<span class=\"token punctuation\">,</span>jpg<span class=\"token punctuation\">,</span>gif<span class=\"token punctuation\">,</span>svg<span class=\"token punctuation\">,</span>eot<span class=\"token punctuation\">,</span>ttf<span class=\"token punctuation\">,</span>woff<span class=\"token punctuation\">,</span>woff2<span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">-</span> /lib/<span class=\"token important\">**/*.js</span>\n  <span class=\"token punctuation\">-</span> /lib/<span class=\"token important\">**/*.css</span>\n  <span class=\"token punctuation\">-</span> /images/*\n  <span class=\"token punctuation\">-</span> /js/src/<span class=\"token important\">**/*.js</span>\n  <span class=\"token key atrule\">stripPrefix</span><span class=\"token punctuation\">:</span> public\n  <span class=\"token key atrule\">verbose</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">runtimeCaching</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">urlPattern</span><span class=\"token punctuation\">:</span> /*\n      <span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> cacheFirst\n      <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">origin</span><span class=\"token punctuation\">:</span> cdn.bootcss.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>注意哦不是主题的_config.yml文件</p>\n<p>之后生成manifest.json文件，可以在<a target=\"_blank\" rel=\"noopener\" href=\"https://app-manifest.firebaseapp.com/\"><strong>这个网站</strong></a>在线生成。</p>\n<p>填入相关的参数，如下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1820210918204544.png\" alt=\"\"></p>\n<blockquote>\n<p>Tips: 一定需要一个512x512的icon！</p>\n</blockquote>\n<p>之后点击generate.zip 把配置都下载过来</p>\n<p>把manifest.json和images文件夹直接复制到hexo下source文件夹中，最后我们编辑主题，在head里添加</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>manifest<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/manifest.json<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果使用的是hexo next主题，在</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">themes/next/layout/_partials/head/head.swig<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果使用的是hexo matery主题，在</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">themes<span class=\"token operator\">/</span>matery<span class=\"token operator\">/</span>layout<span class=\"token operator\">/</span>_partial<span class=\"token operator\">/</span>head<span class=\"token punctuation\">.</span>ejs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1820210918220357.png\" alt=\"\"></p>\n<p>这个文件中添加上面这句话即可，最后直接重新生成站点，部署即可</p>\n<h3 id=\"验证和使用\">验证和使用</h3>\n<p>需要https访问，看到这个齿轮</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1820210918222354.png\" alt=\"F12 sources\"></p>\n<p>然后在浏览器地址栏可以看到应用标志</p>\n<blockquote>\n<p>Tips: offline 需要https才能正常使用</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1820210918231523.png\" alt=\"地址栏\"></p>\n<p>点击打开，会看到如下结果，试一下？</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1820210918231644.png\" alt=\"离线博客\"></p>\n<h2 id=\"valine-的使用与升级到1-4\">valine 的使用与升级到1.4</h2>\n<h3 id=\"一、valine启用\">一、valine启用</h3>\n<h4 id=\"1、主要流程\">1、主要流程</h4>\n<p>valine和miniValine使用基本类似。</p>\n<p>（1）去 <a target=\"_blank\" rel=\"noopener\" href=\"https://leancloud.cn/dashboard/login.html#/signup\">Leancloud</a>注册。</p>\n<p>注意事项：</p>\n<p>节点选择：华东节点、华北节点、国际版。</p>\n<p>如果你的域名没有备案，建议选择国际版。 因为华东或华北节点在安装评论系统之后访问要求域名备案。</p>\n<p>（2）在“设置“，”应用 Keys”，找到你的<code>appid</code>和<code>appkey</code>，配置到主题中<code>valine</code>配置的地方，启用<code>valine</code>。</p>\n<p>（3）在“设置“，”安全中心”，”Web 安全域名”，添加自己的域名。</p>\n<p>（4）在“设置“，”安全中心”，”服务开关”，数据存储要打开。</p>\n<p>（5）在“存储“，”用量统计”，”HTTP状态码”，启用，方便后续报错查错误码。</p>\n<p>（6）重新编译部署<code>hexo clean &amp; hexo g &amp; hexo d</code></p>\n<h4 id=\"2、遇到问题\">2、遇到问题</h4>\n<p>搞这个东西采坑不少，有些坑都是自己不小心造成的。我在网上查了，交流群里也咨询请教了，没有人能解决这个问题，毕竟这个坑是自己造成的。</p>\n<p>常见Code 403问题：</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">Code 403: 访问被api域名白名单拒绝，请检查你的安全域名设置.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>网上多数的说法是在web安全域名中添加自己的域名。可是如果添加之后还是这个问题呢？</p>\n<p>其实一般不会有这个问题，我有这个问题是我改了权限造成了。</p>\n<p>官方给的解释：</p>\n<blockquote>\n<p>应用在控制台中的相关服务选项未打开，如 Class 关闭了权限，或是 User 缺失了 session 信息等情况下，云端会统一地返回 403 错误码及不同的错误信息，代表当前请求因权限不够而被拒。例如：</p>\n<p>信息 - Forbidden to read/write by class permissions<br>\n含义 - 操作被禁止，因为 Class 表没有打开「读」或者「写」的权限。进入 控制台 &gt; 存储，点击相应的 Class，从右侧选择 其他 下拉菜单，进入 权限管理 来调整。</p>\n<p>信息 - The user cannot be altered by a client without the session.<br>\n含义 - 用户没有登录，无法修改用户信息。</p>\n</blockquote>\n<p>解决：</p>\n<p>（1）首次使用，添加一条评论，一般添加之后就会好了。</p>\n<p>（2）后续使用，403，请检查<code>comment</code>表的add_fields/create/find权限开放。</p>\n<p>（3）如果还是不行将<code>_use</code>表的add_fields/create/find权限开放。</p>\n<p>（4）如果还是不行，到“存储“，”用量统计”，”HTTP状态码”处，检查你的错误码，然后去<a target=\"_blank\" rel=\"noopener\" href=\"https://leancloud.cn/docs/error_code.html#hash1392104\">LeanCloud的错误</a>找应用的错误码，排查原因吧。</p>\n<h3 id=\"二、valine升级\">二、valine升级</h3>\n<h4 id=\"1、引入1-4版的js文件\">1、引入1.4版的js文件</h4>\n<p>（1）修改主题配置文件</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">valine</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//unpkg.com/valine/dist/Valine.min.js <span class=\"token comment\">#/libs/valine/Valine.min.js </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>（2）将文件放你自己的仓库</p>\n<p>下载我的 <code>Valine.min.js</code> 文件，直接替换你主题目录 <code>/source/libs/valine/</code> 下的 <code>Valine.min.js</code> 文件。</p>\n<p>注意，如果你担心替换有问题，可以先备份一下你自己的 <code>Valine.min.js</code> 文件。</p>\n<h4 id=\"2、增加valine的配置：\">2、增加valine的配置：</h4>\n<p>1.4的版本有些属性调整了，主题下的<code>_config.yml</code>valine属性如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">valine</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">appId</span><span class=\"token punctuation\">:</span> iTxfqh5e9IaRfiiVOTbIWoKa<span class=\"token punctuation\">-</span>XXXXXX\n  <span class=\"token key atrule\">appKey</span><span class=\"token punctuation\">:</span> C5s5xGFErD1EtXXXXXXXX\n  <span class=\"token key atrule\">verify</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>  <span class=\"token comment\"># 是否启用防垃圾验证</span>\n  <span class=\"token key atrule\">notify</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>  <span class=\"token comment\"># 是否开启邮件提醒(https://valine.js.org/notify.html)</span>\n  <span class=\"token key atrule\">visitor</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">avatar</span><span class=\"token punctuation\">:</span> monsterid  <span class=\"token comment\"># 头像样式(https://valine.js.org/avatar.html) </span>\n  <span class=\"token key atrule\">pageSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n  <span class=\"token key atrule\">placeholder</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'ヾﾉ≧∀≦)o来啊，快活啊!'</span> <span class=\"token comment\"># Comment Box placeholder</span>\n  <span class=\"token key atrule\">background</span><span class=\"token punctuation\">:</span> /medias/comment_bg.png <span class=\"token comment\">#背景图</span>\n  <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">enableQQ</span><span class=\"token punctuation\">:</span> <span class=\"token number\">970175021</span>\n  <span class=\"token key atrule\">recordIP</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">requiredFields</span><span class=\"token punctuation\">:</span> \n    <span class=\"token punctuation\">-</span> nick\n    <span class=\"token punctuation\">-</span> mail\n  <span class=\"token key atrule\">guest_info</span><span class=\"token punctuation\">:</span> \n    <span class=\"token punctuation\">-</span> nick\n    <span class=\"token punctuation\">-</span> mail\n    <span class=\"token punctuation\">-</span> link\n  <span class=\"token key atrule\">master</span><span class=\"token punctuation\">:</span> \n    <span class=\"token punctuation\">-</span> 123abc508165c8eba9a77f872xxxx046  <span class=\"token comment\"># md5加密后的博主邮箱</span>\n  <span class=\"token key atrule\">metaPlaceholder</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 输入框的背景文字</span>\n    <span class=\"token key atrule\">nick</span><span class=\"token punctuation\">:</span> 昵称/QQ号(必填)\n    <span class=\"token key atrule\">mail</span><span class=\"token punctuation\">:</span> 邮箱(必填)\n    <span class=\"token key atrule\">link</span><span class=\"token punctuation\">:</span> 网址(https<span class=\"token punctuation\">:</span>//)\n  <span class=\"token key atrule\">lang</span><span class=\"token punctuation\">:</span> zh<span class=\"token punctuation\">-</span>CN\n  <span class=\"token key atrule\">tagMeta</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># The String Array of Words to show Flag.[Just Only xCss Style mode]</span>\n    <span class=\"token punctuation\">-</span> 博主\n    <span class=\"token punctuation\">-</span> 小伙伴\n    <span class=\"token punctuation\">-</span> 访客\n  <span class=\"token key atrule\">friends</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># The MD5 String Array of friends Email to show friends Flag.[Just Only xCss Style mode]</span>\n    <span class=\"token punctuation\">-</span> c08508165c8eba9a77f8c2853xxxx09e\n    <span class=\"token punctuation\">-</span> 901345d4c91ddfd8db0f175bbcfff0c8\n    <span class=\"token punctuation\">-</span> 1512958e18378c98b498d5effe3e76ff<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>复制代码注意缩进对齐，不对齐可能会报错，请自行检查对齐。</p>\n<h4 id=\"3、修改valine-ejs：\">3、修改<code>valine.ejs</code>：</h4>\n<p>Matery 主题使用的<code>ejs</code>模板预编译，如果你使用了<code>pug</code>或者<code>swig</code>等其他的模板语言，请修改成对应语言语法即可。</p>\n<p>原始的<code>valine.ejs</code></p>\n<pre class=\"line-numbers language-ejs\" data-language=\"ejs\"><code class=\"language-ejs\">new Valine({\n        el: '#vcomments',\n        appId: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>appId </span><span class=\"token delimiter punctuation\">%&gt;</span></span>',\n        appKey: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>appKey </span><span class=\"token delimiter punctuation\">%&gt;</span></span>',\n        notify: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>notify </span><span class=\"token delimiter punctuation\">%&gt;</span></span>' === 'true',\n        verify: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>verify </span><span class=\"token delimiter punctuation\">%&gt;</span></span>' === 'true',\n        visitor: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>visitor </span><span class=\"token delimiter punctuation\">%&gt;</span></span>' === 'true',\n        avatar: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>avatar </span><span class=\"token delimiter punctuation\">%&gt;</span></span>',\n        pageSize: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>pageSize </span><span class=\"token delimiter punctuation\">%&gt;</span></span>',\n        lang: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%</span><span class=\"token language-javascript\"> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>language <span class=\"token operator\">==</span> <span class=\"token string\">\"zh-CN\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  </span><span class=\"token delimiter punctuation\">%&gt;</span></span>zh-cn<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%</span><span class=\"token language-javascript\"> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span> </span><span class=\"token delimiter punctuation\">%&gt;</span></span>en<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%</span><span class=\"token language-javascript\"> <span class=\"token punctuation\">}</span> </span><span class=\"token delimiter punctuation\">%&gt;</span></span>',\n        placeholder: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%=</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>placeholder </span><span class=\"token delimiter punctuation\">%&gt;</span></span>'\n    });<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>升级后的<code>valine.ejs</code></p>\n<pre class=\"line-numbers language-ejs\" data-language=\"ejs\"><code class=\"language-ejs\">let metaPlaceholder = <span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\">  <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>metaPlaceholder<span class=\"token punctuation\">)</span> </span><span class=\"token delimiter punctuation\">%&gt;</span></span> ;\n//这里要换行\nnew Valine({\n        el: '#vcomments',\n        appId: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>appId </span><span class=\"token delimiter punctuation\">%&gt;</span></span>',\n        appKey: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>appKey </span><span class=\"token delimiter punctuation\">%&gt;</span></span>',\n        notify: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>notify </span><span class=\"token delimiter punctuation\">%&gt;</span></span>' === 'true',\n        verify: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>verify </span><span class=\"token delimiter punctuation\">%&gt;</span></span>' === 'true',\n        visitor: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>visitor </span><span class=\"token delimiter punctuation\">%&gt;</span></span>' === 'true',\n        avatar: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>avatar </span><span class=\"token delimiter punctuation\">%&gt;</span></span>',\n        pageSize: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>pageSize </span><span class=\"token delimiter punctuation\">%&gt;</span></span>',\n        lang: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>lang </span><span class=\"token delimiter punctuation\">%&gt;</span></span>',\n        placeholder: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%=</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>placeholder </span><span class=\"token delimiter punctuation\">%&gt;</span></span>',\n        meta: <span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> <span class=\"token string\">'[\"'</span> <span class=\"token operator\">+</span> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>guest_info<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\", \"'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"]'</span> </span><span class=\"token delimiter punctuation\">%&gt;</span></span>,\n        recordIP: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>recordIP </span><span class=\"token delimiter punctuation\">%&gt;</span></span>' === 'true',\n        enableQQ: '<span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>avatar </span><span class=\"token delimiter punctuation\">%&gt;</span></span>',\n        requiredFields: <span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> <span class=\"token string\">'[\"'</span> <span class=\"token operator\">+</span> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>master<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\", \"'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"]'</span> </span><span class=\"token delimiter punctuation\">%&gt;</span></span>,\n        master: <span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> <span class=\"token string\">'[\"'</span> <span class=\"token operator\">+</span> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>master<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\", \"'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"]'</span> </span><span class=\"token delimiter punctuation\">%&gt;</span></span>,\n        friends: <span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> <span class=\"token string\">'[\"'</span> <span class=\"token operator\">+</span> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>friends<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\", \"'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"]'</span> </span><span class=\"token delimiter punctuation\">%&gt;</span></span>,\n        tagMeta: <span class=\"token ejs language-ejs\"><span class=\"token delimiter punctuation\">&lt;%-</span><span class=\"token language-javascript\"> <span class=\"token string\">'[\"'</span> <span class=\"token operator\">+</span> theme<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">.</span>tagMeta<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\", \"'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"]'</span> </span><span class=\"token delimiter punctuation\">%&gt;</span></span>,\n        metaPlaceholder: metaPlaceholder,\n\n    });<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>如果需要验证昵称和邮箱可以加上以下代码：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">document.body.addEventListener('click', function(e) {\n    if (e.target.classList.contains('vsubmit')) {\n        const email = document.querySelector('input[type=email]');\n        const nick = document.querySelector('input[name=nick]');\n        const reg = /^[A-Za-z0-9_-\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n        if (!email.value || !nick.value || !reg.test(email.value)) {\n            const str = `<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>valert txt-center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>vtext<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>请填写正确的昵称和邮箱！<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>`;\n            const vmark = document.querySelector('.vmark');\n            vmark.innerHTML = str;\n            vmark.style.display = 'block';\n\n            e.stopPropagation();\n\n            setTimeout(function() {\n                vmark.style.display = 'none';\n                vmark.innerHTML = '';\n            }, 2500);\n        }\n    }\n    }, true);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>说明：代码非原创，JS正则验证本身也不难。</p>\n<p>好了可以部署之后自己测试一下。</p>\n<p>顺便说一下，填写昵称邮箱和网址的地方如果折行了就按我的样式改一下就好：</p>\n<p>在 <code>valine.ejs</code> 是上面对着改一下就好了：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.v[data-class=\"v\"] .vwrap .vheader .vinput</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 32%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> 1px dashed #dedede<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"新建文章自动打开本地Markdown编辑器\">新建文章自动打开本地Markdown编辑器</h2>\n<blockquote>\n<p>写新文章时，需要控制台执行hexo new “文章名字”生成一篇新文章，但需要手动打开，挺麻烦，我们可以设置在生成之后自动打开</p>\n</blockquote>\n<p>在站点根目录下新建scripts目录，然后在新建<code>auto_open.js</code>，在文件填入一下内容</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> spawn <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'child_process'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>exec<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Hexo 2.x 用户复制这段</span>\n<span class=\"token comment\">//hexo.on('new', function(path){</span>\n  <span class=\"token comment\">//spawn('start  \"markdown编辑器绝对路径.exe\" ' + path);</span>\n<span class=\"token comment\">//});</span>\n\n<span class=\"token comment\">// Hexo 3 用户复制这段</span>\nhexo<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">spawn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'start  \"D:\\Program Files\\Typora\\Typora.exe\" '</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>其中”D:\\Program Files\\Typora\\Typora.exe”是我本地编辑器的路径，只需要改为你本地编辑器的路径即可，然后在执行<code>hexo cl &amp;&amp; hexo g -d</code>，部署到GitHub即可，以后在新建文章就会自动打开编辑器.</p>\n</blockquote>\n<h2 id=\"系列教程-38\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Hexo系列</strong>  <a href=\"https://blog.17lai.site/categories/hexo/atom.xml\"><strong>HexoRSS分类订阅</strong></a></p>\n<p>[三万字教程]基于Hexo的matery主题搭建博客并深度优化完全一站式教程</p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/40300608/\">Hexo Docker环境与Hexo基础配置篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4d8a0b22/\">hexo博客自定义修改篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/9b056c86/\">hexo博客网络优化篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/5311b619/\">hexo博客增强部署篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4a2050e2/\">hexo博客个性定制篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/84b4059a/\">hexo博客常见问题篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/cf0f47fd/\">Hexo Markdown以及各种插件功能测试</a></p>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>markdown 各种其它语法插件</li>\n<li>latex公式支持</li>\n<li>mermaid图表</li>\n<li>plant uml图表</li>\n<li>URL卡片</li>\n<li>bilibili卡片</li>\n<li>github卡片</li>\n<li>豆瓣卡片</li>\n<li>插入音乐和视频</li>\n<li>插入脑图</li>\n</ul>\n</blockquote>\n<p><strong>笔记系列</strong>  <a href=\"https://blog.17lai.site/categories/note/atom.xml\"><strong>Note分类RSS订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/a8535f26/\">完美笔记进化论</a></li>\n</ul>\n<blockquote>\n<p>经历了很长时间，使用了各种各样的方案，最终选择了一种相对完美的方式。docker私有部署运行的joplin，使用markdown语法，github作为图床，picgo作为图像自动上传后端，pypora作为MD编辑器，Snipaste作为截图工具。后备gitlab ee selfhost备份，自建图床VPS多线负载均衡。cloudflare partner cdn加速，jsdelivr加速。</p>\n<ul>\n<li>pigo图床搭建与配置</li>\n<li>Joplin教程</li>\n<li>Snipaste截图工具</li>\n<li>Typora 作为Markdown编辑器最强</li>\n</ul>\n</blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.17lai.fun/posts/e6086437/\">Joplin入门指南&amp;实践方案</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin和使用</li>\n<li>Joplin同步与备份</li>\n<li>Joplin导入与导出</li>\n</ul>\n</blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.17lai.fun/posts/45f878cd/\">替代Evernote免费开源笔记Joplin-网盘同步笔记历史版本Markdown可视化</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin安装使用，调用外部编辑器，网盘同步等等</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/92d347d6/\">Joplin 插件以及其Markdown语法。All in One!</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin简明教程</li>\n<li>markdown语法简明教程</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/e3ee7f8b/\">Joplin 插件使用推荐</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>教你用各种插件打造一个强大的笔记工具。</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/1802a8a7/\">为知笔记私有化Docker部署</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>如何部署自己私有的为知笔记。</li>\n<li>其实博主更推荐私有部署joplin</li>\n</ul>\n</blockquote>\n<p><strong>Gitbook使用系列</strong> <a href=\"https://blog.17lai.site/categories/gitbook/atom.xml\">Gitbook分类RSS订阅</a></p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/7fe86002/\">GitBook+GitLab撰写发布技术文档-Part1:GitBook篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/7790e989/\">GitBook+GitLab撰写发布技术文档-Part2:GitLab篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/d6bad1e5/\">自己动手制作电子书的最佳方式（支持PDF、ePub、mobi等格式）</a></p>\n</li>\n</ul>\n<p><strong>Gitlab 使用系列</strong>  <a href=\"https://blog.17lai.site/categories/gitlab/atom.xml\"><strong>Gitlab RSS 分类订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/acc13b70/\"><strong>Gitlab的安装及使用教程完全版</strong></a></li>\n<li><a href=\"https://blog.17lai.site/posts/29a820b3/\">破解Gitlab EE</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d08eb7b/\">Gitlab的安装及使用</a></li>\n<li><a href=\"https://blog.17lai.site/posts/1879721e/\">CI/CD与Git Flow与GitLab</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "github",
                "hexo",
                "matery",
                "cdn",
                "seo"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/5311b619/",
            "url": "https://blog.17lai.site/posts/5311b619/",
            "title": "基于Hexo的matery主题搭建博客增强部署篇4",
            "date_published": "2022-03-27T07:27:48.000Z",
            "content_html": "<h2 id=\"Hexo-Docker-本地部署\">Hexo Docker 本地部署</h2>\n<p>在最前面的篇章介绍了Hexo Docker 环境的使用方法。具体使用方法见本文系列[<strong>Hexo Docker 环境篇</strong>]。</p>\n<p>优点：本地使用可定制化成都更高</p>\n<p>缺点：必须要有Docker 环境。异地使用麻烦，除非ssh,vpn等远程链接方法。</p>\n<h2 id=\"将Hexo部署到vps，实现自动发布\">[将Hexo部署到vps，实现自动发布][]</h2>\n<h3 id=\"搭建流程\">搭建流程</h3>\n<ol>\n<li>服务器环境配置，安装Git、Nginx配置、创建git用户</li>\n<li>本地hexo初始化</li>\n<li>使用Git自动部署并发布博客</li>\n</ol>\n<h3 id=\"服务器环境搭建\">服务器环境搭建</h3>\n<ul>\n<li><strong>安装Git和NodeJS(Centos环境)</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> <span class=\"token function\">git</span>\n<span class=\"token comment\"># 安装NodeJS </span>\n<span class=\"token function\">curl</span> --silent --location https://rpm.nodesource.com/setup_5.x <span class=\"token operator\">|</span> <span class=\"token function\">bash</span> -<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><strong>创建git账号</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">adduser <span class=\"token function\">git</span>\n<span class=\"token function\">chmod</span> <span class=\"token number\">740</span> /etc/sudoers\n<span class=\"token function\">vim</span> /etc/sudoers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>添加内容<br>\n找到</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">## Allow root to run any commands anywhere</span>\nroot    <span class=\"token assign-left variable\">ALL</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ALL<span class=\"token punctuation\">)</span>     ALL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ul>\n<li>添加以下内容</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span>     <span class=\"token assign-left variable\">ALL</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ALL<span class=\"token punctuation\">)</span>     ALL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>保存退出并改回权限</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> <span class=\"token number\">400</span> /etc/sudoers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>设置git账号密码</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">passwd</span> <span class=\"token function\">git</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>使用<code>su git</code>切换到git用户，再执行下列操作：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 切换到git用户目录</span>\n<span class=\"token builtin class-name\">cd</span> /home/git\n<span class=\"token comment\"># 创建.ssh文件夹</span>\n<span class=\"token function\">mkdir</span> ~/.ssh\n<span class=\"token comment\"># 创建authorized_keys文件并编辑</span>\n<span class=\"token function\">vim</span> ~/.ssh/authorized_keys\n<span class=\"token comment\"># 如果你还没有生成公钥，那么首先在本地电脑中执行 cat ~/.ssh/id_rsa.pub | pbcopy生成公钥</span>\n<span class=\"token comment\"># 再将公钥复制粘贴到authorized_keys</span>\n<span class=\"token comment\"># 保存关闭authorized_keys后，修改相应权限</span>\n<span class=\"token function\">chmod</span> <span class=\"token number\">600</span> ~/.ssh/authorized_keys\n<span class=\"token function\">chmod</span> <span class=\"token number\">700</span> ~/.ssh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>然后可以通过本地Git Bash执行ssh命令测试是否可以免密登录</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> -v git@服务器ip地址<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这样git用户就添加好了。</p>\n<blockquote>\n<p>Tips: 将公钥拷贝到服务器的~/.ssh/authorized_keys文件中方法有如下几种：</p>\n<ol>\n<li>将公钥通过scp拷贝到服务器上，然后追加到~/.ssh/authorized_keys文件中，这种方式比较麻烦。scp -P 22 ~/.ssh/id_rsa.pub user@host:~/。</li>\n<li>通过ssh-copy-id程序，就是我演示的方法，ssh-copyid user@host即可</li>\n<li>可以通过cat ~/.ssh/id_rsa.pub | ssh -p 22 user@host ‘cat &gt;&gt; ~/.ssh/authorized_keys’，这个也是比较常用的方法，因为可以更改端口号。</li>\n</ol>\n</blockquote>\n<ul>\n<li><strong>安装Nginx</strong></li>\n<li>准备工作<br>\n首先由于nginx的一些模块依赖一些lib库，所以在安装nginx之前，必须先安装这些lib库，这些依赖库主要有g++、gcc、openssl-devel、pcre-devel和zlib-devel 所以执行如下命令安装</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> gcc-c++\nyum <span class=\"token function\">install</span> pcre pcre-devel\nyum <span class=\"token function\">install</span> zlib zlib-devel\nyum <span class=\"token function\">install</span> openssl openssl--devel<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>Ubuntu系统安装命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> libpcre3 libpcre3-dev\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> zlib1g-dev\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> openssl libssl-dev<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>安装Nginx<br>\n安装之前，最好检查一下是否已经安装有nginx</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> -name nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果系统已经安装了nginx，那么就先卸载</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum remove nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后开始安装<br>\n首先进入<code>/usr/local</code>目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /usr/local<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>从官网下载最新版的nginx</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> -c https://nginx.org/download/nginx-1.14.2.tar.gz <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>（注：版本号可更改，去官网查看最新版本号修改即可）</p>\n<p>解压nginx压缩包</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> -zxvf nginx-1.14.2.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>会产生一个nginx-1.14.2 目录，这时进入nginx-1.14.2 目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span>  nginx-1.14.2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来安装，使用–prefix参数指定nginx安装的目录,make、make install安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./configure<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>（默认安装在/usr/local/nginx，推荐使用默认设置）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912163925.png\" alt=\"\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">make<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912163918.png\" alt=\"\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">make</span> <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912163522.png\" alt=\"\"></p>\n<p>如果没有报错，顺利完成后，最好看一下nginx的安装目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">whereis</span> nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>（where和is要连这些，中间没有空格）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912163515.png\" alt=\"\"></p>\n<ul>\n<li>启动和停止nginx</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /usr/local/nginx/sbin/\n./nginx \n./nginx -s stop\n./nginx -s quit\n./nginx -s reload\n./nginx -s quit: 此方式停止步骤是待nginx进程处理任务完毕进行停止。\n./nginx -s stop: 此方式相当于先查出nginx进程id再使用kill命令强制杀掉进程。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>查询nginx进程：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ps</span> aux <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912163454.png\" alt=\"\"></p>\n<ul>\n<li>重启 nginx</li>\n</ul>\n<ol>\n<li>先停止再启动（推荐）：<br>\n对 nginx 进行重启相当于先停止再启动，即先执行停止命令再执行启动命令。如下：</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./nginx -s quit\n./nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>重新加载配置文件：<br>\n当 nginx 的配置文件 nginx.conf 修改后，要想让配置生效需要重启 nginx，使用 -s reload 不用先停止 nginx 再启动 nginx 即可将配置信息在 nginx 中生效，如下：</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./nginx -s reload<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>启动成功后，在浏览器可以看到如下页面：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912163437.png\" alt=\"\"></p>\n<ul>\n<li>开机自启动</li>\n</ul>\n<p>即在rc.local增加启动代码就可以了。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/rc.local<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>增加一行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">/usr/local/nginx/sbin/nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>到这里，nginx安装完毕，启动、停止、重启操作也都完成。</p>\n<h3 id=\"建立git裸库\">建立git裸库</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 回到git目录</span>\n<span class=\"token builtin class-name\">cd</span> /home/git\n<span class=\"token comment\"># 使用git用户创建git裸仓库，以blog.git为例</span>\n<span class=\"token function\">git</span> init --bare blog.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"检查用户组权限\">检查用户组权限</h3>\n<p>我们的git裸仓库已经建立好了，离成功又近了一步。为了以防万一，我们要检查一下之前的blog.git、.ssh、blog目录的用户组权限是否都为<code>git:git</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 还记得/var/www/吗？这是之前配置nginx时，我们自己选定的网站根目录，请依据你自己的设置更改，如果没有的话自己</span>\nll -a /www/wwwroot/hexo\nll -a /home/git/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>如果有哪个不是，执行下面相应的命令后再查看</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">chown</span> -R git:git /www/wwwroot/hexo\n<span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> -R <span class=\"token number\">755</span> /www/wwwroot/hexo\n<span class=\"token function\">sudo</span> <span class=\"token function\">chown</span> git:git -R /home/git/blog.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"使用git-hooks同步网站根目录\">使用git-hooks同步网站根目录</h3>\n<p>简单来说，我们使用一个钩子文件：post-receive，每当git仓库接收到内容的时候，就会自动调用这个钩子，把内容同步到网站根目录。<br>\n在git用户下执行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 新建一个post-receive文件并编辑</span>\n<span class=\"token function\">vim</span> ~/blog.git/hooks/post-receive<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>在里面输入以下内容，注意修改为自己的设置：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token builtin class-name\">set</span> -e\n<span class=\"token assign-left variable\">GIT_REPO</span><span class=\"token operator\">=</span>/home/git/blog.git\n<span class=\"token assign-left variable\">TMP_GIT_CLONE</span><span class=\"token operator\">=</span>/tmp/blog\n<span class=\"token assign-left variable\">PUBLIC_WWW</span><span class=\"token operator\">=</span>/www/wwwroot/hexo\n<span class=\"token function\">rm</span> -rf <span class=\"token variable\">${TMP_GIT_CLONE}</span>\n<span class=\"token function\">git</span> clone -b main <span class=\"token variable\">$GIT_REPO</span> <span class=\"token variable\">$TMP_GIT_CLONE</span>\n<span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$TMP_GIT_CLONE</span>\n<span class=\"token comment\">#for b in `git branch -r | grep -v -- '-&gt;'`; do git branch --track ${b##origin/} $b; done</span>\n<span class=\"token comment\">#git checkout main</span>\n<span class=\"token function\">rm</span> -rf <span class=\"token variable\">${PUBLIC_WWW}</span>/*\n<span class=\"token function\">cp</span> -rf <span class=\"token variable\">${TMP_GIT_CLONE}</span>/* <span class=\"token variable\">${PUBLIC_WWW}</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"update web done!\"</span>\n<span class=\"token comment\">#ls -al ${PUBLIC_WWW}</span>\n<span class=\"token function\">rm</span> -rf <span class=\"token variable\">${TMP_GIT_CLONE}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>保存退出后，执行以下赋予这个文件可执行权限。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chown</span> -R git:git ~/blog.git/hooks/post-receive\n<span class=\"token function\">chmod</span> +x ~/blog.git/hooks/post-receive<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>好了，以上就是服务器端需要配置的内容。我们还差最后一步就可以完成整个部署了！</p>\n<h3 id=\"修改配置文件nginx-conf\">修改配置文件nginx.conf</h3>\n<p>修改上面的配置文件：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /usr/local/nginx/conf/nginx_config<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"然后修改其中两个部分，如下所示：\">然后修改其中两个部分，如下所示：</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1220210912163900.jpeg\" alt=\"\"></p>\n<p>然后<code>重启nginx</code>，方法见<code>nginx安装</code>部分。</p>\n<h3 id=\"配置本地Hexo的-config-yml\">配置本地Hexo的<code>_config.yml</code></h3>\n<p>非常简单，只需要找到本地Hexo博客的站点配置文件<code>_config.yml</code>，找到以下内容并修改：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span> \n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> git@你的服务器IP<span class=\"token punctuation\">:</span>/home/git/blog.git\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>保存后，剩下的就是Hexo的日常操作了，这里就不赘述了，写完文章后，在你的本地博客根目录执行以下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo c <span class=\"token operator\">&amp;&amp;</span> hexo g -d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>就可以实现线上博客的自动更新了！一切搞定！</p>\n<h2 id=\"Rsync同步部署静态文件方法\">Rsync同步部署静态文件方法</h2>\n<blockquote>\n<p>使用rsync同步</p>\n</blockquote>\n<p>本地生成静态文件后rsync同步到vps网页目录，lnap使用宝塔配置，这里只需要一个nginx。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># rsync [options] from_dir to_dir</span>\n<span class=\"token comment\"># 替换这里的ip为你的服务器ip</span>\n<span class=\"token function\">rsync</span> -avzP  /home/17lai.blog  root@8.8.8.8:/www/wwwroot/hexo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"Hexo-Github-Action-自动部署\">Hexo Github Action 自动部署</h2>\n<h3 id=\"准备\">准备</h3>\n<ol>\n<li><code>Hexo</code> 博客源码的仓库，在 <code>GitHub</code> 上。</li>\n<li><code>ssh</code> 密钥，参考文章：<a target=\"_blank\" rel=\"noopener\" href=\"https://sitoi.cn/posts/43508.html\">Windows 下利用 Git 生成 SSH KEY 并配置到 GitHub</a></li>\n</ol>\n<h3 id=\"步骤\">步骤</h3>\n<ol>\n<li>为需要部署的平台添加密钥</li>\n<li>修改 <code>_config.yml</code> 中的 <code>deploy</code> 配置</li>\n<li>在 GitHub 上设置 <code>Secrets</code></li>\n<li>创建 GitHub Action</li>\n</ol>\n<h3 id=\"为需要部署的平台添加密钥\">为需要部署的平台添加密钥</h3>\n<p>按照之前的教程，只要你之前成功将 Hexo 的博客部署到 GitHub 上，那你电脑在 <code>~/.ssh</code> 目录下一定有以下三个文件：</p>\n<ul>\n<li><code>id_rsa</code>：私钥</li>\n<li><code>id_rsa.pub</code>：公钥</li>\n<li><code>known_hosts</code>：记录对所有用户都可信赖的远程主机的公钥</li>\n</ul>\n<p>将 <code>id_rsa.pub</code>（公钥）添加到不同平台中即可，参考文章：<a target=\"_blank\" rel=\"noopener\" href=\"https://sitoi.cn/posts/43508.html#%E6%9F%A5%E7%9C%8B-SSH-KEY\">Windows 下利用 Git 生成 SSH KEY 并配置到 GitHub</a></p>\n<p>下面是不同平台添加的地址：</p>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/settings/ssh/new\">GitHub</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://gitlab.com/profile/keys\">GitLab</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://e.coding.net/\">Coding</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://gitee.com/profile/sshkeys\">Gitee</a></li>\n</ul>\n<h3 id=\"修改-config-yml-中的-deploy-配置\">修改 <code>_config.yml</code> 中的 <code>deploy</code> 配置</h3>\n<p>请使用 <code>ssh</code> (即以 <code>git@</code> 开头的 <code>clone</code> 链接) 的连接方式，根据直接的实际地址填写。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n    <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> git@github.com<span class=\"token punctuation\">:</span>Sitoi/Sitoi.github.io.git\n      <span class=\"token key atrule\">coding</span><span class=\"token punctuation\">:</span> git@e.coding.net<span class=\"token punctuation\">:</span>Sitoi/Sitoi.git\n      <span class=\"token key atrule\">gitee</span><span class=\"token punctuation\">:</span> git@gitee.com<span class=\"token punctuation\">:</span>sitoi/sitoi.git\n      <span class=\"token key atrule\">gitlab</span><span class=\"token punctuation\">:</span> git@gitlab.com<span class=\"token punctuation\">:</span>Sitoi/sitoi.gitlab.io.git\n    <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"在-GitHub-上设置-Secrets\">在 GitHub 上设置 <code>Secrets</code></h3>\n<ol>\n<li>\n<p>进入到你在 <code>GitHub</code> 上面的源码仓库</p>\n</li>\n<li>\n<p>点击右上角的 <code>Settings</code></p>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1220211012133009.png\" alt=\"Settings\"></p>\n<p>Settings</p>\n<ol start=\"3\">\n<li>\n<p>点击左侧的 <code>Secrets</code></p>\n</li>\n<li>\n<p>点击右上角的 <code>New secret</code></p>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1220211012133002.png\" alt=\"New secret\"></p>\n<p>New secret</p>\n<ol start=\"5\">\n<li>在 <code>Name</code> 中输入 <code>HEXO_DEPLOY_PRI</code>，在 <code>Value</code> 中填入 <code>id_rsa</code>（私钥）的全部内容</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1220211012132955.png\" alt=\"Add secret\"></p>\n<p>Add secret</p>\n<h3 id=\"创建-GitHub-Action\">创建 GitHub Action</h3>\n<ol>\n<li>点击项目上方的 <code>Action</code> 按钮</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1220211012132954.png\" alt=\"Action\"></p>\n<p>Action</p>\n<ol start=\"2\">\n<li>点击 <code>set up a workflow yourself</code> 创建 <code>Workflow</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1220211012132947.png\" alt=\"Workflow\"></p>\n<p>Workflow</p>\n<ol start=\"3\">\n<li>修改 <code>main.yaml</code> 的内容</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1220211012132940.png\" alt=\"Create Workflow\"></p>\n<p>Create Workflow</p>\n<blockquote>\n<p>根据实际情况修改成你自己的内容</p>\n</blockquote>\n<ul>\n<li>Git 推送使用的用户名：git config –global user.name ‘sitoi’：</li>\n<li>Git 推送使用的邮箱：git config –global user.email ‘<a href=\"mailto:133397418@qq.com\">133397418@qq.com</a>‘</li>\n<li>Hexo 的版本：npm i <a href=\"mailto:hexo@4.1.1\">hexo@4.1.1</a> -g</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hexo CI\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> butterfly\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">butterfly-build</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token key atrule\">strategy</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matrix</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>10.x<span class=\"token punctuation\">]</span>\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Use Node.js 10.x\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'10.x'</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> env prepare\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">HEXO_DEPLOY_PRI</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.HEXO_DEPLOY_PRI <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          mkdir -p ~/.ssh/\n          echo \"$HEXO_DEPLOY_PRI\" &gt; ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts\n          ssh-keyscan gitlab.com &gt;&gt; ~/.ssh/known_hosts\n          ssh-keyscan e.coding.net &gt;&gt; ~/.ssh/known_hosts\n          ssh-keyscan gitee.com &gt;&gt; ~/.ssh/known_hosts\n          git config --global user.name 'sito'\n          git config --global user.email '133397418@qq.com'\n          npm i\n          npm i hexo@4.1.1 -g</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gen\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          hexo clean\n          hexo generate\n          hexo deploy</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"4\">\n<li>将你的源码推送到 <code>GitHub</code> 上，你的博客一会就会自动更新了。</li>\n</ol>\n<h2 id=\"vercel-部署\">vercel 部署</h2>\n<h3 id=\"为什么使用-vercel\">为什么使用 vercel</h3>\n<ul>\n<li>国内 <code>Github Pages</code> 速度较慢。</li>\n<li><code>vercel</code> 速度快且能够自定义域名，能实现和 <code>Github Pages</code> 一样的效果</li>\n</ul>\n<blockquote>\n<p>vercel 官方地址：<a href=\"https://vercel.com%2F\">vercel.com/</a></p>\n</blockquote>\n<h3 id=\"如何部署\">如何部署</h3>\n<ul>\n<li>首先注册一个账号</li>\n<li>注册成功后进入页面，点击 <code>News Project</code></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/17/20220517205923.webp\" alt=\"img\"></p>\n<ul>\n<li>然后通过绑定的 <code>github</code> 或者 <code>gitlab</code> 导入需要部署的项目</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/17/20220517205923-1.webp\" alt=\"img\"></p>\n<ul>\n<li>如果导入的项目是打包好的静态页，在 <code>Build and Output Settings</code> 的 <code>override</code> 都勾上，表示不执行它的默认命令。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/17/20220517205923-2.webp\" alt=\"img\"></p>\n<ul>\n<li>点击 <code>deployed</code> 进行部署，如果部署失败可以查看报错信息是不是上一步的某些选项没有覆盖。部署成功后会进入如图所示的界面</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/17/20220517211315.webp\" alt=\"img\"></p>\n<h3 id=\"如何自定义域名\">如何自定义域名</h3>\n<ul>\n<li>腾讯云域名地址：<a href=\"https://console.cloud.tencent.com%2Fdomain\">console.cloud.tencent.com/domain</a></li>\n<li><code>vercel</code> 静态页挂载地址：</li>\n<li>进入到 setting 中可对项目进行一些设置，如项目名称</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/17/20220517211622.webp\" alt=\"vercel 自定义域名\"></p>\n<ul>\n<li>下面演示如何自定义域名，默认情况下部署成功后 <code>vercel</code> 会给你生成一个默认的域名，如果想要修改成自己的域名可将域名名称修改成自己的。</li>\n<li>当选择修改成自己的域名名称后，<code>vercel</code> 会检查域名指向的 <code>DNS</code> 对不对，如果不对的话会提示你域名的 DNS 应该如何配置，按照 <code>vercel</code> 提示的 <code>DNS</code> 信息</li>\n</ul>\n<p>在自己的域名的 <code>DNS</code> 配置中进行配置，如图</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/17/20220517205923-5.webp\" alt=\"img\"></p>\n<h3 id=\"配置多个域名\">配置多个域名</h3>\n<p>对其他新增的域名选择重定向到自己的主域名即可</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/17/20220517211716.webp\" alt=\"vercel 多域名配置\"></p>\n<h2 id=\"cloudflare-Pages-部署\">cloudflare Pages 部署</h2>\n<blockquote>\n<p><strong>强烈推荐！</strong></p>\n<p>全球CDN，静态加速，可以说是最佳部署方案！就是有每日100000次请求限制！可以使用dnspod多线路负载均衡来帮助分流。</p>\n</blockquote>\n<blockquote>\n<p>官网 <a target=\"_blank\" rel=\"noopener\" href=\"https://dash.cloudflare.com/\">cloudflare </a> 首先注册一个账号</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/17/20220517210709.webp\" alt=\"cloudflare\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/17/20220517210803.webp\" alt=\"cloudflare page 连接 github\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/17/20220517210852.webp\" alt=\"cloudflare page 选择仓库\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/17/20220517211145.webp\" alt=\"cloudflare page 自定义域名\"></p>\n<h2 id=\"以-token-方式部署到-Github\">以 token 方式部署到 Github</h2>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> &lt;repository url<span class=\"token punctuation\">&gt;</span>\n      <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>branch<span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">token</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token key atrule\">message</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>message<span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>git user<span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">email</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>git email<span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">extend_dirs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>extend directory<span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">ignore_hidden</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># default is true</span>\n  <span class=\"token key atrule\">ignore_pattern</span><span class=\"token punctuation\">:</span> regexp  <span class=\"token comment\"># whatever file that matches the </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"travis-自动部署配置\">travis 自动部署配置</h2>\n<blockquote>\n<p>travis是第三方CICD服务，比action更加强大，下面只是参考，请查阅travis 文档，并结合自己的环境修改！</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">sudo</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n<span class=\"token key atrule\">language</span><span class=\"token punctuation\">:</span> node_js\n<span class=\"token key atrule\">node_js</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> 10.16.3\n<span class=\"token key atrule\">cache</span><span class=\"token punctuation\">:</span> npm\n<span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">only</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> master <span class=\"token comment\"># build master branch only</span>\n\n<span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">global</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">GIT_USER</span><span class=\"token punctuation\">:</span> appotry\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">HEXO_BACKUP_REPO</span><span class=\"token punctuation\">:</span> github.com/appotry/hexo<span class=\"token punctuation\">-</span>backup.git\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">HEXO_THEME_REPO</span><span class=\"token punctuation\">:</span> github.com/appotry/hexo<span class=\"token punctuation\">-</span>theme<span class=\"token punctuation\">-</span>matery.git\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">GITHUB_PAGES_REPO</span><span class=\"token punctuation\">:</span> github.com/appotry/hexo.github.io.git\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">APPOTRY_REPO</span><span class=\"token punctuation\">:</span> github.com/appotry/hexo.git\n\n<span class=\"token key atrule\">before_install</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> export TZ='Asia/Shanghai'\n<span class=\"token punctuation\">-</span> npm install hexo <span class=\"token punctuation\">-</span>g\n<span class=\"token punctuation\">-</span> npm install gulp<span class=\"token punctuation\">-</span>cli <span class=\"token punctuation\">-</span>g\n\n<span class=\"token key atrule\">install</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> npm install\n\n<span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> git clone https<span class=\"token punctuation\">:</span>//$<span class=\"token punctuation\">{</span>HEXO_THEME_REPO<span class=\"token punctuation\">}</span> themes/next\n<span class=\"token punctuation\">-</span> git clone https<span class=\"token punctuation\">:</span>//$<span class=\"token punctuation\">{</span>GIT_USER<span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>GITHUB_TOKEN<span class=\"token punctuation\">}</span>@$<span class=\"token punctuation\">{</span>HEXO_BACKUP_REPO<span class=\"token punctuation\">}</span> hexo<span class=\"token punctuation\">-</span>backup\n<span class=\"token punctuation\">-</span> mv hexo<span class=\"token punctuation\">-</span>backup/source .\n<span class=\"token punctuation\">-</span> rm <span class=\"token punctuation\">-</span>rf source/private\n<span class=\"token punctuation\">-</span> npm run build\n\n<span class=\"token key atrule\">after_success</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>global user.name \"appotry\"\n<span class=\"token punctuation\">-</span> git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>global user.email \"email@qq.com\"\n<span class=\"token punctuation\">-</span> git clone https<span class=\"token punctuation\">:</span>//$<span class=\"token punctuation\">{</span>GIT_USER<span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>GITHUB_TOKEN<span class=\"token punctuation\">}</span>@$<span class=\"token punctuation\">{</span>GITHUB_PAGES_REPO<span class=\"token punctuation\">}</span> voidking\n<span class=\"token punctuation\">-</span> unalias cp\n<span class=\"token punctuation\">-</span> cp <span class=\"token punctuation\">-</span>rf public/. 17lai.blog\n<span class=\"token punctuation\">-</span> cd 17lai.blog\n<span class=\"token punctuation\">-</span> git add .\n<span class=\"token punctuation\">-</span> git commit <span class=\"token punctuation\">-</span>m \"Travis CI Auto Builder\"\n<span class=\"token punctuation\">-</span> git push <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>force <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>quiet \"https<span class=\"token punctuation\">:</span>//$<span class=\"token punctuation\">{</span>GIT_USER<span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>GITHUB_TOKEN<span class=\"token punctuation\">}</span>@$<span class=\"token punctuation\">{</span>GITHUB_PAGES_REPO<span class=\"token punctuation\">}</span>\" master<span class=\"token punctuation\">:</span>master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"利用-GitLab-实现-Hexo-博客的-CI-CD\">利用 GitLab 实现 Hexo 博客的 CI/CD</h2>\n<p>Portainer 提供了对服务在线更新的 WebHook，所以基于 GitLab 自带的 CI/CD 功能实现 Hexo 博客的持续部署，就非常轻松了。</p>\n<p>CI/CD 其实本质上是一套流程，流程规则可以自行定义。在本文研究的主题下，流程分为三步：第一步是编译 Hexo 博客并生成静态文件；第二步是将静态文件打包成可提供 Web 服务的镜像；第三步则是通过 Portainer 的钩子触发服务更新。</p>\n<p><code>.gitlab-ci.yml</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">stages</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> compile\n  <span class=\"token punctuation\">-</span> build\n  <span class=\"token punctuation\">-</span> deploy\n\n<span class=\"token comment\"># CONTAINER_RELEASE_IMAGE 根据自己的仓库名修改</span>\n<span class=\"token key atrule\">variables</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">DOCKER_HOST</span><span class=\"token punctuation\">:</span> tcp<span class=\"token punctuation\">:</span>//docker<span class=\"token punctuation\">:</span><span class=\"token number\">2375</span>\n  <span class=\"token key atrule\">DOCKER_DRIVER</span><span class=\"token punctuation\">:</span> overlay2\n  <span class=\"token key atrule\">CONTAINER_RELEASE_IMAGE</span><span class=\"token punctuation\">:</span> registry.gitlab.com/xxx/xxx<span class=\"token punctuation\">:</span>latest\n\n<span class=\"token key atrule\">compile</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> compile\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">:</span>lts<span class=\"token punctuation\">-</span>alpine\n  <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> npm install\n    <span class=\"token punctuation\">-</span> ./node_modules/hexo/bin/hexo generate\n  <span class=\"token key atrule\">artifacts</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> public/\n    <span class=\"token key atrule\">expire_in</span><span class=\"token punctuation\">:</span> 20 minutes\n\n<span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> build\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">:</span>stable\n  <span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> docker<span class=\"token punctuation\">:</span>dind\n  <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> docker login <span class=\"token punctuation\">-</span>u gitlab<span class=\"token punctuation\">-</span>ci<span class=\"token punctuation\">-</span>token <span class=\"token punctuation\">-</span>p $CI_JOB_TOKEN registry.gitlab.com\n    <span class=\"token punctuation\">-</span> docker info\n    <span class=\"token punctuation\">-</span> docker build <span class=\"token punctuation\">-</span>f ./Dockerfile <span class=\"token punctuation\">-</span>t $CONTAINER_RELEASE_IMAGE public\n    <span class=\"token punctuation\">-</span> docker push $CONTAINER_RELEASE_IMAGE\n\n<span class=\"token comment\"># 根据自己的钩子修改下方的 URL</span>\n<span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> deploy\n  <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> curl https<span class=\"token punctuation\">:</span>//xxx.xxx.xxx/api/webhooks/xxx <span class=\"token punctuation\">-</span>X POST\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>为了保证服务更新的成功率，可以在 <code>deploy</code> 环节加个错误判断和重试次数，具体的看 GitLab 官方文档即可。</p>\n<p>下面给出我的 Dockerfile 文件，供参考。</p>\n<pre class=\"line-numbers language-dockerfile\" data-language=\"dockerfile\"><code class=\"language-dockerfile\">FROM nginx:alpine\n\nCOPY . /usr/share/nginx/html\n\nRUN chmod 777 /usr/share/nginx/html -R \\\n    &amp;&amp; sed -i 's/#error_page  404/error_page  404/' /etc/nginx/conf.d/default.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"DNSPOD-多线路负载均衡\">DNSPOD 多线路负载均衡</h2>\n<blockquote>\n<p>DNSPOD官网 <a target=\"_blank\" rel=\"noopener\" href=\"https://console.dnspod.cn/dns/list\">console.dnspod.cn</a></p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/17/20220517212142.webp\" alt=\"dnspod\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/17/20220517212323.webp\" alt=\"dnspod 多线路负载均衡\"></p>\n<blockquote>\n<p>dnspod对cname数目有限制。</p>\n<p>这里使用权重来分配各条线路访问比例！</p>\n</blockquote>\n<h2 id=\"系列教程-34\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Hexo系列</strong>  <a href=\"https://blog.17lai.site/categories/hexo/atom.xml\"><strong>HexoRSS分类订阅</strong></a></p>\n<p>[三万字教程]基于Hexo的matery主题搭建博客并深度优化完全一站式教程</p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/40300608/\">Hexo Docker环境与Hexo基础配置篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4d8a0b22/\">hexo博客自定义修改篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/9b056c86/\">hexo博客网络优化篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/5311b619/\">hexo博客增强部署篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4a2050e2/\">hexo博客个性定制篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/84b4059a/\">hexo博客常见问题篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/cf0f47fd/\">Hexo Markdown以及各种插件功能测试</a></p>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>markdown 各种其它语法插件</li>\n<li>latex公式支持</li>\n<li>mermaid图表</li>\n<li>plant uml图表</li>\n<li>URL卡片</li>\n<li>bilibili卡片</li>\n<li>github卡片</li>\n<li>豆瓣卡片</li>\n<li>插入音乐和视频</li>\n<li>插入脑图</li>\n</ul>\n</blockquote>\n<p><strong>笔记系列</strong>  <a href=\"https://blog.17lai.site/categories/note/atom.xml\"><strong>Note分类RSS订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/a8535f26/\">完美笔记进化论</a></li>\n</ul>\n<blockquote>\n<p>经历了很长时间，使用了各种各样的方案，最终选择了一种相对完美的方式。docker私有部署运行的joplin，使用markdown语法，github作为图床，picgo作为图像自动上传后端，pypora作为MD编辑器，Snipaste作为截图工具。后备gitlab ee selfhost备份，自建图床VPS多线负载均衡。cloudflare partner cdn加速，jsdelivr加速。</p>\n<ul>\n<li>pigo图床搭建与配置</li>\n<li>Joplin教程</li>\n<li>Snipaste截图工具</li>\n<li>Typora 作为Markdown编辑器最强</li>\n</ul>\n</blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.17lai.fun/posts/e6086437/\">Joplin入门指南&amp;实践方案</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin和使用</li>\n<li>Joplin同步与备份</li>\n<li>Joplin导入与导出</li>\n</ul>\n</blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.17lai.fun/posts/45f878cd/\">替代Evernote免费开源笔记Joplin-网盘同步笔记历史版本Markdown可视化</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin安装使用，调用外部编辑器，网盘同步等等</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/92d347d6/\">Joplin 插件以及其Markdown语法。All in One!</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin简明教程</li>\n<li>markdown语法简明教程</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/e3ee7f8b/\">Joplin 插件使用推荐</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>教你用各种插件打造一个强大的笔记工具。</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/1802a8a7/\">为知笔记私有化Docker部署</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>如何部署自己私有的为知笔记。</li>\n<li>其实博主更推荐私有部署joplin</li>\n</ul>\n</blockquote>\n<p><strong>Gitbook使用系列</strong> <a href=\"https://blog.17lai.site/categories/gitbook/atom.xml\">Gitbook分类RSS订阅</a></p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/7fe86002/\">GitBook+GitLab撰写发布技术文档-Part1:GitBook篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/7790e989/\">GitBook+GitLab撰写发布技术文档-Part2:GitLab篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/d6bad1e5/\">自己动手制作电子书的最佳方式（支持PDF、ePub、mobi等格式）</a></p>\n</li>\n</ul>\n<p><strong>Gitlab 使用系列</strong>  <a href=\"https://blog.17lai.site/categories/gitlab/atom.xml\"><strong>Gitlab RSS 分类订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/acc13b70/\"><strong>Gitlab的安装及使用教程完全版</strong></a></li>\n<li><a href=\"https://blog.17lai.site/posts/29a820b3/\">破解Gitlab EE</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d08eb7b/\">Gitlab的安装及使用</a></li>\n<li><a href=\"https://blog.17lai.site/posts/1879721e/\">CI/CD与Git Flow与GitLab</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "github",
                "hexo",
                "matery",
                "cdn",
                "seo"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/9b056c86/",
            "url": "https://blog.17lai.site/posts/9b056c86/",
            "title": "基于Hexo的matery主题搭建博客网络优化篇3",
            "date_published": "2022-03-27T07:27:16.000Z",
            "content_html": "<p><strong>Hexo系列</strong>  <a href=\"https://blog.17lai.site/categories/hexo/atom.xml\"><strong>HexoRSS分类订阅</strong></a></p>\n<p>[三万字教程]基于Hexo的matery主题搭建博客并深度优化完全一站式教程</p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/40300608/\">Hexo Docker环境与Hexo基础配置篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4d8a0b22/\">hexo博客自定义修改篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/9b056c86/\">hexo博客网络优化篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/5311b619/\">hexo博客增强部署篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4a2050e2/\">hexo博客个性定制篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/84b4059a/\">hexo博客常见问题篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/cf0f47fd/\">Hexo Markdown以及各种插件功能测试</a></p>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>markdown 各种其它语法插件</li>\n<li>latex公式支持</li>\n<li>mermaid图表</li>\n<li>plant uml图表</li>\n<li>URL卡片</li>\n<li>bilibili卡片</li>\n<li>github卡片</li>\n<li>豆瓣卡片</li>\n<li>插入音乐和视频</li>\n<li>插入脑图</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>经过一系列优化修改后，评分终于可以看了，对于一个web开发外行来说，可以满足了。😄</p>\n<ul>\n<li>各种CDN</li>\n<li>webp</li>\n<li>gulp 压缩</li>\n<li>cloudflare parter</li>\n<li>service worker</li>\n<li>部分资源异步加载</li>\n</ul>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/2820220328123137.png\" alt=\"page test\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/0220220402074306.png\" alt=\"page test\"></p>\n<blockquote>\n<p>经过多次优化之后，新版看板娘资源异步加载体积大拖累的性能分数。其它几乎都是满分了！</p>\n<p>保证了第二次打开几乎都是使用缓存，牺牲了第一次加载的体积，异步加载对第一次渲染速度影响不大。</p>\n</blockquote>\n<h2 id=\"加速NPM安装下载\">加速NPM安装下载</h2>\n<p><strong>安装淘宝镜像</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry https://registry.npm.taobao.org<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>安装CNPM</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g cnpm --registry<span class=\"token operator\">=</span>https://registry.npm.taobao.org<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"CDN-加速\">CDN 加速</h2>\n<ul>\n<li><strong>为什么强烈建议启用CDN？</strong></li>\n</ul>\n<blockquote>\n<p>研究表明，用户最满意的打开网页时间，是在 2 秒以下。用户能够忍受的最长等待时间在 6～8 秒之间。就是说，8 秒是一个临界值，如果你的网站打开速度在 8 秒以上，那么你将失去大部分用户。研究显示，如果等待 12 秒以后，网页还是没有载入，那么 99% 以上的用户会选择关闭网页。</p>\n<p>Google 做过一个试验，10 条搜索结果的页面载入时间需要 0.4 秒，显示 30 条搜索结果的页面载入时间需要 0.9 秒，结果后者使得 Google 总的流量和收入减少了 20%。Google 地图上线的时候，首页大小有 100KB，后来下降到 70~80KB。结果，流量在第一个星期上升了 10%，接下来的 3 个星期又再上升了 25%。Amazon 的统计也显示了相近的结果，首页打开时间每增加 100 毫秒，网站销售量会减少 1%。</p>\n<p>以上数据说明了一个非常重要的问题，如果你的网站速度如果超过 2s 以上，那么你的客户可能在流失和离你而去了。这一点对于电商网站尤其重要，打开速度慢，那么将造成转化率降低，损失将会大量增加。</p>\n</blockquote>\n<p>放在 Github 的资源在国内加载速度比较慢，因此需要使用 CDN 加速来优化网站打开速度，<a target=\"_blank\" rel=\"noopener\" href=\"https://www.jsdelivr.com/\">jsDelivr</a> + Github 便是免费且好用的 CDN，非常适合博客网站使用。也可以选择主流云服务商提供的对象存储+CDN 来获得更快速及稳定的访问效果，费用低到几乎可忽略。</p>\n<p><strong>用法：</strong></p>\n<pre class=\"line-numbers language-http\" data-language=\"http\"><code class=\"language-http\"><span class=\"token header\"><span class=\"token header-name keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//cdn.jsdelivr.net/gh/{你的用户名}/{你的仓库名}@{发布的版本号}/{文件路径}</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>例如：</strong></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110247.webp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>注意：版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源。</p>\n<blockquote>\n<p>还可以配合 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/Molunerfinn/PicGo\">PicGo</a>图床上传工具的<strong>自定义域名前缀</strong>来上传图片，使用极其方便。具体使用方法可参见我的另一篇文章: <a target=\"_blank\" rel=\"noopener\" href=\"https://www.lixl.cn/2019/120114500.html\">使用 Typora+iPic/PicGo 图床+CDN 实现高效 Markdown 创作</a></p>\n</blockquote>\n<h3 id=\"jsdelivr\">jsdelivr</h3>\n<p>jsdelivr 是还在目前还在国内运营的可以通过特殊方法免费使用的CDN。</p>\n<blockquote>\n<p>Github<mark>开源</mark>仓库发<mark>布版</mark>本才能使用jsdelivr，懂了怎么做了吧。</p>\n</blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">https://cdn.jsdelivr.net/gh/[name]/[repo]@latest/data/2022/03/1120220311110247.webp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"Cloudflare-CDN\">Cloudflare CDN</h3>\n<blockquote>\n<p>配置最简单的CDN方式了。在github  raw链接地址前面加<code>https://images.weserv.nl/?url=</code>, 就会自动使用cloudflare cdn来加速图片访问。使用发现无法加速gif。</p>\n</blockquote>\n<p>本blog主要使用这个方法，如下所示。</p>\n<ul>\n<li>未加速图片地址</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">https://raw.githubusercontent.com/appotry/cloudimg/main/data/2021/09/1020210910231815.png<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>Cloudflare加速图片地址</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"># 使用了cloudflare partner 加速\nhttps://cimg1.17lai.site/data/2021/09/1020210910231815.png<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"配置Service-worker\">配置Service worker</h2>\n<blockquote>\n<p>后篇文章<a href=\"https://blog.17lai.site/posts/4a2050e2/\">基于Hexo的matery主题搭建博客个性定制篇5</a>中提到的 <strong>让hexo支持pwa</strong> 就是使用的<code>Service worker</code> ，参考个性定制篇，把常用的大体积文件加入<code>Service worker</code> 缓存列表，可以极大的提高访问速度！</p>\n<p><strong>原理</strong>：在访问时，后台异步加载 SW 缓存文件列表，后面渲染网页，直接使用缓存中的文件，不再从网络中获取。你可以提前把所有常用的大体积资源放到缓存列表中，后面访问其它页面时，很多资源已经提前加载好了，可以极大的提高访问速度！</p>\n</blockquote>\n<h2 id=\"SEO-优化\">SEO 优化</h2>\n<blockquote>\n<ul>\n<li>\n<p>搜索引擎优化，又称为 SEO，即 Search Engine Optimization，它是一种通过分析搜索引擎的排名规律，了解各种搜索引擎怎样进行搜索、怎样抓取互联网页面、怎样确定特定关键词的搜索结果排名的技术。Google 自动收录效果还不错，百度就差得远了（<code>GitHub</code>不允许百度的<code>Spider</code>爬取<code>GitHub</code>上的内容）。</p>\n</li>\n<li>\n<p>如果<mark>没有备案，百度seo是不会收录的</mark>！所以如果你有国内vps，并且备案了，可以做百度seo，如果没有，百度seo内容都不需要看了。</p>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"网域提交方式\">网域提交方式</h3>\n<ol>\n<li>\n<p>自动提交</p>\n<p>（分三种）</p>\n<ul>\n<li>主动推送</li>\n<li>自动推送</li>\n<li>sitemap（站点地图）</li>\n</ul>\n</li>\n<li>\n<p>手动提交</p>\n<ul>\n<li>即手动地将链接一次性提交给百度</li>\n</ul>\n</li>\n</ol>\n<p>一般自动提交比手动提交效果好一点，自动提交又从效率上来说：</p>\n<p><strong>主动推送&gt;自动推送&gt;sitemap</strong></p>\n<p><strong>自动提交的三种方式</strong>：</p>\n<ol>\n<li><code>主动推送</code>：最为快速的提交方式。将站点当天新产出链接通过此方式推送给百度，以保证新链接可以及时被百度收录。</li>\n<li><code>自动推送</code>：最为便捷的提交方式。将自动推送的JS代码部署在站点的每一个页面源代码中，当部署代码的页面在每次被浏览时，链接就会被自动推送给百度。可以与主动推送配合使用。</li>\n<li><code>sitemap</code>：您可以定期将网站链接放到<code>sitemap文件</code>中，然后将<code>sitemap文件</code>提交给百度。百度会周期性的抓取检查您提交的<code>sitemap</code>，对其中的链接进行处理，但收录速度慢于主动推送。</li>\n</ol>\n<h3 id=\"使用sitemap方式推送\">使用sitemap方式推送</h3>\n<p>安装 sitemap 插件生成站点地图文件:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-generator-sitemap --save\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-generator-baidu-sitemap --save  <span class=\"token comment\">#百度专用</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>安装后直接执行 <code>hexo cl&amp;&amp;hexo g -d</code> 命令，就会在网站根目录生成 <code>sitemap.xml</code> 及 <code>baidusitemap.xml</code> 文件。</p>\n<ul>\n<li>在博客目录的_config.yml中添加如下代码</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># 通用站点地图</span>\n<span class=\"token key atrule\">sitemap</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> sitemap.xml\n\n<span class=\"token comment\"># 百度站点地图</span>\n<span class=\"token key atrule\">baidusitemap</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> baidusitemap.xml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"百度优化\">百度优化</h3>\n<p>登录<a target=\"_blank\" rel=\"noopener\" href=\"https://ziyuan.baidu.com/\">百度搜索资源平台</a>， 登录成功之后在 用户中心 –&gt; 站点管理 页面中点击<a target=\"_blank\" rel=\"noopener\" href=\"https://ziyuan.baidu.com/site/siteadd\">添加网站</a>，按提示操作。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1020210910231752.png\" alt=\"添加网站\"></p>\n<p><strong>添加网站</strong></p>\n<blockquote>\n<p>提示：由于百度的 spider 是爬取不到 GitHub 的内容的，所以在第三步验证网站的时候，建议选择<code>CNAME验证</code>的方式。</p>\n</blockquote>\n<p>经过以上步骤，百度已经知道有我们网站的存在了，但是百度还不知道我们的网站上有什么内容，所以要向百度推送我们的内容。点击 网站支持 –&gt; 数据引入 –&gt; 链接提交菜单，提交站点地图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1020210910231758.png\" alt=\"提交站点地图\"></p>\n<p><strong>提交站点地图</strong></p>\n<p>另外，<code>hexo-theme-matery</code>主题已经内置了 <code>自动推送</code> 的功能， 检查 <code>themes/hexo-theme-matery/_config.yml</code> 文件中如下配置:</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># 百度搜索资源平台提交链接</span>\n<span class=\"token key atrule\">baiduPush</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>自动推送的 JS 代码部署在站点的每一个页面源代码中，当页面在每次被浏览时，链接就会被自动推送给百度。</p>\n<h3 id=\"谷歌优化\">谷歌优化</h3>\n<p>登录 <a target=\"_blank\" rel=\"noopener\" href=\"https://search.google.com/search-console?hl=zh-CN\">Google Search Console</a>，点击添加资源，输入自己的域名，按提示操作。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1020210910231807.png\" alt=\"添加资源\"></p>\n<p><strong>添加资源</strong></p>\n<blockquote>\n<p>提示：需要进行 DNS 验证，进入 DNS 域名解析设置页面，按提示增加 TXT 记录，如下图:</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1020210910231808.png\" alt=\"DNS验证内容填写示例\"></p>\n<p><strong>DNS验证内容填写示例</strong></p>\n</blockquote>\n<p>验证成功后，需要提交站点地图。参照下图提交，然后等待收录。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1020210910231815.png\" alt=\"提交站点地图\"></p>\n<p><strong>提交站点地图</strong></p>\n<blockquote>\n<p>注意：hexo 配置文件中的 url 一定要输入正确的域名，插件是根据 url 生成站点地图的。</p>\n</blockquote>\n<h3 id=\"其它搜索引擎\">其它搜索引擎</h3>\n<blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://www.bing.com/webmasters/home\">Bing提交</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://zhanzhang.sm.cn/open/detialPage\">神马站长</a></li>\n</ul>\n</blockquote>\n<h3 id=\"百度自动推送方式\">百度自动推送方式</h3>\n<p>只要每个需要被百度爬取的HTML页面中加入一段JS代码即可：</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> bp <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> curProtocol <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>protocol<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>curProtocol <span class=\"token operator\">===</span> <span class=\"token string\">'https'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        bp<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'https://zz.bdstatic.com/linksubmit/push.js'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        bp<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'http://push.zhanzhang.baidu.com/push.js'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"script\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    s<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>bp<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我所使用的matery主题可以自动给每个页面加上这段代码，只需在主题配置文件中配置：</p>\n<pre class=\"line-numbers language-yml\" data-language=\"yml\"><code class=\"language-yml\"><span class=\"token comment\"># 百度搜索资源平台提交链接</span>\n<span class=\"token key atrule\">baiduPush</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>即可！</p>\n<p>其他主题一般都有这个功能的实现，如果没有的话，想办法在每个页面加入以上JS代码即可，原理是一样。</p>\n<h3 id=\"百度主动推送SEO方式\">百度主动推送SEO方式</h3>\n<blockquote>\n<ul>\n<li>配置文章自动推送到百度蜘蛛</li>\n</ul>\n</blockquote>\n<h4 id=\"获取百度推送密钥\">获取百度推送密钥</h4>\n<p>在 <a href=\"ziyuan.baidu.com/site\">百度资源</a> 注册你的网址，验证完后可在<code>站点管理-&gt;资源提交-&gt;链接提交-&gt;主动推送(实时)</code> 中找到你的推送密钥，下面说明中的 token= 后的内容即为推送密钥。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">推送接口\n接口调用地址：http://data.zz.baidu.com/urls?site<span class=\"token operator\">=</span>https://ifibe.com<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">token</span><span class=\"token operator\">=</span>xxxxxxxxxx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h4 id=\"安装主动推送插件：hexo-baidu-url-submit\">安装主动推送插件：<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/huiwang/hexo-baidu-url-submit\">hexo-baidu-url-submit</a></h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-baidu-url-submit --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"然后打开hexo配置文件，在末尾加入以下配置：\">然后打开<code>hexo配置文件</code>，在末尾加入以下配置：</h4>\n<pre class=\"line-numbers language-yml\" data-language=\"yml\"><code class=\"language-yml\"><span class=\"token comment\"># hexo-baidu-url-submit  百度主动推送</span>\n<span class=\"token key atrule\">baidu_url_submit</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span> <span class=\"token comment\"># 提交最新的一个链接</span>\n  <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//blog.17lai.site <span class=\"token comment\"># 在百度站长平台中注册的域名</span>\n  <span class=\"token key atrule\">token</span><span class=\"token punctuation\">:</span> xxxxxxx <span class=\"token comment\"># 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span>\n  <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> baidu_urls.txt <span class=\"token comment\"># 文本文档的地址， 新链接会保存在此文本文档里</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>密匙的获取是在百度的自动提交的主动推送那里。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1120210911153349.png\" alt=\"\"></p>\n<h4 id=\"再加入新的deploy：\">再加入新的<code>deploy</code>：</h4>\n<pre class=\"line-numbers language-yml\" data-language=\"yml\"><code class=\"language-yml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> baidu_url_submitter<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>如图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1120210911153357.png\" alt=\"\"></p>\n<p>这样每次执行 <code>hexo d</code> 的时候，新的链接就会被推送了。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo clean\n$ hexo g\n$ hexo d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>推送成功时,会有如下终端提示!</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/1820210918203209.png\" alt=\"baidu_url_submitter\"></p>\n<p>各种不同的推送反馈字段说明<a target=\"_blank\" rel=\"noopener\" href=\"https://ziyuan.baidu.com/college/courseinfo?id=267&amp;page=2#h2_article_title12\">点我</a>查看，一般来说，推送失败基本都是地址不相符造成的，我们只需对比<code>baidu_url_submit</code>在<code>public</code>中生成的<code>baidu_urls.txt</code>的地址,与自己填写在<code>host</code>字段中的地址对比看是否一样即可。</p>\n<h3 id=\"Github-Action-自动提交SEO方式\">Github Action 自动提交SEO方式</h3>\n<h4 id=\"安装插件-2\">安装插件</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i hexo-seo-autopush --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"配置-2\">配置</h4>\n<p>在hexo 的config.yml里添加</p>\n<p>hexo-seo-autopush配置</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># enable: 开启/关闭 推送</span>\n<span class=\"token comment\"># count: 每次提交最新的10篇文章</span>\n<span class=\"token comment\"># https://github.com/lete114/hexo-seo-autopush</span>\n<span class=\"token key atrule\">hexo_seo_autopush</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">baidu</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span>\n  <span class=\"token key atrule\">bing</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n  <span class=\"token key atrule\">google</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n    <span class=\"token key atrule\">google_file</span><span class=\"token punctuation\">:</span> google_service_account.json <span class=\"token comment\"># 谷歌服务账户</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>添加<code>Google Push</code>配置和解决push后没有GitHub Actions <code>.github\\workflows\\AutoPush.yml</code>文件的问题</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Deployment</span>\n<span class=\"token comment\">## Docs: https://hexo.io/docs/one-command-deployment</span>\n<span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n   <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n     <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/lete114/Test.git\n     <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> main\n     <span class=\"token key atrule\">ignore_hidden</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>  <span class=\"token comment\"># 忽略隐藏文件及文件夹(目录)</span>\n   <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> GooglePush <span class=\"token comment\"># 谷歌提交</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"获取站长平台密钥\">获取站长平台密钥</h3>\n<h4 id=\"Baidu-Key\">Baidu Key</h4>\n<ol>\n<li>打开百度站长平台，点击左侧的普通收录https://ziyuan.baidu.com/<br>\n<img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/2120210921065417.png\" alt=\"\"></li>\n</ol>\n<h4 id=\"Bing-Key\">Bing Key</h4>\n<ol>\n<li>打开Bing站长平台，https://www.bing.com/webmasters/home</li>\n<li>点击右上角头像 旁边的齿轮，跟着下图操作<br>\n<img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/2120210921065427.png\" alt=\"\"></li>\n</ol>\n<h4 id=\"Google-Key\">Google Key</h4>\n<blockquote>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://cloud.google.com/docs/authentication/production?hl=zh-cn\">Google Wiki</a>， 使用参考。</p>\n</blockquote>\n<ol>\n<li>\n<p>打开Google indexing API<a target=\"_blank\" rel=\"noopener\" href=\"https://console.developers.google.com/flows/enableapi?apiid=indexing.googleapis.com&amp;credential=client_key\">官网</a></p>\n</li>\n<li>\n<p>选择创建项目，点击继续</p>\n</li>\n<li>\n<p>点击转到凭据页面</p>\n</li>\n<li>\n<p>跟着如下图片步骤</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/2120210921065438.png\" alt=\"GoogleProof\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/2120210921065446.png\" alt=\"GoogleAddProof\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/2120210921065512.png\" alt=\"GoogleNone\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/2120210921065454.png\" alt=\"GoogleKey\"></p>\n<p>json文件内的内容</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"service_account\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"project_id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"elated-guild-298003\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"private_key_id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cf58d669c0e8c8e082b2c403ade5e2548078e384\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"private_key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDEAJw89yeylRrA\\nB+bzOAfQQNgOCABIwEKCy5mMxWSaiXy2RktyCJWjMR2Pgz770NJgClQHPJjsFn0c\\nukHufpnuiX3VPlimLANPCRFdU/qp+yiaw4quIhYF1UZJkhmhL30anghUcvi+r9hQ\\nw+RwcKrgA4EUzqUJaPdvjtzSoo315PPGfR91ASD5S8gE02yVI8igtYMX7v2x1JYR\\n7PwHJwOVemiM9lot8ilvoUbV4BU0vSlwFoxKMJAbEXTmJjEKQi9992rcMW0GzXO8\\ncHldUUtURXkt3VFjYTH27KhHiTkTXw+uZRBu1rkubDJkS8lGIWN7Fc/r4HMMCVTu\\nXPS6HbJ/AgMBAAECggEANSS7OBaFd3jRL3cVCiZLjA5A5pEJzq/+eKtOn2oYDISx\\nwVRO+YTVWdGj47kg1zM4D11NikbGaeDxHFxuKwW9o/04lpyYebneTcw2Hpl6EiOs\\nz0WssOlCEmPQ8nrAI0GWiKSHuqoPwtg37TIoGsqZsjKRCby759DDokZYnm3/0sc+\\niEllT0ZyBZhGDzyguVLEdCIR2P02q/hQzLyd6ejWGGwZebImbGoILhmuOjVrco0p\\nV0JbrrNskjM5Epe7w+CpGftEASJ7Dxa8oj0qIT6cyAipra2AZAGnG9jrLcWpJuhu\\nvNeDIFnTfpNEac+khXZZE2++MIQfTX9wGJc8tox2vQKBgQD6yiNvAL7sxExiy6ER\\ntLtFQ3bvmMpKRFGvFOyPOtMbmjZ3D1GEtNNKGH4v1TI+tncEy7Q5Dm7nWwpi8yvL\\nbh8xKghelAc/CU1nw0xDEDCkMbAwpFg5A5ZDImy3LZsQh0kNXniIMy1vMSt5yLKS\\n80gXQKGCxG8t3rP8Qd/2a55g1QKBgQDIExP1nG9sHJaigmitEUwr0Ow6Shqr56Me\\nd7995gaV1oLWWCQzrXt/viWkb1W5ZGIxzcWNWz99m4CbvqfewRr598Eenald0csN\\nVcIEk+0C+6KqA+jU9Tfs2zow/C7JuKULP2N++o0EoSz/ngokP7f1yLOYbr507v/R\\n0cLElQBQAwKBgAbxDWYHKUG4dTzO0hiBXiWepm4fVooTtgcYlyunvywmapeFDwaT\\nUr3cS7HbPtbJiiXR1Z02rw8sT+9JN88brzVXKoAjrMer5D6ZA0Vf71i8H1pZUi/R\\nz5jwHP48/uvIMtdx4/gxInLPc5qdWYQDw90Q5ueNtF4aqfSzhhV2CR45AoGBAJN9\\nPOF6iMjx6jmyWOf8MGK8iOgPaMoA4Ea9j/SHdaNPlvPb1hQid0AcNDObv14Dmj+M\\nqW0jLxKxZ4VobufPAsvyz/J51zjKRx11cqldQwNH7QnYB/O1MZzxn1wtC3C5JTG9\\ncONSYFJhXoKxRliigEI3ye089jnNVdifAS1ZiflxAoGBANTX1fEMEeNuYU0v3rtd\\n5CkPZg4TNZ+y2MGl5xR1LdIgrJ8c9xKoW4rpp7SsOIvHpWX494f90D7o9uFEGSQ4\\nyQK53jVzJ0ekGV5BdPF3n3/2j2VEqFLHi7LL4CJSxr6ci7OfBoHOGE8odhevQCCK\\njnFzEin0QsBEgIC73fBh6XcH\\n-----END PRIVATE KEY-----\\n\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"client_email\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"googleindexing@elated-guild-298003.iam.gserviceaccount.com\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"client_id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"103034240916368863393\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"auth_uri\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://accounts.google.com/o/oauth2/auth\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"token_uri\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://oauth2.googleapis.com/token\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"auth_provider_x509_cert_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://www.googleapis.com/oauth2/v1/certs\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"client_x509_cert_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://www.googleapis.com/robot/v1/metadata/x509/googleindexing%40elated-guild-298003.iam.gserviceaccount.com\"</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>打开<a target=\"_blank\" rel=\"noopener\" href=\"https://search.google.com/search-console\">谷歌站长平台</a><br>\n<img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/2120210921065520.png\" alt=\"GoogleAddUser\"><br>\n<img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/2120210921065527.png\" alt=\"GoogleAddEmail\"></p>\n</li>\n</ol>\n<h4 id=\"配置博客仓库\">配置博客仓库</h4>\n<ol>\n<li>\n<p>Name必须是<code>baidu_token</code>和<code>bing_apikey</code>(不区分大小写)</p>\n</li>\n<li>\n<p>添加完成后<br>\n<img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/2120210921065607.png\" alt=\"Secrets-token\"></p>\n</li>\n</ol>\n<h4 id=\"谷歌的一些问题\">谷歌的一些问题</h4>\n<p>触发谷歌提交的命令是<code>hexo d</code></p>\n<p>由于谷歌需要配合Google indexing API平台提供的json进行提交，而这个json格式不能泄露<br>\n为防止json泄露只能本地提交，将json放到hexo根目录可自定义重命名(必须对应插件的配置)<br>\n<code>如果你的使用Github Actions自动部署的话请把仓库设置为私有</code><br>\n<img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/2120210921065535.png\" alt=\"GoogleConfig\"></p>\n<h4 id=\"提交成功返回状态码\">提交成功返回状态码</h4>\n<p>以上步骤完成后即可<code>hexo d</code>部署了</p>\n<ol>\n<li>\n<p>看看Github仓库是否上传成功<br>\n<img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/2120210921065614.png\" alt=\"\"></p>\n</li>\n<li>\n<p>点击<code>Actions</code>查看是否执行<br>\n<img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/2120210921065616.png\" alt=\"\"></p>\n</li>\n<li>\n<p>点击 Auto Push—-&gt;build—–&gt;点击第2步 自动提交</p>\n<p>如图43行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/09/2120210921065543.png\" alt=\"\"></p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token comment\">// baidu返回的结果</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">\"remain\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2060</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 表示当天剩余的可推送url条数</span>\n\t<span class=\"token property\">\"success\"</span><span class=\"token operator\">:</span> <span class=\"token number\">47</span>    <span class=\"token comment\">// 成功推送的url条数</span>\n<span class=\"token punctuation\">}</span> \n<span class=\"token comment\">// bing返回结果(错误)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">\"ErrorCode\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 错误 </span>\n\t<span class=\"token property\">\"Message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ERROR!!! Quota remaining for today: 2, Submitted: 47\"</span>\n    <span class=\"token comment\">// Message：表示 你目前只剩2个url推送，而你现在推送的是47条url</span>\n    <span class=\"token comment\">// bing新用户开始每日只有10个推送额，据我了解连续推送10天(这我也不确定)</span>\n    <span class=\"token comment\">// 如果出现这个错误的话，你就只能先手动添加等系统给你分配额了(分配9999)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// bing返回结果(成功)</span>\n<span class=\"token punctuation\">{</span><span class=\"token property\">\"d\"</span><span class=\"token operator\">:</span><span class=\"token null keyword\">null</span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>Google 返回状态码</p>\n<p>成功返回</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">Google response<span class=\"token operator\">:</span>  <span class=\"token punctuation\">{</span>\n  urlNotificationMetadata<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> 'https<span class=\"token operator\">:</span><span class=\"token comment\">//blog.lete114.top/article/hexo-seo-autopush.html',</span>\n    latestUpdate<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> 'https<span class=\"token operator\">:</span><span class=\"token comment\">//blog.lete114.top/article/hexo-seo-autopush.html',</span>\n      type<span class=\"token operator\">:</span> 'URL_UPDATED'<span class=\"token punctuation\">,</span>\n      notifyTime<span class=\"token operator\">:</span> '<span class=\"token number\">2020</span><span class=\"token number\">-12</span>-08T02<span class=\"token operator\">:</span><span class=\"token number\">31</span><span class=\"token operator\">:</span><span class=\"token number\">32</span>.871417693Z'\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>出现此错误需要: 翻墙</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">FetchError: request to https://www.googleapis.com/oauth2/v4/token failed, reason: connect ETIMEDOUT <span class=\"token number\">172.217</span>.27.138:443\n    at ClientRequest.<span class=\"token operator\">&lt;</span>anonymous<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">(</span>D:<span class=\"token punctuation\">\\</span>Lete<span class=\"token punctuation\">\\</span>GitHub<span class=\"token punctuation\">\\</span>Hexo-Butterfly<span class=\"token punctuation\">\\</span>node_modules<span class=\"token punctuation\">\\</span>node-fetch<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>index.js:1461:11<span class=\"token punctuation\">)</span>\n    at ClientRequest.emit <span class=\"token punctuation\">(</span>events.js:321:20<span class=\"token punctuation\">)</span>\n    at TLSSocket.socketErrorListener <span class=\"token punctuation\">(</span>_http_client.js:426:9<span class=\"token punctuation\">)</span>\n    at TLSSocket.emit <span class=\"token punctuation\">(</span>events.js:321:20<span class=\"token punctuation\">)</span>\n    at emitErrorNT <span class=\"token punctuation\">(</span>internal/streams/destroy.js:92:8<span class=\"token punctuation\">)</span>\n    at emitErrorAndCloseNT <span class=\"token punctuation\">(</span>internal/streams/destroy.js:60:3<span class=\"token punctuation\">)</span>\n    at processTicksAndRejections <span class=\"token punctuation\">(</span>internal/process/task_queues.js:84:21<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  message: <span class=\"token string\">'request to https://www.googleapis.com/oauth2/v4/token failed, reason: connect ETIMEDOUT 172.217.27.138:443'</span>,\n  type: <span class=\"token string\">'system'</span>,\n  errno: <span class=\"token string\">'ETIMEDOUT'</span>,\n  code: <span class=\"token string\">'ETIMEDOUT'</span>,\n  config: <span class=\"token punctuation\">{</span>\n    method: <span class=\"token string\">'POST'</span>,\n    url: <span class=\"token string\">'https://www.googleapis.com/oauth2/v4/token'</span>,\n    data: <span class=\"token punctuation\">{</span>\n      grant_type: <span class=\"token string\">'urn:ietf:params:oauth:grant-type:jwt-bearer'</span>,\n      assertion: 'eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJnb29nbGVpbmRleGluZ0BzdGF0ZWx5LXRyYW5zaXQtMjk3NzE1LmlhbS5nc2VydmljZWFjY291bnQuY29tIiwic2NvcGUiOiJodHRwczovL3d3d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n<h3 id=\"本地主动提交SEO\">本地主动提交SEO</h3>\n<blockquote>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/abnerwei/hexo-url-submission\">hexo-url-submission</a></p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://abnerwei.com/wiki/hexo/url-submission\">Wiki</a></p>\n</blockquote>\n<h4 id=\"安装方法\"><strong>安装方法</strong></h4>\n<ol>\n<li>在终端中输入：</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i hexo-url-submission<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"2\">\n<li>在 <code>blog/_config.yml</code> 文件中添加配置：</li>\n</ol>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">url_submission</span><span class=\"token punctuation\">:</span>\n   <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n   <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'latest'</span> <span class=\"token comment\"># latest or all( latest: modified pages; all: posts &amp; pages)</span>\n   <span class=\"token key atrule\">channel</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'baidu'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bing'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'shenma'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># Included channels are `baidu`, `google`, `bing`, `shenma`</span>\n   <span class=\"token key atrule\">prefix</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'/post'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/wiki'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># URL prefix</span>\n   <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span> <span class=\"token comment\"># Submit limit</span>\n   <span class=\"token key atrule\">proxy</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\"># Set the proxy used to submit urls to Google</span>\n   <span class=\"token key atrule\">urls_path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'submit_url.txt'</span> <span class=\"token comment\"># URL list file path</span>\n   <span class=\"token key atrule\">baidu_token</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\"># Baidu private key</span>\n   <span class=\"token key atrule\">bing_token</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\"># Bing private key</span>\n   <span class=\"token key atrule\">google_key</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\"># Google key path (e.g. `google_key.json` or `data/google_key.json`)</span>\n   <span class=\"token key atrule\">shenma_token</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\"># ShenMa private key</span>\n   <span class=\"token key atrule\">shenma_user</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\"># Username used when registering</span>\n   <span class=\"token key atrule\">sitemap</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\"># Sitemap path(e.g. the url is like this https://abnerwei.com/baidusitemap.xml, you can fill in `baidusitemap.xml`)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"更新方法\"><strong>更新方法</strong></h4>\n<p>在站点根目录执行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> update hexo-url-submission<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"deploy\">deploy</h4>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> us_baidu_deployer\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> us_bing_deployer\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> us_google_deployer\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> us_shenma_deployer<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"good-job\">good job</h4>\n<p>Run:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo clean <span class=\"token operator\">&amp;&amp;</span> hexo g <span class=\"token operator\">&amp;&amp;</span> hexo d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>enjoy it!</p>\n<h2 id=\"提交-robots-txt\">提交 robots.txt</h2>\n<h2 id=\"robots-txt是干嘛的？\">robots.txt是干嘛的？</h2>\n<blockquote>\n<p><code>robots.txt</code> 是一种存放于网站根目录下的 <code>ASCII</code> 编码的文本文件，它的作用是告诉搜索引擎此网站中哪些内容是可以被爬取的，哪些是禁止爬取的。<br>\n<code>robots.txt</code> 要放在 <code>Hexo根目录</code> 下的 <code>source</code> 文件夹中。</p>\n</blockquote>\n<p>每个人站点目录可能不太一样，可以参考下我的 <code>robots.txt</code> 文件，内容如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">User-agent</span><span class=\"token punctuation\">:</span> *\n<span class=\"token key atrule\">Allow</span><span class=\"token punctuation\">:</span> /\n<span class=\"token key atrule\">Allow</span><span class=\"token punctuation\">:</span> /posts/\n<span class=\"token key atrule\">Disallow</span><span class=\"token punctuation\">:</span> /about/\n<span class=\"token key atrule\">Disallow</span><span class=\"token punctuation\">:</span> /archives/\n<span class=\"token key atrule\">Disallow</span><span class=\"token punctuation\">:</span> /js/\n<span class=\"token key atrule\">Disallow</span><span class=\"token punctuation\">:</span> /css/\n<span class=\"token key atrule\">Disallow</span><span class=\"token punctuation\">:</span> /contact/\n<span class=\"token key atrule\">Disallow</span><span class=\"token punctuation\">:</span> /fonts/\n<span class=\"token key atrule\">Disallow</span><span class=\"token punctuation\">:</span> /friends/\n<span class=\"token key atrule\">Disallow</span><span class=\"token punctuation\">:</span> /libs/\n<span class=\"token key atrule\">Disallow</span><span class=\"token punctuation\">:</span> /medias/\n<span class=\"token key atrule\">Disallow</span><span class=\"token punctuation\">:</span> /page/\n<span class=\"token key atrule\">Disallow</span><span class=\"token punctuation\">:</span> /tags/\n<span class=\"token key atrule\">Disallow</span><span class=\"token punctuation\">:</span> /categories/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>更多关于 <code>robots.txt</code> 的写法参见 https://blog.csdn.net/fanghua_vip/article/details/79535639</p>\n<p>编写完以上内容再重新部署一下，然后到百度资源平台的<code>数据监控</code>-&gt;<code>Robots</code>点击<code>检测并更新</code> 看能不能检测到。</p>\n<h2 id=\"配置-Nofollow\">配置 Nofollow</h2>\n<ul>\n<li>nofollow 是HTML页面中 <code>a标签</code> 的 属性值。</li>\n<li>这个属性的作用是：告诉搜索引擎的爬虫不要追踪该链接，为了对抗博客垃圾留言信息</li>\n</ul>\n<h2 id=\"URL优化\">URL优化</h2>\n<p>一般来说，SEO搜索引擎优化认为，网站的最佳结构是 <strong>用户从首页点击三次就可以到达任何一个页面</strong>，但是我们使用<code>Hexo</code>编译的站点结构的<code>URL</code>是：<code>域名/年/月/日/文章标题</code>四层的结构，这样的<code>URL</code>结构很不利于<code>SEO</code>，爬虫就会经常爬不到我们的文章，于是，我们需要优化一下网站文章的<code>URL</code></p>\n<p><strong>方案一</strong>：</p>\n<p>直接改成<code>域名/文章标题</code>的形式，在<code>Hexo配置文件</code>中修改<code>permalink</code>如下：</p>\n<pre class=\"line-numbers language-yml\" data-language=\"yml\"><code class=\"language-yml\"><span class=\"token comment\"># URL</span>\n<span class=\"token comment\">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span>\n<span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//blog.sky03.cn\n<span class=\"token key atrule\">root</span><span class=\"token punctuation\">:</span> /\n<span class=\"token key atrule\">permalink</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">:</span>title.html\npermalink_defaults<span class=\"token punctuation\">:</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>这个方式有个不好的地方：</strong></p>\n<p>直接以<code>文章的标题</code>作为URL，而我们所写的文章的标题一般都是中文，但是URL只能用字母数字和标点符号表示，所以中文的URL只能被转义成一堆符号，而且还特别长。</p>\n<p><strong>方案二</strong>：</p>\n<p>安装固定链接插件：<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/rozbo/hexo-abbrlink\">hexo-abbrlink</a></p>\n<p>插件作用：自动为每篇文章生成一串数字作每篇文章的URI地址。每篇文章的<code>Front-matter</code>中会自动增加一个配置项：<code>abbrlink: xxxxx</code>，该项的值就是当前文章的URI地址。</p>\n<ol>\n<li>\n<p>Hexo根目录执行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-abbrlink --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><code>Hexo配置文件</code>末尾加入以下配置：</p>\n<pre class=\"line-numbers language-yml\" data-language=\"yml\"><code class=\"language-yml\"><span class=\"token comment\"># hexo-abbrlink config 、固定文章地址插件</span>\n<span class=\"token key atrule\">abbrlink</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">alg</span><span class=\"token punctuation\">:</span> crc16  <span class=\"token comment\">#算法选项：crc16、crc32，区别见之前的文章，这里默认为crc16丨crc32比crc16复杂一点，长一点</span>\n  <span class=\"token key atrule\">rep</span><span class=\"token punctuation\">:</span> dec    <span class=\"token comment\">#输出进制：十进制和十六进制，默认为10进制。丨dec为十进制，hex为十六进制</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p><code>Hexo配置文件</code>中修改<code>permalink</code>如下：</p>\n<pre class=\"line-numbers language-yml\" data-language=\"yml\"><code class=\"language-yml\"><span class=\"token comment\"># URL</span>\n<span class=\"token comment\">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span>\n<span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//blog.17lai.site\n<span class=\"token key atrule\">root</span><span class=\"token punctuation\">:</span> /\n<span class=\"token key atrule\">permalink</span><span class=\"token punctuation\">:</span> posts/<span class=\"token punctuation\">:</span>abbrlink.html\npermalink_defaults<span class=\"token punctuation\">:</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ol>\n<p>这样站点结构就变成了：<code>域名/posts/xxx.html</code></p>\n<h2 id=\"异步加载JS\">异步加载JS</h2>\n<p><strong>方法</strong>：将JS文件的引入，放到HTML的body结束标签的上方</p>\n<p><strong>例</strong>：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Hello World!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n        xxxxx....\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>xx/xx.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>原理</strong>：首先要明白，HTML的加载是从上往下一行一行解释执行的，把js文件的引入放到下面，这样就会先把HTML页面展示出来，然后再加载js。这样看起来的效果就是，大体的页面先出来，而js让它慢慢加载执行，如果你把js放到网页的上方，效果就是必须要加载完js才能继续展示网页，体验极差。</p>\n<p><strong>注意</strong>：原主题的js文件尽量不要动，我们只需将自己增加的一些js按照异步加载的方式做即可，比如一些音乐js插件、实时在线聊天js插件等放到最后即可！因为这些文件要加载的东西很多。</p>\n<h2 id=\"字蛛压缩字体\">字蛛压缩字体</h2>\n<blockquote>\n<p>在上面我们介绍了如何在网站上引用自己喜欢的字体，但是这样会出现一个问题：字体文件太大！（尤其是中文，有时候为了几个字引入一个数十兆的字体文件，得不偿失），所有需要字体压缩！</p>\n</blockquote>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"http://font-spider.org/\">官网</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/aui/font-spider\">GitHub</a></p>\n<h3 id=\"使用场景\">使用场景</h3>\n<p>你的网站中需要自定义字体（额外添加一些普通电脑中没有的字体），但是一般字体是包含很多字符的，这就导致字体文件的体积很大</p>\n<h3 id=\"字蛛作用\">字蛛作用</h3>\n<p>字蛛就是自动检测网站的 CSS 与 HTML 文件中的自定义字体（额外加的字体），并将网站中<strong>用到的文字</strong>重新打包成一个新的字体文件，并自动引入；</p>\n<p>而<strong>没用到的文字</strong>就会删除，从而达到压缩字体文件体积的作用。</p>\n<h4 id=\"安装-5\">安装</h4>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">npm install font-spider -g<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"在-CSS-中使用-WebFont：\">在 CSS 中使用 WebFont：</h3>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/*声明 WebFont*/</span>\n<span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'pinghei'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'../font/pinghei.eot'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">src</span><span class=\"token punctuation\">:</span>\n    <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'../font/pinghei.eot?#font-spider'</span><span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'embedded-opentype'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'../font/pinghei.woff'</span><span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'woff'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'../font/pinghei.ttf'</span><span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'truetype'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'../font/pinghei.svg'</span><span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'svg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-style</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*使用选择器指定字体*/</span>\n<span class=\"token selector\">.home h1, .demo &gt; .test</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'pinghei'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<ol>\n<li>@font-face 中的 src 定义的 .ttf 文件必须存在，其余的格式将由工具自动生成</li>\n<li>开发阶段请使用相对路径的 CSS 与 WebFont</li>\n</ol>\n</blockquote>\n<h3 id=\"运行-font-spider-命令：\">运行 font-spider 命令：</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">font-spider ./demo/*.html<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>页面依赖的字体将会自动压缩好，原 .ttf 字体会备份</p>\n</blockquote>\n<h2 id=\"webp图像大小优化\">webp图像大小优化</h2>\n<blockquote>\n<p>把所有图像都转换为webp格式，可以极大减小图片体积，加快加载速度。</p>\n</blockquote>\n<h2 id=\"gulp-体积压缩\">gulp 体积压缩</h2>\n<blockquote>\n<ul>\n<li>减小体积，加快加载速度</li>\n<li>因为 hexo 生成的 html、css、js 等都有很多的空格或者换行，而空格和换行也是占用字节的，所以需要将空格换行去掉也就是我要进行的 “压缩”。</li>\n</ul>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp -g\n<span class=\"token comment\"># 安装各种小功能模块  执行这步的时候，可能会提示权限的问题，最好以管理员模式执行</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save\n<span class=\"token comment\"># 额外的功能模块</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel/core --save\n \n或者使用yarn \n \n<span class=\"token function\">yarn</span> global <span class=\"token function\">add</span> gulp\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel/core<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<ul>\n<li>npm下载太慢怎么办？ 修改国内淘宝源加速，<a href=\"https://blog.17lai.site/posts/40300608/#npm%E4%B8%8B%E8%BD%BD%E5%8A%A0%E9%80%9F\">戳</a></li>\n</ul>\n</blockquote>\n<p>然后，在根目录新增 <code>gulpfile.js</code> :</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">var gulp = require(\"gulp\");\nvar debug = require(\"gulp<span class=\"token punctuation\">-</span>debug\");\nvar cleancss = require(\"gulp<span class=\"token punctuation\">-</span>clean<span class=\"token punctuation\">-</span>css\"); //css压缩组件\nvar uglify = require(\"gulp<span class=\"token punctuation\">-</span>uglify\"); //js压缩组件\nvar htmlmin = require(\"gulp<span class=\"token punctuation\">-</span>htmlmin\"); //html压缩组件\nvar htmlclean = require(\"gulp<span class=\"token punctuation\">-</span>htmlclean\"); //html清理组件\nvar imagemin = require(\"gulp<span class=\"token punctuation\">-</span>imagemin\"); //图片压缩组件\nvar changed = require(\"gulp<span class=\"token punctuation\">-</span>changed\"); //文件更改校验组件\nvar gulpif = require(\"gulp<span class=\"token punctuation\">-</span>if\"); //任务 帮助调用组件\nvar plumber = require(\"gulp<span class=\"token punctuation\">-</span>plumber\"); //容错组件（发生错误不跳出任务，并报出错误内容）\nvar isScriptAll = true; //是否处理所有文件，(true<span class=\"token punctuation\">|</span>处理所有文件)(false<span class=\"token punctuation\">|</span>只处理有更改的文件)\nvar isDebug = true; //是否调试显示 编译通过的文件\nvar gulpBabel = require(\"gulp<span class=\"token punctuation\">-</span>babel\");\nvar es2015Preset = require(\"babel<span class=\"token punctuation\">-</span>preset<span class=\"token punctuation\">-</span>es2015\");\nvar del = require(\"del\");\nvar Hexo = require(\"hexo\");\nvar hexo = new Hexo(process.cwd()<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>); // 初始化一个hexo对象\n\n// 清除public文件夹\ngulp.task(\"clean\"<span class=\"token punctuation\">,</span> function () <span class=\"token punctuation\">{</span>\n    return del(<span class=\"token punctuation\">[</span><span class=\"token string\">\"public/**/*\"</span><span class=\"token punctuation\">]</span>);\n<span class=\"token punctuation\">}</span>);\n\n// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return\n// 创建静态页面 （等同 hexo generate）\ngulp.task(\"generate\"<span class=\"token punctuation\">,</span> function () <span class=\"token punctuation\">{</span>\n    return hexo.init().then(function () <span class=\"token punctuation\">{</span>\n        return hexo\n            .call(\"generate\"<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token key atrule\">watch</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n            <span class=\"token punctuation\">}</span>)\n            .then(function () <span class=\"token punctuation\">{</span>\n                return hexo.exit();\n            <span class=\"token punctuation\">}</span>)\n            .catch(function (err) <span class=\"token punctuation\">{</span>\n                return hexo.exit(err);\n            <span class=\"token punctuation\">}</span>);\n    <span class=\"token punctuation\">}</span>);\n<span class=\"token punctuation\">}</span>);\n\n// 启动Hexo服务器\ngulp.task(\"server\"<span class=\"token punctuation\">,</span> function () <span class=\"token punctuation\">{</span>\n    return hexo\n        .init()\n        .then(function () <span class=\"token punctuation\">{</span>\n            return hexo.call(\"server\"<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>);\n        <span class=\"token punctuation\">}</span>)\n        .catch(function (err) <span class=\"token punctuation\">{</span>\n            console.log(err);\n        <span class=\"token punctuation\">}</span>);\n<span class=\"token punctuation\">}</span>);\n\n// 部署到服务器\ngulp.task(\"deploy\"<span class=\"token punctuation\">,</span> function () <span class=\"token punctuation\">{</span>\n    return hexo.init().then(function () <span class=\"token punctuation\">{</span>\n        return hexo\n            .call(\"deploy\"<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token key atrule\">watch</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n            <span class=\"token punctuation\">}</span>)\n            .then(function () <span class=\"token punctuation\">{</span>\n                return hexo.exit();\n            <span class=\"token punctuation\">}</span>)\n            .catch(function (err) <span class=\"token punctuation\">{</span>\n                return hexo.exit(err);\n            <span class=\"token punctuation\">}</span>);\n    <span class=\"token punctuation\">}</span>);\n<span class=\"token punctuation\">}</span>);\n\n// 压缩public目录下的js文件\ngulp.task(\"compressJs\"<span class=\"token punctuation\">,</span> function () <span class=\"token punctuation\">{</span>\n    return gulp\n        .src(<span class=\"token punctuation\">[</span><span class=\"token string\">\"./public/**/*.js\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"!./public/libs/**\"</span><span class=\"token punctuation\">]</span>) //排除的js\n        .pipe(gulpif(<span class=\"token tag\">!isScriptAll</span><span class=\"token punctuation\">,</span> changed(\"./public\")))\n        .pipe(gulpif(isDebug<span class=\"token punctuation\">,</span> debug(<span class=\"token punctuation\">{</span> <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Compress JS:\"</span> <span class=\"token punctuation\">}</span>)))\n        .pipe(plumber())\n        .pipe(\n            gulpBabel(<span class=\"token punctuation\">{</span>\n                <span class=\"token key atrule\">presets</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>es2015Preset<span class=\"token punctuation\">]</span> // es5检查机制\n            <span class=\"token punctuation\">}</span>)\n        )\n        .pipe(uglify()) //调用压缩组件方法uglify()<span class=\"token punctuation\">,</span>对合并的文件进行压缩\n        .pipe(gulp.dest(\"./public\")); //输出到目标目录\n<span class=\"token punctuation\">}</span>);\n\n// 压缩public目录下的css文件\ngulp.task(\"compressCss\"<span class=\"token punctuation\">,</span> function () <span class=\"token punctuation\">{</span>\n    var option = <span class=\"token punctuation\">{</span>\n        <span class=\"token key atrule\">rebase</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token key atrule\">//advanced</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span class=\"token punctuation\">,</span> //类型：Boolean 默认：true <span class=\"token punctuation\">[</span>是否开启高级优化（合并选择器等）<span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">compatibility</span><span class=\"token punctuation\">:</span> \"ie7\" //保留ie7及以下兼容写法 类型：String 默认：''or'<span class=\"token important\">*'</span> <span class=\"token punctuation\">[</span>启用兼容模式； 'ie7'：IE7兼容模式，'ie8'：IE8兼容模式，'<span class=\"token important\">*'：IE9+兼容模式</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">//keepBreaks</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span class=\"token punctuation\">,</span> //类型：Boolean 默认：false <span class=\"token punctuation\">[</span>是否保留换行<span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">//keepSpecialComments</span><span class=\"token punctuation\">:</span> '<span class=\"token important\">*'</span> //保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀\n    <span class=\"token punctuation\">}</span>;\n    return gulp\n        .src(<span class=\"token punctuation\">[</span><span class=\"token string\">\"./public/**/*.css\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"!./public/**/*.min.css\"</span><span class=\"token punctuation\">]</span>) //排除的css\n        .pipe(gulpif(<span class=\"token tag\">!isScriptAll</span><span class=\"token punctuation\">,</span> changed(\"./public\")))\n        .pipe(gulpif(isDebug<span class=\"token punctuation\">,</span> debug(<span class=\"token punctuation\">{</span> <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Compress CSS:\"</span> <span class=\"token punctuation\">}</span>)))\n        .pipe(plumber())\n        .pipe(cleancss(option))\n        .pipe(gulp.dest(\"./public\"));\n<span class=\"token punctuation\">}</span>);\n\n// 压缩public目录下的html文件\ngulp.task(\"compressHtml\"<span class=\"token punctuation\">,</span> function () <span class=\"token punctuation\">{</span>\n    var cleanOptions = <span class=\"token punctuation\">{</span>\n        <span class=\"token key atrule\">protect</span><span class=\"token punctuation\">:</span> /&lt;\\<span class=\"token tag\">!--%fooTemplate</span>\\b.<span class=\"token important\">*?%--&gt;/g</span><span class=\"token punctuation\">,</span> //忽略处理\n        <span class=\"token key atrule\">unprotect</span><span class=\"token punctuation\">:</span> /&lt;script <span class=\"token punctuation\">[</span>^<span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">]</span><span class=\"token important\">*\\btype=\"text\\/x-handlebars-template\"</span><span class=\"token punctuation\">[</span>\\s\\S<span class=\"token punctuation\">]</span>+<span class=\"token punctuation\">?</span>&lt;\\/script<span class=\"token punctuation\">&gt;</span>/gi //特殊处理\n    <span class=\"token punctuation\">}</span>;\n    var minOption = <span class=\"token punctuation\">{</span>\n        <span class=\"token key atrule\">collapseWhitespace</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span class=\"token punctuation\">,</span> //压缩HTML\n        <span class=\"token key atrule\">collapseBooleanAttributes</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span class=\"token punctuation\">,</span> //省略布尔属性的值 &lt;input checked=\"true\"/<span class=\"token punctuation\">&gt;</span> ==<span class=\"token punctuation\">&gt;</span> &lt;input /<span class=\"token punctuation\">&gt;</span>\n        <span class=\"token key atrule\">removeEmptyAttributes</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span class=\"token punctuation\">,</span> //删除所有空格作属性值 &lt;input id=\"\" /<span class=\"token punctuation\">&gt;</span> ==<span class=\"token punctuation\">&gt;</span> &lt;input /<span class=\"token punctuation\">&gt;</span>\n        <span class=\"token key atrule\">removeScriptTypeAttributes</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span class=\"token punctuation\">,</span> //删除&lt;script<span class=\"token punctuation\">&gt;</span>的type=\"text/javascript\"\n        <span class=\"token key atrule\">removeStyleLinkTypeAttributes</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span class=\"token punctuation\">,</span> //删除&lt;style<span class=\"token punctuation\">&gt;</span>和&lt;link<span class=\"token punctuation\">&gt;</span>的type=\"text/css\"\n        <span class=\"token key atrule\">removeComments</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span class=\"token punctuation\">,</span> //清除HTML注释\n        <span class=\"token key atrule\">minifyJS</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span class=\"token punctuation\">,</span> //压缩页面JS\n        <span class=\"token key atrule\">minifyCSS</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span class=\"token punctuation\">,</span> //压缩页面CSS\n        <span class=\"token key atrule\">minifyURLs</span><span class=\"token punctuation\">:</span> true //替换页面URL\n    <span class=\"token punctuation\">}</span>;\n    return gulp\n        .src(\"./public/<span class=\"token important\">**/*.html\")</span>\n        .pipe(gulpif(isDebug<span class=\"token punctuation\">,</span> debug(<span class=\"token punctuation\">{</span> <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Compress HTML:\"</span> <span class=\"token punctuation\">}</span>)))\n        .pipe(plumber())\n        .pipe(htmlclean(cleanOptions))\n        .pipe(htmlmin(minOption))\n        .pipe(gulp.dest(\"./public\"));\n<span class=\"token punctuation\">}</span>);\n\n// 压缩 public/medias 目录内图片\ngulp.task(\"compressImage\"<span class=\"token punctuation\">,</span> function () <span class=\"token punctuation\">{</span>\n    var option = <span class=\"token punctuation\">{</span>\n        <span class=\"token key atrule\">optimizationLevel</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> //类型：Number 默认：3 取值范围：0<span class=\"token punctuation\">-</span>7（优化等级）\n        <span class=\"token key atrule\">progressive</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span class=\"token punctuation\">,</span> //类型：Boolean 默认：false 无损压缩jpg图片\n        <span class=\"token key atrule\">interlaced</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span><span class=\"token punctuation\">,</span> //类型：Boolean 默认：false 隔行扫描gif进行渲染\n        <span class=\"token key atrule\">multipass</span><span class=\"token punctuation\">:</span> false //类型：Boolean 默认：false 多次优化svg直到完全优化\n    <span class=\"token punctuation\">}</span>;\n    return gulp\n        .src(\"./public/medias/<span class=\"token important\">**/*.*\")</span>\n        .pipe(gulpif(<span class=\"token tag\">!isScriptAll</span><span class=\"token punctuation\">,</span> changed(\"./public/medias\")))\n        .pipe(gulpif(isDebug<span class=\"token punctuation\">,</span> debug(<span class=\"token punctuation\">{</span> <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Compress Images:\"</span> <span class=\"token punctuation\">}</span>)))\n        .pipe(plumber())\n        .pipe(imagemin(option))\n        .pipe(gulp.dest(\"./public\"));\n<span class=\"token punctuation\">}</span>);\n// 执行顺序： 清除public目录 <span class=\"token punctuation\">-</span><span class=\"token punctuation\">&gt;</span> 产生原始博客内容 <span class=\"token punctuation\">-</span><span class=\"token punctuation\">&gt;</span> 执行压缩混淆 <span class=\"token punctuation\">-</span><span class=\"token punctuation\">&gt;</span> 部署到服务器\ngulp.task(\n    \"cicd\"<span class=\"token punctuation\">,</span>\n    gulp.series(\n        \"clean\"<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"generate\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compressHtml\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compressCss\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compressJs\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compressImage\"</span><span class=\"token punctuation\">,</span>\n        gulp.parallel(\"deploy\")\n    )\n);\ngulp.task(\n    \"ci\"<span class=\"token punctuation\">,</span>\n    gulp.series(\n        \"clean\"<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"generate\"</span><span class=\"token punctuation\">,</span>\n        gulp.parallel(\"compressHtml\"<span class=\"token punctuation\">,</span> <span class=\"token string\">\"compressCss\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"compressJs\"</span><span class=\"token punctuation\">,</span>\"compressImage\")\n    )\n);\n// 默认任务\ngulp.task(\n    \"default\"<span class=\"token punctuation\">,</span>\n    gulp.series(\n        gulp.parallel(\"compressHtml\"<span class=\"token punctuation\">,</span> <span class=\"token string\">\"compressCss\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"compressJs\"</span><span class=\"token punctuation\">,</span>\"compressImage\")\n    )\n);\n//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>运行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo clean <span class=\"token operator\">&amp;&amp;</span> hexo g <span class=\"token operator\">&amp;&amp;</span> gulp <span class=\"token operator\">&amp;&amp;</span>  hexo g<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>直接在 <code>Hexo</code> 根目录执行 <code>gulp ci</code>，这个命令相当于 hexo cl&amp;&amp;hexo g 并且再把代码和图片压缩。 在 Hexo 根目录执行 gulp cicd ，这个命令与 <code>gulp ci</code>相比是：在最后又加了个 hexo d ，等于说生成、压缩文件后又帮你自动部署了</p>\n<p>如果不想用图片压缩可以把\"compressImage\" 去掉即可</p>\n<h2 id=\"Docker版Imagin\"><code>Docker</code>版<code>Imagin</code></h2>\n<blockquote>\n<p>使用Docker版本的imagemin来压缩图片！一行命令搞定！</p>\n<p>gulp-imagemin相关的依赖，以及配置太TMD复杂了，博主新的Docker里面配置很久没搞定，虽然以前搞定过，囧rz! 如是去找了一下Docker镜像，立马搞定！</p>\n<p><code>docker run -v `pwd`:/work mitakeck/imagemin</code></p>\n<p>源代码 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/mitakeck/docker-imagemin\">mitakeck/docker-imagemin</a></p>\n</blockquote>\n<h2 id=\"Python图片无损压缩\">Python图片无损压缩</h2>\n<blockquote>\n<p><code>git@github.com:xinlin-z/smally.git</code></p>\n<p>说明去项目主页看。有中文说明。</p>\n<p>有些小bug，压缩<code>jpeg</code>时遇到<code>webp</code>文件会退出。个人解决方法是硬链接到另一个目录，然后删除所有其它格式的图片，再进行压缩，嗯，完美！</p>\n</blockquote>\n<h2 id=\"本地搜索优化\">本地搜索优化</h2>\n<p>html、css和js都压缩了，很开心。但是，还有一个大文件没有压缩，就是本地搜索的DB文件search.xml。这个search.xml文件的大小为7.5M，很大。<br>\n打开search.xml文件，发现里面不止包含文章内容，还包含html标签。参考hexo-generator-searchdb，发现可以设置不生成标签。</p>\n<ul>\n<li>修改hexo/_config.yml的localsearch配置为：</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># local search</span>\n<span class=\"token key atrule\">search</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> search.xml\n  <span class=\"token key atrule\">field</span><span class=\"token punctuation\">:</span> post\n  <span class=\"token key atrule\">format</span><span class=\"token punctuation\">:</span> striptags\n  <span class=\"token key atrule\">limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10000</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>重新生成search.xml文件</li>\n</ul>\n<blockquote>\n<ul>\n<li>还可以给search.xml添加上jsdelivr cdn 加速！</li>\n</ul>\n</blockquote>\n<h2 id=\"系列教程-37\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Hexo系列</strong>  <a href=\"https://blog.17lai.site/categories/hexo/atom.xml\"><strong>HexoRSS分类订阅</strong></a></p>\n<p>[三万字教程]基于Hexo的matery主题搭建博客并深度优化完全一站式教程</p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/40300608/\">Hexo Docker环境与Hexo基础配置篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4d8a0b22/\">hexo博客自定义修改篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/9b056c86/\">hexo博客网络优化篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/5311b619/\">hexo博客增强部署篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4a2050e2/\">hexo博客个性定制篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/84b4059a/\">hexo博客常见问题篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/cf0f47fd/\">Hexo Markdown以及各种插件功能测试</a></p>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>markdown 各种其它语法插件</li>\n<li>latex公式支持</li>\n<li>mermaid图表</li>\n<li>plant uml图表</li>\n<li>URL卡片</li>\n<li>bilibili卡片</li>\n<li>github卡片</li>\n<li>豆瓣卡片</li>\n<li>插入音乐和视频</li>\n<li>插入脑图</li>\n</ul>\n</blockquote>\n<p><strong>笔记系列</strong>  <a href=\"https://blog.17lai.site/categories/note/atom.xml\"><strong>Note分类RSS订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/a8535f26/\">完美笔记进化论</a></li>\n</ul>\n<blockquote>\n<p>经历了很长时间，使用了各种各样的方案，最终选择了一种相对完美的方式。docker私有部署运行的joplin，使用markdown语法，github作为图床，picgo作为图像自动上传后端，pypora作为MD编辑器，Snipaste作为截图工具。后备gitlab ee selfhost备份，自建图床VPS多线负载均衡。cloudflare partner cdn加速，jsdelivr加速。</p>\n<ul>\n<li>pigo图床搭建与配置</li>\n<li>Joplin教程</li>\n<li>Snipaste截图工具</li>\n<li>Typora 作为Markdown编辑器最强</li>\n</ul>\n</blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.17lai.fun/posts/e6086437/\">Joplin入门指南&amp;实践方案</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin和使用</li>\n<li>Joplin同步与备份</li>\n<li>Joplin导入与导出</li>\n</ul>\n</blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.17lai.fun/posts/45f878cd/\">替代Evernote免费开源笔记Joplin-网盘同步笔记历史版本Markdown可视化</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin安装使用，调用外部编辑器，网盘同步等等</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/92d347d6/\">Joplin 插件以及其Markdown语法。All in One!</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin简明教程</li>\n<li>markdown语法简明教程</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/e3ee7f8b/\">Joplin 插件使用推荐</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>教你用各种插件打造一个强大的笔记工具。</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/1802a8a7/\">为知笔记私有化Docker部署</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>如何部署自己私有的为知笔记。</li>\n<li>其实博主更推荐私有部署joplin</li>\n</ul>\n</blockquote>\n<p><strong>Gitbook使用系列</strong> <a href=\"https://blog.17lai.site/categories/gitbook/atom.xml\">Gitbook分类RSS订阅</a></p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/7fe86002/\">GitBook+GitLab撰写发布技术文档-Part1:GitBook篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/7790e989/\">GitBook+GitLab撰写发布技术文档-Part2:GitLab篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/d6bad1e5/\">自己动手制作电子书的最佳方式（支持PDF、ePub、mobi等格式）</a></p>\n</li>\n</ul>\n<p><strong>Gitlab 使用系列</strong>  <a href=\"https://blog.17lai.site/categories/gitlab/atom.xml\"><strong>Gitlab RSS 分类订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/acc13b70/\"><strong>Gitlab的安装及使用教程完全版</strong></a></li>\n<li><a href=\"https://blog.17lai.site/posts/29a820b3/\">破解Gitlab EE</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d08eb7b/\">Gitlab的安装及使用</a></li>\n<li><a href=\"https://blog.17lai.site/posts/1879721e/\">CI/CD与Git Flow与GitLab</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "github",
                "hexo",
                "matery",
                "cdn",
                "seo"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/4d8a0b22/",
            "url": "https://blog.17lai.site/posts/4d8a0b22/",
            "title": "基于Hexo的matery主题搭建博客自定义修改篇2",
            "date_published": "2022-03-27T07:25:33.000Z",
            "content_html": "<p><strong>Hexo系列</strong>  <a href=\"https://blog.17lai.site/categories/hexo/atom.xml\"><strong>HexoRSS分类订阅</strong></a></p>\n<p>[三万字教程]基于Hexo的matery主题搭建博客并深度优化完全一站式教程</p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/40300608/\">Hexo Docker环境与Hexo基础配置篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4d8a0b22/\">hexo博客自定义修改篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/9b056c86/\">hexo博客网络优化篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/5311b619/\">hexo博客增强部署篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4a2050e2/\">hexo博客个性定制篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/84b4059a/\">hexo博客常见问题篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/cf0f47fd/\">Hexo Markdown以及各种插件功能测试</a></p>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>markdown 各种其它语法插件</li>\n<li>latex公式支持</li>\n<li>mermaid图表</li>\n<li>plant uml图表</li>\n<li>URL卡片</li>\n<li>bilibili卡片</li>\n<li>github卡片</li>\n<li>豆瓣卡片</li>\n<li>插入音乐和视频</li>\n<li>插入脑图</li>\n</ul>\n</blockquote>\n<p>如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能有用的地方：</p>\n<h2 id=\"更换字体\">更换字体</h2>\n<p>一般网站的web字体都可以直接从<a target=\"_blank\" rel=\"noopener\" href=\"https://fonts.google.com/\">Google-Font</a>获取资源，这样不用担心字体商业带来的法律问题。</p>\n<p>常见的开源字体有：</p>\n<p>思源黑体 、 文泉驿 、 文鼎开放字体 、 柳体 、 cwTeX中文字体 、 濑户字体、江西拙楷体等。</p>\n<p>1）创建web字体引用</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'引用的字体名称'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'谷歌字体路径（或者其他什么字体引用）'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>   \n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>2）在网页合适的位置进行字体引用</p>\n<p>①利用浏览器检查元素，获取需要定义字体的部分</p>\n<p>②在主体的配置文件中(hexo-theme-matery/layout/…)找到对应的渲染(.ejs)文件，查找需要修改的部分</p>\n<p>①演示一下利用浏览器获取定义字体的部分</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1720211017105637.jpeg\" alt=\"\"></p>\n<p>对获取到的<code>id选择器：#artDetail</code>进行css渲染</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">#artDetail</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'引用的web字体'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>②利用主体的ejs渲染文件找出需要修饰的部分（加入自定义类）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/10/1720211017105631.jpeg\" alt=\"\"></p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/*使用我在文章内容详情定义的diyFnot类**/</span>\n<span class=\"token selector\">.diyfont</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'引用的web字体'</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*也可以使用自带的id*/</span>\n<span class=\"token selector\">#artDetail</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'引用的web字体'</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"网站全局化字体定义\">网站全局化字体定义</h3>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'引用的字体名称'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'谷歌字体路径（或者其他什么字体引用）'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>   \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'引用的web字体名称'</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"引用本地的字体文件\">引用本地的字体文件</h3>\n<p>当然有时候那个谷歌字体的网站可能登录不上去，需要科学上网，很烦人！我们也可以直接下载下字体文件，将他放在本地，进行直接引用！看下面操作👇</p>\n<p>①在本地的hexo根目录的source文件下创立diy-font文件夹:<code>/source/diy-font</code></p>\n<p>在该文件下存放你的字体文件，比如：<code>/source/diy-font/IBMPlexMono-Italic.ttf</code></p>\n<p>②引用本地字体（仍然是在my.css文件中书写代码）</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'hl'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'../diy-font/IBMPlexMono-Italic.ttf'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/** 表示全局使用，如果不想全局使用不要添加该段 */</span>\n<span class=\"token selector\">body</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'hl'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">/* 可以局部使用，建议添加 */</span>\n<span class=\"token selector\">.diyFont</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'hl'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这样我们就可以实现引用本地的字体了，并且在web有效！</p>\n<p>在你想要使用的元素的 <code>class</code> 里面加上 <code>diyFont</code> 即可。</p>\n<ul>\n<li>\n<p>直接使用</p>\n<p>F12，找到对应的代码片段即可：</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo-span diyFont<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>测试字体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>\n<p>模板使用</p>\n<p>找到对应的模板 <code>header.ejs</code>中的代码片段使用即可：</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo-span diyFont<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>&lt;%= config.title %&gt;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"修改主题颜色-2\">修改主题颜色</h2>\n<p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span>\n<span class=\"token selector\">.bg-color</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>to right<span class=\"token punctuation\">,</span> #4cbf30 0%<span class=\"token punctuation\">,</span> #0f9d58 100%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@-webkit-keyframes</span> rainbow</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 动态切换背景颜色. */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> rainbow</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 动态切换背景颜色. */</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"修改-banner-图和文章特色图\">修改 banner 图和文章特色图</h2>\n<p>可以直接在 <code>/source/medias/banner</code> 文件夹中更换喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果会 <code>JavaScript</code> 代码，可以修改成自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".bg-cover\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"background-image\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"url(/medias/banner/\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".jpg)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p>\n<h2 id=\"Hexo-跳过渲染\">Hexo 跳过渲染</h2>\n<p>在Hexo部署时会默认渲染source下的所有html页面，但有时候想在Hexo博客上单独自定义html页面或README.md时，却不希望被Hexo渲染。因此对某个文件或者目录进行排除渲染是非常必要的。</p>\n<h3 id=\"方法一：font-matter\">方法一：font matter</h3>\n<p><code>Hexo</code>新建网站页面，然后将你的代码直接写入 <code>index.md</code> 中</p>\n<p>在 <code>Front matter</code> 中添加 <code>layout: false</code>，此方法适用于单一的纯<code>HTML</code><br>\n<code>CSS</code> 页面。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">---\ntitle: tools\ndate: <span class=\"token number\">2020</span>-04-28 00:00:00\ntype: <span class=\"token string\">\"tools\"</span>\nlayout: <span class=\"token boolean\">false</span>\n---<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"方法二：skip-rende\">方法二：skip rende</h3>\n<p>在博客根目录下的 <code>_config.yml</code>，找到 <code>skip_render</code>，大概在32行左右，写入你想要的跳过渲染的路径，注意缩进和空格。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 指定目录跳过hexo渲染</span>\nskip_render:\n  - <span class=\"token string\">'tools/*'</span>\n  - <span class=\"token string\">'tools/**'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>注释：<code>tools/*</code> 表示在目录 <code>source/fireworks</code> 下的文件全部跳过渲染，<code>tools/**</code> 表示在博客根目录 <code>source/tools/</code> 文件夹下的文件全部跳过渲染（例如页面的 js、css 在另一个文件夹中）。</p>\n</blockquote>\n<h2 id=\"hexo体积压缩\">hexo体积压缩</h2>\n<blockquote>\n<ul>\n<li>因为 hexo 生成的 html、css、js 等都有很多的空格或者换行，而空格和换行也是占用字节的，所以需要将空格换行去掉也就是我要进行的 “压缩”。减小体积，加快加载速度。</li>\n<li>npm下载太慢怎么办？ 修改国内淘宝源加速，<a href=\"https://blog.17lai.site/posts/40300608/#npm%E4%B8%8B%E8%BD%BD%E5%8A%A0%E9%80%9F\">戳</a></li>\n</ul>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 全局安装gulp模块</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp -g\n<span class=\"token comment\"># 安装各种小功能模块  执行这步的时候，可能会提示权限的问题，最好以管理员模式执行</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save\n<span class=\"token comment\"># 额外的功能模块</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel/core --save\n \n或者使用yarn \n \n<span class=\"token function\">yarn</span> global <span class=\"token function\">add</span> gulp\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span>  gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span>  gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel/core<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后，在根目录(有_config.yml文件，theme目录的目录)新增 <code>gulpfile.js</code>文件，文件名必须是这个 :</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> gulp <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> debug <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-debug\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> cleancss <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-clean-css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//css压缩组件</span>\n<span class=\"token keyword\">var</span> uglify <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-uglify\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//js压缩组件</span>\n<span class=\"token keyword\">var</span> htmlmin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-htmlmin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//html压缩组件</span>\n<span class=\"token keyword\">var</span> htmlclean <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-htmlclean\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//html清理组件</span>\n<span class=\"token keyword\">var</span> imagemin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-imagemin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//图片压缩组件</span>\n<span class=\"token keyword\">var</span> changed <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-changed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//文件更改校验组件</span>\n<span class=\"token keyword\">var</span> gulpif <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-if\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//任务 帮助调用组件</span>\n<span class=\"token keyword\">var</span> plumber <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-plumber\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//容错组件（发生错误不跳出任务，并报出错误内容）</span>\n<span class=\"token keyword\">var</span> isScriptAll <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)</span>\n<span class=\"token keyword\">var</span> isDebug <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//是否调试显示 编译通过的文件</span>\n<span class=\"token keyword\">var</span> gulpBabel <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gulp-babel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> es2015Preset <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"babel-preset-es2015\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> del <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"del\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> Hexo <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hexo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> hexo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Hexo</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 初始化一个hexo对象</span>\n\n<span class=\"token comment\">// 清除public文件夹</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clean\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">del</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"public/**/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return</span>\n<span class=\"token comment\">// 创建静态页面 （等同 hexo generate）</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"generate\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">hexo</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"generate\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 启动Hexo服务器</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"server\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> hexo\n        <span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">hexo</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"server\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 部署到服务器</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deploy\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">hexo</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deploy\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> hexo<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 压缩public目录下的js文件</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compressJs\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> gulp\n        <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"./public/**/*.js\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"!./public/libs/**\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//排除的js</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isScriptAll<span class=\"token punctuation\">,</span> <span class=\"token function\">changed</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span>isDebug<span class=\"token punctuation\">,</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Compress JS:\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">plumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n            <span class=\"token function\">gulpBabel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">presets</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>es2015Preset<span class=\"token punctuation\">]</span> <span class=\"token comment\">// es5检查机制</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">uglify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//调用压缩组件方法uglify(),对合并的文件进行压缩</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//输出到目标目录</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 压缩public目录下的css文件</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compressCss\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">rebase</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">//advanced: true, //类型：Boolean 默认：true [是否开启高级优化（合并选择器等）]</span>\n        <span class=\"token literal-property property\">compatibility</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ie7\"</span> <span class=\"token comment\">//保留ie7及以下兼容写法 类型：String 默认：''or'*' [启用兼容模式； 'ie7'：IE7兼容模式，'ie8'：IE8兼容模式，'*'：IE9+兼容模式]</span>\n        <span class=\"token comment\">//keepBreaks: true, //类型：Boolean 默认：false [是否保留换行]</span>\n        <span class=\"token comment\">//keepSpecialComments: '*' //保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> gulp\n        <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"./public/**/*.css\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"!./public/**/*.min.css\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//排除的css</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isScriptAll<span class=\"token punctuation\">,</span> <span class=\"token function\">changed</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span>isDebug<span class=\"token punctuation\">,</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Compress CSS:\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">plumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">cleancss</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 压缩public目录下的html文件</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compressHtml\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> cleanOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">protect</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;\\!--%fooTemplate\\b.*?%--&gt;</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//忽略处理</span>\n        <span class=\"token literal-property property\">unprotect</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;script [^&gt;]*\\btype=\"text\\/x-handlebars-template\"[\\s\\S]+?&lt;\\/script&gt;</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">gi</span></span> <span class=\"token comment\">//特殊处理</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> minOption <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">collapseWhitespace</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//压缩HTML</span>\n        <span class=\"token literal-property property\">collapseBooleanAttributes</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//省略布尔属性的值 &lt;input checked=\"true\"/&gt; ==&gt; &lt;input /&gt;</span>\n        <span class=\"token literal-property property\">removeEmptyAttributes</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//删除所有空格作属性值 &lt;input id=\"\" /&gt; ==&gt; &lt;input /&gt;</span>\n        <span class=\"token literal-property property\">removeScriptTypeAttributes</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//删除&lt;script&gt;的type=\"text/javascript\"</span>\n        <span class=\"token literal-property property\">removeStyleLinkTypeAttributes</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//删除&lt;style&gt;和&lt;link&gt;的type=\"text/css\"</span>\n        <span class=\"token literal-property property\">removeComments</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//清除HTML注释</span>\n        <span class=\"token literal-property property\">minifyJS</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//压缩页面JS</span>\n        <span class=\"token literal-property property\">minifyCSS</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//压缩页面CSS</span>\n        <span class=\"token literal-property property\">minifyURLs</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">//替换页面URL</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> gulp\n        <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public/**/*.html\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span>isDebug<span class=\"token punctuation\">,</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Compress HTML:\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">plumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">htmlclean</span><span class=\"token punctuation\">(</span>cleanOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">htmlmin</span><span class=\"token punctuation\">(</span>minOption<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 压缩 public/medias 目录内图片</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compressImage\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">optimizationLevel</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//类型：Number 默认：3 取值范围：0-7（优化等级）</span>\n        <span class=\"token literal-property property\">progressive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//类型：Boolean 默认：false 无损压缩jpg图片</span>\n        <span class=\"token literal-property property\">interlaced</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span>\n        <span class=\"token literal-property property\">multipass</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">//类型：Boolean 默认：false 多次优化svg直到完全优化</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> gulp\n        <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public/medias/**/*.*\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isScriptAll<span class=\"token punctuation\">,</span> <span class=\"token function\">changed</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public/medias\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpif</span><span class=\"token punctuation\">(</span>isDebug<span class=\"token punctuation\">,</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Compress Images:\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">plumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">imagemin</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 执行顺序： 清除public目录 -&gt; 产生原始博客内容 -&gt; 执行压缩混淆 -&gt; 部署到服务器</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"cicd\"</span><span class=\"token punctuation\">,</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"clean\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"generate\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compressHtml\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compressCss\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compressJs\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compressImage\"</span><span class=\"token punctuation\">,</span>\n        gulp<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deploy\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 默认任务</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"ci\"</span><span class=\"token punctuation\">,</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"clean\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"generate\"</span><span class=\"token punctuation\">,</span>\n        gulp<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compressHtml\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"compressCss\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"compressJs\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"compressImage\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 默认任务</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span>\n        gulp<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compressHtml\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"compressCss\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"compressJs\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"compressImage\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>运行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo clean <span class=\"token operator\">&amp;&amp;</span> hexo g <span class=\"token operator\">&amp;&amp;</span> gulp <span class=\"token operator\">&amp;&amp;</span>  hexo g<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>gulp只执行压缩功能。直接在 Hexo 根目录执行  <code>gulp ci</code> ，这个命令相当于 hexo cl&amp;&amp;hexo g 并且再把代码和图片压缩。 在 Hexo 根目录执行 <code>gulp cicd</code> ，这个命令与前一个相比是：在最后又加了个 hexo d ，等于说生成、压缩文件后又帮你自动部署了</p>\n<p>如果不想用图片压缩可以把文件中的\"compressImage\" 去掉即可</p>\n<h2 id=\"博客中插入音乐\">博客中插入音乐</h2>\n<h3 id=\"hexo-tag-aplayer\">hexo-tag-aplayer</h3>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/MoePlayer/hexo-tag-aplayer\">hexo-tag-aplayer</a><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/MoePlayer/APlayer\">APlayer</a> 播放器的 Hexo 标签插件（现已支持 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/metowolf/MetingJS\">MetingJS</a>）。</p>\n<h3 id=\"安装-6\">安装</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save hexo-tag-aplayer<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"使用方法——aplayer\">使用方法——aplayer</h3>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">{% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li><code>title</code> : 曲目标题</li>\n<li><code>author</code>: 曲目作者</li>\n<li><code>url</code>: 音乐文件 URL 地址</li>\n<li><code>picture_url</code>: (可选) 音乐对应的图片地址</li>\n<li><code>narrow</code>: （可选）播放器袖珍风格</li>\n<li><code>autoplay</code>: (可选) 自动播放，移动端浏览器暂时不支持此功能</li>\n<li><code>width:xxx</code>: (可选) 播放器宽度 (默认: 100%)</li>\n<li><code>lrc:xxx</code>: （可选）歌词文件 URL 地址<br>\n<em><strong>例如：</strong></em></li>\n</ul>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">{% aplayer \"她的睫毛\" \"周杰伦\" \"http://home.ustc.edu.cn/<span class=\"token strike\"><span class=\"token punctuation\">~</span><span class=\"token content\">mmmwhy/%d6%dc%bd%dc%c2%d7%20-%20%cb%fd%b5%c4%bd%de%c3%ab.mp3\"  \"http://home.ustc.edu.cn/</span><span class=\"token punctuation\">~</span></span>mmmwhy/jay.jpg\" %}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果你觉得前面的方法不太好用，可以用下面的方法，使用MetingJS。</p>\n<h3 id=\"使用方法——MetingJS\">使用方法——MetingJS</h3>\n<p>MetingJS 是基于Meting API 的 APlayer 衍生播放器，支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。<br>\n<strong>第一步：修改_config.yml配置</strong><br>\n在hexo的配置文件_config.yml中添加：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">aplayer</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token key atrule\">meting</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>第二步：使用MetingJS 播放器</strong></p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\"><span class=\"token comment\">&lt;!-- 简单示例 (id, server, type)  --&gt;</span>\n{% meting \"571184509\" \"xiami\" \"playlist\" %}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>有关的选项列表如下:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">选项</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">id</td>\n<td style=\"text-align:left\"><strong>必须值</strong></td>\n<td style=\"text-align:left\">歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">server</td>\n<td style=\"text-align:left\"><strong>必须值</strong></td>\n<td style=\"text-align:left\">音乐平台: <code>netease</code>, <code>tencent</code>, <code>kugou</code>, <code>xiami</code>, <code>baidu</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">type</td>\n<td style=\"text-align:left\"><strong>必须值</strong></td>\n<td style=\"text-align:left\"><code>song</code>, <code>playlist</code>, <code>album</code>, <code>search</code>, <code>artist</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">fixed</td>\n<td style=\"text-align:left\"><code>false</code></td>\n<td style=\"text-align:left\">开启固定模式</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">mini</td>\n<td style=\"text-align:left\"><code>false</code></td>\n<td style=\"text-align:left\">开启迷你模式</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">loop</td>\n<td style=\"text-align:left\"><code>all</code></td>\n<td style=\"text-align:left\">列表循环模式：<code>all</code>, <code>one</code>,<code>none</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">order</td>\n<td style=\"text-align:left\"><code>list</code></td>\n<td style=\"text-align:left\">列表播放模式： <code>list</code>, <code>random</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">volume</td>\n<td style=\"text-align:left\">0.7</td>\n<td style=\"text-align:left\">播放器音量</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">lrctype</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">歌词格式类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">listfolded</td>\n<td style=\"text-align:left\"><code>false</code></td>\n<td style=\"text-align:left\">指定音乐播放列表是否折叠</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">storagename</td>\n<td style=\"text-align:left\"><code>metingjs</code></td>\n<td style=\"text-align:left\">LocalStorage 中存储播放器设定的键名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">autoplay</td>\n<td style=\"text-align:left\"><code>true</code></td>\n<td style=\"text-align:left\">自动播放，移动端浏览器暂时不支持此功能</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">mutex</td>\n<td style=\"text-align:left\"><code>true</code></td>\n<td style=\"text-align:left\">该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">listmaxheight</td>\n<td style=\"text-align:left\"><code>340px</code></td>\n<td style=\"text-align:left\">播放列表的最大长度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">preload</td>\n<td style=\"text-align:left\"><code>auto</code></td>\n<td style=\"text-align:left\">音乐文件预载入模式，可选项： <code>none</code>, <code>metadata</code>, <code>auto</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">theme</td>\n<td style=\"text-align:left\"><code>#ad7a86</code></td>\n<td style=\"text-align:left\">播放器风格色彩设置</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"博客中插入视频\">博客中插入视频</h2>\n<h3 id=\"hexo-tag-dplayer\">hexo-tag-dplayer</h3>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/MoePlayer/hexo-tag-dplayer\">hexo-tag-dplayer</a> 是 <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/MoePlayer/DPlayer\">DPlayer</a> 播放器的 Hexo 标签插件</p>\n<h3 id=\"安装-7\">安装</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save hexo-tag-dplayer<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"使用-2\">使用</h3>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">{% dplayer key=value ... %}\n例：\n{% dplayer \"url=http://www.nenu.edu.cn/_upload/article/videos/03/5f/7c999eed42e3aadc413d7f851f0e/0f50b3eb-9285-41d2-ac4d-6cc363651aad_B.mp4\"  \"autoplay=true\" \"preload=metadata\" \"hotkey=true\" %} <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>有关的选项列表如下:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">选项</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">url</td>\n<td style=\"text-align:left\"><strong>必须值</strong></td>\n<td style=\"text-align:left\">视频地址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">loop</td>\n<td style=\"text-align:left\"><code>false</code></td>\n<td style=\"text-align:left\">视频循环播放</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">volume</td>\n<td style=\"text-align:left\"><code>0.7</code></td>\n<td style=\"text-align:left\">播放器音量</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">hotkey</td>\n<td style=\"text-align:left\"><code>true</code></td>\n<td style=\"text-align:left\">开启热键</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">autoplay</td>\n<td style=\"text-align:left\"><code>true</code></td>\n<td style=\"text-align:left\">自动播放，移动端浏览器暂时不支持此功能</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">logo</td>\n<td style=\"text-align:left\"><code>-</code></td>\n<td style=\"text-align:left\">在左上角展示一个 logo，你可以通过 CSS 调整它的大小和位置</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">mutex</td>\n<td style=\"text-align:left\"><code>true</code></td>\n<td style=\"text-align:left\">该选项开启时，如果同页面有其他播放，该播放器会暂停</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">highlight</td>\n<td style=\"text-align:left\"><code>[]</code></td>\n<td style=\"text-align:left\">自定义进度条提示点</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">preload</td>\n<td style=\"text-align:left\"><code>auto</code></td>\n<td style=\"text-align:left\">视频文件预载入模式，可选项： <code>none</code>, <code>metadata</code>, <code>auto</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">theme</td>\n<td style=\"text-align:left\"><code>#ad7a86</code></td>\n<td style=\"text-align:left\">播放器风格色彩设置</td>\n</tr>\n</tbody>\n</table>\n<p>注：如果使用腾讯视频、优酷视频等在线视频网站的资源，需要先进行视频地址解析，如<a target=\"_blank\" rel=\"noopener\" href=\"http://old.flvurl.cn/\">点量视频解析</a>，获取到实际的视频地址。</p>\n<h3 id=\"其他使用方法\">其他使用方法</h3>\n<p>在使用优酷或者腾讯视频时可以直接复制分享代码到文章中，如：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;iframe height=498 width=510 src='https://player.youku.com/embed/XMjk4ODAyMzIyOA==' frameborder=0 'allowfullscreen'&gt;&lt;/iframe&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"参考文献\">参考文献</h3>\n<blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE30-%E6%96%B0%E5%8A%9F%E8%83%BD\">hexo-tag-aplayer</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/MoePlayer/hexo-tag-dplayer\">hexo-tag-dplayer</a></li>\n</ul>\n</blockquote>\n<h2 id=\"系列教程-39\"><strong>系列教程</strong></h2>\n<p><a href=\"https://blog.17lai.site/atom.xml\">全部文章RSS订阅</a></p>\n<p><strong>Hexo系列</strong>  <a href=\"https://blog.17lai.site/categories/hexo/atom.xml\"><strong>HexoRSS分类订阅</strong></a></p>\n<p>[三万字教程]基于Hexo的matery主题搭建博客并深度优化完全一站式教程</p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/40300608/\">Hexo Docker环境与Hexo基础配置篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4d8a0b22/\">hexo博客自定义修改篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/9b056c86/\">hexo博客网络优化篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/5311b619/\">hexo博客增强部署篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/4a2050e2/\">hexo博客个性定制篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/84b4059a/\">hexo博客常见问题篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/cf0f47fd/\">Hexo Markdown以及各种插件功能测试</a></p>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>markdown 各种其它语法插件</li>\n<li>latex公式支持</li>\n<li>mermaid图表</li>\n<li>plant uml图表</li>\n<li>URL卡片</li>\n<li>bilibili卡片</li>\n<li>github卡片</li>\n<li>豆瓣卡片</li>\n<li>插入音乐和视频</li>\n<li>插入脑图</li>\n</ul>\n</blockquote>\n<p><strong>笔记系列</strong>  <a href=\"https://blog.17lai.site/categories/note/atom.xml\"><strong>Note分类RSS订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/a8535f26/\">完美笔记进化论</a></li>\n</ul>\n<blockquote>\n<p>经历了很长时间，使用了各种各样的方案，最终选择了一种相对完美的方式。docker私有部署运行的joplin，使用markdown语法，github作为图床，picgo作为图像自动上传后端，pypora作为MD编辑器，Snipaste作为截图工具。后备gitlab ee selfhost备份，自建图床VPS多线负载均衡。cloudflare partner cdn加速，jsdelivr加速。</p>\n<ul>\n<li>pigo图床搭建与配置</li>\n<li>Joplin教程</li>\n<li>Snipaste截图工具</li>\n<li>Typora 作为Markdown编辑器最强</li>\n</ul>\n</blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.17lai.fun/posts/e6086437/\">Joplin入门指南&amp;实践方案</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin和使用</li>\n<li>Joplin同步与备份</li>\n<li>Joplin导入与导出</li>\n</ul>\n</blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.17lai.fun/posts/45f878cd/\">替代Evernote免费开源笔记Joplin-网盘同步笔记历史版本Markdown可视化</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin安装使用，调用外部编辑器，网盘同步等等</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/92d347d6/\">Joplin 插件以及其Markdown语法。All in One!</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>Joplin简明教程</li>\n<li>markdown语法简明教程</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/e3ee7f8b/\">Joplin 插件使用推荐</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>教你用各种插件打造一个强大的笔记工具。</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/1802a8a7/\">为知笔记私有化Docker部署</a></li>\n</ul>\n<blockquote>\n<ul>\n<li>如何部署自己私有的为知笔记。</li>\n<li>其实博主更推荐私有部署joplin</li>\n</ul>\n</blockquote>\n<p><strong>Gitbook使用系列</strong> <a href=\"https://blog.17lai.site/categories/gitbook/atom.xml\">Gitbook分类RSS订阅</a></p>\n<ul>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/7fe86002/\">GitBook+GitLab撰写发布技术文档-Part1:GitBook篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/7790e989/\">GitBook+GitLab撰写发布技术文档-Part2:GitLab篇</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.17lai.site/posts/d6bad1e5/\">自己动手制作电子书的最佳方式（支持PDF、ePub、mobi等格式）</a></p>\n</li>\n</ul>\n<p><strong>Gitlab 使用系列</strong>  <a href=\"https://blog.17lai.site/categories/gitlab/atom.xml\"><strong>Gitlab RSS 分类订阅</strong></a></p>\n<ul>\n<li><a href=\"https://blog.17lai.site/posts/acc13b70/\"><strong>Gitlab的安装及使用教程完全版</strong></a></li>\n<li><a href=\"https://blog.17lai.site/posts/29a820b3/\">破解Gitlab EE</a></li>\n<li><a href=\"https://blog.17lai.site/posts/d08eb7b/\">Gitlab的安装及使用</a></li>\n<li><a href=\"https://blog.17lai.site/posts/1879721e/\">CI/CD与Git Flow与GitLab</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "github",
                "hexo",
                "matery",
                "cdn",
                "seo"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/798e6e62/",
            "url": "https://blog.17lai.site/posts/798e6e62/",
            "title": "ISP 数字图像处理 算法概述、工作原理、架构、处理流程",
            "date_published": "2022-03-24T13:13:38.000Z",
            "content_html": "<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"抱歉, 这个密码看着不太对, 请再试试.\" data-whm=\"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"fa8c14af8219db7e267ee7bb2d203dec7ca85f69668eaf60a28537a7c8d2dbc9\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">您好, 这里需要密码.</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">",
            "tags": [
                "isp",
                "awb",
                "mywork"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/80938cfe/",
            "url": "https://blog.17lai.site/posts/80938cfe/",
            "title": "emoji表情符号",
            "date_published": "2022-03-23T10:18:00.000Z",
            "content_html": "<blockquote>\n<p>emoji表情符号是非常流行的表情符号，几乎没有地方都会支持。这里列举出常用的emoji表情不好，方便大家使用与查阅。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"常用符号\">常用符号</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">❤❥웃유♋☮✌☏☢☠✔☑♚▲♪✈✞÷↑↓◆◇⊙■□△▽¿─│♥❣♂♀☿Ⓐ✍✉☣☤✘☒♛▼♫⌘☪≈←→◈◎☉★☆⊿※¡━┃♡ღ ツ\n\n☼☁❅♒✎©®™Σ✪✯☭➳ 卐 √↖↗●◐Θ◤◥︻〖〗┄┆℃℉°✿ϟ☃☂✄¢€£∞✫★½✡×↙↘○◑⊕◣◢︼【】┅┇☽☾✚〓\n\n▂▃▄▅▆▇█▉▊▋▌▍▎▏↔↕☽☾ の•▸◂▴▾┈┊①②③④⑤⑥⑦⑧⑨⑩ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩ ㍿ ▓♨♛❖♓☪✙\n\n┉┋☹☺☻ت ヅツッシ Üϡﭢ™℠℗©®♥❤❥❣❦❧♡۵웃유ღ♋♂♀☿☼☀☁☂☄☾☽❄☃☈⊙☉℃℉❅✺ϟ☇♤♧♡♢♠♣\n\n♥♦☜☞☝✍☚☛☟✌✽✾✿❁❃❋❀⚘☑✓✔√☐☒✗✘ ㄨ ✕✖✖⋆✢✣✤✥❋✦✧✩✰✪✫✬✭✮✯❂✡★✱✲✳✴✵✶✷✸✹✺✻✼❄❅❆❇❈❉❊†☨✞✝☥☦☓☩☯☧☬\n\n☸✡♁✙♆。，、＇：∶；?‘’“”〝〞ˆˇ﹕︰﹔﹖﹑•¨….¸;！´？！～—ˉ ｜‖＂〃｀@﹫¡¿﹏﹋﹌︴々﹟#\n\n﹩$﹠&amp;﹪%*﹡﹢﹦﹤‐￣ ¯―﹨ˆ˜﹍﹎+=&lt;＿*-\\ˇ~﹉﹊（）〈〉‹›﹛﹜『』〖〗［］《》〔〕{}「」【】︵︷︿︹︽*﹁﹃︻︶︸﹀︺︾ˉ﹂﹄︼☩☨☦✞✛✜✝✙✠✚†‡◉○◌◍◎●◐◑◒◓◔◕◖◗❂☢⊗⊙◘◙◍⅟½⅓⅕⅙⅛⅔⅖⅚⅜¾⅗⅝⅞⅘≂≃≄≅≆≇≈≉≊≋≌\n\n≍≎≏≐≑≒≓≔≕≖≗≘≙≚≛≜≝≞≟≠≡≢≣≤≥≦≧≨≩⊰⊱⋛⋚∫∬∭∮∯∰∱∲∳%℅‰‱㊣㊎㊍㊌㊋㊏㊐㊊㊚㊛㊤㊥\n\n㊦㊧㊨㊒㊞㊑㊒㊓㊔㊕㊖㊗㊘㊜㊝㊟㊠㊡㊢㊩㊪㊫㊬㊭㊮㊯㊰㊙ ㉿ 囍 ♔♕♖♗♘♙♚♛♜♝♞♟ℂℍℕℙℚℝℤℬℰℯℱℊℋℎℐℒℓℳℴ℘ℛℭ℮ℌℑℜℨ♪♫♩♬♭♮♯°øⒶ☮✌☪✡☭✯ 卐 ✐✎✏\n\n✑✒✍✉✁✂✃✄✆✉☎☏➟➡➢➣➤➥➦➧➨➚➘➙➛➜➝➞➸♐➲➳⏎➴➵➶➷➸➹➺➻➼➽←↑→↓↔↕↖↗↘↙↚↛↜↝\n\n↞↟↠↡↢↣↤↥↦↧↨➫➬➩➪➭➮➯➱↩↪↫↬↭↮↯↰↱↲↳↴↵↶↷↸↹↺↻↼↽↾↿⇀⇁⇂⇃⇄⇅⇆⇇⇈⇉⇊⇋⇌⇍⇎⇏⇐⇑⇒⇓⇔⇕\n\n⇖⇗⇘⇙⇚⇛⇜⇝⇞⇟⇠⇡⇢⇣⇤⇥⇦⇧⇨⇩⇪➀➁➂➃➄➅➆➇➈➉➊➋➌➍➎➏➐➑➒➓㊀㊁㊂㊃㊄㊅㊆㊇㊈㊉ⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡ\n\nⓢⓣⓤⓥⓦⓧⓨⓩ⒜⒝⒞⒟⒠⒡⒢⒣⒤⒥⒦⒧⒨⒩⒪⒫⒬⒭⒮⒯⒰⒱⒲⒳⒴⒵ⅠⅡⅢⅣⅤ\n\nⅥⅦⅧⅨⅩⅪⅫⅬⅭⅮⅯⅰⅱⅲⅳⅴⅵⅶⅷⅸⅹⅺⅻⅼⅽⅾⅿ┌┍┎┏┐┑┒┓└┕┖┗┘┙┚┛├┝┞┟┠┡┢┣┤┥┦┧┨┩┪┫\n┬┭┮┯┰┱┲┳┴┵┶┷┸┹┺┻┼┽\n┾┿╀╁╂╃╄╅╆╇╈╉╊╋╌╍╎╏\n═║╒╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡╢╣╤╥╦╧╨╩╪╫╬◤◥◄►▶◀◣◢▲\n\n▼◥▸◂▴▾△▽▷◁⊿▻◅▵▿▹◃❏❐❑❒▀▁▂▃▄▅▆▇▉▊▋█▌▍▎▏▐░▒▓▔▕■□▢▣▤▥▦▧\n\n▨▩▪▫▬▭▮▯ ㋀㋁㋂㋃㋄㋅㋆㋇㋈㋉㋊㋋㏠㏡㏢㏣㏤㏥㏦㏧㏨㏩㏪㏫㏬㏭㏮㏯㏰㏱㏲\n\n㏳㏴㏵㏶㏷㏸㏹㏺㏻㏼㏽㏾㍙㍚㍛㍜㍝㍞㍟㍠㍡㍢㍣㍤㍥㍦㍧㍨㍩㍪㍫㍬㍭㍮㍯㍰㍘\n\n☰☲☱☴☵☶☳☷☯<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"特殊符号\">特殊符号</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">♠♣♧♡♥❤❥❣♂♀✲☀☼☾☽◐◑☺☻☎☏✿❀№↑↓←→√×÷★℃℉°◆◇⊙■□△▽¿½☯✡ ㍿卍卐 ♂♀✚〓㎡♪♫♩♬\n\n㊚㊛囍㊒㊖ Φ♀♂‖KaTeX parse error: Expected ‘EOF’, got ‘&amp;’ at position 3: @*&amp;̲#※卍卐 Ψ♫♬♭♩♪♯♮⌒¶∮…<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"编号序号\">编号序号</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">①②③④⑤⑥⑦⑧⑨⑩⑪⑫⑬⑭⑮⑯⑰⑱⑲⑳⓪\n\n❶❷❸❹❺❻❼❽❾❿⓫⓬⓭⓮⓯⓰⓱⓲⓳⓴\n\n㊀㊁㊂㊃㊄㊅㊆㊇㊈㊉㈠㈡㈢㈣㈤㈥㈦㈧㈨㈩⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽⑾⑿⒀⒁⒂⒃⒄⒅⒆⒇\n\n⒈⒉⒊⒋⒌⒍⒎⒏⒐⒑⒒⒓⒔⒕⒖⒗⒘⒙⒚⒛\n\nⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩⅪⅫⅰⅱⅲⅳⅴⅵⅶⅷⅸⅹ\n\nⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡⓢⓣⓤⓥⓦⓧⓨⓩ\n\n⒜⒝⒞⒟⒠⒡⒢⒣⒤⒥⒦⒧⒨⒩⒪⒫⒬⒭⒮⒯⒰⒱⒲⒳⒴⒵<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"数学符号\">数学符号</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">﹢﹣×÷±/=≌∽≦≧≒ ﹤﹥ ≈≡≠=≤≥&lt;&gt;≮≯∷∶∫∮∝∞∧∨∑∏∪∩∈∵∴⊥∥∠⌒⊙√∟⊿㏒㏑%\n\n‰⅟½⅓⅕⅙⅛⅔⅖⅚⅜¾⅗⅝⅞⅘≂≃≄≅≆≇≈≉≊≋≌≍≎≏≐≑≒≓≔≕≖≗≘≙≚≛≜≝≞≟\n\n≠≡≢≣≤≥≦≧≨≩⊰⊱⋛⋚∫∬∭∮∯∰∱∲∳%℅‰‱øØπ<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"爱心符号\">爱心符号</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">♥❣ღ♠♡♤❤❥<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"标点符号\">标点符号</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">。，、＇：∶；?‘’“”〝〞ˆˇ﹕︰﹔﹖﹑•¨….¸;！´？！～—ˉ ｜‖＂〃｀@﹫¡¿﹏﹋﹌︴\n\n々﹟#﹩$﹠&amp;﹪%*﹡﹢﹦﹤‐￣ ¯―﹨ˆ˜﹍﹎+=&lt;＿*-\\ˇ~﹉﹊\n\n（）〈〉‹›﹛﹜『』〖〗［］《》〔〕{}「」【】\n\n︵︷︿︹︽*﹁﹃︻︶︸﹀︺︾ˉ﹂﹄︼❝❞<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"单位符号\">单位符号</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">°′″＄￥〒￠￡％＠℃℉ ﹩﹪‰﹫㎡㏕㎜㎝㎞㏎m³㎎㎏㏄º○¤%$º¹²³<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"货币符号\">货币符号</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">€£Ұ₴$₰¢₤¥₳₲₪₵ 元 ₣₱฿¤₡₮₭₩ރ 円 ₢₥₫₦zł﷼₠₧₯₨Kčर₹ƒ₸ ￠<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"箭头符号（含推导-转换符号）\">箭头符号（含推导&amp;转换符号）</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">↑↓←→↖↗↘↙↔↕➻➼➽➸➳➺➻➴➵➶➷➹▶►▷◁◀◄«\n\n»➩➪➫➬➭➮➯➱⏎➲➾➔➘➙➚➛➜➝➞➟➠➡➢➣➤➥➦➧➨\n\n↚↛↜↝↞↟↠↠↡↢↣↤↤↥↦↧↨⇄⇅⇆⇇⇈⇉⇊⇋⇌⇍⇎⇏⇐⇑⇒⇓⇔⇖⇗⇘⇙\n\n⇜↩↪↫↬↭↮↯↰↱↲↳↴↵↶↷↸↹☇☈↼↽↾↿⇀⇁⇂⇃⇞⇟⇠⇡⇢⇣⇤⇥⇦⇧⇨⇩⇪↺↻⇚⇛♐<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"符号图案\">符号图案</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">✐✎✏✑✒✍✉✁✂✃✄✆✉☎☏☑✓✔√☐☒✗✘ ㄨ ✕✖✖☢☠☣✈★☆✡ 囍㍿ ☯☰☲☱☴☵☶☳☷\n\n☜☞☝✍☚☛☟✌♤♧♡♢♠♣♥♦☀☁☂❄☃♨웃유❖☽☾☪✿♂♀✪✯☭➳ 卍卐 √×■◆●○◐◑✙☺☻\n\n❀⚘♔♕♖♗♘♙♚♛♜♝♞♟♧♡♂♀♠♣♥❤☜☞☎☏⊙◎☺☻☼▧▨♨◐◑↔↕▪▒◊◦▣▤▥▦▩◘◈◇\n\n♬♪♩♭♪ の ★☆→ あぃ￡ Ю〓§♤♥▶¤✲❈✿✲❈➹☀☂☁【】┱┲❣✚✪✣✤✥✦❉❥❦❧❃❂❁❀✄☪☣☢☠☭ღ▶▷◀◁\n\n☀☁☂☃☄★☆☇☈⊙☊☋☌☍ⓛⓞⓥⓔ╬『』∴☀♫♬♩♭♪☆∷﹌の ★◎▶☺☻►◄▧▨♨◐◑↔↕↘▀▄█▌\n\n◦☼♪ の ☆→♧ ぃ￡ ❤▒▬♦◊◦♠♣▣۰•❤•۰►◄▧▨♨◐◑↔↕▪▫☼♦⊙●○①⊕◎Θ⊙¤ ㊣ ★☆♀◆◇◣◢◥▲▼△▽⊿◤◥\n\n✐✌✍✡✓✔✕✖♂♀♥♡☜☞☎☏⊙◎☺☻►◄▧▨♨◐◑↔↕♥♡▪▫☼♦▀▄█▌▐░▒▬♦◊◘◙◦☼♠♣▣▤▥▦▩◘◙◈\n\n♫♬♪♩♭♪✄☪☣☢☠♯♩♪♫♬♭♮☎☏☪♈ºº₪¤큐«»™♂✿♥ 　 ◕‿-｡　｡◕‿◕｡<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"希腊字母\">希腊字母</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ\n\nαβγδεζνξοπρσηθικλμτυφχψω<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"俄语字母\">俄语字母</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвг\n\nдеёжзийклмнопрстуфхцчшщъыьэюя<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"汉语拼音\">汉语拼音</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜüêɑńňɡ ㄅㄆㄇㄈㄉ\n\nㄊㄋㄌㄍㄎㄏㄐㄑㄒㄓㄔㄕㄖㄗㄘㄙㄚㄛㄜㄝㄞ\n\nㄟㄠㄡㄢㄣㄤㄥㄦㄧㄨㄩ<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"中文字符\">中文字符</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">零壹贰叁肆伍陆柒捌玖拾佰仟万亿吉太拍艾分厘毫微\n\n卍卐卄巜弍弎弐朤氺曱甴囍兀々〆のぁ〡〢〣〤〥〦〧〨〩\n\n㊎㊍㊌㊋㊏㊚㊛㊐㊊㊣㊤㊥㊦㊧㊨㊒㊫㊑㊓㊔㊕㊖㊗㊘㊜㊝㊞㊟㊠㊡㊢㊩㊪㊬㊭㊮㊯㊰\n\n㊀㊁㊂㊃㊄㊅㊆㊇㊈㊉<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"日文符号\">日文符号</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ぁあぃいぅうぇえぉおかがきぎくぐけげこごさざしじすずせぜそぞただちぢっつづてで\n\nとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもゃやゅゆょよらりるれろゎ\n\nわゐゑをんゔゕゖァアィイゥウェエォオカガキギクグケゲコゴサザシジスズセゼソゾタ\n\nダチヂッツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモャヤュユ\n\nョヨラリルレロヮワヰヱヲンヴヵヶヷヸヹヺ・ーヽヾヿ゠ㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"制表符号\">制表符号</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">─ ━│┃╌╍╎╏┄ ┅┆┇┈ ┉┊┋┌┍┎┏┐┑┒┓└ ┕┖┗ ┘┙┚┛├┝┞┟┠┡┢┣ ┤┥┦┧┨┩┪┫┬ ┭ ┮ ┯ ┰ ┱ ┲ ┳\n\n┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻┼ ┽ ┾ ┿ ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╪ ╫ ╬═║╒╓╔ ╕╖╗╘╙╚ ╛╜╝╞╟╠ ╡╢╣\n\n╤ ╥ ╦ ╧ ╨ ╩ ╳╔ ╗╝╚ ╬ ═ ╓ ╩ ┠ ┨┯ ┷┏ ┓┗ ┛┳ ⊥ ﹃ ﹄┌ ╮ ╭ ╯╰<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"皇冠符号\">皇冠符号</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">♚ 　 ♛ 　 ♝ 　 ♞ 　 ♜ 　 ♟ 　 ♔ 　 ♕ 　 ♗ 　 ♘ 　 ♖ 　 ♟<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"彩色表情符号\">彩色表情符号</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">🌹🍀🍎💰📱🌙🍁🍂🍃🌷💎🔪🔫🏀⚽⚡👄👍🔥<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"常用-emoji-符号\">常用 emoji 符号</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">😀😁😂😃😄😅😆😉😊😋😎😍😘😗😙😚☺😇😐😑😶😏😣😥😮😯😪😫😴😌😛😜😝😒😓😔😕😲😷😖😞😟😤😢😭😦😧😨😬😰😱😳😵😡😠😈👿👹👺💀👻👽👦👧👨👩👴👵👶👱👮👲👳👷👸💂🎅👰👼💆💇🙍🙎🙅🙆💁🙋🙇🙌🙏👤👥🚶🏃👯💃👫👬👭💏💑👪💪👈👉☝👆👇✌✋👌👍👎✊👊👋👏👐✍👣👀👂👃👅👄💋👓👔👕👖👗👘👙👚👛👜👝🎒💼👞👟👠👡👢👑👒🎩🎓💄💅💍🌂🙈🙉🙊🐵🐒🐶🐕🐩🐺🐱😺😸😹😻😼😽🙀😿😾🐈🐯🐅🐆🐴🐎🐮🐂🐃🐄🐷🐖🐗🐽🐏🐑🐐🐪🐫🐘🐭🐁🐀🐹🐰🐇🐻🐨🐼🐾🐔🐓🐣🐤🐥🐦🐧🐸🐊🐢🐍🐲🐉🐳🐋🐬🐟🐠🐡🐙🐚🐌🐛🐜🐝🐞🦋💐🌸💮🌹🌺🌻🌼🌷🌱🌲🌳🌴🌵🌾🌿🍀🍁🍂🍃🌍🌎🌏🌐🌑🌒🌓🌔🌕🌖🌗🌘🌙🌚🌛🌜☀🌝🌞⭐🌟🌠☁⛅☔⚡❄🔥💧🌊💩🍇🍈🍉🍊🍋🍌🍍🍎🍏🍐🍑🍒🍓🍅🍆🌽🍄🌰🍞🍖🍗🍔🍟🍕🍳🍲🍱🍘🍙🍚🍛🍜🍝🍠🍢🍣🍤🍥🍡🍦🍧🍨🍩🍪🎂🍰🍫🍬🍭🍮🍯🍼☕🍵🍶🍷🍸🍹🍺🍻🍴🎪🎭🎨🎰🚣🛀🎫🏆⚽⚾🏀🏈🏉🎾🎱🎳⛳🎣🎽🎿🏂🏄🏇🏊🚴🚵🎯🎮🎲🎷🎸🎺🎻🎬👾🌋🗻🏠🏡🏢🏣🏤🏥🏦🏨🏩🏪🏫🏬🏭🏯🏰💒🗼🗽⛪⛲🌁🌃🌆🌇🌉🌌🎠🎡🎢🚂🚃🚄🚅🚆🚇🚈🚉🚊🚝🚞🚋🚌🚍🚎🚏🚐🚑🚒🚓🚔🚕🚖🚗🚘🚚🚛🚜🚲⛽🚨🚥🚦🚧⚓⛵🚤🚢✈💺🚁🚟🚠🚡🚀🎑🗿🛂🛃🛄🛅💌💎🔪💈🚪🚽🚿🛁⌛⏳⌚⏰🎈🎉🎊🎎🎏🎐🎀🎁📯📻📱📲☎📞📟📠🔋🔌💻💽💾💿📀🎥📺📷📹📼🔍🔎🔬🔭📡💡🔦🏮📔📕📖📗📘📙📚📓📃📜📄📰📑🔖💰💴💵💶💷💸💳✉📧📨📩📤📥📦📫📪📬📭📮✏✒📝📁📂📅📆📇📈📉📊📋📌📍📎📏📐✂🔒🔓🔏🔐🔑🔨🔫🔧🔩🔗💉💊🚬🔮🚩🎌💦💨💣☠♠♥♦♣🀄🎴🔇🔈🔉🔊📢📣💤💢💬💭♨🌀🔔🔕✡✝🔯📛🔰🔱⭕✅☑✔✖❌❎➕➖➗➰➿〽✳✴❇‼⁉❓❔❕❗©®™🎦🔅🔆💯🔠🔡🔢🔣🔤🅰🆎🅱🆑🆒🆓ℹ🆔Ⓜ🆕🆖🅾🆗🅿🆘🆙🆚🈁🈂🈷🈶🈯 🉐 🈹🈚🈲 🉑 🈸🈴🈳 ㊗㊙ 🈺🈵▪▫◻◼◽◾⬛⬜🔶🔷🔸🔹🔺🔻💠🔲🔳⚪⚫🔴🔵♈♉♊♋♌♍♎♏♐♑♒♓⛎💘❤💓💔💕💖💗💙💚💛💜💝💞💟❣🌿🚧💒☎📟💽⬆↗➡↘⬇↙⬅↖↕↔↩↪⤴⤵🔃🔄🔙🔚🔛🔜🔝🔀🔁🔂▶⏩◀⏪🔼⏫🔽⏬📱📶📳📴♻🏧🚮🚰♿🚹🚺🚻🚼🚾⚠🚸⛔🚫🚳🚭🚯🚱🚷🔞<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "web",
                "emoji"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/3b296307/",
            "url": "https://blog.17lai.site/posts/3b296307/",
            "title": "winrar去广告和破解",
            "date_published": "2022-03-19T12:00:47.000Z",
            "content_html": "<blockquote>\n<p>WinRAR 是一款不错的解压缩软件，但还是收费软件，广告不少，今天就总结了一下网上的各路教程。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/hexo@latest/medias_webp/cover/winrar.webp\" alt=\"\"></p>\n<h2 id=\"crack-winrar\">crack winrar</h2>\n<p>首先通过特殊方式获取软件许可：<br>\n新建一个文本文档</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1920220319200929.png\" alt=\"img\"></p>\n<p>在这个文本文档里输入内容：</p>\n<pre class=\"line-numbers language-key\" data-language=\"key\"><code class=\"language-key\">RAR registration data``Federal Agency ``for` `Education``1000000 PC usage license``UID=b621cca9a84bc5deffbf``6412612250ffbf533df6db2dfe8ccc3aae5362c06d54762105357d``5e3b1489e751c76bf6e0640001014be50a52303fed29664b074145``7e567d04159ad8defc3fb6edf32831fd1966f72c21c0c53c02fbbb``2f91cfca671d9c482b11b8ac3281cb21378e85606494da349941fa``e9ee328f12dc73e90b6356b921fbfb8522d6562a6a4b97e8ef6c9f``fb866be1e3826b5aa126a4d2bfe9336ad63003fc0e71c307fc2c60``64416495d4c55a0cc82d402110498da970812063934815d81470829275<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/11/0320211103230820.png\" alt=\"img\"></p>\n<p>然后将文件名改为：rarreg.key</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/11/0320211103231031.png\" alt=\"img\"></p>\n<p>再将这个文件导入WinRAR的安装文件夹<br>\n<img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/11/0320211103231545.png\" alt=\"img\"><br>\n<img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/11/0320211103231839.png\" alt=\"img\"><br>\n这时点开关于WinRAR，已经获取许可。<br>\n<img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/11/0320211103231800.png\" alt=\"img\"></p>\n<h2 id=\"去除广告\">去除广告</h2>\n<p>接下来使用Resource Hacker软件打开<strong>winrar</strong>.exe<br>\n<img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/11/0320211103231916.png\" alt=\"img\"><br>\n进入字串表，找到“80”，删除“1267”和“1277”行<br>\n点击绿色三角形按钮，编译。<br>\n<img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/11/0320211103231939.png\" alt=\"img\"><br>\n然后：文件→另存为，进行保存。<br>\n<img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/11/0320211103232002.png\" alt=\"img\"><br>\n然后对源文件：winrar.exe进行替换,注意，要关闭winrar软件<br>\n<img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2021/11/0320211103232039.png\" alt=\"img\"></p>\n<p>至此，已经完成破解和去广告了。</p>\n<p>参考来源 52pojie</p>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "crack",
                "tools",
                "winrar"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/90e60aac/",
            "url": "https://blog.17lai.site/posts/90e60aac/",
            "title": "使用 Shell 脚本实现一个简单 Docker",
            "date_published": "2022-03-18T06:33:17.000Z",
            "content_html": "<blockquote>\n<p>《使用 Shell 脚本实现 Docker》旨在通过一系列的实验使用户对docker的底层技术，如Namespace、CGroups、rootfs、联合加载等有一个感性的认识。在此过程中，我们还将通过Shell脚本一步一步地实现一个简易的docker，以期使读者在使用docker的过程中知其然知其所以然。</p>\n</blockquote>\n<p>我们的实验环境为Ubuntu 18.04 64bit，简易docker工程的名字为docker.sh，该工程仓库地址如下：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">https://github.com/pandengyang/docker.sh.git\nhttps://github.com/appotry/docker.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>《使用 Shell 脚本实现 Docker》目录如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1. Namespace\n1.1. Namespace简介\n1.2. uts namespace\n1.2.1. uts namespace简介\n1.2.2. docker.sh\n1.3. mount namespace\n1.3.1. /etc/mtab、/proc/self/mounts\n1.3.2. /proc/self/mountinfo\n1.3.3. bind mount\n1.3.4. mount namespace简介\n1.3.5. docker.sh\n1.4. pid namespace\n1.4.1. unshare的--fork选项\n1.4.2. pid namespace简介\n1.4.3. pid嵌套\n1.4.4. docker.sh\n2. CGroups\n2.1. CGroups简介\n2.2. 限制内存\n2.2.1. 用CGroups限制内存\n2.2.2. docker.sh\n3. 切换根文件系统\n3.1. 根文件系统\n3.2. pivot_root\n3.3. docker.sh\n4. 联合加载\n4.1. 联合加载简介\n4.2. AUFS\n4.3. docker.sh\n5. 卷\n5.1. 卷简介\n5.2. docker.sh\n6. 后记<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"1-Namespace\">1.Namespace</h2>\n<h3 id=\"1-1-Namespace简介\">1.1.Namespace简介</h3>\n<p>传统上，在Linux中，许多资源是全局管理的。例如，系统中的所有进程按照惯例是通过PID标识的，这意味着内核必须管理一个全局的PID列表。而且，所有调用者通过uname系统调用返回的系统相关信息都是相同的。用户id的管理方式类似，即各个用户是通过一个全局唯一的UID标识。</p>\n<p>Namespace是Linux用来隔离上述全局资源的一种方式。把一个或多个进程加入到同一个namespace中后，这些进程只会看到该namespace中的资源。namespace是后来加入到Linux中的，为了兼容之前的全局资源管理方式，Linux为每一种资源准备了一个全局的namespace。Linux中的每一个进程都默认加入了这些全局namespace。</p>\n<p>Linux中的每个进程都有一个/proc/[pid]/ns/目录，里面包含了该进程所属的namespace信息。我们查看一下当前Shell的/proc/[pid]/ns目录，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">sudo</span> <span class=\"token function\">ls</span> -l /proc/<span class=\"token variable\">$$</span>/ns\ntotal <span class=\"token number\">0</span>\nlrwxrwxrwx <span class=\"token number\">1</span> phl phl <span class=\"token number\">0</span> Jan <span class=\"token number\">22</span> 08:43 cgroup -<span class=\"token operator\">&gt;</span> cgroup:<span class=\"token punctuation\">[</span><span class=\"token number\">4026531835</span><span class=\"token punctuation\">]</span>\nlrwxrwxrwx <span class=\"token number\">1</span> phl phl <span class=\"token number\">0</span> Jan <span class=\"token number\">22</span> 08:43 ipc -<span class=\"token operator\">&gt;</span> ipc:<span class=\"token punctuation\">[</span><span class=\"token number\">4026531839</span><span class=\"token punctuation\">]</span>\nlrwxrwxrwx <span class=\"token number\">1</span> phl phl <span class=\"token number\">0</span> Jan <span class=\"token number\">22</span> 08:43 mnt -<span class=\"token operator\">&gt;</span> mnt:<span class=\"token punctuation\">[</span><span class=\"token number\">4026531840</span><span class=\"token punctuation\">]</span>\nlrwxrwxrwx <span class=\"token number\">1</span> phl phl <span class=\"token number\">0</span> Jan <span class=\"token number\">22</span> 08:43 net -<span class=\"token operator\">&gt;</span> net:<span class=\"token punctuation\">[</span><span class=\"token number\">4026531993</span><span class=\"token punctuation\">]</span>\nlrwxrwxrwx <span class=\"token number\">1</span> phl phl <span class=\"token number\">0</span> Jan <span class=\"token number\">22</span> 08:43 pid -<span class=\"token operator\">&gt;</span> pid:<span class=\"token punctuation\">[</span><span class=\"token number\">4026531836</span><span class=\"token punctuation\">]</span>\nlrwxrwxrwx <span class=\"token number\">1</span> phl phl <span class=\"token number\">0</span> Jan <span class=\"token number\">22</span> 08:43 pid_for_children -<span class=\"token operator\">&gt;</span> pid:<span class=\"token punctuation\">[</span><span class=\"token number\">4026531836</span><span class=\"token punctuation\">]</span>\nlrwxrwxrwx <span class=\"token number\">1</span> phl phl <span class=\"token number\">0</span> Jan <span class=\"token number\">22</span> 08:43 user -<span class=\"token operator\">&gt;</span> user:<span class=\"token punctuation\">[</span><span class=\"token number\">4026531837</span><span class=\"token punctuation\">]</span>\nlrwxrwxrwx <span class=\"token number\">1</span> phl phl <span class=\"token number\">0</span> Jan <span class=\"token number\">22</span> 08:43 uts -<span class=\"token operator\">&gt;</span> uts:<span class=\"token punctuation\">[</span><span class=\"token number\">4026531838</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>该目录下有很多符号链接，每个符号链接代表一个该进程所属的namespace。用readlink读取这些符号链接可以查看进程所属的namespace id。我们读一下当前Shell所属的uts namespace id，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">sudo</span> readlink /proc/<span class=\"token variable\">$$</span>/ns/uts\nuts:<span class=\"token punctuation\">[</span><span class=\"token number\">4026531838</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>后文中我们将介绍uts namespace、mount namespace、pid namespace的用法。</p>\n<h3 id=\"1-2-uts-namespace\">1.2.uts namespace</h3>\n<h4 id=\"1-2-1-uts-namespace简介\">1.2.1.uts namespace简介</h4>\n<p>uts namespace用于隔离系统的主机名等信息，我们将通过实验学习其用法。在实验过程中，我们采用如下的步骤：</p>\n<ol>\n<li>查看全局uts namespace信息</li>\n<li>新建一个uts namespace，查看其信息并作出修改</li>\n<li>查看全局uts namespace，查看其是否被新建的uts namespace影响到</li>\n</ol>\n<p>对于其他namespace，我们也采取类似的步骤进行实验学习。</p>\n<p>首先，我们查看一下全局的hostname及uts namespace id。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">hostname</span>\nkernelnewbies\n\nphl@kernelnewbies:~$ <span class=\"token function\">sudo</span> readlink /proc/<span class=\"token variable\">$$</span>/ns/uts\nuts:<span class=\"token punctuation\">[</span><span class=\"token number\">4026531838</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后，我们创建一个新的uts namespace，并查看其namespce id。</p>\n<p>在继续之前，需要介绍一个namespace工具unshare。利用unshare我们可以新建一个的namespace，并在新namespace中执行一条命令。unshare执行时需要root权限。unshare的使用方法如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">unshare <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>program <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行unshare时，我们可以指定要新建的namespace的类型以及要执行的命令。unshare提供了一系列选项，当指定某个选项时可新建指定的namespace。namespace类型选项如下：</p>\n<ul>\n<li>--uts创建新的uts namespace</li>\n<li>--mount创建新的mount namespace</li>\n<li>--pid创建新的pid namespace</li>\n<li>--user创建新的user namespace</li>\n</ul>\n<p>介绍完unshare之后，我们继续之前的实验。我们用unshare创建一个新的uts namespace，并在新的uts namespace中执行/bin/bash命令，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">sudo</span> unshare --uts /bin/bash\nroot@kernelnewbies:~<span class=\"token comment\">#</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>我们用unshare创建了一个新的uts namespace。在新的uts namespace中查看其hostname和namespace id，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@kernelnewbies:~$ <span class=\"token function\">hostname</span>\nkernelnewbies\n\nroot@kernelnewbies:~<span class=\"token comment\"># readlink /proc/$$/ns/uts</span>\nuts:<span class=\"token punctuation\">[</span><span class=\"token number\">4026532177</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，新uts namespace的id与全局uts namespace的id不一致。这说明/bin/bash已运行在一个新的uts namespace中了。</p>\n<p>我们将新uts namespace的hostname改为dreamland，并强制更新Shell提示符。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@kernelnewbies:~<span class=\"token comment\"># hostname dreamland</span>\nroot@kernelnewbies:~<span class=\"token comment\"># hostname</span>\ndreamland\n\nroot@kernelnewbies:~<span class=\"token comment\"># exec /bin/bash</span>\nroot@dreamland:~<span class=\"token comment\">#</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，新uts namespace的hostname的确是被修改了，exec /bin/bash用于强制更新Shell的提示符。</p>\n<p>我们重新打开一个Shell窗口，该Shell位于全局uts namespace中。在新的Shell窗口中查看全局uts namespace id及hostname，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">hostname</span>\nkernelnewbies\n\nphl@kernelnewbies:~$ <span class=\"token function\">sudo</span> readlink /proc/<span class=\"token variable\">$$</span>/ns/uts\nuts:<span class=\"token punctuation\">[</span><span class=\"token number\">4026531838</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，我们在新uts namespace中所作的修改并未影响到全局的uts namespace。</p>\n<p>父进程创建子进程时只有提供创建新namespace的标志，才可创建新的namespace，并使子进程处于新的namespace中。默认情况下，子进程与父进程处于相同的namespace中。我们在新的uts namespace中创建一个子进程，然后查看该子进程的uts namespace id，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">sudo</span> unshare --uts /bin/bash\nroot@kernelnewbies:~<span class=\"token comment\"># readlink /proc/$$/ns/uts</span>\nuts:<span class=\"token punctuation\">[</span><span class=\"token number\">4026532305</span><span class=\"token punctuation\">]</span>\n\nroot@kernelnewbies:~<span class=\"token comment\"># bash</span>\nroot@kernelnewbies:~<span class=\"token comment\"># readlink /proc/$$/ns/uts</span>\nuts:<span class=\"token punctuation\">[</span><span class=\"token number\">4026532305</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，子进程所属uts namespace的id与其父进程相同。其他namespae与uts namespace类似，子进程与父进程同属一个namespace。</p>\n<h4 id=\"1-2-2-docker-sh\">1.2.2.docker.sh</h4>\n<p>有了以上关于uts namespace的介绍，我们就可以将uts namespace加入到docker.sh中了。docker.sh工程分为两个脚本：docker.sh和container.sh。</p>\n<p>docker.sh用于收集用户输入、调用unshare创建namespace并执行container.sh脚本，docker.sh脚本如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token function-name function\">usage</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[31mIMPORTANT: Run As Root<span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"\"</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Usage:    docker.sh [OPTIONS]\"</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"\"</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"A docker written by shell\"</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"\"</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Options:\"</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"          -c string       docker command\"</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"                          (<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>run<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>)\"</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"          -m              memory\"</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"                          (<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>100M, 200M, 300M...<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>)\"</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"          -C string       container name\"</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"          -I string       image name\"</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"          -V string       volume\"</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"          -P string       program to run in container\"</span>\n\n        <span class=\"token builtin class-name\">return</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token builtin class-name\">test</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">whoami</span><span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">!=</span> root\n<span class=\"token keyword\">then</span>\n        usage\n        <span class=\"token builtin class-name\">exit</span> -1\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">getopts</span> c:m:C:I:V:P: option\n<span class=\"token keyword\">do</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"<span class=\"token variable\">$option</span>\"</span>\n        <span class=\"token keyword\">in</span>\n                c<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">cmd</span><span class=\"token operator\">=</span><span class=\"token variable\">$OPTARG</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n                m<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">memory</span><span class=\"token operator\">=</span><span class=\"token variable\">$OPTARG</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n                C<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">container</span><span class=\"token operator\">=</span><span class=\"token variable\">$OPTARG</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n                I<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">image</span><span class=\"token operator\">=</span><span class=\"token variable\">$OPTARG</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n                V<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">volume</span><span class=\"token operator\">=</span><span class=\"token variable\">$OPTARG</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n                P<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">program</span><span class=\"token operator\">=</span><span class=\"token variable\">$OPTARG</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">\\</span>?<span class=\"token punctuation\">)</span> usage\n                    <span class=\"token builtin class-name\">exit</span> -2<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">esac</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">cmd</span><span class=\"token operator\">=</span><span class=\"token variable\">$cmd</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">memory</span><span class=\"token operator\">=</span><span class=\"token variable\">$memory</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">container</span><span class=\"token operator\">=</span><span class=\"token variable\">$container</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">image</span><span class=\"token operator\">=</span><span class=\"token variable\">$image</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">volume</span><span class=\"token operator\">=</span><span class=\"token variable\">$volume</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">program</span><span class=\"token operator\">=</span><span class=\"token variable\">$program</span>\n\nunshare --uts ./container.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>脚本最开始为usage函数，该函数为docker.sh的使用说明。当用户以非预期的方式使用docker.sh时，该函数会被调用。该函数输出如下信息：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">IMPORTANT: Run As Root\n\nUsage:  docker.sh <span class=\"token punctuation\">[</span>OPTIONS<span class=\"token punctuation\">]</span>\n\nA <span class=\"token function\">docker</span> written by shell\n\nOptions:\n                -c string       <span class=\"token function\">docker</span> <span class=\"token builtin class-name\">command</span>\n                                <span class=\"token punctuation\">(</span><span class=\"token string\">\"run\"</span><span class=\"token punctuation\">)</span>\n                -m              memory\n                                <span class=\"token punctuation\">(</span><span class=\"token string\">\"100M, 200M, 300M...\"</span><span class=\"token punctuation\">)</span>\n                -C string       container name\n                -I string       image name\n                -V string       volume\n                -P string       program to run <span class=\"token keyword\">in</span> container<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从usage函数的输出我们可以看到，执行docker.sh时需要root权限且需要正确地传递参数。</p>\n<p>docker.sh首先对当前用户进行检测，如果用户不为root，则打印使用说明并退出脚本；如果用户为root，则继续执行。检测用户的脚本如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token keyword\">if</span> <span class=\"token builtin class-name\">test</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">whoami</span><span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">!=</span> root\n<span class=\"token keyword\">then</span>\n        usage\n        <span class=\"token builtin class-name\">exit</span> -1\n<span class=\"token keyword\">fi</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后，docker.sh使用getopts从命令行提取参数，然后赋值给合适的变量。从命令行提取参数的脚本如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">getopts</span> c:m:C:I:V:P: option\n<span class=\"token keyword\">do</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"<span class=\"token variable\">$option</span>\"</span>\n        <span class=\"token keyword\">in</span>\n                c<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">cmd</span><span class=\"token operator\">=</span><span class=\"token variable\">$OPTARG</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n                m<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">memory</span><span class=\"token operator\">=</span><span class=\"token variable\">$OPTARG</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n                C<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">container</span><span class=\"token operator\">=</span><span class=\"token variable\">$OPTARG</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n                I<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">image</span><span class=\"token operator\">=</span><span class=\"token variable\">$OPTARG</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n                V<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">volume</span><span class=\"token operator\">=</span><span class=\"token variable\">$OPTARG</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n                P<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">program</span><span class=\"token operator\">=</span><span class=\"token variable\">$OPTARG</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">\\</span>?<span class=\"token punctuation\">)</span> usage\n                    <span class=\"token builtin class-name\">exit</span> -2<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">esac</span>\n<span class=\"token keyword\">done</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>如果用户的输入不正确，则打印使用说明并退出脚本；如果用户输入正确，则解析命令行参数并赋值给合适的变量。</p>\n<p>为了简化，用户在运行docker.sh时需提供完整的参数列表，示例如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> ./docker.sh -c run -m 100M -C dreamland -I ubuntu1604 -V data1 -P /bin/bash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>当然，如果当前用户就是root，就不需要sudo了。下表列出了各个参数的含义及示例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1820220318143125.png\" alt=\"使用 Shell 脚本实现 Docker\"></p>\n<p>docker.sh将命令行参数赋值给变量后，需要将这些变量导出，以传递给container.sh。导出变量的脚本如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">cmd</span><span class=\"token operator\">=</span><span class=\"token variable\">$cmd</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">memory</span><span class=\"token operator\">=</span><span class=\"token variable\">$memory</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">container</span><span class=\"token operator\">=</span><span class=\"token variable\">$container</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">image</span><span class=\"token operator\">=</span><span class=\"token variable\">$image</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">volume</span><span class=\"token operator\">=</span><span class=\"token variable\">$volume</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">program</span><span class=\"token operator\">=</span><span class=\"token variable\">$program</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里说明一下为什么要将docker.sh工程拆分为docker.sh和container.sh两个脚本。因为调用unshare创建新的namespace时，会执行一个命令，该命令在新的namespace中运行。该命令一旦结束，unshare也就结束了，unshare创建的新namespace也就不存在了。</p>\n<p>docker.sh不会并发地执行unshare命令与unshare之后的脚本，因此，只有unshare结束了，后续脚本才可继续运行。但是当unshare结束了，准备执行后续脚本时，新的namespae已经不存在了。因此一些加入cgroups、切换根文件系统等工作必须在unshare执行的命令中进行，所以我们采用在unshare中执行container.sh脚本的方式完成后续的工作。</p>\n<p>最后，docker.sh调用unshare创建新的uts namespace，并执行container.sh脚本。调用unshare的脚本如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">unshare --uts ./container.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>container.sh将容器的hostname修改为通过-C传递的容器的名字，然后执行通过-P传递的程序。container.sh脚本如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token function\">hostname</span> <span class=\"token variable\">$container</span>\n<span class=\"token builtin class-name\">exec</span> <span class=\"token variable\">$program</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>现在，我们运行docker.sh，并查看其hostname。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh$ <span class=\"token function\">sudo</span> ./docker.sh -c run -m 100M -C dreamland -I ubuntu1604 -V data1 -P /bin/bash\nroot@dreamland:~/docker.sh<span class=\"token comment\"># hostname</span>\ndreamland<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，容器的hostname已经改变为我们传递的容器名字dreamland了。</p>\n<h3 id=\"1-3-mount-namespace\">1.3.mount namespace</h3>\n<h4 id=\"1-3-1-etc-mtab、-proc-self-mounts\">1.3.1./etc/mtab、/proc/self/mounts</h4>\n<p>早期的Linux使用/etc/mtab文件来记录当前的挂载点信息。每次mount/umount文件系统时会更新/etc/mtab文件中的信息。</p>\n<p>后来，linux引入了mount namespace，每个进程都有一份自己的挂载点信息。当然，处于同一个mount namespace里面的进程，其挂载点信息是相同的。进程的挂载点信息通过/proc/[pid]/mounts文件导出给用户。</p>\n<p>为了兼容以前的/etc/mtab，/etc/mtab变成了指向/proc/self/mounts的符号链接。通过readlink查看/etc/mtab指向的文件，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ readlink /etc/mtab\n<span class=\"token punctuation\">..</span>/proc/self/mounts<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>通过读取/proc/self/mounts文件，可以查看当前的挂载点信息，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">cat</span> /proc/self/mounts\nsysfs /sys sysfs rw,nosuid,nodev,noexec,relatime <span class=\"token number\">0</span> <span class=\"token number\">0</span>\nproc /proc proc rw,nosuid,nodev,noexec,relatime <span class=\"token number\">0</span> <span class=\"token number\">0</span>\n/dev/sda1 / ext4 rw,relatime,errors<span class=\"token operator\">=</span>remount-ro <span class=\"token number\">0</span> <span class=\"token number\">0</span>\nsecurityfs /sys/kernel/security securityfs rw,nosuid,nodev,noexec,relatime <span class=\"token number\">0</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">..</span>.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>由于该文件中内容太多，我们省略了一部分，只保留了一些比较重要的挂载点信息。每行的信息分为六个字段，各字段的含义及示例如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1820220318143143.png\" alt=\"使用 Shell 脚本实现 Docker\"></p>\n<p>由于该文件有点过时，被后文介绍的/proc/self/mountinfo替换掉，所以不做过多介绍。</p>\n<h4 id=\"1-3-2-proc-self-mountinfo\">1.3.2./proc/self/mountinfo</h4>\n<p>/proc/self/mountinfo包含了进程mount namespace中的挂载点信息。 它提供了旧的/proc/[pid]/mounts文件中缺少的各种信息（传播状态，挂载点id，父挂载点id等），并解决了/proc/[pid]/mounts文件的一些其他缺陷。我们查看进程挂载点信息时应优先使用该文件。</p>\n<p>该文件中每一行代表一个挂载点信息，每个挂载点信息分为11个字段。挂载点信息的示例如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1820220318143124.png\" alt=\"使用 Shell 脚本实现 Docker\"></p>\n<p>各字段的含义及示例如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1820220318143118.png\" alt=\"使用 Shell 脚本实现 Docker\"></p>\n<p>我们主要关注可选字段中的传播状态选项。首先，我们看一下关于mount namespace的问题。问题如下：</p>\n<p>当创建mount namespace时，新mount namespace会拷贝一份老mount namespace里面的挂载点信息。例如，全局mount namespace中有一个/a挂载点，新建的mount namespace中也会有一个/a挂载点。那么我们在新mount namespace中的/a下创建或删除一个挂载点，全局mount namespace中的/a会同步创建或删除该挂载点吗？或者在全局mount namespace中的/a下创建或删除一个挂载点，新mount namespace中的/a会同步创建或删除该挂载点吗？</p>\n<p>mountinfo文件中可选字段的传播状态就是控制在一个挂载点下进行创建/删除挂载点操作时是否会传播到其他挂载点的选项。传播状态有四种可取值，常见的有如下两种：</p>\n<ul>\n<li>shared 表示创建/删除挂载点的操作会传播到其他挂载点</li>\n<li>private 表示创建/删除挂载点的操作不会传播到其他挂载点</li>\n</ul>\n<p>由于在容器技术中要保证主机与容器的挂载点信息互不影响，因此要求容器中的挂载点的传播状态为private。</p>\n<h4 id=\"1-3-3-bind-mount\">1.3.3.bind mount</h4>\n<p>bind mount可以将一个目录（源目录）挂载到另一个目录（目的目录），在目的目录里面的读写操作将直接作用于源目录。</p>\n<p>下面我们通过实验了解一下bind mount的功能，首先，我们准备一下实验所需要的的目录及文件。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">mkdir</span> <span class=\"token builtin class-name\">bind</span>\nphl@kernelnewbies:~$ <span class=\"token builtin class-name\">cd</span> bind/\nphl@kernelnewbies:~/bind$ <span class=\"token function\">mkdir</span> a\nphl@kernelnewbies:~/bind$ <span class=\"token function\">mkdir</span> b\nphl@kernelnewbies:~/bind$ <span class=\"token builtin class-name\">echo</span> hello, a <span class=\"token operator\">&gt;</span> a/a.txt\nphl@kernelnewbies:~/bind$ <span class=\"token builtin class-name\">echo</span> hello, b <span class=\"token operator\">&gt;</span> b/b.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后，我们将a目录bind mount到b目录并查看b目录下的内容。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/bind$ <span class=\"token function\">sudo</span> <span class=\"token function\">mount</span> --bind a b\nphl@kernelnewbies:~/bind$ tree b\nb\n└── a.txt\n<span class=\"token number\">0</span> directories, <span class=\"token number\">1</span> <span class=\"token function\">file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，b目录下原先的内容被隐藏，取而代之的是a目录下的内容。</p>\n<p>然后，我们修改b目录下的内容，修改完毕后，从b目录上卸载掉a目录。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/bind$ <span class=\"token builtin class-name\">echo</span> hello, a from b <span class=\"token operator\">&gt;</span> b/a.txt\nphl@kernelnewbies:~/bind$ <span class=\"token function\">sudo</span> <span class=\"token function\">umount</span> b<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>我们读取一下a目录中a.txt，看看其内容是否被改变。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/bind$ <span class=\"token function\">cat</span> a/a.txt\nhello, a from b<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，a目录中的内容确实被当a被bind mount到b时对b目录的操作所修改了。</p>\n<p>bind mount在容器技术中有很重要的用途，后文会有涉及。</p>\n<h4 id=\"1-3-4-mount-namespace简介\">1.3.4.mount namespace简介</h4>\n<p>mount namespace用来隔离文件系统的挂载点信息, 使得不同的mount namespace拥有自己独立的挂载点信息。不同的namespace之间不会相互影响，其在unshare中的选项为--mount。</p>\n<p>当用unshare创建新的mount namespace时，新创建的namespace将拷贝一份老namespace里的挂载点信息，但从这之后，他们就没有关系了。这是unshare将新 namespace 里面的所有挂载点的传播状态设置为private实现的。通过mount和umount增加和删除各自mount namespace里面的挂载点都不会相互影响。</p>\n<p>下面我们将演示mount namespace的用法。首先，我们准备需要的目录和文件，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">mkdir</span> -p hds/hd1 hds/hd2 <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> hds\n\nphl@kernelnewbies:~/hds$ <span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>/dev/zero <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span>1M <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token assign-left variable\">of</span><span class=\"token operator\">=</span>hd1.img <span class=\"token operator\">&amp;&amp;</span> mkfs.ext2 hd1.img\nphl@kernelnewbies:~/hds$ <span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>/dev/zero <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span>1M <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token assign-left variable\">of</span><span class=\"token operator\">=</span>hd2.img <span class=\"token operator\">&amp;&amp;</span> mkfs.ext2 hd2.img\n\nphl@kernelnewbies:~$ tree <span class=\"token builtin class-name\">.</span>\n<span class=\"token builtin class-name\">.</span>\n├── hd1\n├── hd1.img\n├── hd2\n└── hd2.img\n<span class=\"token number\">2</span> directories, <span class=\"token number\">2</span> files<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后，我们在全局的mount namespace中挂载hd1.img到hd1目录，然后查看该mount namespace中的挂载点信息与mount namespace id。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/hds$ <span class=\"token function\">sudo</span> <span class=\"token function\">mount</span> hd1.img hd1\nphl@kernelnewbies:~/hds$ <span class=\"token function\">cat</span> /proc/self/mountinfo <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> hd\n<span class=\"token number\">556</span> <span class=\"token number\">27</span> <span class=\"token number\">7</span>:18 / /home/phl/hds/hd1 rw,relatime shared:372 - ext2 /dev/loop18 rw\n\nphl@kernelnewbies:~/hds$ <span class=\"token function\">sudo</span> readlink /proc/<span class=\"token variable\">$$</span>/ns/mnt\nmnt:<span class=\"token punctuation\">[</span><span class=\"token number\">4026531840</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后，执行unshare命令创建一个新的mount namespace并查看该mount namespace id和挂载点信息。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/hds$ <span class=\"token function\">sudo</span> unshare --uts --mount /bin/bash\nroot@kernelnewbies:~/hds<span class=\"token comment\"># cat /proc/self/mountinfo | grep hd</span>\n<span class=\"token number\">739</span> <span class=\"token number\">570</span> <span class=\"token number\">7</span>:18 / /home/phl/hds/hd1 rw,relatime - ext2 /dev/loop18 rw\n\nroot@kernelnewbies:~/hds<span class=\"token comment\"># readlink /proc/$$/ns/mnt</span>\nmnt:<span class=\"token punctuation\">[</span><span class=\"token number\">4026532180</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，新mount namespace中的挂载点信息与全局mountnamespace中的挂载点信息基本一致，一些挂载选项（如传播状态）变化了。新的mount namespace id与全局mount namespace id是不一样的。</p>\n<p>然后，我们在新的mount namespace中挂载hd2.img到hd2目录，并查看挂载点信息。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@kernelnewbies:~/hds<span class=\"token comment\"># mount hd2.img hd2</span>\nroot@kernelnewbies:~/hds<span class=\"token comment\"># cat /proc/self/mountinfo | grep hd</span>\n<span class=\"token number\">739</span> <span class=\"token number\">570</span> <span class=\"token number\">7</span>:18 / /home/phl/hds/hd1 rw,relatime - ext2 /dev/loop18 rw\n<span class=\"token number\">740</span> <span class=\"token number\">570</span> <span class=\"token number\">7</span>:19 / /home/phl/hds/hd2 rw,relatime - ext2 /dev/loop19 rw<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，新mount namespace中有hd1和hd2这两个挂载点。现在启动一个新的Shell窗口，查看全局mount namespace中的挂载点信息。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/hds$ <span class=\"token function\">cat</span> /proc/self/mountinfo <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> hd\n<span class=\"token number\">556</span> <span class=\"token number\">27</span> <span class=\"token number\">7</span>:18 / /home/phl/hds/hd1 rw,relatime shared:372 - ext2 /dev/loop18 rw<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，全局mount namespace中的挂载点信息只有hd1，而没有hd2。这说明在新mount namespace中进行挂载/卸载操作不会影响其他mount namespace中的挂载点信息。</p>\n<p>mount namespace只隔离挂载点信息，并不隔离挂载点下面的文件信息。对于多个mount namespace都能看到的挂载点，如果在一个namespace中修改了挂载点下面的文件，其他namespace也能感知到。下面，我们在新建的mount namespace中创建一个文件，命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@kernelnewbies:~/hds<span class=\"token comment\"># echo hello from new mount namespace &gt; hd1/hello.txt</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在新启动的Shell中，查看hd1目录并读取hd1/hello.txt文件。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/hds$ tree hd1\nhd1\n├── hello.txt\n└── lost+found <span class=\"token punctuation\">[</span>error opening dir<span class=\"token punctuation\">]</span>\n<span class=\"token number\">1</span> directory, <span class=\"token number\">1</span> <span class=\"token function\">file</span>\n\nphl@kernelnewbies:~/hds$ <span class=\"token function\">cat</span> hd1/hello.txt\nhello from new <span class=\"token function\">mount</span> namespace<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，在全局mount namespace中，我们可以读取到在新建的mount namespace中创建的文件。</p>\n<h4 id=\"1-3-5-docker-sh\">1.3.5.docker.sh</h4>\n<p>有了以上关于mount namespace的知识，我们就可以将mount namespace加入到docker.sh中了。mount namespace将放在docker.sh中，带下划线的行是我们为实现mount namespace而修改的代码。修改后的docker.sh脚本如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">..</span>.\nunshare --uts --mount ./container.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>从上述代码我们可以看到，我们仅仅是在调用unshare时加入--mount选项，就可为docker.sh引入了mount namespace功能。</p>\n<h3 id=\"1-4-pid-namespace\">1.4.pid namespace</h3>\n<h4 id=\"1-4-1-unshare的-fork选项\">1.4.1.unshare的--fork选项</h4>\n<p>unshare有一个选项--fork，当执行unshare时，如果没有这个选项，unshare会直接exec新命令，也就是说unshare变成了新命令。如果带有--fork选项，unshare会fork一个子进程，该子进程exec新命令，unshare是该子进程的父进程。我们分别不带--fork和带--fork来执行unshare，然后查看进程之间的关系。</p>\n<p>首先，我们不带--fork选项执行unshare，并查看当前Shell的进程id。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">sudo</span> unshare --uts /bin/bash\nroot@kernelnewbies:~/hds<span class=\"token comment\"># echo $$</span>\n<span class=\"token number\">11699</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>此时unshare会创建一个新的uts namespace，然后exec /bin/bash。我们启动一个新Shell，然后使用pstree查看进程间关系，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/hds$ pstree -p <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token number\">11699</span>\nsudo<span class=\"token punctuation\">(</span><span class=\"token number\">11698</span><span class=\"token punctuation\">)</span>---bash<span class=\"token punctuation\">(</span><span class=\"token number\">11699</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，sudo fork出一个子进程，该子进程执行unshare。unshare创建了新uts namespace后，exec了/bin/bash，也就是说unshare变成了/bin/bash。</p>\n<p>然后，我们带--fork选项执行unshare，并查看当前Shell的进程id。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/hds$ <span class=\"token function\">sudo</span> unshare --uts --fork /bin/bash\nroot@kernelnewbies:~/hds<span class=\"token comment\"># echo $$</span>\n<span class=\"token number\">11866</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>此时unshare会创建一个新的uts namespace，然后fork出一个子进程，该子进程exec /bin/bash。我们启动一个新Shell，然后使用pstree查看进程间关系，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/hds$ pstree -p <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token number\">11866</span>\nsudo<span class=\"token punctuation\">(</span><span class=\"token number\">11864</span><span class=\"token punctuation\">)</span>---unshare<span class=\"token punctuation\">(</span><span class=\"token number\">11865</span><span class=\"token punctuation\">)</span>---bash<span class=\"token punctuation\">(</span><span class=\"token number\">11866</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，sudo fork出一个子进程，该子进程执行命令unshare。unshare创建了新uts namespace后，fork出一个子进程，该子进程exec /bin/bash，也就是说unshare变成了新的/bin/bash进程的父进程。</p>\n<h4 id=\"1-4-2-pid-namespace简介\">1.4.2.pid namespace简介</h4>\n<p>pid namespace用来隔离进程pid空间，使得不同pid namespace里的进程 pid可以重复且相互之间不影响。进程所属的pid namespace在创建的时候就确定了，无法更改，因此需要--fork选项来创建一个新进程，然后将该新进程加入新建的pid namespace中。pid namespace在unshare中的选项为--pid。</p>\n<p>unshare在创建pid namespace时需同时提供--pid与--fork选项。unshare本身会加入全局的pid namespace，其fork出的子进程会加入新建的pid namespace。</p>\n<p>首先，我们查看全局pid namespace id，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">sudo</span> readlink /proc/<span class=\"token variable\">$$</span>/ns/pid\npid:<span class=\"token punctuation\">[</span><span class=\"token number\">4026531836</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>然后，执行unshare命令创建一个新的pid namespace并查看该pid namespace id。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">sudo</span> unshare --mount --pid --fork /bin/bash\nroot@kernelnewbies:~<span class=\"token comment\"># readlink /proc/$$/ns/pid</span>\npid:<span class=\"token punctuation\">[</span><span class=\"token number\">4026531836</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，新创建的进程也处于全局pid namespace中，而不是新的pid namespace。</p>\n<p>出现这种情形是因为当前的/proc文件系统是老的。我们查看一下$$的值，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@kernelnewbies:~<span class=\"token comment\"># echo $$</span>\n<span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，$$的值为1，但是/proc文件系统却是老的，因此我们查看的实际是init进程所属的pid namespace，当然是全局pid namespace了。</p>\n<p>重新挂载/proc文件系统，这也是unshare执行时带--mount选项的原因，只有这样，重新挂载/proc文件系统时，不会搞乱整个系统。再次查看新进程所属的pid namespace，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@kernelnewbies:~<span class=\"token comment\"># mount -t proc proc /proc</span>\nroot@kernelnewbies:~<span class=\"token comment\"># readlink /proc/$$/ns/pid</span>\npid:<span class=\"token punctuation\">[</span><span class=\"token number\">4026532182</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，新进程的pid namespace与全局pid namespace的id不同。</p>\n<p>接下来，我们再来查看一下新pid namespace中的进程信息。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@kernelnewbies:~<span class=\"token comment\"># ps -ef</span>\n<span class=\"token environment constant\">UID</span>        PID  <span class=\"token environment constant\">PPID</span>  C STIME TTY          TIME CMD\nroot         <span class=\"token number\">1</span>     <span class=\"token number\">0</span>  <span class=\"token number\">0</span> <span class=\"token number\">19</span>:03 pts/1    00:00:00 /bin/bash\nroot        <span class=\"token number\">10</span>     <span class=\"token number\">1</span>  <span class=\"token number\">0</span> <span class=\"token number\">19</span>:03 pts/1    00:00:00 <span class=\"token function\">ps</span> -e<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，当前pid namespace中只有2个进程，看不到全局pid namespace里面的其他进程。我们通过unshare执行的进程pid为1，也就是说该进程成了新pid namespace中的init进程。</p>\n<h4 id=\"1-4-3-pid嵌套\">1.4.3.pid嵌套</h4>\n<p>pid namespace可以嵌套，也就是说有父子关系，在当前pid namespace里面创建的所有新的pid namespace都是当前pid namespace的子pid namespace。</p>\n<p>首先，我们创建3个嵌套的pid namespace，并查看每个pid namespace id。--mount-proc选项用于自动挂载/proc文件系统，省去了手动挂载/proc文件系统的操作。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">sudo</span> readlink /proc/<span class=\"token variable\">$$</span>/ns/pid\npid:<span class=\"token punctuation\">[</span><span class=\"token number\">4026531836</span><span class=\"token punctuation\">]</span>\n\nphl@kernelnewbies:~$ <span class=\"token function\">sudo</span> unshare --uts --mount --pid --mount-proc --fork /bin/bash\nroot@kernelnewbies:~<span class=\"token comment\"># readlink /proc/$$/ns/pid</span>\npid:<span class=\"token punctuation\">[</span><span class=\"token number\">4026532182</span><span class=\"token punctuation\">]</span>\n\nroot@kernelnewbies:~<span class=\"token comment\"># unshare --uts --mount --pid --mount-proc --fork /bin/bash</span>\nroot@kernelnewbies:~<span class=\"token comment\"># readlink /proc/$$/ns/pid</span>\npid:<span class=\"token punctuation\">[</span><span class=\"token number\">4026532185</span><span class=\"token punctuation\">]</span>\n\nroot@kernelnewbies:~<span class=\"token comment\"># unshare --uts --mount --pid --mount-proc --fork /bin/bash</span>\nroot@kernelnewbies:~<span class=\"token comment\"># readlink /proc/$$/ns/pid</span>\npid:<span class=\"token punctuation\">[</span><span class=\"token number\">4026532188</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后，我们启动一个新Shell，然后使用pstree查看进程间关系。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ pstree -lp <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> unshare\nsudo<span class=\"token punctuation\">(</span><span class=\"token number\">12547</span><span class=\"token punctuation\">)</span>---unshare<span class=\"token punctuation\">(</span><span class=\"token number\">12548</span><span class=\"token punctuation\">)</span>---bash<span class=\"token punctuation\">(</span><span class=\"token number\">12549</span><span class=\"token punctuation\">)</span>---unshare<span class=\"token punctuation\">(</span><span class=\"token number\">12579</span><span class=\"token punctuation\">)</span>---bash<span class=\"token punctuation\">(</span><span class=\"token number\">12580</span><span class=\"token punctuation\">)</span>---unshare<span class=\"token punctuation\">(</span><span class=\"token number\">12593</span><span class=\"token punctuation\">)</span>---bash<span class=\"token punctuation\">(</span><span class=\"token number\">12594</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>使用cat /proc/[pid]/status | grep NSpid可查看某进程在当前pid namespace及子孙pid namespace中的pid。我们在全局pid namespace中查看上述各进程在各pid namespace中的pid，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">cat</span> /proc/12594/status <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> NSpid\nNSpid: <span class=\"token number\">12594</span> <span class=\"token number\">21</span> <span class=\"token number\">11</span> <span class=\"token number\">1</span>\n\nphl@kernelnewbies:~$ <span class=\"token function\">cat</span> /proc/12593/status <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> NSpid\nNSpid: <span class=\"token number\">12593</span> <span class=\"token number\">20</span> <span class=\"token number\">10</span>\n\nphl@kernelnewbies:~$ <span class=\"token function\">cat</span> /proc/12580/status <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> NSpid\nNSpid: <span class=\"token number\">12580</span> <span class=\"token number\">11</span> <span class=\"token number\">1</span>\n\nphl@kernelnewbies:~$ <span class=\"token function\">cat</span> /proc/12579/status <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> NSpid\nNSpid: <span class=\"token number\">12579</span> <span class=\"token number\">10</span>\n\nphl@kernelnewbies:~$ <span class=\"token function\">cat</span> /proc/12549/status <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> NSpid\nNSpid: <span class=\"token number\">12549</span> <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>下面我们将以上进程在各pid namespace中的pid，整理成表格。表格信息如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1820220318143156.png\" alt=\"使用 Shell 脚本实现 Docker\"></p>\n<p>我们以最后一行为例进行介绍，最后一行有4个pid，这4个pid其实是同一个进程。这个进程在4个pid namespace中都可以被看到，且其在4个pid namespace中的pid各不相同。</p>\n<h4 id=\"1-4-4-docker-sh\">1.4.4.docker.sh</h4>\n<p>有了以上关于pid namespace的知识，我们就可以将pid namespae加入到docker.sh中了。pid namespace将放在docker.sh中，带下划线的行是我们为实现pid namespace而修改的代码。修改后的docker.sh脚本如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">..</span>.\nunshare --uts --mount --pid --fork ./container.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>从上述代码我们可以看到，我们仅仅是在调用unshare时加入--pid和--fork选项，就可为docker.sh引入了pid namespace功能。</p>\n<p>然后，我们需要重新挂载/proc文件系统。重新挂载/proc文件系统的功能将放在container.sh中，带下划线的行是我们为重新挂载/proc文件系统而新添的代码。修改后的container.sh脚本如下如下所示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">hostname</span> <span class=\"token variable\">$container</span>\n<span class=\"token function\">mount</span> -t proc proc /proc\n<span class=\"token builtin class-name\">exec</span> <span class=\"token variable\">$program</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>现在，我们运行docker.sh，并查看当前的进程信息。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh$ <span class=\"token function\">sudo</span> ./docker.sh -c run -m 100M -C dreamland -I ubuntu1604 -V data1 -P /bin/bash\nroot@dreamland:~/docker.sh<span class=\"token comment\"># ps -ef</span>\n<span class=\"token environment constant\">UID</span>        PID  <span class=\"token environment constant\">PPID</span>  C STIME TTY          TIME CMD\nroot         <span class=\"token number\">1</span>     <span class=\"token number\">0</span>  <span class=\"token number\">0</span> <span class=\"token number\">17</span>:31 pts/1    00:00:00 /bin/bash\nroot        <span class=\"token number\">16</span>     <span class=\"token number\">1</span>  <span class=\"token number\">0</span> <span class=\"token number\">17</span>:31 pts/1    00:00:00 <span class=\"token function\">ps</span> -ef<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可看出，当前进程只有两个，不再有主机上的其他进程。</p>\n<h2 id=\"2-CGroups\">2.CGroups</h2>\n<h3 id=\"2-1-CGroups简介\">2.1.CGroups简介</h3>\n<p>CGroups是一种将进程分组，并以组为单位对进程实施资源限制的技术。每个组都包含以下几类信息：</p>\n<ul>\n<li>进程列表</li>\n<li>资源A限制</li>\n<li>资源B限制</li>\n<li>资源C限制</li>\n<li>...</li>\n</ul>\n<p>我们将以常见的CPU资源及内存资源为例进行介绍。以下的信息将使进程号为1001、1002、2008、3306的四个进程总共只能使用一个CPU核心；总共最多使用25%的CPU资源；总共最多使用100M内存，这样的一个分组被称为cgroup。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1820220318143103.png\" alt=\"使用 Shell 脚本实现 Docker\"></p>\n<p>上面的介绍只是说明了要将何种资源限制施加于哪些进程，并未说明资源限制是如何施加到进程上。具体施加资源限制的过程需要subsystem来帮忙。subsystem读取cgroup中的资源限制和进程列表，然后将这些资源限制施加到这些进程上。常见的subsystem包括如下几种：</p>\n<ul>\n<li>cpu</li>\n<li>memory</li>\n<li>pids</li>\n<li>devices</li>\n<li>blkio</li>\n<li>net_cls</li>\n</ul>\n<p>每个subsystem只读取与其相关的资源限制，然后施加到进程上。例如：memory子系统只读取内存限制，而cpu子系统只读取cpu限制。</p>\n<p>cgroup被组织成树，如下图所示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1820220318143057.png\" alt=\"使用 Shell 脚本实现 Docker\"></p>\n<p>采用树状结构可以方便地实现资源限制继承，一个cgroup中的资源限制将作用于该cgroup及其子孙cgroup中的进程。例如：图中13001、10339、2999受到A、B、C、D四个cgroup中的资源限制。这样的一个树状结构被称为hierarchy。</p>\n<p>hierarchy中包含了系统中所有的进程，它们分布于各个cgroup中。在hierarchy中，一个进程必须属于且只属于一个cgroup，这样才能保证对进程施加的资源限制不会遗漏也不会冲突。</p>\n<p>要想让一个subsystem读取hierarchy中各cgroup的资源限制，并施加于其中的进程需要将subsystem和hierarchy关联起来。subsystem与hierarchy的关系如下：</p>\n<ul>\n<li>系统中可以有多个hierarchy</li>\n<li>一个hierarchy可以关联0个或多个subsystem，当关联0个subsystem时，该hierarchy只是对进程进行分类</li>\n<li>一个subsystem最多关联到一个hierarchy，因为每个hierarchy都包含系统中所有的进程，若一个subsystem关联到了多个hierarchy，对同一进程将有多种资源限制，这是不对的</li>\n</ul>\n<p>系统使用CGroups通常有两种形式：一种是创建一个hierarchy，将所有的subsystem关联到其上，在这个hierarchy上配置各种资源限制；另一种是为每一个subsystem创建一个hierarchy，并将该subsystem关联到其上，每个hierarchy只对一种资源进行限制。后一种比较清晰，得到了更普遍的采用。</p>\n<p>CGroups不像大多数的技术那样提供API或命令之类的用户接口，而是提供给用户一个虚拟文件系统，该虚拟文件系统类型为cgroup。一个挂载后的cgroup文件系统就是一个hierarchy，文件系统中的一个目录就是一个cgroup，目录中的文件代表了进程列表或者资源限制信息。文件系统是树状结构，其各个目录之间的父子关系就代表了cgroup之间的继承关系。挂载cgroup虚拟文件系统后，通过在该文件系统上创建目录、写进程列表文件、写资源限制文件就可以操作CGroups。</p>\n<p>下面，我们通过实验学习一下CGroups的用法。首先，我们挂载一个cgroup虚拟文件系统，该文件系统不与任何subsystem关联，仅仅是将进程进行分类。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">mkdir</span> -p cg/test\n<span class=\"token comment\"># -o none,name=test 表示该cgroup文件系统不与任何子系统关联</span>\n<span class=\"token comment\"># 该文件系统用name=test来标识</span>\nphl@kernelnewbies:~$ <span class=\"token function\">sudo</span> <span class=\"token function\">mount</span> -t cgroup -o none,name<span class=\"token operator\">=</span>test <span class=\"token builtin class-name\">test</span> cg/test\nphl@kernelnewbies:~$ tree cg/test\ncg/test\n├── cgroup.clone_children\n├── cgroup.procs\n├── cgroup.sane_behavior\n├── notify_on_release\n├── release_agent\n└── tasks\n<span class=\"token number\">0</span> directories, <span class=\"token number\">6</span> files<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>挂载cgroup文件系统后，该cgroup文件系统的根目录下会生成许多文件，该根目录被称为root cgroup。cgroup.procs里面存放的是当前cgroup中的所有进程id，由于该hierarchy中只有一个cgroup，所以这个文件包含了系统中所有的进程id。其他的文件与cgroups基本功能关系不大，暂时可以忽略。</p>\n<p>在cgroup文件系统中，创建一个目录就会创建一个cgroup。下面我们将会演示如何创建下面这样的hierarchy：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1820220318143054.png\" alt=\"使用 Shell 脚本实现 Docker\"></p>\n<p>命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> -p cg/test/test1/test11\nphl@kernelnewbies:~$ <span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> -p cg/test/test2/test22\nphl@kernelnewbies:~$ tree cg/test\ncg/test\n├── cgroup.clone_children\n├── cgroup.procs\n├── cgroup.sane_behavior\n├── notify_on_release\n├── release_agent\n├── tasks\n├── test1\n│   ├── cgroup.clone_children\n│   ├── cgroup.procs\n│   ├── notify_on_release\n│   ├── tasks\n│   └── test11\n│       ├── cgroup.clone_children\n│       ├── cgroup.procs\n│       ├── notify_on_release\n│       └── tasks\n└── test2\n    ├── cgroup.clone_children\n    ├── cgroup.procs\n    ├── notify_on_release\n    ├── tasks\n    └── test22\n        ├── cgroup.clone_children\n        ├── cgroup.procs\n        ├── notify_on_release\n        └── tasks\n\n<span class=\"token number\">4</span> directories, <span class=\"token number\">22</span> files<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，我们创建了相应的目录后，这些目录下自动出现了包含cgroup信息的目录及文件。</p>\n<p>删除cgroup时只需删除该cgroup所在的目录即可。下面我们将删除test11 cgroup，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">sudo</span> <span class=\"token function\">rmdir</span> cg/test/test1/test11\nphl@kernelnewbies:~$ tree cg/test\ncg/test\n├── cgroup.clone_children\n├── cgroup.procs\n├── cgroup.sane_behavior\n├── notify_on_release\n├── release_agent\n├── tasks\n├── test1\n│   ├── cgroup.clone_children\n│   ├── cgroup.procs\n│   ├── notify_on_release\n│   └── tasks\n└── test2\n    ├── cgroup.clone_children\n    ├── cgroup.procs\n    ├── notify_on_release\n    ├── tasks\n    └── test22\n        ├── cgroup.clone_children\n        ├── cgroup.procs\n        ├── notify_on_release\n        └── tasks\n\n<span class=\"token number\">3</span> directories, <span class=\"token number\">18</span> files<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>每个cgroup下面都有一个cgroup.procs文件，该文件里面包含当前cgroup里面的所有进程id。只要将某个进程的id写入该文件，即可将该进程加入到该cgroup中。下面，我们将当前的bash加入到test22 cgroup中，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$$</span>\n<span class=\"token number\">3894</span>\nphl@kernelnewbies:~$ <span class=\"token function\">sudo</span> <span class=\"token function\">sh</span> -c <span class=\"token string\">\"echo 3894 &gt; cg/test/test2/test22/cgroup.procs\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>/proc/[pid]/cgroup包含了某个进程所在的cgroup信息。下面，我们查看一下当前bash进程所在的cgroup信息，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">cat</span> /proc/3894/cgroup\n<span class=\"token number\">13</span>:name<span class=\"token operator\">=</span>test:/test2/test22\n<span class=\"token number\">12</span>:freezer:/\n<span class=\"token number\">11</span>:perf_event:/\n<span class=\"token number\">10</span>:blkio:/user.slice\n<span class=\"token number\">9</span>:devices:/user.slice\n<span class=\"token number\">8</span>:hugetlb:/\n<span class=\"token number\">7</span>:cpu,cpuacct:/user.slice\n<span class=\"token number\">6</span>:net_cls,net_prio:/\n<span class=\"token number\">5</span>:memory:/user.slice\n<span class=\"token number\">4</span>:rdma:/\n<span class=\"token number\">3</span>:pids:/user.slice/user-1001.slice/session-4.scope\n<span class=\"token number\">2</span>:cpuset:/\n<span class=\"token number\">1</span>:name<span class=\"token operator\">=</span>systemd:/user.slice/user-1001.slice/session-4.scope\n<span class=\"token number\">0</span>::/user.slice/user-1001.slice/session-4.scope<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，当前bash进程加入了多个cgroup，其中带下划线的行为我们刚刚加入的cgroup。</p>\n<p>要想将hierarchy与子系统关联起来，需要在-o选项中指定子系统名称。下面演示了如何将memory子系统与新挂载的cgroup文件系统关联起来。代码如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> cg/memory\nphl@kernelnewbies:~$ <span class=\"token function\">sudo</span> <span class=\"token function\">mount</span> -t cgroup -o memory memcg cg/memory<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>由于很多发行版的操作系统已经为我们配置好了这些cgroup文件系统，我们应当直接使用这些已经挂在好的文件系统，不需要自己去挂载。</p>\n<p>另外，当创建子进程时，子进程会自动加入父进程所在的cgroup。</p>\n<h3 id=\"2-2-限制内存\">2.2.限制内存</h3>\n<h4 id=\"2-2-1-用CGroups限制内存\">2.2.1.用CGroups限制内存</h4>\n<p>下面我们将介绍演示CGroups如何限制进程使用的内存资源，我们以内存为例进行讲解。</p>\n<p>Ubuntu18.04已经为我们挂载了一个关联memory子系统的cgroup虚拟文件系统。我们用mount命令查看一下该系统挂载到了何处，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">mount</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> cgroup\ntmpfs on /sys/fs/cgroup <span class=\"token builtin class-name\">type</span> tmpfs <span class=\"token punctuation\">(</span>ro,nosuid,nodev,noexec,mode<span class=\"token operator\">=</span><span class=\"token number\">755</span><span class=\"token punctuation\">)</span>\ncgroup on /sys/fs/cgroup/unified <span class=\"token builtin class-name\">type</span> cgroup2 <span class=\"token punctuation\">(</span>rw,nosuid,nodev,noexec,relatime,nsdelegate<span class=\"token punctuation\">)</span>\ncgroup on /sys/fs/cgroup/systemd <span class=\"token builtin class-name\">type</span> cgroup <span class=\"token punctuation\">(</span>rw,nosuid,nodev,noexec,relatime,xattr,name<span class=\"token operator\">=</span>systemd<span class=\"token punctuation\">)</span>\ncgroup on /sys/fs/cgroup/cpuset <span class=\"token builtin class-name\">type</span> cgroup <span class=\"token punctuation\">(</span>rw,nosuid,nodev,noexec,relatime,cpuset<span class=\"token punctuation\">)</span>\ncgroup on /sys/fs/cgroup/pids <span class=\"token builtin class-name\">type</span> cgroup <span class=\"token punctuation\">(</span>rw,nosuid,nodev,noexec,relatime,pids<span class=\"token punctuation\">)</span>\ncgroup on /sys/fs/cgroup/rdma <span class=\"token builtin class-name\">type</span> cgroup <span class=\"token punctuation\">(</span>rw,nosuid,nodev,noexec,relatime,rdma<span class=\"token punctuation\">)</span>\ncgroup on /sys/fs/cgroup/memory <span class=\"token builtin class-name\">type</span> cgroup <span class=\"token punctuation\">(</span>rw,nosuid,nodev,noexec,relatime,memory<span class=\"token punctuation\">)</span>\ncgroup on /sys/fs/cgroup/net_cls,net_prio <span class=\"token builtin class-name\">type</span> cgroup <span class=\"token punctuation\">(</span>rw,nosuid,nodev,noexec,relatime,net_cls,net_prio<span class=\"token punctuation\">)</span>\ncgroup on /sys/fs/cgroup/cpu,cpuacct <span class=\"token builtin class-name\">type</span> cgroup <span class=\"token punctuation\">(</span>rw,nosuid,nodev,noexec,relatime,cpu,cpuacct<span class=\"token punctuation\">)</span>\ncgroup on /sys/fs/cgroup/hugetlb <span class=\"token builtin class-name\">type</span> cgroup <span class=\"token punctuation\">(</span>rw,nosuid,nodev,noexec,relatime,hugetlb<span class=\"token punctuation\">)</span>\ncgroup on /sys/fs/cgroup/devices <span class=\"token builtin class-name\">type</span> cgroup <span class=\"token punctuation\">(</span>rw,nosuid,nodev,noexec,relatime,devices<span class=\"token punctuation\">)</span>\ncgroup on /sys/fs/cgroup/blkio <span class=\"token builtin class-name\">type</span> cgroup <span class=\"token punctuation\">(</span>rw,nosuid,nodev,noexec,relatime,blkio<span class=\"token punctuation\">)</span>\ncgroup on /sys/fs/cgroup/perf_event <span class=\"token builtin class-name\">type</span> cgroup <span class=\"token punctuation\">(</span>rw,nosuid,nodev,noexec,relatime,perf_event<span class=\"token punctuation\">)</span>\ncgroup on /sys/fs/cgroup/freezer <span class=\"token builtin class-name\">type</span> cgroup <span class=\"token punctuation\">(</span>rw,nosuid,nodev,noexec,relatime,freezer<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>该系统挂载到了/sys/fs/cgroup/memory目录下。我们在该hierarchy中创建一个test cgroup并查看该cgroup的目录结构，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> /sys/fs/cgroup/memory/test\nphl@kernelnewbies:~$ tree /sys/fs/cgroup/memory/test\n/sys/fs/cgroup/memory/test\n├── cgroup.clone_children\n├── cgroup.event_control\n├── cgroup.procs\n├── memory.failcnt\n├── memory.force_empty\n├── memory.kmem.failcnt\n├── memory.kmem.limit_in_bytes\n├── memory.kmem.max_usage_in_bytes\n├── memory.kmem.slabinfo\n├── memory.kmem.tcp.failcnt\n├── memory.kmem.tcp.limit_in_bytes\n├── memory.kmem.tcp.max_usage_in_bytes\n├── memory.kmem.tcp.usage_in_bytes\n├── memory.kmem.usage_in_bytes\n├── memory.limit_in_bytes\n├── memory.max_usage_in_bytes\n├── memory.move_charge_at_immigrate\n├── memory.numa_stat\n├── memory.oom_control\n├── memory.pressure_level\n├── memory.soft_limit_in_bytes\n├── memory.stat\n├── memory.swappiness\n├── memory.usage_in_bytes\n├── memory.use_hierarchy\n├── notify_on_release\n└── tasks\n<span class=\"token number\">0</span> directories, <span class=\"token number\">27</span> files<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，新建的test cgroup中有许多文件，这些文件中存放着资源限制信息。其中memory.limit_in_bytes里面存放的是该cgroup中的进程能够使用的内存额度。</p>\n<p>下面，我们将当前bash加入到test cgroup中并查看当前bash所属的cgroup信息。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$$</span>\n<span class=\"token number\">2984</span>\nphl@kernelnewbies:~$ <span class=\"token function\">sudo</span> <span class=\"token function\">sh</span> -c <span class=\"token string\">\"echo 2984 &gt; /sys/fs/cgroup/memory/test/cgroup.procs\"</span>\nphl@kernelnewbies:~$ <span class=\"token function\">cat</span> /proc/2984/cgroup\n<span class=\"token number\">12</span>:devices:/user.slice\n<span class=\"token number\">11</span>:hugetlb:/\n<span class=\"token number\">10</span>:memory:/test\n<span class=\"token number\">9</span>:rdma:/\n<span class=\"token number\">8</span>:perf_event:/\n<span class=\"token number\">7</span>:blkio:/user.slice\n<span class=\"token number\">6</span>:cpu,cpuacct:/user.slice\n<span class=\"token number\">5</span>:pids:/user.slice/user-1001.slice/session-4.scope\n<span class=\"token number\">4</span>:freezer:/\n<span class=\"token number\">3</span>:cpuset:/\n<span class=\"token number\">2</span>:net_cls,net_prio:/\n<span class=\"token number\">1</span>:name<span class=\"token operator\">=</span>systemd:/user.slice/user-1001.slice/session-4.scope\n<span class=\"token number\">0</span>::/user.slice/user-1001.slice/session-4.scope<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，当前bash所属的memory cgroup变为了/test，该目录为一个相对于root cgroup的相对路径。</p>\n<p>然后，将100M写入test cgroup中的memory.limit_in_bytes文件中，命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">sudo</span> <span class=\"token function\">sh</span> -c <span class=\"token string\">\"echo 100M &gt; /sys/fs/cgroup/memory/test/memory.limit_in_bytes\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>我们在当前bash中启动一个占用300M进程的stress进程，该stress进程是bash的子进程，其与bash进程都在test cgroup中。命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ stress --vm <span class=\"token number\">1</span> --vm-bytes 300M --vm-keep<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>启动一个新的Shell窗口，执行top命令查看stress进程占用的内存。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">PID <span class=\"token environment constant\">USER</span>      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND\n<span class=\"token number\">14216</span> root      <span class=\"token number\">20</span>   <span class=\"token number\">0</span>  <span class=\"token number\">315440</span> <span class=\"token number\">101224</span>    <span class=\"token number\">264</span> D <span class=\"token number\">27.7</span>  <span class=\"token number\">2.5</span>   <span class=\"token number\">0</span>:02.66 stress<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，stress进程占用了2.5%的内存。我的电脑的内存为4G，4G * 2.5% = 100M，stress进程确实受到了cgroup中设置的内存额度的限制。</p>\n<h4 id=\"2-2-2-docker-sh\">2.2.2.docker.sh</h4>\n<p>下有了以上关于CGroups的知识，我们就可以将限制内存的功能加入到docker.sh中了。限制内存的功能将放在container.sh中，带下划线的行是我们为实现限制内存而新添的代码。修改后的container.sh脚本如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">hostname</span> <span class=\"token variable\">$container</span>\n<span class=\"token function\">mkdir</span> -p /sys/fs/cgroup/memory/<span class=\"token variable\">$container</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$$</span> <span class=\"token operator\">&gt;</span> /sys/fs/cgroup/memory/<span class=\"token variable\">$container</span>/cgroup.procs\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$memory</span> <span class=\"token operator\">&gt;</span> /sys/fs/cgroup/memory/<span class=\"token variable\">$container</span>/memory.limit_in_bytes\n<span class=\"token function\">mount</span> -t proc proc /proc\n<span class=\"token builtin class-name\">exec</span> <span class=\"token variable\">$program</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>首先，我们根据容器的名字创建cgroup，命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p /sys/fs/cgroup/memory/<span class=\"token variable\">$container</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后，我们将当前bash加入到我们创建的cgroup中，命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$$</span> <span class=\"token operator\">&gt;</span> /sys/fs/cgroup/memory/<span class=\"token variable\">$container</span>/cgroup.procs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>最后，我们将内存限制写入新cgroup的memory.limit_in_bytes文件中，命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$memory</span> <span class=\"token operator\">&gt;</span> /sys/fs/cgroup/memory/<span class=\"token variable\">$container</span>/memory.limit_in_bytes<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>现在，我们运行docker.sh，并启动一个占用300M进程的stress进程。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh$ <span class=\"token function\">sudo</span> ./docker.sh -c run -m 100M -C dreamland -I ubuntu1604 -V data1 -P /bin/bash\nroot@dreamland:~/docker.sh<span class=\"token comment\"># stress --vm 1 --vm-bytes 300M --vm-keep</span>\nstress: info: <span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> dispatching hogs: <span class=\"token number\">0</span> cpu, <span class=\"token number\">0</span> io, <span class=\"token number\">1</span> vm, <span class=\"token number\">0</span> hdd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>启动一个新的Shell窗口，执行top命令查看stress进程占用的内存。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">PID <span class=\"token environment constant\">USER</span>      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND\n<span class=\"token number\">14216</span> root      <span class=\"token number\">20</span>   <span class=\"token number\">0</span>  <span class=\"token number\">315440</span> <span class=\"token number\">101224</span>    <span class=\"token number\">264</span> D <span class=\"token number\">27.7</span>  <span class=\"token number\">2.5</span>   <span class=\"token number\">0</span>:02.66 stress<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，容器内的stress进程只使用了100M的内存。</p>\n<h2 id=\"3-切换根文件系统\">3.切换根文件系统</h2>\n<h3 id=\"3-1-根文件系统\">3.1.根文件系统</h3>\n<p>在容器技术中，根文件系统可为容器进程提供一个与主机不一致的文件系统环境。举个例子，主机为Ubuntu 18.04，创建的容器采用Ubuntu 16.04的根文件系统，那么容器运行时所用的软件及其依赖库、配置文件等都是Ubuntu 16.04的。尽管该容器使用的内核是仍旧是Ubuntu 18.04的，但应用软件的表现却与Ubuntu 16.04一致，从虚拟化的角度来说该容器就是一个Ubuntu 16.04系统。</p>\n<p>debootstrap是Ubuntu下的一个工具，用来构建根文件系统。生成的目录符合Linux文件系统标准，即包含了/boot、/etc、/bin、/usr等目录。debootstrap的安装命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">debootstrap</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>下面我们通过debootstrap构建Ubuntu 16.04的根文件系统。为了清晰，我们在images目录下生成根文件系统。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh$ <span class=\"token function\">mkdir</span> images\nphl@kernelnewbies:~/docker.sh$ <span class=\"token builtin class-name\">cd</span> images\nphl@kernelnewbies:~/docker.sh/images$ <span class=\"token function\">sudo</span> <span class=\"token function\">debootstrap</span> --arch amd64 xenial ./ubuntu1604<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>制作根文件系统需要从服务器下载很多文件，很耗时，请耐心等待。当文件系统制作好后，可以使用tree命令查看生成的根文件系统。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh/images$ tree -L <span class=\"token number\">1</span> ubuntu1604/\nubuntu1604/\n├── bin\n├── boot\n├── dev\n├── etc\n├── home\n├── lib\n├── lib64\n├── media\n├── mnt\n├── old_root\n├── opt\n├── proc\n├── root\n├── run\n├── sbin\n├── srv\n├── sys\n├── tmp\n├── usr\n└── var\n<span class=\"token number\">20</span> directories, <span class=\"token number\">0</span> files<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这个根文件系统与Linux系统目录很相近，我们后续的实验将使用该根文件系统。</p>\n<h3 id=\"3-2-pivot-root\">3.2.pivot_root</h3>\n<p>pivot_root命令用于切换根文件系统，其使用方式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pivot_root new_root put_old<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>pivot_root将当前进程的根文件系统移至put_old目录并使new_root目录成为新的根文件系统。</p>\n<p>下面我们将通过实验学习pivot_root的使用方法。为了简单，我们在一个新的mount namespace下进行实验。首先，我们创建一个新的mount namespace，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh/images$ <span class=\"token function\">sudo</span> unshare --mount /bin/bash\nroot@kernelnewbies:~/docker.sh/images<span class=\"token comment\">#</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>在我们的实验中，我们的根文件系统将挂载在ubuntu1604目录，而老的根文件系统将被移动到ubuntu1604/old_root目录下。我们先创建old_root目录，命令如下：</p>\n<p>root@kernelnewbies:~/docker.sh/images# mkdir -p ubuntu1604/old_root/</p>\n<p>由于pivot_root命令要求老的根目录和新的根目录不能在同一个挂载点下，因此我们通过bind mount将ubuntu1604目录变成一个挂载点。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@kernelnewbies:~/docker.sh/images<span class=\"token comment\"># mount --bind ubuntu1604 ubuntu1604</span>\nroot@kernelnewbies:~/docker.sh/images<span class=\"token comment\"># cat /proc/self/mountinfo | grep ubuntu1604</span>\n<span class=\"token number\">624</span> <span class=\"token number\">382</span> <span class=\"token number\">8</span>:1 /home/phl/docker.sh/images/ubuntu1604 /home/phl/docker.sh/images/ubuntu1604 rw,relatime - ext4 /dev/sda1 rw,errors<span class=\"token operator\">=</span>remount-ro<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>准备好切换根文件系统所需要的条件后，我们调用pivot_root切换根文件系统。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@kernelnewbies:~/docker.sh/images<span class=\"token comment\"># cd ubuntu1604/</span>\nroot@kernelnewbies:~/docker.sh/images/ubuntu1604<span class=\"token comment\"># pivot_root . old_root/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>此时，已完成根文件系统的切换，/proc文件系统也被挪到了<br>\n/home/phl/docker.sh/images/ubuntu1604/old_root/proc，也就是说当前没有/proc文件系统，因此，我们无法查看挂载点信息，自然也无法执行一些依赖于/proc文件系统的操作。我们需要重新挂载/proc文件系统。命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@kernelnewbies:~/docker.sh/images/ubuntu1604<span class=\"token comment\"># mount -t proc proc /proc</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>重新挂载/proc文件系统后，我们就可以查看当前的挂载点信息了。通过读取/proc/self/mountinfo文件来查看系统的挂载点信息。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@kernelnewbies:~/docker.sh/images/ubuntu1604<span class=\"token comment\"># cat /proc/self/mountinfo</span>\n<span class=\"token number\">382</span> <span class=\"token number\">624</span> <span class=\"token number\">8</span>:1 / /old_root rw,relatime - ext4 /dev/sda1 rw,errors<span class=\"token operator\">=</span>remount-ro\n<span class=\"token punctuation\">..</span>.\n<span class=\"token number\">624</span> <span class=\"token number\">381</span> <span class=\"token number\">8</span>:1 /home/phl/docker.sh/images/ubuntu1604 / rw,relatime - ext4 /dev/sda1 rw,errors<span class=\"token operator\">=</span>remount-ro\n<span class=\"token number\">625</span> <span class=\"token number\">624</span> <span class=\"token number\">0</span>:5 / /proc rw,relatime - proc proc rw<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时的挂载点很多，为了方便查看，此处只保留了一些主要的挂载点信息。这些挂载点信息包括/、/proc、/old_root。/old_root为老的根文件系统，我们需要将其卸载。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@kernelnewbies:~/docker.sh/images/ubuntu1604<span class=\"token comment\"># umount -l /old_root/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>卸载掉老的根文件系统后，我们再查看系统的挂载点信息。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@kernelnewbies:~/docker.sh/images/ubuntu1604<span class=\"token comment\"># cat /proc/self/mountinfo</span>\n<span class=\"token number\">624</span> <span class=\"token number\">381</span> <span class=\"token number\">8</span>:1 /home/phl/docker.sh/images/ubuntu1604 / rw,relatime - ext4 /dev/sda1 rw,errors<span class=\"token operator\">=</span>remount-ro\n<span class=\"token number\">625</span> <span class=\"token number\">624</span> <span class=\"token number\">0</span>:5 / /proc rw,relatime - proc proc rw<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>此时，挂载点信息中只有/、/proc，不再有主机的挂载点信息。</p>\n<h3 id=\"3-3-docker-sh\">3.3.docker.sh</h3>\n<p>有了以上关于切换根文件系统的知识，我们就可以将切换根文件系统的功能加入到docker.sh中了。切换根文件系统的功能将放在container.sh中，带下划线的行是我们为实现切换根文件系统而新添的代码。修改后的container.sh脚本如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token function\">hostname</span> <span class=\"token variable\">$container</span>\n\n<span class=\"token function\">mkdir</span> -p /sys/fs/cgroup/memory/<span class=\"token variable\">$container</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$$</span> <span class=\"token operator\">&gt;</span> /sys/fs/cgroup/memory/<span class=\"token variable\">$container</span>/cgroup.procs\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$memory</span> <span class=\"token operator\">&gt;</span> /sys/fs/cgroup/memory/<span class=\"token variable\">$container</span>/memory.limit_in_bytes\n\n<span class=\"token function\">mkdir</span> -p images/<span class=\"token variable\">$image</span>/old_root\n<span class=\"token function\">mount</span> --bind images/<span class=\"token variable\">$image</span> images/<span class=\"token variable\">$image</span>\n\n<span class=\"token builtin class-name\">cd</span> images/<span class=\"token variable\">$image</span>\npivot_root <span class=\"token builtin class-name\">.</span> ./old_root\n\n<span class=\"token function\">mount</span> -t proc proc /proc\n<span class=\"token function\">umount</span> -l /old_root\n\n<span class=\"token builtin class-name\">exec</span> <span class=\"token variable\">$program</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>首先，我们在新的根文件系统目录中创建挂载老的根文件系统的目录。命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p images/<span class=\"token variable\">$image</span>/old_root<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后，我们将新根文件系统目录bind mount成一个挂载点。命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> --bind images/<span class=\"token variable\">$image</span> images/<span class=\"token variable\">$image</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后，我们切换根文件系统。命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> images/<span class=\"token variable\">$image</span>\npivot_root <span class=\"token builtin class-name\">.</span> ./old_root<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>最后，我们重新挂载/proc文件系统，然后卸载掉老的根文件系统。命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> -t proc proc /proc\n<span class=\"token function\">umount</span> -l /old_root<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>现在，我们运行docker.sh，并查看当前的发行版信息。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh$ <span class=\"token function\">sudo</span> ./docker.sh -c run -m 100M -C dreamland -I ubuntu1604 -V data1 -P /bin/bash\nroot@dreamland:/<span class=\"token comment\"># cat /etc/issue</span>\nUbuntu <span class=\"token number\">16.04</span> LTS <span class=\"token punctuation\">\\</span>n <span class=\"token punctuation\">\\</span>l<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看出，读出的发行版信息是Ubuntu 16.04 LTS \\n \\l，而非主机的Ubuntu 18.04.3 LTS \\n \\l。这说明当前使用的根文件系统确实是ubuntu16.04目录下的根文件系统，而非主机的根文件系统。</p>\n<p>我们再查看一下当前的挂载点信息，看看是否只有/与/proc。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@dreamland:/<span class=\"token comment\"># cat /proc/self/mountinfo</span>\n<span class=\"token number\">625</span> <span class=\"token number\">381</span> <span class=\"token number\">8</span>:1 /home/phl/docker.sh/images/ubuntu1604 / rw,relatime - ext4 /dev/sda1 rw,errors<span class=\"token operator\">=</span>remount-ro\n<span class=\"token number\">626</span> <span class=\"token number\">625</span> <span class=\"token number\">0</span>:52 / /proc rw,relatime - proc proc rw<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可看出，当前挂载点信息中只有/、/proc，不再有主机的挂载点信息。</p>\n<p>通过根文件系统，我们实现了在容器中虚拟出与主机不一样的操作系统的功能。</p>\n<h2 id=\"4-联合加载\">4.联合加载</h2>\n<h3 id=\"4-1-联合加载简介\">4.1.联合加载简介</h3>\n<p>联合加载指的是一次同时加载多个文件系统，但是在外面看起来只能看到 一个文件系统。联合加载会将各层文件系统叠加到一起，这样最终的文件系统会 包含所有底层的文件和目录。</p>\n<p>联合加载的多个文件系统中有一个是可读写文件系统，称为读写层，其他文件系统是只读的，称为只读层。当联合加载的文件系统发生变化时，这些变化都应用到这个读写层。比如，如果想修改一个文件，这个文件首先会从只读层复制到读写层。原只读层中的文件依然存在，但是被读写层中的该文件副本所隐藏。我们以后读写该文件时，都是读写的该文件在读写层中的副本。这种机制被称为 写时复制。</p>\n<p>我们之前实现的docker.sh，有一个很大的缺陷。那就是，如果使用相同的根文件系统同时启动多个容器的实例，那么，这些容器实例使用的根文件系统位于同一个目录。我们在不同的容器实例对根文件系统所作的修改，这些容器彼此之间都可以看到，甚至一个容器可以覆覆盖另一个容器所作的修改。同时，容器实例退出时，对根文件系统所作的修改也直接作用于其所使用的根文件系统。当我们使用该根文件系统再次启动容器实例时，新启动的容器实例也可以看到以前的这些修改。例如，我们用ubuntu1604根文件系统启动两个容器实例，命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh$ <span class=\"token function\">sudo</span> ./docker.sh -c run -m 100M -C dreamland -I ubuntu1604 -V data1 -P /bin/bash\nphl@kernelnewbies:~/docker.sh$ <span class=\"token function\">sudo</span> ./docker.sh -c run -m 100M -C dreamland2 -I ubuntu1604 -V data1 -P /bin/bash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>这两个容器实例对根文件系统做的修改彼此都可以看到。容器实例退出时，这些修改也被保存了下来，当用ubuntu1604根文件系统启动新的容器实例时，新实例也可看到以前实例所做的修改。</p>\n<p>如果容器使用的根文件系统是一个联合加载的文件系统，原先的根文件系统作为一个只读层，再添加一个读写层，那么，在容器内所作的修改都将只作用于读写层。为了区分，我们以后称ubuntu1604目录下的根文件系统为镜像。而我们可以为每一个容器实例指定一个唯一的读写层目录，这样的话，多个容器实例就可以使用同一个镜像，容器内所作的修改不会影响彼此，也不会影响到以后启动的容器实例。例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh$ <span class=\"token function\">sudo</span> ./docker.sh -c run -m 100M -C dreamland -I ubuntu1604 -V data1 -P /bin/bash\nphl@kernelnewbies:~/docker.sh$ <span class=\"token function\">sudo</span> ./docker.sh -c run -m 100M -C dreamland2 -I ubuntu1604 -V data1 -P /bin/bash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>我们使用ubuntu1604镜像启动了两个容器示例，并在容器实例里进行读写操作。这两个容器实例的读写层目录是不一样的，在容器实例中所作的修改只作用于各自的读写层，彼此之间不会影响，当然更不会影响到后续启动的容器实例。</p>\n<h3 id=\"4-2-AUFS\">4.2. AUFS</h3>\n<p>AUFS是一个实现了联合加载功能的文件系统。我们将采用AUFS实现docker.sh中的联合加载功能。</p>\n<p>下面，我们将通过实验演示一下AUFS文件系统的用法。首先，我们准备需要用到的目录及文件。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~$ <span class=\"token function\">mkdir</span> aufs\nphl@kernelnewbies:~$ <span class=\"token builtin class-name\">cd</span> aufs/\nphl@kernelnewbies:~/aufs$ <span class=\"token function\">mkdir</span> rw r1 r2 union\nphl@kernelnewbies:~/aufs$ <span class=\"token builtin class-name\">echo</span> hello r1 <span class=\"token operator\">&gt;</span> r1/hellor1.txt\nphl@kernelnewbies:~/aufs$ <span class=\"token builtin class-name\">echo</span> hello r2 <span class=\"token operator\">&gt;</span> r2/hellor2.txt\nphl@kernelnewbies:~/aufs$ <span class=\"token builtin class-name\">echo</span> hello rw <span class=\"token operator\">&gt;</span> rw/hellorw.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>下表列出了各个目录的作用。列表如下：</p>\n<ul>\n<li>rw为aufs文件系统的读写层目录</li>\n<li>r1为aufs文件系统的只读层目录</li>\n<li>r2为aufs文件系统的只读层目录</li>\n<li>union为挂载点，联合加载的aufs文件系统挂载于此目录</li>\n</ul>\n<p>下面我们将rw、r1、r2联合加载到union目录。命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/aufs$ <span class=\"token function\">sudo</span> <span class=\"token function\">mount</span> -t aufs -o <span class=\"token assign-left variable\">dirs</span><span class=\"token operator\">=</span>rw:r1:r2 none union<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>-t aufs表示要挂载的文件系统类型为AUFS</li>\n<li>-o dirs=rw:r1:r2表示要将哪些目录加载到afus文件系统中，多个目录之间以:分隔。目录列表中的第一个目录表示读写层目录</li>\n<li>union表示aufs文件系统要挂载的目录</li>\n</ul>\n<p>挂载好AUFS文件系统后，我们进入该文件系统，查看其内容。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/aufs$ <span class=\"token builtin class-name\">cd</span> union/\nphl@kernelnewbies:~/aufs/union$ <span class=\"token function\">ls</span>\nhellor1.txt hellor2.txt hellorw.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>从输出结果来看，rw、r1、r2目录下的内容全部出现在了AUFS文件系统中，该文件系统由rw、r1、r2目录叠加而成。</p>\n<p>然后，我们修改这些文件，看看原始的rw、r1、r2目录下的文件是否更改。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/aufs/union$ <span class=\"token builtin class-name\">echo</span> hello to r1 from union <span class=\"token operator\">&gt;</span> hellor1.txt\nphl@kernelnewbies:~/aufs/union$ <span class=\"token builtin class-name\">echo</span> hello to r2 from union <span class=\"token operator\">&gt;</span> hellor2.txt\nphl@kernelnewbies:~/aufs/union$ <span class=\"token builtin class-name\">echo</span> hello to rw from union <span class=\"token operator\">&gt;</span> hellorw.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>我们返回到aufs目录，直接查看aufs目录下的内容。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/aufs$ tree <span class=\"token builtin class-name\">.</span>\n<span class=\"token builtin class-name\">.</span>\n├── r1\n│   └── hellor1.txt\n├── r2\n│   └── hellor2.txt\n├── rw\n│   ├── hellor1.txt\n│   ├── hellor2.txt\n│   └── hellorw.txt\n└── union\n    ├── hellor1.txt\n    ├── hellor2.txt\n    └── hellorw.txt\n\n<span class=\"token number\">4</span> directories, <span class=\"token number\">8</span> files<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从输出结果我们可以看到，我们修改的hellor1.txt和hellor2.txt文件分别被拷贝了一份放在读写层目录rw中。我们查看一下这些文件的内容，命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/aufs$ <span class=\"token function\">cat</span> r1/hellor1.txt\nhello r1\nphl@kernelnewbies:~/aufs$ <span class=\"token function\">cat</span> r2/hellor2.txt\nhello r2\nphl@kernelnewbies:~/aufs$ <span class=\"token function\">cat</span> rw/hellor1.txt\nhello to r1 from union\nphl@kernelnewbies:~/aufs$ <span class=\"token function\">cat</span> rw/hellor2.txt\nhello to r2 from union\nphl@kernelnewbies:~/aufs$ <span class=\"token function\">cat</span> rw/hellorw.txt\nhello to rw from union<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从输出结果我们看到，用户修改只读层r1、r2中的文件时，这些文件被复制到了读写层，我们修改的是读写层的副本，原只读层中的文件没有变化。用户修改读写层rw中的文件时，修改直接作用于这些文件本身。</p>\n<h3 id=\"4-3-docker-sh\">4.3.docker.sh</h3>\n<p>在继续之前，我们需要将上一章在ubuntu1604根文件系统中创建的old_root目录删除掉，以保证该根文件系统跟刚制作好时一样。命令及结果如下：</p>\n<p>phl@kernelnewbies:~/docker.sh$ sudo rm -rf images/ubuntu1604/old_root</p>\n<p>有了以上关于联合加载的介绍，我们就可以将联合加载功能加入到docker.sh中了。联合加载功能将放在container.sh脚本中，带下划线的行是我们为实现联合加载功能而新添的代码。修改后的container.sh如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token function\">hostname</span> <span class=\"token variable\">$container</span>\n\n<span class=\"token function\">mkdir</span> -p /sys/fs/cgroup/memory/<span class=\"token variable\">$container</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$$</span> <span class=\"token operator\">&gt;</span> /sys/fs/cgroup/memory/<span class=\"token variable\">$container</span>/cgroup.procs\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$memory</span> <span class=\"token operator\">&gt;</span> /sys/fs/cgroup/memory/<span class=\"token variable\">$container</span>/memory.limit_in_bytes\n\n<span class=\"token function\">mkdir</span> -p <span class=\"token variable\">$container</span>/rwlayer\n<span class=\"token function\">mount</span> -t aufs -o <span class=\"token assign-left variable\">dirs</span><span class=\"token operator\">=</span><span class=\"token variable\">$container</span>/rwlayer:./images/<span class=\"token variable\">$image</span> none <span class=\"token variable\">$container</span>\n\n<span class=\"token function\">mkdir</span> -p <span class=\"token variable\">$container</span>/old_root\n<span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$container</span>\npivot_root <span class=\"token builtin class-name\">.</span> ./old_root\n\n<span class=\"token function\">mount</span> -t proc proc /proc\n<span class=\"token function\">umount</span> -l /old_root\n\n<span class=\"token builtin class-name\">exec</span> <span class=\"token variable\">$program</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>首先，我们根据容器的名字创建联合加载需要的读写层目录及文件系统挂载目录。命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p <span class=\"token variable\">$container</span>/rwlayer<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>假如我们传递的容器的名字为dreamland，将创建以下目录：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh$ tree dreamland/\ndreamland/\n└── rwlayer<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>其中dreamland/rwlayer目录为创建的AUFS文件系统的读写层，dreamland目录为AUFS文件系统的挂载点。</p>\n<p>然后我们将镜像目录、读写层目录联合加载到挂载点目录。命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> -t aufs -o <span class=\"token assign-left variable\">dirs</span><span class=\"token operator\">=</span><span class=\"token variable\">$container</span>/rwlayer:./images/<span class=\"token variable\">$image</span> none <span class=\"token variable\">$container</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>假如容器名字为dreamland，使用的镜像为ubuntu1604根文件系统，dreamland/rwlayer、images/ubuntu1604将被联合加载的dreamland目录。其中，dreamland/rwlayer为AUFS文件系统的读写层，images/ubuntu1604为AUFS文件系统的只读层。</p>\n<p>之前我们将老的根文件系统挪到了rootfs/old_root，rootfs代表一个具体的镜像目录。创建old_root目录时直接修改了该镜像。下面我们将老的根文件系统的挂载点目录放在AUFS文件系统中，并将老的根文件系统挪到此处。命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p <span class=\"token variable\">$container</span>/old_root\n<span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$container</span>\npivot_root <span class=\"token builtin class-name\">.</span> ./old_root<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>此时，$container目录本身就是一个挂载点，挂载了AUFS文件系统。因此下面的代码就被移除了：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> --bind images/<span class=\"token variable\">$image</span> images/<span class=\"token variable\">$image</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>现在，我们运行docker.sh，并在/root下创建一个文件。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh$ <span class=\"token function\">sudo</span> ./docker.sh -c run -m 100M -C dreamland -I ubuntu1604 -V data1 -P /bin/bash\nroot@dreamland:/<span class=\"token comment\"># cd /root</span>\nroot@dreamland:/root<span class=\"token comment\"># ls</span>\nroot@dreamland:/root<span class=\"token comment\"># cat /etc/issue &gt; hello.txt</span>\nroot@dreamland:/root<span class=\"token comment\"># cat hello.txt</span>\nUbuntu <span class=\"token number\">16.04</span> LTS <span class=\"token punctuation\">\\</span>n <span class=\"token punctuation\">\\</span>l<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>启动一个新的Shell窗口，查看一下该容器使用的AUFS文件系统。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh$ <span class=\"token function\">sudo</span> tree dreamland/\ndreamland/\n└── rwlayer\n    ├── old_root\n    └── root\n        └── hello.txt\n\n<span class=\"token number\">2</span> directories, <span class=\"token number\">1</span> <span class=\"token function\">file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，我们新建的文件及创建的老根文件系统的挂载点目录都出现在了读写层。我们再查看一下新创建的文件。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh$ <span class=\"token function\">sudo</span> <span class=\"token function\">cat</span> dreamland/rwlayer/root/hello.txt\nUbuntu <span class=\"token number\">16.04</span> LTS <span class=\"token punctuation\">\\</span>n <span class=\"token punctuation\">\\</span>l<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>文件内容是Ubuntu 16.04的发行版信息。</p>\n<p>通过联合加载，我们实现了在容器中的读写不会影响使用的镜像。这样使用ubuntu1604镜像创建多个容器时，彼此之间就不会相互影响了。</p>\n<h2 id=\"5-卷\">5.卷</h2>\n<h3 id=\"5-1-卷简介\">5.1.卷简介</h3>\n<p>卷是容器内的一个目录，这个目录可以绕过联合文件系统，提供数据共享（容器所使用的的联合文件系统不应该被主机或其他容器访问）与数据持久化的功能。</p>\n<p>举个例子，假如容器有个目录为/data的卷，我们向这个卷写入的内容不会出现在联合文件系统的读写层，而是直接出现在这个目录里。主机与其他容器也可以访问该目录，从而达到数据共享与数据持久化的目的。</p>\n<p>卷位于联合文件系统中，通常来说写入该目录的内容会被写入容器的读写层中，那么怎样才能是写入卷的目录直接出现在该目录中，而不是容器读写层呢？其实方法很简单，只要我们将该目录变成一个挂载点就行，变成挂载点后，这个目录中的内容就不属于联合文件系统了，写入该目录的内容自然会保存在挂载到该挂载点的设备中。</p>\n<h3 id=\"5-2-docker-sh\">5.2 docker.sh</h3>\n<p>有了以上关于卷的介绍，我们就可以将卷功能加入到docker.sh中了。卷功能将放在container.sh脚本中，带下划线的行是我们为实现卷功能而新添的代码。修改后的container.sh脚本如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token function\">hostname</span> <span class=\"token variable\">$container</span>\n\n<span class=\"token function\">mkdir</span> -p /sys/fs/cgroup/memory/<span class=\"token variable\">$container</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$$</span> <span class=\"token operator\">&gt;</span> /sys/fs/cgroup/memory/<span class=\"token variable\">$container</span>/cgroup.procs\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$memory</span> <span class=\"token operator\">&gt;</span> /sys/fs/cgroup/memory/<span class=\"token variable\">$container</span>/memory.limit_in_bytes\n\n<span class=\"token function\">mkdir</span> -p <span class=\"token variable\">$container</span>/rwlayer\n<span class=\"token function\">mount</span> -t aufs -o <span class=\"token assign-left variable\">dirs</span><span class=\"token operator\">=</span><span class=\"token variable\">$container</span>/rwlayer:./images/<span class=\"token variable\">$image</span> none <span class=\"token variable\">$container</span>\n\n<span class=\"token function\">mkdir</span> -p <span class=\"token variable\">$volume</span>\n<span class=\"token function\">mkdir</span> -p <span class=\"token variable\">$container</span>/<span class=\"token variable\">$volume</span>\n<span class=\"token function\">mount</span> --bind <span class=\"token variable\">$volume</span> <span class=\"token variable\">$container</span>/<span class=\"token variable\">$volume</span>\n\n<span class=\"token function\">mkdir</span> -p <span class=\"token variable\">$container</span>/old_root\n<span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$container</span>\npivot_root <span class=\"token builtin class-name\">.</span> ./old_root\n\n<span class=\"token function\">mount</span> -t proc proc /proc\n<span class=\"token function\">umount</span> -l /old_root\n\n<span class=\"token builtin class-name\">exec</span> <span class=\"token variable\">$program</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>首先，我们根据卷的名字创建主机卷目录，我们在容器内部对卷的修改，都将作用于此目录。命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p <span class=\"token variable\">$volume</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后，我们在容器内部创建同名卷目录，该目录本身会出现在容器的读写层中，因为该目录是在AUFS文件系统中创建的。因为<img src=\"https://math.now.sh?inline=container%E7%9B%AE%E5%BD%95%E4%B8%BA%E5%AE%B9%E5%99%A8%E7%9A%84%E6%A0%B9%E7%9B%AE%E5%BD%95%EF%BC%8C%E6%89%80%E4%BB%A5%E5%AE%B9%E5%99%A8%E5%86%85%E9%83%A8%E5%8D%B7%E7%9B%AE%E5%BD%95%E7%9A%84%E8%B7%AF%E5%BE%84%E4%B8%BA%2F\" style=\"filter: opacity(90%);transform:scale(0.85);text-align:center;display:inline-block;margin: 0;\">volume。命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p <span class=\"token variable\">$container</span>/<span class=\"token variable\">$volume</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>将主机上的卷目录bind mount到容器内部的卷目录上，这样容器内部对卷目录的修改，都将作用于主机卷目录。命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> --bind <span class=\"token variable\">$volume</span> <span class=\"token variable\">$container</span>/<span class=\"token variable\">$volume</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>现在，我们运行docker.sh，并在卷目录（/data1）中创建一个文件。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh$ <span class=\"token function\">sudo</span> ./docker.sh -c run -m 100M -C dreamland -I ubuntu1604 -V data1 -P /bin/bash\nroot@dreamland:/<span class=\"token comment\"># cd /data1</span>\nroot@dreamland:/data1<span class=\"token comment\"># echo \"hello to data1 volume from ubuntu16.04\" &gt;&gt; hello.txt</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>启动一个新的Shell窗口，查看一下该容器使用的AUFS文件系统中的内容。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh$ <span class=\"token function\">sudo</span> tree dreamland/\ndreamland/\n└── rwlayer\n    ├── data1\n    ├── old_root\n    └── root\n        └── hello.txt\n\n<span class=\"token number\">4</span> directories, <span class=\"token number\">1</span> <span class=\"token function\">file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，我们使用的卷目录被创建在了容器的读写层，但是我们在卷目录中新建的文件却没有出现在读写层中。</p>\n<p>我们再来查看一下主机卷目录的内容。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh$ <span class=\"token function\">sudo</span> tree data1/\ndata1/\n└── hello.txt\n\n<span class=\"token number\">0</span> directories, <span class=\"token number\">1</span> <span class=\"token function\">file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，在容器内部对卷目录的修改直接作用在了主机上的卷目录。我们再来查看一下主机卷目录下hello.txt中的内容。命令及结果如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">phl@kernelnewbies:~/docker.sh$ <span class=\"token function\">sudo</span> <span class=\"token function\">cat</span> data1/hello.txt\nhello to data1 volume from ubuntu16.04<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>从结果我们可以看到，该文件的内容与我们在容器内部写入hello.txt的内容一致。</p>\n<p>通过卷目录，我们实现了容器之间数据共享与数据持久化的功能。</p>\n<h2 id=\"6-后记\">6.后记</h2>\n<p>至此，我们通过一系列的实验对docker的底层技术有了一个感性的认识。我们在使用docker时，也能够对其是如何运作的有了一个大致的了解。当然，这对于掌握docker技术来说还远远不够，有很多知识我们没有涉及，例如user namespace、容器安全、其他的CGroups、虚拟网络等。</p>\n<p>编辑整理 <a target=\"_blank\" rel=\"noopener\" href=\"https://www.toutiao.com/i6890898988879315468/?tt_from=weixin&amp;utm_campaign=client_share&amp;wxshare_count=1&amp;timestamp=1647576105&amp;app=news_article&amp;utm_source=weixin&amp;utm_medium=toutiao_android&amp;use_new_style=1&amp;req_id=202203181201440101511900790A2CBE46&amp;share_token=b2d9351e-4cb1-4a25-ae82-f70543ce2a3b&amp;group_id=6890898988879315468\">ScratchLab</a></p>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "linux",
                "docker",
                "shell"
            ]
        },
        {
            "id": "https://blog.17lai.site/posts/68d3867d/",
            "url": "https://blog.17lai.site/posts/68d3867d/",
            "title": "node 项目从构建到使用 jenkins + docker + nginx + mysql + redis 自动化部署",
            "date_published": "2022-03-16T10:04:02.000Z",
            "content_html": "<h1>概述</h1>\n<p>这都2019年末了，你还不会 docker吗？ 你 low 爆了，我们作为一枚前端，不能说是要精通使用 docker 完成各种事情，但我觉得必须要学会使用 docker 干下面几件事：</p>\n<ol>\n<li>部署前端应用</li>\n<li>部署nginx</li>\n<li>使用docker-compose部署</li>\n<li>在容器之间建立联系</li>\n</ol>\n<p>Docker 可理解为跑在宿主机上的非常精简、小巧、高度浓缩的虚拟机。 它可以将容器里的进程安稳的在宿主机上运行，之前我也有写过一些关于docker的文章，在这我就不做过多的介绍了，如有需要请自行查看我之前的文章即可，接下来我们通过项目来了解并使用 docker</p>\n<h1>Egg.js ？</h1>\n<p>在这里我使用 <code>egg.js</code> 来为大家实操一下项目的部署流程。有人会问 <code>egg.js</code> 是什么？ 我只能回答这是一款专业级的 <code>node</code> 框架。作为一个有梦想的前端，我们有必要去学习一种后端语言，而作为前端 <code>node</code> 的学习成本相对来说比较低的。 <code>egg.js</code> 这个框架在 node 现有框架中也是比较优秀的，如有需要，大家可以自行学习，我们今天的学习主要还是项目的部署流程，在这我就不给大家做过多的介绍。如有需要，请查阅 <a href=\"https://link.juejin.cn?target=https%3A%2F%2Feggjs.org%2Fzh-cn%2Fintro%2Findex.html\" title=\"https://eggjs.org/zh-cn/intro/index.html\">官方文档</a></p>\n<h1>开始前的准备</h1>\n<blockquote>\n<p>docker 与 docker-compose 的安装我就不给大家介绍了。在之前的文章中是有的，也比较详细，作为一位开发人员，我认为这点事情难不倒大家</p>\n</blockquote>\n<h2 id=\"初始化项目\">初始化项目</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ mkdir egg-example &amp;&amp; cd egg-example\n$ npm init egg --type=simple\n$ npm i\n复制代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"创建需要的文件\">创建需要的文件</h2>\n<p>我们需要在项目根目录创建我们所需要的文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ touch Dockerfile\n$ touch docker-compose.yml\n$ setup.sh\n复制代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"目录结构\">目录结构</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">egg-project\n├── package.json\n├── setup.sh (新建)\n├── Dockerfile (新建)\n├── docker-compose.yml (新建)\n├── app\n|   ├── router.js\n│   ├── controller\n│   |   └── home.js\n│   ├── service (可选)\n│   |   └── user.js\n│   ├── middleware (可选)\n│   |   └── response_time.js\n│   ├── schedule (可选)\n│   |   └── my_task.js\n\n...\n\n复制代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"常用指令\">常用指令</h2>\n<p>在开始之前我们要学习下常用的一些指令，看下方：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110127.webp\" alt=\"\"></p>\n<h1>了解流程</h1>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110133.webp\" alt=\"\"></p>\n<h1>安装 jenkins</h1>\n<p>在安装jenkins我选择了使用docker-compose<br>\ndocker-compose 是一个用来把 docker 自动化的东西<br>\n有了 docker-compose 你可以把所有繁复的 docker 操作全都一条命令，自动化的完成。</p>\n<h2 id=\"首先我们需要在服务器上创建一个目录机构-具体结构个人自行创建\">首先我们需要在服务器上创建一个目录机构 (具体结构个人自行创建)</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">/home/jenkins\n     - docker-compose.yml\n     - jenkins-home\n复制代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"接下来我们来编写-docker-compose-yml-安装jenkins\">接下来我们来编写 docker-compose.yml 安装jenkins</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">version: '3'                                    # 指定 docker-compose.yml 文件的写法格式\nservices:                                       # 多个容器集合\n  docker_jenkins: \n    user: root                                  # 为了避免一些权限问题 在这我使用了root\n    restart: always                             # 重启方式\n    image: jenkins/jenkins:lts                  # 指定服务所使用的镜像 在这里我选择了 LTS (长期支持)\n    container_name: jenkins                     # 容器名称\n    ports:                                      # 对外暴露的端口定义\n      - '8080:8080'\n      - '50000:50000'\n    volumes:                                    # 卷挂载路径\n      - /home/jenkins/jenkins_home/:/var/jenkins_home   # 这是我们一开始创建的目录挂载到容器内的jenkins_home目录\n      - /var/run/docker.sock:/var/run/docker.sock\n      - /usr/bin/docker:/usr/bin/docker                 # 这是为了我们可以在容器内使用docker命令\n      - /usr/local/bin/docker-compose:/usr/local/bin/docker-compose     # 同样的这是为了使用docker-compose命令\n复制代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我们需要进入到 jenkins 目录下执行：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ docker-compose up -d\n复制代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"配置\">配置</h2>\n<p>不出意外你现在可以打开你的服务器地址 <a href=\"https://link.juejin.cn?target=http%3A%2F%2Fxxxxxxx\" title=\"http://xxxxxxx\">http://xxxxxxx</a>:端口号 就能看到这个界面：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110139.webp\" alt=\"\"></p>\n<p>打开你所创建的jenkins目录进入到jenkins-home<br>\n/home/jenkins/jenkins-home</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110148.webp\" alt=\"\"></p>\n<p>进入 secrets 目录</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ cat initialAdminPassword\n复制代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110209.webp\" alt=\"\"></p>\n<p>然后把里面的文本复制出来填到管理员密码中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110327.webp\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110215.webp\" alt=\"\"></p>\n<p>接下来需要安装两个插件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">NodeJS Plugin\nPublish Over SSH\n复制代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110334.webp\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110221.webp\" alt=\"\"></p>\n<p>然后我们滑到最下方</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110228.webp\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110341.webp\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110347.webp\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110235.webp\" alt=\"\"></p>\n<h1>开始我们的操作</h1>\n<h2 id=\"Dockerfile\">Dockerfile</h2>\n<p>我们在开始阶段的时候学过一些常用指令，大家应该一眼就可以看得懂这些命令。 加油！！</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">FROM node:10.0-alpine             # 镜像版本\n\n# 设置时区\nRUN apk --update add tzdata \\\n    &amp;&amp; cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n    &amp;&amp; echo \"Asia/Shanghai\" &gt; /etc/timezone \\\n    &amp;&amp; apk del tzdata\n\n# 创建app目录\nRUN mkdir -p /usr/src/node-app/egg-santak\n\n# 设置工作目录\nWORKDIR /usr/src/node-app/egg-santak\n\n# 拷贝package.json文件到工作目录\n# !!重要：package.json需要单独添加。\n# Docker在构建镜像的时候，是一层一层构建的，仅当这一层有变化时，重新构建对应的层。\n# 如果package.json和源代码一起添加到镜像，则每次修改源码都需要重新安装npm模块，这样木有必要。\n# 所以，正确的顺序是: 添加package.json；安装npm模块；添加源代码。\nCOPY package.json /usr/src/node-app/egg-santak/package.json\n\n# 安装npm依赖(使用淘宝的镜像源)\n# 如果使用的境外服务器，无需使用淘宝的镜像源，即改为`RUN npm i`。\nRUN npm i --registry=https://registry.npm.taobao.org\n\n# 拷贝所有源代码到工作目录\nCOPY . /usr/src/node-app/egg-santak\n\n# 暴露容器端口\nEXPOSE 7001\n\n# 启动node应用\nCMD npm start\n复制代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"在服务器中创建我们所需要挂载的数据卷\">在服务器中创建我们所需要挂载的数据卷</h2>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110241.webp\" alt=\"\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># nginx\n$ mkdir -p nginx/conf.d nginx/logs\n\n# mysql\n$ mkdir mysql\n\n# redis\n$ mkdir redis\n复制代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后进入 <code>nginx/conf.d</code> 文件夹中 创建一个后缀为 <code>conf</code> 的文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ cd nginx/conf.d\n$ touch default.conf\n$ vim default.conf\n复制代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>写入以下内容：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">server {\n  listen 80;\n  listen [::]:80;\n  server_tokens off;\n\n  root /var/www/html;\n  index index.html index.htm;\n\n  # 修改为自己的域名\n  server_name api.lovelp.xin;\n\n  # 访问 / 路径时执行反向代理\n  location / {\n    # 这里 nodejs 是 node 容器名\n    proxy_pass http://nodejs:7001;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header Host $host;\n    # 后端的Web服务器可以通过 X-Forwarded-For 获取用户真实 IP\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    # 允许客户端请求的最大单文件字节数\n    client_max_body_size 15M;\n    # 缓冲区代理缓冲用户端请求的最大字节数\n    client_body_buffer_size 128k;\n  }\n}\n复制代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"docker-compose-yml\">docker-compose.yml</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">version: '3'\n\nservices:\n  santak_redis:\n    image: redis:3                  # 指定服务镜像\n    container_name: santak_redis    # 容器名称\n    restart: always                 # 重启方式\n    hostname: redis\n    command: redis-server /usr/local/etc/redis/redis.conf --requirepass 123456  --appendonly yes\n    volumes:                        # 挂载数据卷\n      - /root/redis/redis.conf:/usr/local/etc/redis/redis.conf\n    ports:                          # 映射端口\n      - \"6379:6379\"     \n    networks:                       # 加入指定网络\n      - app-network\n\n  santak_nginx:\n    image: nginx:stable-alpine      # 指定服务镜像\n    container_name: santak_nginx    # 容器名称\n    restart: always                 # 重启方式\n    ports:                          # 映射端口\n      - \"80:80\"\n    volumes:                        # 挂载数据卷\n      - /etc/localtime:/etc/localtime\n      - /root/nginx/conf.d:/etc/nginx/conf.d\n      - /root/nginx/logs:/var/log/nginx\n    depends_on:                     # 启动顺序\n      - nodejs\n    networks:                       # 加入指定网络\n      - app-network\n\n  santak_mysql:\n    image: mysql:5.7\n    container_name: santak_mysql\n    restart: always\n    ports:                          # 映射端口\n      - \"3306:3306\"\n    environment:\n      - MYSQL_ROOT_PASSWORD=root\n      - MYSQL_USER=lovelp           # 创建lovelp用户\n      - MYSQL_PASSWORD=mm123321     # 设置lovelp用户的密码\n      - MYSQL_DATABASE=santak       # 创建初始数据库\n      - TZ=Asia/Shanghai            # 设置时区\n    volumes:                        # 挂载数据卷\n      - /root/mysql:/var/lib/mysql  # 为了数据持久化\n    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci\n    networks:                       # 加入指定网络\n      - app-network \n\n  nodejs:\n    build:                          # 这里指的是我们刚刚撸的 Dockerfile 文件\n      context: .                    \n      dockerfile: Dockerfile\n    image: nodejs                   # 镜像名称\n    container_name: nodejs          # 容器名称\n    restart: always                 # 重启方式\n    depends_on:                     # 启动顺序\n      - santak_redis\n      - santak_mysql\n    links:                          # 容器连接\n      - santak_redis:santak_redis\n      - santak_mysql:santak_mysql\n    networks:                       # 加入指定网络\n      - app-network\n\nvolumes:\n  certbot-etc:\n  certbot-var:\n\nnetworks:  # 实现通信\n  app-network:\n    driver: bridge\n复制代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"在项目中的使用\">在项目中的使用</h2>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110359.webp\" alt=\"\"></p>\n<h2 id=\"setup-sh\">setup.sh</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#!/usr/bin/env bash\n#image_version=`date +%Y%m%d%H%M`;\n\n# 关闭容器\ndocker-compose stop || true;\n# 删除容器\ndocker-compose down || true;\n# 构建镜像\ndocker-compose build;\n# 启动并后台运行\ndocker-compose up -d;\n# 查看日志\ndocker logs nodejs;\n# 对空间进行自动清理\ndocker system prune -a -f\n\n复制代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1>jenkins 创建项目</h1>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110247.webp\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110248.webp\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110254.webp\" alt=\"\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110409.webp\" alt=\"\"></p>\n<p>最后我们就可以愉快的 <code>Build Now</code> 了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/03/1120220311110415.webp\" alt=\"\"></p>\n<p>在这里我选择的是手动构建。其实jenkins有很多可配置项，比如自动化构建啥的，兴趣使然，大家自行摸索，谢谢大家</p>\n<h2 id=\"整理转载\">整理转载:</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://juejin.cn/post/6844904006184091662\">掘金</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/bilicard.css\" type=\"text/css\">",
            "tags": [
                "docker",
                "web",
                "ci/cd",
                "node",
                "jenkins"
            ]
        }
    ]
}